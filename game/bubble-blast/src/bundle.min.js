var __extends =
        (this && this.__extends) ||
        (function () {
            var a = function (b, c) {
                return (a =
                    Object.setPrototypeOf ||
                    ({ __proto__: [] } instanceof Array &&
                        function (a, b) {
                            a.__proto__ = b;
                        }) ||
                    function (a, b) {
                        for (var c in b) Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
                    })(b, c);
            };
            return function (b, c) {
                function d() {
                    this.constructor = b;
                }
                if ('function' != typeof c && null !== c) throw new TypeError('Class extends value ' + String(c) + ' is not a constructor or null');
                (a(b, c), (b.prototype = null === c ? Object.create(c) : ((d.prototype = c.prototype), new d())));
            };
        })(),
    __spreadArray =
        (this && this.__spreadArray) ||
        function (a, b, c) {
            if (c || 2 === arguments.length) for (var d, e = 0, f = b.length; e < f; e++) (!d && e in b) || (d || (d = Array.prototype.slice.call(b, 0, e)), (d[e] = b[e]));
            return a.concat(d || Array.prototype.slice.call(b));
        },
    __awaiter =
        (this && this.__awaiter) ||
        function (a, b, c, d) {
            function e(a) {
                return a instanceof c
                    ? a
                    : new c(function (b) {
                          b(a);
                      });
            }
            return new (c || (c = Promise))(function (c, f) {
                function g(a) {
                    try {
                        i(d.next(a));
                    } catch (a) {
                        f(a);
                    }
                }
                function h(a) {
                    try {
                        i(d.throw(a));
                    } catch (a) {
                        f(a);
                    }
                }
                function i(a) {
                    a.done ? c(a.value) : e(a.value).then(g, h);
                }
                i((d = d.apply(a, b || [])).next());
            });
        },
    __generator =
        (this && this.__generator) ||
        function (a, b) {
            function c(a) {
                return function (b) {
                    return d([a, b]);
                };
            }
            function d(c) {
                if (e) throw new TypeError('Generator is already executing.');
                for (; h && ((h = 0), c[0] && (i = 0)), i; )
                    try {
                        if (((e = 1), f && (g = 2 & c[0] ? f.return : c[0] ? f.throw || ((g = f.return) && g.call(f), 0) : f.next) && !(g = g.call(f, c[1])).done)) return g;
                        switch (((f = 0), g && (c = [2 & c[0], g.value]), c[0])) {
                            case 0:
                            case 1:
                                g = c;
                                break;
                            case 4:
                                return (i.label++, { value: c[1], done: !1 });
                            case 5:
                                (i.label++, (f = c[1]), (c = [0]));
                                continue;
                            case 7:
                                ((c = i.ops.pop()), i.trys.pop());
                                continue;
                            default:
                                if (((g = i.trys), !(g = g.length > 0 && g[g.length - 1]) && (6 === c[0] || 2 === c[0]))) {
                                    i = 0;
                                    continue;
                                }
                                if (3 === c[0] && (!g || (c[1] > g[0] && c[1] < g[3]))) {
                                    i.label = c[1];
                                    break;
                                }
                                if (6 === c[0] && i.label < g[1]) {
                                    ((i.label = g[1]), (g = c));
                                    break;
                                }
                                if (g && i.label < g[2]) {
                                    ((i.label = g[2]), i.ops.push(c));
                                    break;
                                }
                                (g[2] && i.ops.pop(), i.trys.pop());
                                continue;
                        }
                        c = b.call(a, i);
                    } catch (a) {
                        ((c = [6, a]), (f = 0));
                    } finally {
                        e = g = 0;
                    }
                if (5 & c[0]) throw c[1];
                return { value: c[0] ? c[1] : void 0, done: !0 };
            }
            var e,
                f,
                g,
                h,
                i = {
                    label: 0,
                    sent: function () {
                        if (1 & g[0]) throw g[1];
                        return g[1];
                    },
                    trys: [],
                    ops: [],
                };
            return (
                (h = { next: c(0), throw: c(1), return: c(2) }),
                'function' == typeof Symbol &&
                    (h[Symbol.iterator] = function () {
                        return this;
                    }),
                h
            );
        },
    KY;
!(function (a) {
    var b = (function () {
        function b(c, d, e, f) {
            (void 0 === c && (c = 0), void 0 === d && (d = 0), void 0 === e && (e = 10), void 0 === f && (f = 10), (this._id = b.IDCOUNTER++), (this.x = c), (this.y = d), (this._w = e), (this._h = f), (this._w2 = 0.5 * e), (this._h2 = 0.5 * f), (this._points = []));
            for (var g = 0; g < 4; g++) this._points[g] = new a.Vec2d();
        }
        return (
            (b.prototype.fromUnionBox = function (a) {
                var b = a.leftTop,
                    c = a.rightBottom,
                    d = Math.min(b.x, this.leftTop.x),
                    e = Math.min(b.y, this.leftTop.y),
                    f = Math.max(c.x, this.rightBottom.x) - d,
                    g = Math.max(c.y, this.rightBottom.y) - e;
                this.fromLeftTop(d, e, f, g);
            }),
            (b.prototype.fromLeftTop = function (a, b, c, d) {
                ((this.x = a + 0.5 * c), (this.y = b + 0.5 * d), (this._w = c), (this._h = d), (this._w2 = 0.5 * c), (this._h2 = 0.5 * d));
            }),
            (b.prototype.fromRightTop = function (a, b, c, d) {
                ((this.x = a - 0.5 * c), (this.y = a - 0.5 * d), (this._w = c), (this._h = d), (this._w2 = 0.5 * c), (this._h2 = 0.5 * d));
            }),
            (b.prototype.overlap = function (a, b) {
                void 0 === b && (b = !1);
                var c = a.x - this.x,
                    d = a.y - this.y;
                if (Math.abs(c) <= this._w2 + a._w2 && Math.abs(d) <= this._h2 + a._h2) {
                    if (b) {
                        var e = c < 0 ? -1 : 1,
                            f = (Math.abs(c) - (this._w2 + a._w2)) * e,
                            g = d < 0 ? -1 : 1,
                            h = (Math.abs(d) - (this._h2 + a._h2)) * g;
                        Math.abs(f) < Math.abs(h) ? (this.x += f) : (this.y += h);
                    }
                    return !0;
                }
                return !1;
            }),
            (b.prototype.contains = function (a, b) {
                return a > this.x && a < this.x + this._w && b > this.y && b < this.y + this._h;
            }),
            (b.prototype.overlapWithTile = function (a, b, c, d, e, f, g) {
                (void 0 === d && (d = !1), void 0 === e && (e = 0), void 0 === f && (f = 0), void 0 === g && (g = 1));
                var h = a * c - e,
                    i = b * c - f,
                    j = 0.5 * c,
                    k = h - this.x,
                    l = i - this.y;
                if (Math.abs(k) <= this._w2 + j && Math.abs(l) <= this._h2 + j) {
                    if (d) {
                        var m = k < 0 ? -1 : 1;
                        e = (Math.abs(k) - (this._w2 + j)) * m;
                        var n = l < 0 ? -1 : 1;
                        ((f = (Math.abs(l) - (this._h2 + j)) * n), Math.abs(e) < Math.abs(f) ? (this.x += e * g) : (this.y += f * g));
                    }
                    return !0;
                }
                return !1;
            }),
            (b.prototype.debugDraw = function (a, b, c) {
                ((b = null == b ? 16777215 : b), (c = null == c ? 16711680 : c), a.lineStyle(1, this.selected ? c : b), a.drawRect(this.x - this._w2, this.y - this._h2, this._w, this._h), a.lineStyle());
            }),
            Object.defineProperty(b.prototype, 'leftTop', {
                get: function () {
                    return ((this._points[0].x = this.x - this._w2), (this._points[0].y = this.y - this._h2), this._points[0]);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'rightTop', {
                get: function () {
                    return ((this._points[1].x = this.x + this._w2), (this._points[1].y = this.y - this._h2), this._points[1]);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'leftBottom', {
                get: function () {
                    return ((this._points[3].x = this.x - this._w2), (this._points[3].y = this.y + this._h2), this._points[3]);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'rightBottom', {
                get: function () {
                    return ((this._points[2].x = this.x + this._w2), (this._points[2].y = this.y + this._h2), this._points[2]);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'points', {
                get: function () {
                    return ((this._points[0].x = this.x - this._w2), (this._points[0].y = this.y - this._h2), (this._points[1].x = this.x + this._w2), (this._points[1].y = this.y - this._h2), (this._points[2].x = this.x + this._w2), (this._points[2].y = this.y + this._h2), (this._points[3].x = this.x - this._w2), (this._points[3].y = this.y + this._h2), this._points);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'width', {
                get: function () {
                    return this._w;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'height', {
                get: function () {
                    return this._h;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.IDCOUNTER = 0),
            b
        );
    })();
    a.EasyBox = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a(a, b) {
            (void 0 === a && (a = 0), void 0 === b && (b = 0), this.set(a, b));
        }
        return (
            (a.prototype.set = function (a, b) {
                ((this.x = a), (this.y = b));
            }),
            Object.defineProperty(a.prototype, 'isZero', {
                get: function () {
                    return 0 === this.x && 0 === this.y;
                },
                enumerable: !1,
                configurable: !0,
            }),
            a
        );
    })();
    a.Vec2d = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    a.VERSION = 0.2;
    var b = (function (b) {
        function i(g) {
            var h = b.call(this) || this;
            if (((h.FONT_NORMAL = 'Montserrat-Medium'), (h.FONT_BOLD = 'Montserrat-ExtraBold'), (h._focusVolume = 1), (h._timeResize = null), (h._counter = 0), (Stage = h), (h._music = []), (h._sfx = []), (h._haveAudio = !1), (h._audioTimeCache = {}), (h._soundMuted = !1), (h._musicMuted = !1), (h._loadingEnd = !1), PIXI.Loader, h.createBuildVersion(), (h._detect = new a.Detect()), (i._instance = h), (h._tick = 0), (h.multitouch = !1), g.assetScales)) {
                var j = h.findBestAssetScale(g.assetScales, g.width, g.height);
                h._assetPrefix = g.assetScales[j][0];
            } else h._assetPrefix = '';
            if (((h._assetBasePath = g.gamePath ? g.gamePath : ''), (h._assetPath = g.assetPath ? g.assetPath : ''), (h._width = h._defaultWidth = Math.floor(g.width)), (h._height = h._defaultHeight = Math.floor(g.height)), (h._defaultRatio = h._width / h._height), (h._centerX = 0.5 * h._width), (h._centerY = 0.5 * h._height), 0 == h._detect.mobile && g.scaleModePC ? (h._scaleMode = g.scaleModePC) : (h._scaleMode = g.scaleMode), h._detect.android && (PIXI.settings.PREFER_ENV = PIXI.ENV.WEBGL2), (h._lastHowlerRunning = !1), (h._alwaysOnMusic = g.alwaysOnMusic), g.browserCacheLabel))
                switch (g.browserCacheLabel) {
                    case f.ALWAYS:
                        h._browserCacheLabel = Date.now();
                        break;
                    case f.NEWER:
                        h._browserCacheLabel = Number(i.BUILD_VERSION ? i.BUILD_VERSION : i.RELEASE_VERSION);
                        break;
                    case f.DISABLED:
                        h._browserCacheLabel = null;
                        break;
                    default:
                        h._browserCacheLabel = g.browserCacheLabel;
                }
            ((h._resolution = g.resolution ? g.resolution : 1),
                (h._fpsLock = g.fpsLock ? g.fpsLock : 60),
                (h._fpsLockMobile = g.fpsLockMobile ? g.fpsLockMobile : h._fpsLock),
                (h._defaultOrientation = h._defaultWidth > h._defaultHeight ? e.LANDSCAPE : e.PORTRAIT),
                (h._currentOrientation = h._defaultOrientation),
                (h._statesManger = new a.StatesManger()),
                (h._renderer = new PIXI.Application(g)),
                document.body.appendChild(h._renderer.view),
                (h._renderer.view.style.display = 'block'),
                (h._renderer.view.style.overflow = 'hidden'),
                (h._renderer.view.style['touch-action'] = 'none'),
                (h._renderer.view.style['user-select'] = 'none'),
                (h._renderer.view.style['-webkit-tap-highlight-color'] = 'rgba(0, 0, 0, 0)'),
                (h._renderer.view.style.cursor = 'inherit'),
                (h._renderer.view.style.padding = '0'),
                g.pixelated && (PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST),
                h._scaleMode == c.LETTERBOX && (h._renderer.view.style.margin = 'auto'),
                (h._renderer.view.style.top = '0px'),
                (h._renderer.view.style.left = '0px'),
                (h._renderer.view.style.bottom = '0px'),
                (h._renderer.view.style.right = '0px'),
                (h._ticker = new PIXI.Ticker()),
                (h._ticker.maxFPS = 60),
                h._ticker.start(),
                (h._loader = h.application.loader),
                h._loader.onError.add(function (a) {
                    (console.warn('[Error: failed to load assets]', a), console.log(a));
                }),
                (h._rnd = new a.Rnd()),
                (h._keyboard = new a.Keyboard()),
                (h._timer = new a.GameTimeout()));
            var k = (g.seed ? g.seed : Date.now() * Math.random()) >>> 0;
            if (
                (h._rnd.seed(k),
                (h._assetsPath = {}),
                g.debug &&
                    i.ENABLED_DEBUG &&
                    0 != g.showStats &&
                    ((h._debug = !0),
                    h.addStats(),
                    g.statsPosition && h.setStatsPotion(g.statsPosition),
                    (Math.random = function () {
                        return h._rnd.value;
                    }),
                    h.trace('Engine Version:', a.VERSION),
                    h.trace('Rnd Seed:', k),
                    h.trace('Graphics Asset Prefix: [', h._assetPrefix, ']'),
                    h.trace('Game Size:', h.width, h.height),
                    (h._debugContainer = new PIXI.Container()),
                    h.stage.addChild(h._debugContainer)),
                null != g.lockScreen && h.initLockScreen(g.lockScreen, g.lockScreenPC),
                h._scaleMode != c.NO
                    ? window.addEventListener(
                          'resize',
                          function () {
                              null == h._timeResize &&
                                  (h._timeResize = setTimeout(function () {
                                      ((h._timeResize = null), h.windowResize());
                                  }, 100));
                          },
                          !1
                      )
                    : ((h._canvasWidth = h._defaultWidth), (h._canvasHeight = h._defaultHeight), (h._currentOrientation = h._canvasWidth > h._canvasHeight ? e.LANDSCAPE : e.PORTRAIT), (h._ratio = 1), (h._wideRatio = 1), (h._actionRatio = 1)),
                (h._haveFocus = null),
                !h._alwaysOnMusic)
            ) {
                var l = void 0;
                ('undefined' != typeof document.hidden ? ((h._hidden = 'hidden'), (l = 'visibilitychange')) : 'undefined' != typeof document.msHidden ? ((h._hidden = 'msHidden'), (l = 'msvisibilitychange')) : 'undefined' != typeof document.webkitHidden && ((h._hidden = 'webkitHidden'), (l = 'webkitvisibilitychange')), h._hidden && document.addEventListener(l, h.handleVisibilityChange.bind(h), !1));
            }
            return (
                window.addEventListener('blur', function () {
                    (0 != h._haveFocus && (h.emit(d.LOST_FOCUS), h._statesManger && h._statesManger.current && h._statesManger.current.lostFocus()), (h._haveFocus = !1), h._alwaysOnMusic || (!h._hidden && h.haveAudio && (h.masterVolume = 0)));
                }),
                window.addEventListener(h._detect.mobile ? 'touchstart' : 'mousedown', function () {
                    if (1 != h._haveFocus) {
                        if ((null == h._haveFocus ? h.emit(d.FIRST_TOUCH) : h.emit(d.GET_FOCUS), h._statesManger && h._statesManger.current && (h._statesManger.current.getFocus(), h.detect.mobile)))
                            try {
                                h.windowResize();
                            } catch (a) {}
                        h._alwaysOnMusic || (!h._hidden && h.haveAudio && (h.masterVolume = h._focusVolume));
                    }
                    h._haveFocus = !0;
                }),
                0 == h.detect.mobile &&
                    window.addEventListener('keydown', function () {
                        (1 != h._haveFocus && (h.emit(d.GET_FOCUS), h._statesManger && h._statesManger.current && h._statesManger.current.getFocus(), h._alwaysOnMusic || (!h._hidden && h.haveAudio && (h.masterVolume = h._focusVolume))), (h._haveFocus = !0));
                    }),
                (h._bv = g.buildVersion),
                h.startGameLoop(),
                h.windowResize(),
                h.once('_loading_end_', function () {
                    h._loadingEnd = !0;
                }),
                h
            );
        }
        return (
            __extends(i, b),
            (i.prototype.handleVisibilityChange = function () {
                document[this._hidden] ? this.haveAudio && (this.serviceMasterVolume = 0) : this.haveAudio && (this.serviceMasterVolume = this._focusVolume);
            }),
            (i.prototype.setStatsPotion = function (a) {
                if (null != a)
                    switch (a) {
                        case h.LEFT_TOP:
                            this._stats.dom.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';
                            break;
                        case h.LEFT_BOTTOM:
                            this._stats.dom.style.cssText = 'position:fixed;bottom:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';
                            break;
                        case h.RIGHT_TOP:
                            this._stats.dom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';
                            break;
                        case h.RIGHT_BOTTOM:
                            this._stats.dom.style.cssText = 'position:fixed;bottom:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';
                    }
            }),
            (i.prototype.addStats = function () {
                ((this._stats = new Stats()), document.body.appendChild(this._stats.dom));
            }),
            Object.defineProperty(i.prototype, 'fpsScaler', {
                get: function () {
                    var a = this.detect.mobile ? this._fpsLockMobile : this._fpsLock;
                    return 60 / a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (i.prototype.startGameLoop = function () {
                var b = this;
                this._ticker.add(function (c) {
                    (b.howlerRunning && b._lastHowlerRunning != b.howlerRunning && (a.Sound.playAllDeferredSounds(), (b._lastHowlerRunning = !0)), (c = Math.min(2, c)), b._timer.update(0.0166 * c), b._statesManger.update(), b._stats && b._stats.update(), b.states && b.states.current && b.states.current.world.parent && b.states.current.update(c, b._tick), b.emit(d.ENTER_FRAME, c, b._tick), b._tick++);
                });
            }),
            (i.prototype.windowResize = function (a) {
                if (this._scaleMode != c.NO) {
                    var b, f;
                    switch (((this._canvasWidth = this.innerWidth), (this._canvasHeight = this.innerHeight), (this._currentOrientation = this._canvasWidth > this._canvasHeight ? e.LANDSCAPE : e.PORTRAIT), this._scaleMode)) {
                        case c.FULLSCREEN:
                        case c.STATIC:
                            var g = window.innerHeight;
                            ((document.documentElement.style.height = g.toString() + 'px'), (document.body.style.height = g.toString() + 'px'), this._scaleMode == c.FULLSCREEN ? (this._currentOrientation == this._defaultOrientation ? ((b = this._defaultWidth), (f = this._defaultHeight)) : ((b = this._defaultHeight), (f = this._defaultWidth))) : ((b = this._defaultWidth), (f = this._defaultHeight)), (this._ratio = Math.min(this._canvasWidth / b, this._canvasHeight / f)), (this._wideRatio = Math.max(this._canvasWidth / this._defaultWidth, this._canvasHeight / this._defaultHeight) / this._ratio), this.stage.scale.set(this._ratio, this._ratio), (this._width = ~~(this._canvasWidth / this._ratio)), (this._height = ~~(this._canvasHeight / this._ratio)), this._renderer.renderer.resize(this._canvasWidth, this._canvasHeight), (this._actionRatio = 1 / this.ratio / this.pixelRatio));
                            break;
                        case c.LETTERBOX:
                            ((this._ratio = this._canvasHeight / this._defaultHeight), (this._width = this._defaultWidth), (this._height = this._defaultHeight), this.stage.scale.set(this._ratio, this._ratio), this._renderer.renderer.resize(this._width * this._ratio, this._height * this._ratio), (this._actionRatio = 1 / this.ratio / this.pixelRatio));
                    }
                    (setTimeout(function () {
                        window.scrollTo(0, 0);
                    }, 100),
                        this._checkLockScreen(this._currentOrientation),
                        this.emit(d.RESIZE, this._currentOrientation));
                }
            }),
            (i.prototype.findBestAssetScale = function (a, b, c) {
                for (var d = a.length - 1, e = this.innerWidth, f = this.innerHeight, g = Math.min(e / b, f / c), h = d; h >= 0; h--) if (g <= a[h][1]) return h;
                return 0;
            }),
            (i.prototype.getImage = function (a, b) {
                return this.cache[a] ? (b ? this.cache[a].textures[b] : this.cache[a].texture) : (this.errorImage && this.errorImage(a, b), PIXI.Texture.EMPTY);
            }),
            (i.prototype.toggleFullscreen = function () {
                screenfull.toggle(document.body);
            }),
            (i.prototype.audioPlay = function (a, b, c, d, e) {
                try {
                    var f = void 0,
                        g = null != e && e > 0,
                        h = a + '@' + b;
                    if (g && this._audioTimeCache[h]) {
                        var i = Date.now() - this._audioTimeCache[h];
                        if (i < 0) return null;
                    }
                    return ((f = this.getAudioAtlas(b).play(a)), g && (this._audioTimeCache[h] = Date.now() + e), null != c && this.getAudioAtlas(b).volume(c, f), d && this.getAudioAtlas(b).loop(!0, f), f);
                } catch (b) {
                    console.log('Проблемы с музыкой ' + a);
                }
                return null;
            }),
            (i.prototype.setTouchable = function (a) {
                (void 0 === a && (a = !0), (this.application.stage.interactive = a), (this.application.stage.interactiveChildren = a));
            }),
            (i.prototype.trace = function (a) {
                for (var b = [], c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
                this._debug && console.log.apply(console, __spreadArray([a], b, !1));
            }),
            (i.prototype.warn = function (a) {
                for (var b = [], c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
                this._debug && console.warn.apply(console, __spreadArray([a], b, !1));
            }),
            (i.prototype.setAssetsPath = function (a, b) {
                this._assetsPath[a] = b;
            }),
            (i.prototype.getAssetsPath = function (a) {
                var b = this._assetsPath[a];
                return (b || ((b = a), a == g.IMAGES && '' != this._assetPrefix && (b += this._assetPrefix + '/')), this.assetPath + this._assetBasePath + b);
            }),
            (i.prototype.initLockScreen = function (a, b) {
                if ((void 0 === b && (b = !1), this._detect.mobile || b)) {
                    var c = document.createElement('div');
                    ((c.className = 'lockscren'), c.setAttribute('id', 'lockscren'), (c.style.height = '1000000px'), (c.style.display = 'none'));
                    var d = document.createElement('div');
                    ((d.className = this._currentOrientation == e.PORTRAIT ? 'lockIconContainer PORT_lock_uri' : 'lockIconContainer LAND_lock_uri'), (d.style.visibility = 'hidden'), (window['--lockscreen'] = { orientation: a, lock: c, icon: d }), document.body.appendChild(c), document.body.appendChild(d), this._checkLockScreen(this._currentOrientation));
                }
            }),
            (i.prototype._checkLockScreen = function (a) {
                window['--lockscreen'] && (window['--lockscreen'] && a == window['--lockscreen'].orientation ? ((window['--lockscreen'].lock.style.display = 'block'), (window['--lockscreen'].icon.style.visibility = 'visible')) : ((window['--lockscreen'].lock.style.display = 'none'), (window['--lockscreen'].icon.style.visibility = 'hidden'), setTimeout('window.scrollTo(0, 1)', 10)));
            }),
            (i.prototype.createBuildVersion = function () {
                var a, b, c, d;
                if ((i.BUILD_VERSION ? ((a = '' + i.BUILD_VERSION), (b = '-')) : ((a = '' + i.RELEASE_VERSION), (b = '+')), (c = i.GIT_MARK ? i.GIT_MARK : '?'), i.PC_NAME && i.ENABLED_DEBUG)) d = i.PC_NAME;
                else if (i.PC_NAME) {
                    var e = i.PC_NAME.length;
                    d = e < 4 ? i.PC_NAME.substr(0, 3) + '...' : i.PC_NAME.substr(0, 2) + '...' + i.PC_NAME.substring(e - 2, e);
                } else d = '?';
                console.log('version:', '/' + b + '/' + a + '/' + c + '/' + d + '/');
            }),
            (i.prototype.muteSound = function (a) {
                this._soundMuted = a;
                for (var b in this._sfx) this._sfx[b].mute(a);
            }),
            (i.prototype.muteMusic = function (a) {
                this._musicMuted = a;
                for (var b in this._music) this._music[b].mute(a);
            }),
            (i.prototype.getAudioAtlas = function (a) {
                return this._music[a] ? this._music[a] : this._sfx[a];
            }),
            (i.prototype.isMusicAudio = function (a) {
                return null != this._music[a];
            }),
            (i.prototype.addAudio = function (a, b, c) {
                ((this._haveAudio = !0), c ? ((this._music[b] = a), a.mute(this._musicMuted)) : ((this._sfx[b] = a), a.mute(this._soundMuted)));
            }),
            (i.prototype.removeAtlas = function (a) {
                delete this.loader.resources[a];
            }),
            (i.prototype.interactiveOff = function () {
                ((this.stage.interactive = !1), (this.stage.interactiveChildren = !1));
            }),
            (i.prototype.interactiveOn = function () {
                ((this.stage.interactive = !0), (this.stage.interactiveChildren = !0));
            }),
            Object.defineProperty(i.prototype, 'haveAudio', {
                get: function () {
                    return this._haveAudio;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'buildVersion', {
                get: function () {
                    return 'v ' + this._bv + ' (7f4c925)';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isDebug', {
                get: function () {
                    return this._debug;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'serviceMasterVolume', {
                set: function (a) {
                    Howler.volume(a);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'masterVolume', {
                set: function (a) {
                    ((this._focusVolume = a), Howler.volume(a));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'howlerRunning', {
                get: function () {
                    return !(!Howler || !Howler.ctx) && 'running' == Howler.ctx.state;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'actionRatio', {
                get: function () {
                    return this._actionRatio;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'assetPrefix', {
                get: function () {
                    return this._assetPrefix;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'lbOffsetX', {
                get: function () {
                    return this._scaleMode == c.LETTERBOX ? 0 : 0.5 * (this.screenWidth - this.width);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'lbOffsetY', {
                get: function () {
                    return this._scaleMode == c.LETTERBOX ? 0 : 0.5 * (this.screenWidth - this.width);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'scaleMode', {
                get: function () {
                    return this._scaleMode;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'backgroundColor', {
                get: function () {
                    return this._renderer.renderer.backgroundColor;
                },
                set: function (a) {
                    this._renderer.renderer.backgroundColor = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'enabledFullscreen', {
                get: function () {
                    return screenfull.enabled;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isFullscreen', {
                get: function () {
                    return screenfull.isFullscreen;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'stage', {
                get: function () {
                    return this._renderer.stage;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'application', {
                get: function () {
                    return this._renderer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'loader', {
                get: function () {
                    return this._loader;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'innerWidth', {
                get: function () {
                    return window.innerWidth;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'innerHeight', {
                get: function () {
                    return window.innerHeight;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'width', {
                get: function () {
                    return this._defaultWidth;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'height', {
                get: function () {
                    return this._defaultHeight;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'screenWidth', {
                get: function () {
                    return this._width;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'screenHeight', {
                get: function () {
                    return this._height;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'canvasWidth', {
                get: function () {
                    return this._canvasWidth;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'canvasHeight', {
                get: function () {
                    return this._canvasHeight;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'ratio', {
                get: function () {
                    return this._ratio / this.pixelRatio;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'pixelRatio', {
                get: function () {
                    return this._resolution;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'centerX', {
                get: function () {
                    return this._centerX;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'centerY', {
                get: function () {
                    return this._centerY;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'browserCacheLabel', {
                get: function () {
                    return this._browserCacheLabel;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'states', {
                get: function () {
                    return this._statesManger;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'cache', {
                get: function () {
                    return this.loader.resources;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'defaultOrientation', {
                get: function () {
                    return this._defaultOrientation;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'currentOrientation', {
                get: function () {
                    return this._currentOrientation;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'wideRatio', {
                get: function () {
                    return this._wideRatio;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'detect', {
                get: function () {
                    return this._detect;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'rnd', {
                get: function () {
                    return this._rnd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'keyboard', {
                get: function () {
                    return this._keyboard;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'timer', {
                get: function () {
                    return this._timer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'ticker', {
                get: function () {
                    return this._ticker;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'counter', {
                get: function () {
                    return this._counter++;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isReleaseBuild', {
                get: function () {
                    return !i.ENABLED_DEBUG;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'tick', {
                get: function () {
                    return this._tick;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'mouseX', {
                get: function () {
                    return this._statesManger && this._statesManger.current ? this._statesManger.current.mouseX : 0;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'mouseY', {
                get: function () {
                    return this._statesManger && this._statesManger.current ? this._statesManger.current.mouseY : 0;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'loadingEnd', {
                get: function () {
                    return this._loadingEnd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'assetPath', {
                get: function () {
                    return this._assetPath;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i, 'instance', {
                get: function () {
                    return i._instance;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (i.RELEASE_VERSION = 202409261603),
            (i.BUILD_VERSION = null),
            (i.ENABLED_DEBUG = !1),
            (i.PC_NAME = 'Mac-Studio-Oleg.local'),
            (i.GIT_MARK = '7f4c925'),
            i
        );
    })(EventEmitter);
    a.Game = b;
    var c;
    !(function (a) {
        ((a[(a.LETTERBOX = 100)] = 'LETTERBOX'), (a[(a.FULLSCREEN = 101)] = 'FULLSCREEN'), (a[(a.STATIC = 102)] = 'STATIC'), (a[(a.NO = 103)] = 'NO'));
    })((c = a.ScaleMode || (a.ScaleMode = {})));
    var d;
    !(function (a) {
        ((a.RESIZE = 'GAME_RESIZE'), (a.LOST_FOCUS = 'LOST_FOCUS'), (a.GET_FOCUS = 'GET_FOCUS'), (a.FIRST_TOUCH = 'FIRST_TOUCH'), (a.ENTER_FRAME = 'ENTER_FRAME'), (a.MOUSE_DOWN = 'ON_DOWN'), (a.MOUSE_UP = 'ON_UP'), (a.MOUSE_MOVE = 'ON_MOVE'));
    })((d = a.GameEvent || (a.GameEvent = {})));
    var e;
    !(function (a) {
        ((a.PORTRAIT = 'PORTRAIT'), (a.LANDSCAPE = 'LANDSCAPE'));
    })((e = a.DeviceOrientation || (a.DeviceOrientation = {})));
    var f;
    !(function (a) {
        ((a.ALWAYS = 'ALWAYS'), (a.NEWER = 'NEWER'), (a.DISABLED = 'DISABLED'));
    })((f = a.CacheLabelType || (a.CacheLabelType = {})));
    var g;
    !(function (a) {
        ((a.IMAGES = 'assets/images/'), (a.SOUNDS = 'assets/sounds/'), (a.DATA = 'assets/data/'), (a.FONTS = 'assets/fonts/'), (a.BMP_FONTS = 'assets/bmpFonts/'), (a.DRAGONBONES = 'assets/db/'), (a.SPINE = 'assets/spine/'));
    })((g = a.ASSETS_PATH || (a.ASSETS_PATH = {})));
    var h;
    !(function (a) {
        ((a[(a.DEFAULT = 0)] = 'DEFAULT'), (a[(a.LEFT_TOP = 1)] = 'LEFT_TOP'), (a[(a.LEFT_BOTTOM = 2)] = 'LEFT_BOTTOM'), (a[(a.RIGHT_TOP = 3)] = 'RIGHT_TOP'), (a[(a.RIGHT_BOTTOM = 4)] = 'RIGHT_BOTTOM'));
    })((h = a.STATS_POSITION || (a.STATS_POSITION = {})));
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {
            ((this.fpsDependent = !0), (this._ID = 0), (this._timers = {}));
        }
        return (
            (a.prototype.add = function (a, b, d, e) {
                var f = new c(a, b / 1e3, d, e),
                    g = this._ID++;
                return ((this._timers[g] = f), f.start(), g);
            }),
            (a.prototype.addUnique = function (a, b, c, d) {
                for (var e in this._timers) if (this._timers[e].equal(a, c)) return -1;
                return this.add(a, b, c, d);
            }),
            (a.prototype.getTimer = function (a) {
                return this._timers[a];
            }),
            (a.prototype.update = function (a) {
                this.fpsDependent || (a = 1);
                for (var b in this._timers) this._timers[b] && (this._timers[b].update(a), this._timers[b].isDone && delete this._timers[b]);
            }),
            a
        );
    })();
    a.GameTimeout = b;
    var c = (function () {
        function a(a, b, c, d) {
            ((this._func = a), (this._delay = b), (this._context = c), (this._args = d), (this._isDone = !1), (this._isPaused = !0));
        }
        return (
            (a.prototype.start = function () {
                this._isPaused = !1;
            }),
            (a.prototype.pause = function () {
                this._isPaused = !0;
            }),
            (a.prototype.equal = function (a, b) {
                return a == this._func && b == this._context;
            }),
            (a.prototype.update = function (a) {
                this._isDone || this._isPaused || (this._delay <= 0 && (this._func.apply(this._context, this._args), (this._isDone = !0)), (this._delay -= a));
            }),
            Object.defineProperty(a.prototype, 'isDone', {
                get: function () {
                    return this._isDone;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'isPaused', {
                get: function () {
                    return this._isPaused;
                },
                enumerable: !1,
                configurable: !0,
            }),
            a
        );
    })();
    a.TimeAction = c;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function b(b, c) {
            ((this._volume = 1), (this._game = a.Game.instance), (this._name = b), (this._atlas = this._game.getAudioAtlas(c)));
        }
        return (
            (b.prototype.play = function () {
                if (!this._game.howlerRunning) return void (b._deferredSounds[this._name] = this);
                try {
                    if (null != this._id) return void this._atlas.play(this._id);
                    ((this._id = this._atlas.play(this._name)), (this.volume = this.volume));
                } catch (a) {
                    (console.log('Sound: Проблемы со звуком ' + this._name), (this._id = null));
                }
            }),
            (b.prototype.stop = function () {
                return this._game.howlerRunning ? void (null != this._id && this._atlas.stop(this._id)) : void delete b._deferredSounds[this._name];
            }),
            (b.prototype.pause = function () {
                null != this._id && this._atlas.pause(this._id);
            }),
            (b.prototype.fade = function (a, b, c) {
                null != this._id && this._atlas.fade(a, b, c, this._id);
            }),
            (b.prototype.on = function (a, b) {
                null != this._id && this._atlas.on(a, b, this._id);
            }),
            (b.prototype.off = function (a, b) {
                null != this._id && this._atlas.off(a, b, this._id);
            }),
            (b.prototype.once = function (a, b) {
                null != this._id && this._atlas.once(a, b, this._id);
            }),
            Object.defineProperty(b.prototype, 'rate', {
                get: function () {
                    return null == this._id ? 1 : this._atlas.rate(this._id);
                },
                set: function (a) {
                    null != this._id && this._atlas.rate(a, this._id);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'seek', {
                get: function () {
                    return null == this._id ? 0 : this._atlas.seek(this._id);
                },
                set: function (a) {
                    null != this._id && this._atlas.seek(a, this._id);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'loop', {
                get: function () {
                    return null == this._id ? !!this._atlas && this._atlas._sprite[this._name][2] : this._atlas.loop(this._id);
                },
                set: function (a) {
                    ((this._loopSet = a), null != this._id && this._atlas.loop(a, this._id));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'manuallyLoop', {
                get: function () {
                    return this._loopSet;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.prototype.isPlaying = function () {
                return null != this._id && this._atlas.playing(this._id);
            }),
            Object.defineProperty(b.prototype, 'volume', {
                get: function () {
                    return this._volume;
                },
                set: function (a) {
                    ((this._volume = a), null != this._id && this._atlas.volume(a, this._id));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'mute', {
                get: function () {
                    return null != this._id && this._atlas.mute(this._id);
                },
                set: function (a) {
                    null != this._id && this._atlas.mute(a, this._id);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'id', {
                get: function () {
                    return this._id;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.playAllDeferredSounds = function () {
                for (var a in this._deferredSounds) ((this._deferredSounds[a].loop || this._deferredSounds[a].manuallyLoop) && this._deferredSounds[a].play(), delete this._deferredSounds[a]);
            }),
            (b._deferredSounds = {}),
            b
        );
    })();
    a.Sound = b;
    var c;
    !(function (a) {
        ((a.PLAY_ERROR = 'playerror'), (a.PLAY = 'play'), (a.END = 'end'), (a.PAUSE = 'pause'), (a.STOP = 'stop'), (a.MUTE = 'mute'), (a.VOLUME = 'volume'), (a.RATE = 'rate'), (a.SEEK = 'seek'), (a.FADE = 'fade'), (a.UNLOCK = 'unlock'));
    })((c = a.SOUND_EVENT || (a.SOUND_EVENT = {})));
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b;
    !(function (a) {
        ((a[(a.CENTER = 0)] = 'CENTER'), (a[(a.ZERO = 1)] = 'ZERO'));
    })((b = a.SpriteAnchor || (a.SpriteAnchor = {})));
    var c = (function (c) {
        function e(d, f, g, h) {
            var i;
            (void 0 === d && (d = 0), void 0 === f && (f = 0));
            var j = c.call(this) || this;
            ((j.currentLabels = []), (j._defaultAnimation = null), (i = e.getGameTexture(d, f, g, h)), (j.texture = i[0]), (j._currentKey = i[1]), (j._currentFrame = i[2]));
            var k = j.texture;
            if (((j._game = a.Game.instance), (j.animationScale = 1), j.checkZeroPad(), j._currentKey && !k)) {
                var l = '[' + j._currentKey;
                (j._currentFrame && (l += j._currentFrame + ', '), (l += ']'), j._game.warn('Ошибка: неверный ключ ' + l + '! Отсутствует текстура.'));
            }
            return (e.DEFAULT_ANCHOR == b.CENTER ? j.anchor.set(0.5) : j.anchor.set(0), 'string' == typeof d ? j.position.set(0, 0) : j.position.set(Number(d), Number(f)), j);
        }
        return (
            __extends(e, c),
            (e.getGameTexture = function (b, c, d, e) {
                return ('string' == typeof b && ((d = b), (e = c ? String(c) : null)), this.ATLAS_KEY && null == e ? [a.Game.instance.getImage(this.ATLAS_KEY, d), this.ATLAS_KEY, d] : [d ? a.Game.instance.getImage(d, e) : null, d, e]);
            }),
            (e.prototype.checkZeroPad = function (a) {
                if ((a && console.log(this._currentFrame), this._currentFrame && 'string' == typeof this._currentFrame)) {
                    this._zeroPad = 0;
                    for (var b = this._currentFrame.length, c = b - 1; c >= 0 && !isNaN(Number(this._currentFrame[c])); c--) this._zeroPad++;
                }
            }),
            (e.prototype.addLabel = function (a, b) {
                var c = { name: a, frame: b };
                this.currentLabels.push(c);
            }),
            (e.prototype.destroy = function () {
                (this._relativeMode && (this._game.off('GAME_RESIZE', this.changeOrientation.bind(this), !1), (this._relativeMode = !1), (this._relativeVars = null)), this.stop(), c.prototype.destroy.call(this, { children: !0 }));
            }),
            (e.prototype.updateCropOrigin = function () {
                (this._frame || (this._frame = new PIXI.Rectangle(0, 0, 1, 1)), (this._frame = this.texture.frame.clone()));
            }),
            (e.prototype.crop = function (a, b) {
                (void 0 === a && (a = 0), void 0 === b && (b = !1));
                var c = this._frame.x,
                    d = this._frame.y,
                    e = 1 * this._frame.width,
                    f = 1 * this._frame.height;
                ((this.texture.frame = new PIXI.Rectangle(c, d + f * a, e, f - f * a)), this.texture.updateUvs(), b && (this.scale.y = 1 - a));
            }),
            (e.prototype.changeKey = function (a) {
                this._currentKey = a;
            }),
            Object.defineProperty(e.prototype, 'frameName', {
                get: function () {
                    return this._currentFrame;
                },
                set: function (b) {
                    if (this._currentFrame != b) {
                        if (null == this._currentKey) return void (e.SHOW_WARNING && this._game.warn('Ошибка: меняем фрейм у спрайта, у которого не назначен атлас.'));
                        this._currentFrame = b;
                        var c = a.Game.instance.getImage(this._currentKey, this._currentFrame);
                        if (null == c) return void (e.SHOW_WARNING && this._game.warn('Ошибка: ' + b + ' - недопустимое имя для фрейма // ' + this._currentKey + ' // ' + this._currentAnimation));
                        (this.checkZeroPad(), (this.texture = c));
                    }
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'frameNumber', {
                get: function () {
                    return this._zeroPad ? (null == this._currentKey ? (e.SHOW_WARNING && this._game.warn('Ошибка: меняем фрейм у спрайта, у которого не назначен атлас.'), null) : Number(this._currentFrame.substring(this._currentFrame.length - this._zeroPad))) : void (e.SHOW_WARNING && this._game.warn('Ошибка: не обнаружено фреймов'));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'game', {
                get: function () {
                    return this._game;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (e.prototype.addAnimation = function (a, b, c, e, f, g) {
                (void 0 === c && (c = 1), void 0 === e && (e = !1), void 0 === f && (f = !1), void 0 === g && (g = 0), null == this._animations && (this._animations = []), (null == this._defaultAnimation || f) && (this._defaultAnimation = a), (this._animations[a] = new d()), (this._animations[a].frames = b), (this._animations[a].speed = c), (this._animations[a].loop = e), (this._animations[a].rndDelayForLoop = g));
            }),
            (e.prototype.play = function (a, b, c) {
                (void 0 === b && (b = !1), this._animations && (this._playing && this.stop(), (this._currentAnimation = a), this._animations[a] || console.log('#', a), (this._currentTime = (this._animations[a].rndDelayForLoop ? this._animations[a].rndDelayForLoop * this.game.rnd.js : 0) >> 0), (this._CFA = 0), (this._animations[a].loop = b), (this.frameName = this._animations[a].frames[this._CFA]), (this._playing = !0), (this._onComplete = c), !e.ANIMATION_UPDATE_DISABLED && this._animations[a].frames.length > 1 && this.game.ticker.add(this.animationUpdate, this, 25)));
            }),
            (e.prototype.setDefaultAnimation = function (a) {
                this._animations && ((this._currentAnimation = a), (this._currentTime = 0), (this._CFA = 0));
            }),
            (e.prototype.gotoAndStop = function (a) {
                var b;
                if ('string' == typeof a)
                    if (0 == this.currentLabels.length) e.SHOW_WARNING && this._game.warn('ERROR KY.Sprite: Данному спрайту не назначены метки!');
                    else
                        for (var c = 0, d = this.currentLabels.length; c < d; c++) {
                            if (this.currentLabels[c].name == a) {
                                b = this.currentLabels[c].frame;
                                break;
                            }
                            c == d - 1 && e.SHOW_WARNING && this._game.warn('ERROR KY.Sprite: В спрайте не найдена нужная метка!');
                        }
                else b = a;
                if ((this.stop(), (b -= e.GOTO_START_INDEX), this._CFA != b)) {
                    if (!this._animations) return void (e.SHOW_WARNING && this._game.warn('ERROR KY.Sprite: Для спрайта не предоставлена анимации!'));
                    (b >= this.totalFrames && (b = this.totalFrames - 1), this._currentAnimation || this.setDefaultAnimation(this._defaultAnimation), (this._CFA = b), (this.frameName = this._animations[this._currentAnimation].frames[b]));
                }
            }),
            (e.prototype.stop = function () {
                this._playing && ((this._playing = !1), e.ANIMATION_UPDATE_DISABLED || this.game.ticker.remove(this.animationUpdate, this));
            }),
            (e.prototype.setFrameOffset = function (a) {
                this._currentTime = a;
            }),
            (e.prototype.animationUpdate = function (a) {
                var b = this._animations[this._currentAnimation];
                a *= 0.01667;
                var c = b.speed * a * this.animationScale,
                    d = this._CFA;
                ((this._currentTime += c), (this._CFA = Math.floor(this._currentTime)), this._currentTime < 0 && !b.loop ? (this.gotoAndStop(0), this._onComplete && this._onComplete()) : this._currentTime >= b.frames.length && !b.loop ? (this.gotoAndStop(b.frames.length - 1), this._onComplete && this._onComplete()) : d !== this._CFA && (this._CFA >= b.frames.length && ((this._CFA = 0), (this._currentTime -= b.frames.length + (b.rndDelayForLoop ? b.rndDelayForLoop * this.game.rnd.js : 0)), this._onComplete && this._onComplete()), this._CFA >= 0 && this._CFA < b.frames.length && (this.frameName = this._animations[this._currentAnimation].frames[this._CFA])));
            }),
            (e.prototype.changeAnimationSpeed = function (a, b) {
                var c = this._animations[this._currentAnimation];
                return !!c && ((c.speed = b), !0);
            }),
            Object.defineProperty(e.prototype, 'currentAnimName', {
                get: function () {
                    return this._currentAnimation;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'animPlaying', {
                get: function () {
                    return this._playing;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'currentFrameNumber', {
                get: function () {
                    return this._CFA + e.GOTO_START_INDEX;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'totalFrames', {
                get: function () {
                    if (!this._animations) return 1;
                    if (this._currentAnimation) return this._animations[this._currentAnimation].frames.length;
                    if (this._defaultAnimation) return this._animations[this._defaultAnimation].frames.length;
                    throw 'ERROR KY.Sprite: попытка взять totalFrames у отсутствующего стейта!';
                },
                enumerable: !1,
                configurable: !0,
            }),
            (e.createAnimationState = function (a, b, c, d) {
                void 0 === d && (d = 0);
                for (var e = [], f = b; f <= c; f++) {
                    for (var g = '' + f; g.length < d; ) g = '0' + g;
                    e.push(a + g);
                }
                return e;
            }),
            (e.prototype.activateRelativeMode = function () {
                return (
                    (this._relativeMode = !0),
                    (this._relativeVars = {}),
                    (this._relativeVars.landscapeScaleX = 1),
                    (this._relativeVars.portretScaleX = 1),
                    (this._relativeVars.landscapeScaleY = 1),
                    (this._relativeVars.portretScaleY = 1),
                    (this._relativeVars.landscapeVisible = !0),
                    (this._relativeVars.portretVisible = !0),
                    (this._relativeVars.wideMode = !1),
                    this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? ((this._relativeVars.landscapeX = this.x / this._game.width), (this._relativeVars.landscapeY = this.y / this._game.height), (this._relativeVars.portretX = this._relativeVars.landscapeX), (this._relativeVars.portretY = this._relativeVars.landscapeY)) : ((this._relativeVars.portretX = this.x / this._game.width), (this._relativeVars.portretY = this.y / this._game.height), (this._relativeVars.landscapeX = this._relativeVars.portretX), (this._relativeVars.landscapeY = this._relativeVars.portretY)),
                    (this._relativeVars.landscapeLeftOffset = null),
                    (this._relativeVars.portretLeftOffset = null),
                    (this._relativeVars.landscapeRightOffset = null),
                    (this._relativeVars.portretRightOffset = null),
                    (this._relativeVars.landscapeTopOffset = null),
                    (this._relativeVars.portretTopOffset = null),
                    (this._relativeVars.landscapeBottomOffset = null),
                    (this._relativeVars.portretBottomOffset = null),
                    this._game.on('GAME_RESIZE', this.changeOrientation.bind(this), !1),
                    this.end(),
                    this
                );
            }),
            (e.prototype.relativeWarn = function (a) {
                e.SHOW_WARNING && this._game.warn('У спрайта не включен ОТНОСИТЕЛЬНЫЙ РЕЖИМ. Использование ф-и' + a + 'невозможно!');
            }),
            (e.prototype.otherXY = function (b, c) {
                return this._relativeMode ? (this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? ((this._relativeVars.portretX = this.x / this._game.height), (this._relativeVars.portretY = this.y / this._game.width)) : ((this._relativeVars.landscapeX = this.x / this._game.height), (this._relativeVars.landscapeY = this.y / this._game.width)), this) : void this.relativeWarn('otherXY');
            }),
            (e.prototype.myXY = function (b, c) {
                return this._relativeMode ? (this._game.defaultOrientation != a.DeviceOrientation.LANDSCAPE ? ((this._relativeVars.portretX = this.x / this._game.height), (this._relativeVars.portretY = this.y / this._game.width)) : ((this._relativeVars.landscapeX = this.x / this._game.height), (this._relativeVars.landscapeY = this.y / this._game.width)), this) : void this.relativeWarn('otherXY');
            }),
            (e.prototype.enabledWideMode = function () {
                return this._relativeMode ? ((this._relativeVars.wideMode = !0), this) : void this.relativeWarn('enabledWideMode');
            }),
            (e.prototype.myVisible = function (b) {
                return this._relativeMode ? (this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeVisible = b) : (this._relativeVars.portretVisible = b), this) : void this.relativeWarn('myVisible');
            }),
            (e.prototype.otherVisible = function (b) {
                return this._relativeMode ? (this._game.defaultOrientation != a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeVisible = b) : (this._relativeVars.portretVisible = b), this) : void this.relativeWarn('otherVisible');
            }),
            (e.prototype.myLeftOffset = function (b) {
                return (this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeLeftOffset = b) : (this._relativeVars.portretLeftOffset = b), this);
            }),
            (e.prototype.otherLeftOffset = function (b) {
                return (this._game.defaultOrientation != a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeLeftOffset = b) : (this._relativeVars.portretLeftOffset = b), this);
            }),
            (e.prototype.leftOffset = function (a) {
                return (this.myLeftOffset(a), this.otherLeftOffset(a), this);
            }),
            (e.prototype.myRightOffset = function (b) {
                return (this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeRightOffset = b) : (this._relativeVars.portretRightOffset = b), this);
            }),
            (e.prototype.otherRightOffset = function (b) {
                return (this._game.defaultOrientation != a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeRightOffset = b) : (this._relativeVars.portretRightOffset = b), this);
            }),
            (e.prototype.rightOffset = function (a) {
                return (this.myRightOffset(a), this.otherRightOffset(a), this);
            }),
            (e.prototype.myTopOffset = function (b) {
                return (this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeTopOffset = b) : (this._relativeVars.portretTopOffset = b), this);
            }),
            (e.prototype.otherTopOffset = function (b) {
                return (this._game.defaultOrientation != a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeTopOffset = b) : (this._relativeVars.portretTopOffset = b), this);
            }),
            (e.prototype.topOffset = function (a) {
                return (this.myTopOffset(a), this.otherTopOffset(a), this);
            }),
            (e.prototype.myBottomOffset = function (b) {
                return (this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeBottomOffset = b) : (this._relativeVars.portretBottomOffset = b), this);
            }),
            (e.prototype.otherBottomOffset = function (b) {
                return (this._game.defaultOrientation != a.DeviceOrientation.LANDSCAPE ? (this._relativeVars.landscapeBottomOffset = b) : (this._relativeVars.portretBottomOffset = b), this);
            }),
            (e.prototype.bottomOffset = function (a) {
                return (this.myBottomOffset(a), this.otherBottomOffset(a), this);
            }),
            (e.prototype.end = function () {
                return this._relativeMode ? (this.changeOrientation(), this) : void this.relativeWarn('end');
            }),
            (e.prototype.changeOrientation = function () {
                if (null == this._relativeVars) return (this._game.off('GAME_RESIZE', this.changeOrientation.bind(this), !1), void (this._relativeMode = !1));
                var b = 1,
                    c = 1;
                (this._relativeVars.wideMode && (b = c = this._game.wideRatio), this._game.defaultOrientation == a.DeviceOrientation.LANDSCAPE ? ((this.x = this._game.screenWidth * this._relativeVars.landscapeX), (this.y = this._game.screenHeight * this._relativeVars.landscapeY), (this.visible = this._relativeVars.landscapeVisible), (b *= this._relativeVars.landscapeScaleX), (c *= this._relativeVars.landscapeScaleY), this.applyLandscapeOffsets()) : ((this.x = this._game.screenWidth * this._relativeVars.portretX), (this.y = this._game.screenHeight * this._relativeVars.portretY), (this.visible = this._relativeVars.portretVisible), (b *= this._relativeVars.portretScaleX), (c *= this._relativeVars.portretScaleY), this.applyPortretOffsets()), this.scale.set(b, c));
            }),
            (e.prototype.applyLandscapeOffsets = function () {
                (null != this._relativeVars.landscapeLeftOffset && (this.x = this._relativeVars.landscapeLeftOffset), null != this._relativeVars.landscapeRightOffset && (this.x = this._game.screenWidth - this._relativeVars.landscapeRightOffset), null != this._relativeVars.landscapeTopOffset && (this.y = this._relativeVars.landscapeTopOffset), null != this._relativeVars.landscapeBottomOffset && (this.y = this._game.screenHeight - this._relativeVars.landscapeBottomOffset));
            }),
            (e.prototype.applyPortretOffsets = function () {
                (null != this._relativeVars.portretLeftOffset && (this.x = this._relativeVars.portretLeftOffset), null != this._relativeVars.portretRightOffset && (this.x = this._game.screenWidth - this._relativeVars.portretRightOffset), null != this._relativeVars.portretTopOffset && (this.y = this._relativeVars.portretTopOffset), null != this._relativeVars.portretBottomOffset && (this.y = this._game.screenHeight - this._relativeVars.portretBottomOffset));
            }),
            (e.fromAnim = function (b, c, d) {
                void 0 === d && (d = {});
                var e = d.x,
                    f = void 0 === e ? 0 : e,
                    g = d.y,
                    h = void 0 === g ? 0 : g,
                    i = d.frame,
                    j = d.loop,
                    k = void 0 === j || j,
                    l = d.speed,
                    m = void 0 === l ? 30 : l,
                    n = a.Game.instance.cache[b];
                if (null == n) throw Error('Отсутствует атлас по ключу ' + b);
                var o = Array.isArray(c) ? c : n.data.animations[c];
                if (null == o) throw Error('Отсутствует анимация по ключу '.concat(c, ' в атласе ').concat(b));
                var p = new a.Sprite(f, h, b, o[0]);
                return (p.addAnimation('default', o, m, k), p.play('default', k), p.anchor.set(0), null != i && p.gotoAndStop(i), p);
            }),
            (e.zeroPad = function (a, b) {
                void 0 === b && (b = 4);
                for (var c = '' + a; c.length < b; ) c = '0' + c;
                return c;
            }),
            (e.ANIMATION_UPDATE_DISABLED = !1),
            (e.GOTO_START_INDEX = 0),
            (e.DEFAULT_ANCHOR = b.CENTER),
            (e.SHOW_WARNING = !0),
            e
        );
    })(PIXI.Sprite);
    a.Sprite = c;
    var d = (function () {
        function a() {}
        return a;
    })();
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function (b) {
        function c(c) {
            var d = b.call(this) || this;
            return ((d.___pixiLoadProgress = null), (d._game = a.Game.instance), (d._name = c), (d._active = !1), (d._lastTouchId = null), (d.interactionAfterTouch = !0), (d._world = new PIXI.Container()), (d._world.hitArea = new PIXI.Rectangle(-1e5, -1e5, 2e5, 2e5)), (d._world.interactive = !0), d.__init(), d);
        }
        return (
            __extends(c, b),
            Object.defineProperty(c.prototype, '___soundLoadProgress', {
                get: function () {
                    if (!this._soundLoadProgress) return 0;
                    var a = 0,
                        b = 0;
                    for (var c in this._soundLoadProgress) (b++, (a += this._soundLoadProgress[c]));
                    return a / b;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'totalLoading', {
                get: function () {
                    var a = this.___soundLoadProgress,
                        b = this.___pixiLoadProgress ? this.___pixiLoadProgress : 1;
                    return (a + b) / 2;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.__init = function () {
                ((this._loadingFont = !1), (this._loadingPIXIAssets = !1), (this._loadingAudio = 0), (this._soundLoadProgress = {}), (this.___pixiLoadProgress = null));
            }),
            (c.prototype.__start = function () {
                for (var a = this, b = [], c = 0; c < arguments.length; c++) b[c] = arguments[c];
                (this._world.on('pointerdown', this.__onDown.bind(this)),
                    this._world.on('pointermove', this.__onMove.bind(this)),
                    this._world.on('pointerup', this.__onUp.bind(this)),
                    this._world.on('pointerupoutside', this.__onUpOutside.bind(this)),
                    (this._lastTouchId = null),
                    (this._mouseX = 0),
                    (this._mouseY = 0),
                    this.init.apply(this, b),
                    this.preload(),
                    this.loading
                        ? (this.game.loader.onProgress.add(function (b, c) {
                              ((a.___pixiLoadProgress = b.progress / 100), a.___pixiLoadProgress > 1 && (a.___pixiLoadProgress = 1));
                          }),
                          this._game.loader.load(function () {
                              ((a._loadingPIXIAssets = !1), a.finishLoading());
                          }))
                        : (this.create(), (this._active = !0)));
            }),
            (c.prototype.finishLoading = function () {
                this.loading || (this.create(), (this._active = !0));
            }),
            (c.prototype.__free = function () {
                if ((TweenMax.killAll(), this.shutdown(), (a.Sprite.ATLAS_KEY = null), (this._active = !1), this._world)) {
                    for (; this._world.children.length; ) {
                        var b = this._world.children.pop();
                        b.destroy({ children: !0 });
                    }
                    (this._world.removeAllListeners(), this.removeAllListeners(), this.__init());
                }
            }),
            (c.prototype.addChild = function (a) {
                this.world.addChild(a);
            }),
            (c.prototype.remove = function (a) {
                this.world && this.world.removeChild(a);
            }),
            (c.prototype.sprite = function (b, c, d, e) {
                return (void 0 === b && (b = 0), void 0 === c && (c = 0), new a.Sprite(b, c, d, e));
            }),
            (c.prototype.pool = function (b, c) {
                return (void 0 === c && (c = -1), new a.Pool(b, c));
            }),
            (c.prototype.json = function (a) {
                return this.game.cache[a].data;
            }),
            (c.prototype.loadFonts = function (a, b) {
                var c = this;
                (void 0 === b && (b = 'styles'),
                    null != a &&
                        0 != a.length &&
                        ((this._loadingFont = !0),
                        this.baseLoadFonts(a, b + '.css' + this.cacheName, function () {
                            ((c._loadingFont = !1), c.finishLoading());
                        })));
            }),
            (c.prototype.loadAtlases = function (b) {
                if (null != b && 0 != b.length) {
                    for (var c = this.game.getAssetsPath(a.ASSETS_PATH.IMAGES), d = 0; d < b.length; d++) {
                        var e = void 0,
                            f = void 0;
                        ('string' == typeof b[d] ? ((e = b[d].split('/').pop()), (f = c + b[d])) : ((e = b[d][0]), (f = c + b[d][1])), this.game.loader.add(e, f + '.json' + this.cacheName));
                    }
                    this._loadingPIXIAssets = !0;
                }
            }),
            (c.prototype.loadBmpFonts = function (b) {
                if (null != b && 0 != b.length) {
                    for (var c = this.game.getAssetsPath(a.ASSETS_PATH.BMP_FONTS), d = 0; d < b.length; d++) {
                        var e = void 0,
                            f = void 0;
                        ('string' == typeof b[d] ? ((e = b[d].split('/').pop()), (f = c + b[d])) : ((e = b[d][0]), (f = c + b[d][1])), this.game.loader.add(e, f + '.fnt' + this.cacheName));
                    }
                    this._loadingPIXIAssets = !0;
                }
            }),
            (c.prototype.loadImages = function (b, c) {
                if ((void 0 === c && (c = 'png'), null != b && 0 != b.length)) {
                    for (var d = this.game.getAssetsPath(a.ASSETS_PATH.IMAGES), e = 0; e < b.length; e++) {
                        var f = b[e].split('/').pop(),
                            g = d + b[e];
                        this.game.loader.add(f, g + '.' + c + this.cacheName);
                    }
                    this._loadingPIXIAssets = !0;
                }
            }),
            (c.prototype.loadJsons = function (b) {
                if (null != b && 0 != b.length) {
                    for (var c = this.game.getAssetsPath(a.ASSETS_PATH.DATA), d = 0; d < b.length; d++) {
                        var e = b[d].split('/').pop(),
                            f = c + b[d];
                        this.game.loader.add(e, f + '.json' + this.cacheName);
                    }
                    this._loadingPIXIAssets = !0;
                }
            }),
            (c.prototype.loadSpine = function (b) {
                if (null != b && 0 != b.length) {
                    for (var c = this.game.getAssetsPath(a.ASSETS_PATH.SPINE), d = 0; d < b.length; d++) {
                        var e = b[d].split('/').pop(),
                            f = c + b[d];
                        this.game.loader.add(e, f + '.json' + this.cacheName);
                    }
                    this._loadingPIXIAssets = !0;
                }
            }),
            (c.prototype.getJson = function (a, b) {
                var c = new XMLHttpRequest();
                (c.open('GET', a, !0),
                    (c.responseType = 'json'),
                    (c.onload = function () {
                        var a = c.status;
                        200 === a ? b(null, c.response) : b(a, c.response);
                    }),
                    c.send());
            }),
            (c.prototype.loadAudio = function (b, c, d) {
                var e = this;
                ((this._soundLoadProgress[b] = 0), (this._loadingAudio += 1));
                var f = this.game.getAssetsPath(a.ASSETS_PATH.SOUNDS);
                this.getJson(f + b + '.json' + this.cacheName, function (a, g) {
                    var h = {};
                    for (var i in g.spritemap) h[i] = [Math.ceil(1e3 * g.spritemap[i].start), Math.ceil(1e3 * (g.spritemap[i].end - g.spritemap[i].start)), g.spritemap[i].loop];
                    var j = new Howl({
                        src: [f + b + '.mp3' + e.cacheName, f + b + '.ogg' + e.cacheName],
                        sprite: h,
                        preload: !0,
                        autoplay: !1,
                        onloadprogress: function (a) {
                            ((e._soundLoadProgress[b] = a.loaded / a.total), e._soundLoadProgress[b] > 1 && (e._soundLoadProgress[b] = 1));
                        },
                        onload: function () {
                            ((e._loadingAudio -= 1), e.finishLoading());
                        },
                    });
                    e._game.addAudio(j, c, d);
                });
            }),
            (c.prototype.audioPlay = function (a, b, c, d, e) {
                return this.game.audioPlay(a, b, c, d, e);
            }),
            (c.prototype.__onDown = function (b) {
                var c;
                if (0 != this.game.multitouch || null == this._lastTouchId) {
                    var d = (b.data.global.x - this.game.stage.x) * this.game.actionRatio,
                        e = b.data.global.y * this.game.actionRatio,
                        f = !1;
                    (b.data && ((this._lastTouchId = b.data.pointerId), (f = 2 == (null === (c = b.data.originalEvent) || void 0 === c ? void 0 : c.button))), (this._mouseX = d >> 0), (this._mouseY = e >> 0), this.emit(a.GameEvent.MOUSE_DOWN, this._mouseX, this._mouseY, b, f));
                }
            }),
            (c.prototype.__onUp = function (b) {
                var c;
                if (!b.data || 0 != this.game.multitouch || this._lastTouchId == b.data.pointerId) {
                    ((this._lastTouchId = null), (b.outside = !1));
                    var d = (b.data.global.x - this.game.stage.x) * this.game.actionRatio,
                        e = b.data.global.y * this.game.actionRatio,
                        f = 2 == (null === (c = b.data.originalEvent) || void 0 === c ? void 0 : c.button);
                    ((this._mouseX = d >> 0), (this._mouseY = e >> 0), this.emit(a.GameEvent.MOUSE_UP, this._mouseX, this._mouseY, b, f));
                }
            }),
            (c.prototype.__onUpOutside = function (b) {
                if (!b.data || 0 != this.game.multitouch || this._lastTouchId == b.data.pointerId) {
                    this._lastTouchId = null;
                    var c = (b.data.global.x - this.game.stage.x) * this.game.actionRatio,
                        d = b.data.global.y * this.game.actionRatio;
                    this.emit(a.GameEvent.MOUSE_UP, c >> 0, d >> 0, b);
                }
            }),
            (c.prototype.__onMove = function (b) {
                var c = 1 == this.interactionAfterTouch && 0 == this.game.multitouch && this._lastTouchId != b.data.pointerId;
                if (!b.data || !c) {
                    var d = (b.data.global.x - this.game.stage.x) * this.game.actionRatio,
                        e = b.data.global.y * this.game.actionRatio;
                    ((this._mouseX = d >> 0), (this._mouseY = e >> 0), this.emit(a.GameEvent.MOUSE_MOVE, this._mouseX, this._mouseY, b));
                }
            }),
            (c.prototype.init = function () {
                for (var a = [], b = 0; b < arguments.length; b++) a[b] = arguments[b];
            }),
            (c.prototype.preload = function () {}),
            (c.prototype.create = function () {}),
            (c.prototype.update = function (a, b) {}),
            (c.prototype.shutdown = function () {}),
            (c.prototype.lostFocus = function () {}),
            (c.prototype.getFocus = function () {}),
            Object.defineProperty(c.prototype, 'game', {
                get: function () {
                    return this._game;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'active', {
                get: function () {
                    return this._active;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'name', {
                get: function () {
                    return this._name;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'centerX', {
                get: function () {
                    return this.game.centerX;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'centerY', {
                get: function () {
                    return this.game.centerY;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'world', {
                get: function () {
                    return this._world;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'ticker', {
                get: function () {
                    return this._game.ticker;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'loading', {
                get: function () {
                    return this._loadingPIXIAssets || this._loadingFont || 0 != this._loadingAudio;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'cacheName', {
                get: function () {
                    return null == this.game.browserCacheLabel ? '' : '?' + this.game.browserCacheLabel;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'mouseX', {
                get: function () {
                    return this._mouseX;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'mouseY', {
                get: function () {
                    return this._mouseY;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.baseLoadFonts = function (b, c, d) {
                var e = this,
                    f = this.game.getAssetsPath(a.ASSETS_PATH.FONTS);
                WebFont.load({
                    custom: { families: b, urls: [f + c] },
                    active: function () {
                        window.setTimeout(function () {
                            null != d && d();
                        }, 100);
                    },
                    inactive: function () {
                        (e._game.trace('WebFont прогрузился не до конца. Плохое интернет соединение!'), null != d && d(!1));
                    },
                });
            }),
            c
        );
    })(EventEmitter);
    a.State = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function b() {
            ((this._game = a.Game.instance), (this._states = {}));
        }
        return (
            (b.prototype.add = function (a, b, c) {
                (void 0 === c && (c = !1), (this._states[a] = new b(a)), c && (this._autoStart = a));
            }),
            (b.prototype.start = function (a) {
                for (var b, c = [], d = 1; d < arguments.length; d++) c[d - 1] = arguments[d];
                (this._current && (this._current.__free(), this._current.world && this._game.stage.removeChild(this._current.world)), (this._current = this._states[a]), (b = this._current).__start.apply(b, c), this._current.world && this._game.stage.addChildAt(this._current.world, 0));
            }),
            (b.prototype.update = function () {
                this._autoStart && (this.start(this._autoStart), (this._autoStart = null));
            }),
            (b.prototype.getState = function (a) {
                return this._states[a];
            }),
            Object.defineProperty(b.prototype, 'current', {
                get: function () {
                    return this._current;
                },
                enumerable: !1,
                configurable: !0,
            }),
            b
        );
    })();
    a.StatesManger = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function b(b, d) {
            (void 0 === b && (b = c.FREE), (this._type = b), (this._target = d), this._target && ((this._targetOldX = this._target.x), (this._targetOldY = this._target.y)), (this.stop = !1), (this._enabled = !0), (this._currentSpeed = 0), (this._moveDown = { left: !1, right: !1, up: !1, down: !1 }), (this._lockYFlag = null), (this._move = new a.Vec2d()));
        }
        return (
            (b.prototype.left = function (a) {
                this.enabled && (a ? ((this._moveDown.left = !0), (this._move.x = -1), (this._lockYFlag = !0)) : ((this._move.x = this._moveDown.right ? 1 : 0), (this._moveDown.left = !1), (this._lockYFlag = !1)));
            }),
            (b.prototype.right = function (a) {
                this.enabled && (a ? ((this._moveDown.right = !0), (this._move.x = 1), (this._lockYFlag = !0)) : ((this._move.x = this._moveDown.left ? -1 : 0), (this._moveDown.right = !1), (this._lockYFlag = !1)));
            }),
            (b.prototype.up = function (a) {
                this.enabled && (a ? ((this._move.y = -1), (this._moveDown.up = !0), (this._lockYFlag = !1)) : ((this._move.y = this._moveDown.down ? 1 : 0), (this._moveDown.up = !1), (this._lockYFlag = !0)));
            }),
            (b.prototype.down = function (a) {
                this.enabled && (a ? ((this._move.y = 1), (this._moveDown.down = !0), (this._lockYFlag = !1)) : ((this._move.y = this._moveDown.up ? -1 : 0), (this._moveDown.down = !1), (this._lockYFlag = !0)));
            }),
            (b.prototype.reset = function () {
                ((this._move.x = 0), (this._move.y = 0), (this._moveDown.down = !1), (this._moveDown.left = !1), (this._moveDown.right = !1), (this._moveDown.up = !1), (this._lockYFlag = null), (this._blockX = !1), (this._blockY = !1));
            }),
            (b.prototype.update = function (a) {
                !this.stop && this.enabled && ((this._currentSpeed = a), this._target && ((this._targetOldX = this._target.x), (this._targetOldY = this._target.y), (this._target.x += a * this.mx), (this._target.y += a * this.my)));
            }),
            (b.prototype.lockCheck = function (a, b) {
                if (!this.stop && this.enabled) {
                    if (this._type != c.FOURSIDE) return void console.log('WARNING: MoveControl.lockCheck необходим лишь для режима FOURSIDE');
                    if (!this.isMoving) return ((this._blockX = !1), void (this._blockY = !1));
                    ((a = null == a ? !!this._target && Math.abs(this._target.x - this._targetOldX) < 0.05 : a), (b = null == b ? !!this._target && Math.abs(this._target.y - this._targetOldY) < 0.05 : b), (this._blockX = a && this._lockYFlag), (this._blockY = b && 0 == this._lockYFlag));
                }
            }),
            Object.defineProperty(b.prototype, 'isMoving', {
                get: function () {
                    return 0 != this._move.x || 0 != this._move.y;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'orhoFlag', {
                get: function () {
                    return this._blockX || this._blockY ? null : this._lockYFlag;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'mx', {
                get: function () {
                    return this._type == c.FOURSIDE && 0 == this.orhoFlag ? 0 : this._move.x;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'my', {
                get: function () {
                    return this._type == c.FOURSIDE && 1 == this.orhoFlag ? 0 : this._move.y;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'currentSpeed', {
                get: function () {
                    return this._currentSpeed;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'enabled', {
                get: function () {
                    return this._enabled;
                },
                set: function (a) {
                    (a && !this._enabled && this.reset(), (this._enabled = a));
                },
                enumerable: !1,
                configurable: !0,
            }),
            b
        );
    })();
    a.MoveControl = b;
    var c;
    !(function (a) {
        ((a[(a.FREE = 0)] = 'FREE'), (a[(a.FOURSIDE = 1)] = 'FOURSIDE'));
    })((c = a.MoveControlDirection || (a.MoveControlDirection = {})));
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {
            this._mobileDetect = new MobileDetect(window.navigator.userAgent);
        }
        return (
            Object.defineProperty(a.prototype, 'mobile', {
                get: function () {
                    return Boolean(this._mobileDetect.mobile());
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'tablet', {
                get: function () {
                    return Boolean(this._mobileDetect.tablet());
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'iOS', {
                get: function () {
                    return 'iOS' == this._mobileDetect.os();
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'android', {
                get: function () {
                    return 'AndroidOS' == this._mobileDetect.os();
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'mobileGrade', {
                get: function () {
                    return this._mobileDetect.mobileGrade();
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'macOS', {
                get: function () {
                    return /mac/i.test(window.navigator.platform);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'webGL', {
                get: function () {
                    try {
                        var a = document.createElement('canvas'),
                            b = a.getContext('webgl') || a.getContext('experimental-webgl');
                        if (((a = null), b && b instanceof WebGLRenderingContext)) return !0;
                    } catch (a) {}
                    return !1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a.prototype, 'platform', {
                get: function () {
                    try {
                        var a = this.mobile ? 'mobile' : 'pc',
                            b = this._mobileDetect.os();
                        return a + ':' + b + ':' + this.webGL;
                    } catch (a) {}
                    return '?';
                },
                enumerable: !1,
                configurable: !0,
            }),
            a
        );
    })();
    a.Detect = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function b() {
            ((this.repeat = !1), (this._keys = {}), this.clearCallbacks(), 0 == a.Game.instance.detect.mobile && (document.addEventListener('keydown', this.__onDown.bind(this)), document.addEventListener('keyup', this.__onUp.bind(this))));
        }
        return (
            (b.prototype.addOnDown = function (a, b) {
                ((this._onDown = a), (this._contextDown = b));
            }),
            (b.prototype.addOnUp = function (a, b) {
                ((this._onUp = a), (this._contextUp = b));
            }),
            (b.prototype.__onDown = function (a) {
                if (this._onDown) {
                    if (!this.repeat && this._keys[a.keyCode]) return;
                    this._onDown.call(this._contextDown, a.keyCode, a);
                }
                this._keys[a.keyCode] = !0;
            }),
            (b.prototype.__onUp = function (a) {
                if (this._onUp) {
                    if (!this.repeat && !this._keys[a.keyCode]) return;
                    this._onUp.call(this._contextUp, a.keyCode, a);
                }
                this._keys[a.keyCode] = !1;
            }),
            (b.prototype.clearCallbacks = function () {
                ((this._contextDown = null), (this._contextUp = null), (this._onDown = null), (this._onUp = null));
            }),
            b
        );
    })();
    a.Keyboard = b;
    var c;
    !(function (a) {
        ((a[(a.LEFT = 37)] = 'LEFT'), (a[(a.RIGHT = 39)] = 'RIGHT'), (a[(a.UP = 38)] = 'UP'), (a[(a.DOWN = 40)] = 'DOWN'), (a[(a.SPACE = 32)] = 'SPACE'), (a[(a.W = 87)] = 'W'), (a[(a.A = 65)] = 'A'), (a[(a.S = 83)] = 'S'), (a[(a.D = 68)] = 'D'), (a[(a.E = 69)] = 'E'), (a[(a.ZERO = 48)] = 'ZERO'), (a[(a.ONE = 49)] = 'ONE'), (a[(a.TWO = 50)] = 'TWO'), (a[(a.THREE = 51)] = 'THREE'), (a[(a.FOUR = 52)] = 'FOUR'), (a[(a.FIVE = 53)] = 'FIVE'), (a[(a.SIX = 54)] = 'SIX'), (a[(a.SEVEN = 55)] = 'SEVEN'), (a[(a.EIGHT = 56)] = 'EIGHT'), (a[(a.NINE = 57)] = 'NINE'));
    })((c = a.Keys || (a.Keys = {})));
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {
            ((this._seed = 0), (this._jsrnd = Math.random));
        }
        return (
            (a.prototype.range = function (a, b) {
                return a + this.value * (b - a);
            }),
            (a.prototype.rangeInt = function (a, b) {
                var c = this.value;
                return a + Math.floor(c * (b - a + 1));
            }),
            (a.prototype.seed = function (a) {
                ((this._seed = a >>> 0), (this._prevSeed = this._seed));
            }),
            (a.prototype.getSeed = function () {
                return this._seed;
            }),
            Object.defineProperty(a.prototype, 'value', {
                get: function () {
                    var a = 233280;
                    return ((this._prevSeed = this._seed), (this._seed = (9301 * this._seed + 49297) % a >>> 0), this._seed / a);
                },
                enumerable: !1,
                configurable: !0,
            }),
            (a.prototype.back = function () {
                this._seed = this._prevSeed;
            }),
            (a.prototype.getRandomItem = function (a, b, c) {
                if (null == a) return null;
                (null == b && (b = 0), null == c && (c = a.length));
                var d = b + Math.floor(this.value * c);
                return void 0 === a[d] ? null : a[d];
            }),
            (a.prototype.removeRandomItem = function (a, b, c) {
                if (null == a) return null;
                (null == b && (b = 0), null == c && (c = a.length));
                var d = b + Math.floor(this.value * c);
                if (d < a.length) {
                    var e = a.splice(d, 1);
                    return null == e[0] ? null : e[0];
                }
                return null;
            }),
            (a.prototype.rangeJS = function (a, b) {
                return a + this.js * (b - a);
            }),
            (a.prototype.rangeIntJS = function (a, b) {
                var c = this.js;
                return a + Math.floor(c * (b - a + 1));
            }),
            Object.defineProperty(a.prototype, 'js', {
                get: function () {
                    return this._jsrnd();
                },
                enumerable: !1,
                configurable: !0,
            }),
            a
        );
    })();
    a.Rnd = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.lerp = function (a, b, c) {
                var d = a,
                    e = d >> 16,
                    f = (d >> 8) & 255,
                    g = 255 & d,
                    h = b,
                    i = h >> 16,
                    j = (h >> 8) & 255,
                    k = 255 & h,
                    l = e + c * (i - e),
                    m = f + c * (j - f),
                    n = g + c * (k - g);
                return ((l << 16) + (m << 8) + n) | 0;
            }),
            (a.lerpBack = function (a, b, c) {
                var d = a,
                    e = d >> 16,
                    f = (d >> 8) & 255,
                    g = 255 & d,
                    h = b,
                    i = h >> 16,
                    j = (h >> 8) & 255,
                    k = 255 & h,
                    l = (e - i * c) / (1 - c),
                    m = (f - j * c) / (1 - c),
                    n = (g - k * c) / (1 - c);
                return ((l << 16) + (m << 8) + n) | 0;
            }),
            a
        );
    })();
    a.Color = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function b(b, c) {
            (void 0 === c && (c = -1), (this._game = a.Game.instance), (this._alive = []), (this._dead = []), (this._creator = b), (this._maxLng = c), 0 == c && ((this._maxLng = -1), this._game.warn('Максимальный размер пула не может быть равен 0! Установлен безлимитный пулл.')));
        }
        return (
            (b.prototype.initArgs = function () {
                for (var a = [], b = 0; b < arguments.length; b++) a[b] = arguments[b];
                this._initArgs = a;
            }),
            (b.prototype.get = function () {
                for (var a, b = [], c = 0; c < arguments.length; c++) b[c] = arguments[c];
                if (this._dead.length) {
                    var d = this._dead.pop();
                    (d.reset && d.reset.apply(d, b), this._alive.push(d), (d = null));
                } else if (this._maxLng == -1 || this.length < this._maxLng) {
                    this._alive.push(new ((a = this._creator).bind.apply(a, __spreadArray([void 0], this._initArgs, !1)))());
                    var e = this._alive[this.length - 1];
                    ((e.parentPool = this), e.reset && e.reset.apply(e, b), (e = null));
                } else {
                    var e = this._alive.shift();
                    (e.reset && e.reset.apply(e, b), this._alive.push(e), (e = null));
                }
                return this._alive[this.length - 1];
            }),
            (b.prototype.release = function (a) {
                var b = this._alive.indexOf(a);
                return b == -1 ? void this._game.warn('Попытка удалить из пула несуществующий элемент!') : (this._alive.splice(b, 1), void this._dead.push(a));
            }),
            (b.prototype.destroy = function (a) {
                void 0 === a && (a = !0);
                for (var b; this._alive.length; ) ((b = this._alive.pop()), (b.parentPool = null), a && b.destroy && b.destroy());
                for (; this._dead.length; ) ((b = this._dead.pop()), (b.parentPool = null), a && b.destroy && b.destroy());
                ((b = null), (this._alive = null), (this._dead = null), (this._initArgs = null));
            }),
            (b.prototype.forEach = function (a) {
                if (a) {
                    for (var b = 0; b < this.length; b++) {
                        var c = a(this._alive[b], b, this._alive);
                        switch (c) {
                            case null:
                                break;
                            default:
                                if ('number' == typeof c) b += c;
                                else if ('exit' == c) return b;
                        }
                    }
                    return this.length - 1;
                }
            }),
            (b.prototype.update = function (a) {
                for (var b = 0; b < this.length; b++) this._alive[b].update(a);
            }),
            Object.defineProperty(b.prototype, 'aliveElements', {
                get: function () {
                    return this._alive;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'deadElements', {
                get: function () {
                    return this._dead;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'length', {
                get: function () {
                    return this._alive.length;
                },
                enumerable: !1,
                configurable: !0,
            }),
            b
        );
    })();
    a.Pool = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.use = function (a, b) {
                var c = a.name + '_image';
                if (!a.data || a.type !== PIXI.LoaderResource.TYPE.JSON || !a.metadata.image || this.resources[c]) return void b();
                ((a.data.frames = a.data._frames), delete a.data._frames);
                var d = { crossOrigin: a.crossOrigin, xhrType: PIXI.LoaderResource.XHR_RESPONSE_TYPE.TEXT, metadata: null, parentResource: a };
                this.add(a.name + '_atlas', a.metadata.image, d, function (c) {
                    var d = new PIXI.Spritesheet(c.texture.baseTexture, a.data, a.url);
                    d.parse(function () {
                        ((a.spritesheet = d), (a.textures = d.textures), b());
                    });
                });
            }),
            a
        );
    })();
    a.BlobAtlasPlugin = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.use = function (a, b) {
                var c = this,
                    d = a.name + '_image';
                if (!a.data || a.type !== PIXI.LoaderResource.TYPE.JSON || !a.data['@frames'] || this.resources[d]) return void b();
                ((a.data.frames = a.data['@frames']), delete a.data['@frames']);
                var e,
                    f = a.url,
                    g = f.indexOf('?');
                (g > 0 && (f = f.substr(0, g)), (f = f.substr(0, f.lastIndexOf(a.name))));
                var h = a.data.meta.image;
                ((h = h.substr(0, h.lastIndexOf('.'))), (e = f + (a.data.meta.mask ? a.data.meta.mask : h + '_mask.jpg')), (f += a.data.meta.image), (f = f.replace(this.baseUrl, '')));
                var i = { crossOrigin: a.crossOrigin, xhrType: PIXI.LoaderResource.XHR_RESPONSE_TYPE.TEXT, metadata: null, parentResource: a };
                this.add(a.name + '_atlas', f, i, function (d) {
                    return d.error
                        ? void b()
                        : void c.add(a.name + '_atlas_mask', e, i, function (c) {
                              if (c.error) return void b();
                              var e = a.data.meta.size.w,
                                  f = a.data.meta.size.h,
                                  g = document.createElement('canvas');
                              ((g.width = e), (g.height = f));
                              var h = g.getContext('2d');
                              h.drawImage(d.data, 0, 0);
                              var i = h.getImageData(0, 0, e, f),
                                  j = i.data;
                              (h.clearRect(0, 0, e, f), h.drawImage(c.data, 0, 0));
                              for (var k = h.getImageData(0, 0, e, f).data, l = 0, m = j.length; l < m; l += 4) {
                                  var n = k[l];
                                  j[l + 3] = n;
                              }
                              (h.clearRect(0, 0, e, f), h.putImageData(i, 0, 0));
                              var o = PIXI.Texture.from(g);
                              (d.texture.destroy(!0), c.texture.destroy(!0), (g = null));
                              var p = new PIXI.Spritesheet(o.baseTexture, a.data, a.url);
                              p.parse(function () {
                                  ((a.spritesheet = p), (a.textures = p.textures), b());
                              });
                          });
                });
            }),
            a
        );
    })();
    a.GrayscaleMaskPlugin = b;
})(KY || (KY = {}));
var KY;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.sort = function (a, b, c) {
                a.children.length < 2 || ((this._sortProperty = b || 'y'), (c = c || this.SORT_ASCENDING), c == this.SORT_ASCENDING ? a.children.sort(this.ascendingSortHandler.bind(this)) : a.children.sort(this.descendingSortHandler.bind(this)));
            }),
            (a.ascendingSortHandler = function (a, b) {
                return a[this._sortProperty] < b[this._sortProperty] ? -1 : a[this._sortProperty] > b[this._sortProperty] ? 1 : a.y < b.y ? -1 : 1;
            }),
            (a.descendingSortHandler = function (a, b) {
                return a[this._sortProperty] < b[this._sortProperty] ? 1 : a[this._sortProperty] > b[this._sortProperty] ? -1 : 0;
            }),
            (a.SORT_ASCENDING = -1),
            (a.SORT_DESCENDING = 1),
            a
        );
    })();
    a.Sorting = b;
})(KY || (KY = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function d() {
            var a = b.call(this) || this;
            return ((d._instance = a), (a.__GOTO_LINK__ = null), (a._startTime = 0), (a._localStartTime = 0), (a._disableToucheTime = -1), a);
        }
        return (
            __extends(d, b),
            Object.defineProperty(d.prototype, 'CG', {
                get: function () {
                    return this.social;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (d.get = function () {
                return (d._instance || new d(), this._instance);
            }),
            (d.prototype.update = function (a, b) {
                (this._disableToucheTime > 0 && ((this._disableToucheTime -= 0.016 * a), this._disableToucheTime <= 0 && ((this._disableToucheTime = -1), Stage.setTouchable(!0))), this.popupManager.update(a, b));
            }),
            (d.prototype.init = function (b) {
                var c = this;
                return new Promise(function (d, e) {
                    if ((b ? (c._isDebug = null != b.debug && b.debug) : (c._isDebug = !1), c._isDebug)) {
                        var f = a.Utils.findGetParameter('test');
                        (f && 'true' != f && (c._debugLevel = Number(f)), (c._isMapEditor = Boolean(f)));
                    }
                    switch (b.social) {
                        case 'VK':
                            c.social = new a.SocialVK();
                            break;
                        case 'VKP':
                            c.social = new a.SocialVKP();
                            break;
                        case 'YA':
                            c.social = new a.SocialCG();
                            break;
                        case 'OK':
                            c.social = new a.SocialOK();
                            break;
                        case 'CG':
                            c.social = new a.SocialCG();
                            break;
                        default:
                            c.social = new a.Social();
                    }
                    (c.resetMonetization(),
                        c.social.initialize(b.data).then(function () {
                            d();
                        }));
                });
            }),
            (d.prototype.prepare = function (b) {
                ((this._rnd = new a.MtRandom(null === b || void 0 === b ? void 0 : b.seed)), KY.Game.instance.rnd.seed(this.rnd.getSeed()), (this.popupManager = new a.PopupManager()), (this._centerContainer = new KY.Sprite(KY.Game.instance.centerX, KY.Game.instance.centerY)), this._centerContainer.activateRelativeMode(), this.addChild(this._centerContainer), KY.Game.instance.stage.addChild(this), Stage.on(KY.GameEvent.ENTER_FRAME, this.update, this), this.createLinkHook());
            }),
            (d.prototype.createLinkHook = function () {
                var a = this;
                this.isDesktop
                    ? window.addEventListener(
                          'mouseup',
                          function () {
                              a.__GOTO_LINK__ && (window.open(a.social.href + a.__GOTO_LINK__, '_blank'), (a.__GOTO_LINK__ = null));
                          },
                          !0
                      )
                    : window.addEventListener(
                          'touchend',
                          function () {
                              if (a.__GOTO_LINK__) {
                                  if (a.isClient && IS_IOS) {
                                      var b = document.createElement('a');
                                      ((b.href = a.social.href + a.__GOTO_LINK__), b.click());
                                  } else window.open(a.social.href + a.__GOTO_LINK__, '_blank');
                                  a.__GOTO_LINK__ = null;
                              }
                          },
                          !0
                      );
            }),
            (d.prototype.useServerTime = function () {
                ((this._startTime = Date.now()), (this._localStartTime = this._startTime));
            }),
            (d.prototype.showAds = function (b, e, f) {
                var g = this;
                return (
                    a.Main.adBlock && (f = !1),
                    new Promise(function (h, i) {
                        return b == c.INTERSTITIAL && a.UserGameData.getProperty(a.USER_PROPERTY.NO_ADS)
                            ? void h()
                            : void g.social
                                  .showAds(b)
                                  .then(function () {
                                      (g.emit(d.EVENT_SHOW_ADS, b), b == c.REWARD ? g._mtzReward++ : g._mtzInterstitial++, a.Statistics.advertising(a.STATS_AD_ACTION.SHOW, b == c.INTERSTITIAL ? a.STATS_AD_TYPE.INTERSTITIAL : a.STATS_AD_TYPE.REWARD, e), h());
                                  })
                                  .catch(function (d) {
                                      (a.Statistics.advertising(a.STATS_AD_ACTION.FAIL, b == c.INTERSTITIAL ? a.STATS_AD_TYPE.INTERSTITIAL : a.STATS_AD_TYPE.REWARD, e), 'skip' == d && (f = !1), 0 != f ? h() : i(d));
                                  });
                    })
                );
            }),
            (d.prototype.showFailAdsMessage = function (b, c) {
                if (c)
                    switch (c) {
                        case 'adBlock':
                            b = a.StringManager.get('ERROR_FAIL_ADS_BLOCK');
                            break;
                        case 'skip':
                            b = a.StringManager.get('ERROR_FAIL_ADS_SKIP');
                    }
                d.get().popupManager.show(a.AllPopups.ERROR, b ? b : a.StringManager.get('ERROR_FAIL_ADS'));
            }),
            (d.prototype.addToCenterContainer = function (a) {
                this._centerContainer.addChild(a);
            }),
            (d.prototype.removeFromCenterContainer = function (a) {
                this._centerContainer.removeChild(a);
            }),
            (d.prototype.disableToucheTemp = function (a) {
                (void 0 === a && (a = 2.2), (this._disableToucheTime = a), Stage.setTouchable(!1));
            }),
            (d.prototype.setSeed = function (a) {
                (this._rnd.setSeed(a), KY.Game.instance.rnd.seed(a));
            }),
            (d.prototype.getSeed = function () {
                return this._rnd.getSeed();
            }),
            (d.prototype.noServerConnect = function (b) {
                (d.get().popupManager.show(a.AllPopups.ERROR, a.StringManager.get('ERROR_INTERNET_CONNECT'), b), a.Statistics.customError(a.STATS_CUSTOM_ERROR_CODE.INTERNET_CONNECTION));
            }),
            (d.prototype.resetMonetization = function () {
                ((this._mtzReward = 0), (this._mtzInterstitial = 0), (this._mtzCurrency = 0));
            }),
            (d.prototype.mtzAddCurrency = function (a) {
                this._mtzCurrency += a;
            }),
            (d.prototype.getMonetization = function () {
                var a = {};
                return (this._mtzReward && (a.reward = this._mtzReward), this._mtzInterstitial && (a.interstitial = this._mtzInterstitial), this._mtzCurrency && (a.currency = this._mtzCurrency), a);
            }),
            Object.defineProperty(d.prototype, 'haveMonetization', {
                get: function () {
                    return 0 != this._mtzReward || 0 != this._mtzInterstitial || 0 != this._mtzCurrency;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'rnd', {
                get: function () {
                    return this._rnd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isClient', {
                get: function () {
                    return this.social.isClient;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isIOS', {
                get: function () {
                    return KY.Game.instance.detect.iOS;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isAndroid', {
                get: function () {
                    return KY.Game.instance.detect.android;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isDesktop', {
                get: function () {
                    return !(KY.Game.instance.detect.mobile || KY.Game.instance.detect.tablet);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'currentBuild', {
                get: function () {
                    return '7f4c925';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'time', {
                get: function () {
                    return this._startTime + (Date.now() - this._localStartTime);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isDebug', {
                get: function () {
                    return this._isDebug;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isMapEditor', {
                get: function () {
                    return this._isMapEditor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'debugLevel', {
                get: function () {
                    return this._debugLevel;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'buildVersion', {
                get: function () {
                    return KY.Game.instance.buildVersion;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'platformMark', {
                get: function () {
                    if (IS_DESKTOP) return IS_MAC ? 'desktop_mac' : 'desktop';
                    if (this.isClient) {
                        if (IS_ANDROID) return 'android';
                        if (IS_IOS) return 'ios';
                    } else {
                        if (IS_ANDROID) return 'android_web';
                        if (IS_IOS) return 'ios_web';
                    }
                    return 'ufo';
                },
                enumerable: !1,
                configurable: !0,
            }),
            (d.SEC_30 = 3e4),
            (d.HOUR = 36e5),
            (d.HOUR_24 = 864e5),
            (d.EVENT_SHOW_ADS = 'EVENT_SHOW_ADS'),
            d
        );
    })(PIXI.Container);
    a.MI = b;
    var c;
    !(function (a) {
        ((a.REWARD = 'reward'), (a.INTERSTITIAL = 'interstitial'));
    })((c = a.ADS_TYPE || (a.ADS_TYPE = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (a) {
        function b() {
            var b = (null !== a && a.apply(this, arguments)) || this;
            return ((b.haveShare = !1), (b.haveLeaderboard = !1), (b.haveInviteFriend = !1), (b.needAddToHomeScreen = !1), (b.needMnogoigrovkaPopup = !1), (b.haveCustomLevelLeaderboard = !1), (b.startMoney = 0), (b._emptyArray = []), (b._adsCanceledCounter = 0), (b.needOlga = !1), b);
        }
        return (
            __extends(b, a),
            Object.defineProperty(b.prototype, 'userID', {
                get: function () {
                    return '0000001';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userGameID', {
                get: function () {
                    return this.id + '-' + this.userID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userName', {
                get: function () {
                    return 'Игрок';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userFullName', {
                get: function () {
                    return 'Игрок';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userPhotoUrl', {
                get: function () {
                    return null;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userGender', {
                get: function () {
                    return c.NONE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userBirthYear', {
                get: function () {
                    return -1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userСountry', {
                get: function () {
                    return b.NONE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'userIsGroupMember', {
                get: function () {
                    return !1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'platform', {
                get: function () {
                    return b.NONE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'referrer', {
                get: function () {
                    return 'unknown';
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.prototype.initialize = function (a) {
                return (
                    (this.haveShare = !1),
                    (this.haveLeaderboard = !1),
                    (this.haveInviteFriend = !1),
                    (this.needAddToHomeScreen = !1),
                    (this.haveCustomLevelLeaderboard = !0),
                    new Promise(function (a, b) {
                        a();
                    })
                );
            }),
            (b.prototype.joinGroup = function () {
                return new Promise(function (a, b) {
                    a();
                });
            }),
            (b.prototype.setProgress = function (a) {}),
            Object.defineProperty(b.prototype, 'id', {
                get: function () {
                    return b.NONE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'secretKey', {
                get: function () {
                    return String(Date.now());
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'isClient', {
                get: function () {
                    return !1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'isDeveloper', {
                get: function () {
                    return !!this._DEVS && this._DEVS.indexOf(this.userID) != -1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'href', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'mnogoigrovkaLink', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'gameGroupLink', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'currency', {
                get: function () {
                    return ['OK', 'OK', 'OK'];
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'currencyStyle', {
                get: function () {
                    return { join: 'separated', fontSizePrice: 45, fontSizeName: 30 };
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.prototype.localCurrencyToRub = function (a) {
                return 1 * a;
            }),
            (b.prototype.share = function () {
                var a = this;
                return new Promise(function (b, c) {
                    a.haveShare ? (console.log('SHARE!'), b()) : c();
                });
            }),
            (b.prototype.showLeaderboard = function (a) {
                return new Promise(function (a, b) {
                    a();
                });
            }),
            (b.prototype.inviteFriend = function () {
                return new Promise(function (a, b) {
                    a();
                });
            }),
            (b.prototype.checkAds = function (a) {
                return new Promise(function (a, b) {
                    a(!0);
                });
            }),
            (b.prototype.resolveLastAds = function () {}),
            (b.prototype.cancelAds = function (a) {}),
            (b.prototype.checkBrokenAds = function (a) {
                return 0;
            }),
            (b.prototype.showAds = function (a) {
                return new Promise(function (a, b) {
                    a();
                });
            }),
            (b.prototype.orderBox = function (a) {
                return new Promise(function (a, b) {
                    a();
                });
            }),
            (b.prototype.addToHomeScreen = function () {
                return new Promise(function (a, b) {
                    a();
                });
            }),
            (b.prototype.getAppFriends = function () {
                return this._emptyArray;
            }),
            (b.prototype.getLevelLeaderboard = function (a, b) {
                return this._emptyArray;
            }),
            (b.prototype.getAvatars = function (a) {
                return new Promise(function (a, b) {
                    a([]);
                });
            }),
            (b.prototype.loadingStart = function () {}),
            (b.prototype.loadingStop = function () {}),
            (b.prototype.gameplayStart = function () {}),
            (b.prototype.gameplayStop = function () {}),
            (b.prototype.happytime = function () {}),
            (b.prototype.reachGoal = function (a) {}),
            (b.prototype.save = function (a, b) {
                localStorage.setItem(a, b);
            }),
            (b.prototype.load = function (a) {
                return localStorage.getItem(a);
            }),
            (b.NONE = 'NONE'),
            (b.EVENT_RESOLVE_ADS = 'RESOLVE_ADS'),
            b
        );
    })(EventEmitter);
    a.Social = b;
    var c;
    !(function (a) {
        ((a[(a.NONE = 0)] = 'NONE'), (a[(a.MEN = 1)] = 'MEN'), (a[(a.WOMEN = 2)] = 'WOMEN'));
    })((c = a.SOCIAL_GENDER || (a.SOCIAL_GENDER = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            return (null !== b && b.apply(this, arguments)) || this;
        }
        return (
            __extends(c, b),
            (c.prototype.initialize = function (b) {
                var c = this;
                return (
                    (this.haveShare = !1),
                    (this.haveLeaderboard = !1),
                    (this.haveInviteFriend = !1),
                    (this.needAddToHomeScreen = !1),
                    (this.startMoney = 200),
                    new Promise(function (b, d) {
                        return __awaiter(c, void 0, void 0, function () {
                            var c, d;
                            return __generator(this, function (e) {
                                switch (e.label) {
                                    case 0:
                                        return [4, function(){}];
                                    case 1:
                                        return (e.sent(), (c = {
    "countryCode": "US",
    "locale": "en-US",
    "device": {
        "type": "desktop"
    },
    "os": {
        "name": "Windows",
        "version": "10"
    },
    "browser": {
        "name": "Chrome",
        "version": "126.0.0.0"
    },
    "applicationType": "web"
}), (a.Main.isWideMode = 'desktop' == c.device.type), (d = a.Main), [4, false]);
                                    case 2:
                                        return ((d.adBlock = e.sent()), b(), [2]);
                                }
                            });
                        });
                    })
                );
            }),
            Object.defineProperty(c.prototype, 'id', {
                get: function () {
                    return 'CG';
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.showAds = function (b) {
                var c = this;
                return (
                    KY.Game.instance && (KY.Game.instance.masterVolume = 0),
                    new Promise(function (d, e) {
                        (c.once('adFinished', function () {
                            (KY.Game.instance && (KY.Game.instance.masterVolume = 1), c.removeAllListeners(), d());
                        }),
                            c.once('adError', function () {
                                (KY.Game.instance && (KY.Game.instance.masterVolume = 1), c.removeAllListeners(), e());
                            }));
                        var f = {
                            adFinished: function () {
                                a.MI.get().social.emit('adFinished');
                            },
                            adError: function (b) {
                                a.MI.get().social.emit('adError');
                            },
                            adStarted: function () {
                                return console.log('Start midgame ad');
                            },
                        };
                        onRequestAd(b == a.ADS_TYPE.INTERSTITIAL ? 'midgame' : 'rewarded', f);
                    })
                );
            }),
            (c.prototype.save = function (a, b) {
                try {
                    localStorage.setItem(a, b);
                } catch (a) {}
            }),
            (c.prototype.load = function (a) {
                try {
                    return localStorage.getItem(a);
                } catch (a) {}
                return null;
            }),
            (c.prototype.loadingStart = function () {
                console.log('loadingStart');
            }),
            (c.prototype.loadingStop = function () {
                console.log('loadingStop');
            }),
            (c.prototype.gameplayStart = function () {
            }),
            (c.prototype.gameplayStop = function () {
            }),
            (c.prototype.happytime = function () {
            }),
            c
        );
    })(a.Social);
    a.SocialCG = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var a = (null !== b && b.apply(this, arguments)) || this;
            return ((a.GROUP_ID = 57006677557403), (a.GAME_GROUP_ID = 70000000872091), (a._currencyVKName = ['OK', 'OK', 'OK']), (a._currencyVKStyle = { join: 'separated', fontSizePrice: 45, fontSizeName: 30 }), a);
        }
        return (
            __extends(c, b),
            Object.defineProperty(c.prototype, 'userID', {
                get: function () {
                    return this._userId;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userName', {
                get: function () {
                    return this._userName;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userFullName', {
                get: function () {
                    return this._userName + ' ' + this._userSurname;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userPhotoUrl', {
                get: function () {
                    return this._userPhotoUrl;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userGender', {
                get: function () {
                    return this._userGender;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userBirthYear', {
                get: function () {
                    return this._userBirthYear;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userСountry', {
                get: function () {
                    return this._userCountry;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userIsGroupMember', {
                get: function () {
                    return this._userIsGroupMember;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'platform', {
                get: function () {
                    return this._platform;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'referrer', {
                get: function () {
                    return this._referrer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.initialize = function (b) {
                var c = this;
                return (
                    (this._adsReady = !1),
                    (this.haveShare = !0),
                    (this.haveLeaderboard = !1),
                    (this.haveInviteFriend = !0),
                    (this.needAddToHomeScreen = !1),
                    (this.needMnogoigrovkaPopup = !0),
                    (this.haveCustomLevelLeaderboard = !0),
                    (this._platform = b.mob_platform ? b.mob_platform : a.Social.NONE),
                    (this._userIsGroupMember = !1),
                    (this._secretKey = b.sig),
                    (this._referrer = b.refplace),
                    this.loadDescriptions(),
                    new Promise(function (a, d) {
                        return __awaiter(c, void 0, void 0, function () {
                            var c,
                                e = this;
                            return __generator(this, function (f) {
                                return (
                                    (this._userId = String(b.logged_user_id)),
                                    (c = b.user_name ? b.user_name.split(' ') : ['none', 'none']),
                                    (this._userName = c[0]),
                                    (this._userSurname = c[1]),
                                    (this._userPhotoUrl = b.user_image),
                                    (this._userGender = Number(b.user_gender)),
                                    (this._userCountry = b.ip_geo_location ? b.ip_geo_location : 'none'),
                                    (this._userIsGroupMember = !1),
                                    this.checkGroupMember(b.api_server, b.application_key)
                                        .then(function (a) {
                                            var b = JSON.parse(a).groups;
                                            if (b)
                                                for (var c = 0; c < b.length; c++)
                                                    if (String(b[c].groupId) == String(e.GAME_GROUP_ID)) {
                                                        e._userIsGroupMember = !0;
                                                        break;
                                                    }
                                        })
                                        .catch(function (a) {}),
                                    FAPI.init(
                                        b.api_server,
                                        b.apiconnection,
                                        function () {
                                            (e.prepareAds(), a());
                                        },
                                        function (a) {
                                            d(a);
                                        }
                                    ),
                                    [2]
                                );
                            });
                        });
                    })
                );
            }),
            (c.prototype.loadDescriptions = function () {
                ((this._description = {}),
                    (this._description[a.SHOP_ITEM_ID.ASSORTED] = ['Набор "Ассорти"', 'Это всегда пригодится!']),
                    (this._description[a.SHOP_ITEM_ID.LEGENDARY] = ['Легендарный Набор', 'Самый лучший набор бустеров!']),
                    (this._description[a.SHOP_ITEM_ID.STRATEGIST] = ['Набор "Стратег"', 'Не забудь выбрать перед началом уровня!']),
                    (this._description[a.SHOP_ITEM_ID.NOVICE_SPEC] = ['Набор Новичка', 'То что нужно для хорошего старта!']),
                    (this._description[a.SHOP_ITEM_ID.NOVICE_SPEC_SALE] = ['Набор Новичка', 'То что нужно для хорошего старта! Ещё и дешевле, чем обычно!']),
                    (this._description[a.SHOP_ITEM_ID.MONEY_100] = ['100 Монет', 'За монеты можно продолжить игру или взять бустеры!']),
                    (this._description[a.SHOP_ITEM_ID.MONEY_600] = ['600 Монет', 'За монеты можно продолжить игру или взять бустеры!']),
                    (this._description[a.SHOP_ITEM_ID.MONEY_1300] = ['1300 Монет', 'За монеты можно продолжить игру или взять бустеры!']),
                    (this._description[a.SHOP_ITEM_ID.MONEY_3000] = ['3000 Монет', 'За монеты можно продолжить игру или взять бустеры!']),
                    (this._description[a.SHOP_ITEM_ID.MONEY_10000] = ['10000 Монет', 'За монеты можно продолжить игру или взять бустеры!']),
                    (this._description[a.SHOP_ITEM_ID.PIG] = ['Разбить Копилку', 'Проходи уровни и заполняй копилку!']),
                    (this._description[a.SHOP_ITEM_ID.BLACK_FRIDAY_191122] = ['Набор "Чёрная Пятница"', 'Специальный набор для любителей сэкономить!']));
            }),
            (c.prototype.prepareAds = function () {
                var a = this;
                ((this._adsReady = !1),
                    this._interInd && clearInterval(this._interInd),
                    this.once('loadAd', function (b) {
                        'ok' == b
                            ? ((a._adsReady = !0), a._interInd && (clearInterval(a._interInd), (a._interInd = null)))
                            : ((a._adsReady = !1),
                              (a._interInd = setInterval(function () {
                                  a.prepareAds();
                              }, 500)));
                    }),
                    FAPI.UI.loadAd());
            }),
            (c.prototype.setProgress = function (a) {}),
            (c.prototype.checkGroupMember = function (b, c) {
                var d = 'https://mnogoigrovka.ru/games/bubbles/ok/rest.php?api_server=' + b + '&application_key=' + c + '&format=json&method=group.getUserGroupsV2&uid=' + this._userId;
                return a.URLLoader.get(d);
            }),
            Object.defineProperty(c.prototype, 'id', {
                get: function () {
                    return 'OK';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'secretKey', {
                get: function () {
                    return this._secretKey;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'href', {
                get: function () {
                    return 'https://ok.ru/';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'mnogoigrovkaLink', {
                get: function () {
                    return 'group/' + this.GROUP_ID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'gameGroupLink', {
                get: function () {
                    return 'group/' + this.GAME_GROUP_ID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'currency', {
                get: function () {
                    return this._currencyVKName;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'currencyStyle', {
                get: function () {
                    return this._currencyVKStyle;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.localCurrencyToRub = function (a) {
                return 0.4166 * a;
            }),
            (c.prototype.joinGroup = function () {
                var a = this;
                return new Promise(function (b, c) {
                    (a.once('joinGroup', function (a, d) {
                        (console.log('joinGroup:', a, d), 'ok' == a ? b() : c());
                    }),
                        FAPI.UI.joinGroup(a.GAME_GROUP_ID, !0));
                });
            }),
            (c.prototype.share = function () {
                var b = this;
                return new Promise(function (c, d) {
                    var e = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL),
                        f = 2 == b.userGender ? 'прошла' : 'прошёл',
                        g = '💪 Я '.concat(f, ' ') + e + '-й уровень! Сможешь меня догнать?',
                        h = { media: [{ type: 'app', text: g, images: [{ url: 'https://mnogoigrovka.ru/games/bubbles/ok/banner.png', mark: 'image', title: '' }] }] };
                    (b.once('postMediatopic', function (a) {
                        'ok' == a ? c() : d();
                    }),
                        FAPI.UI.postMediatopic(h, !1));
                });
            }),
            (c.prototype.showLeaderboard = function (a) {}),
            (c.prototype.inviteFriend = function () {
                var a = this;
                return new Promise(function (b, c) {
                    var d = function (d, e, f) {
                        e.length > 0
                            ? (a.once('postMediatopic', function (a) {
                                  'ok' == a ? b({ data: { success: !0 } }) : c({ data: { success: !1 } });
                              }),
                              FAPI.UI.showInvite('Обязательно поиграй в эту игру!', void 0, e))
                            : c({ data: { success: !1 } });
                    };
                    FAPI.Client.call({ method: 'friends.get' }, d);
                });
            }),
            (c.prototype.getAppFriends = function () {
                return new Promise(function (a, b) {
                    var c = function (c, d, e) {
                        d.length > 0 ? a(d) : b();
                    };
                    FAPI.Client.call({ method: 'friends.getAppUsers' }, c);
                });
            }),
            (c.prototype.resolveLastAds = function () {
                this.emit(a.Social.EVENT_RESOLVE_ADS);
            }),
            (c.prototype.cancelAds = function (a) {
                a == this._adsCanceledCounter && this.removeAllListeners();
            }),
            (c.prototype.checkBrokenAds = function (b) {
                var c = this;
                return (
                    this.once(a.Social.EVENT_RESOLVE_ADS, function () {
                        (c.removeAllListeners(), b());
                    }),
                    this._adsCanceledCounter++
                );
            }),
            (c.prototype.showAds = function (b) {
                var c = this;
                return new Promise(function (d, e) {
                    var f = c.checkBrokenAds(d);
                    b == a.ADS_TYPE.INTERSTITIAL
                        ? (c.on('showAd', c.showAdsCallback, c),
                          c.once('showAdEnd', function (a) {
                              (c.cancelAds(f), 'ok' == a ? d() : e());
                          }),
                          FAPI.UI.showAd())
                        : c._adsReady
                          ? (c.once('showLoadedAd', function (a, b) {
                                'ok' == a ? (c.prepareAds(), c.cancelAds(f), d()) : (c.prepareAds(), c.cancelAds(f), e(b));
                            }),
                            FAPI.UI.showLoadedAd())
                          : (c.cancelAds(f), e());
                });
            }),
            (c.prototype.showAdsCallback = function (a, b) {
                if ('ok' == a)
                    switch (b) {
                        case 'ad_shown':
                            (this.emit('showAdEnd', 'ok'), this.off('showAd', this.showAdsCallback, this));
                            break;
                        case 'ready':
                        case 'ad_prepared':
                            this.emit('safeAdEnd');
                    }
                else (this.emit('showAdEnd', 'error'), this.off('showAd', this.showAdsCallback, this));
            }),
            (c.prototype.orderBox = function (b) {
                var c = this;
                return new Promise(function (d, e) {
                    (c.once('showPayment', function (a) {
                        'ok' == a ? d() : e();
                    }),
                        FAPI.UI.showPayment(c._description[b.id][0], c._description[b.id][1], String(b.id), a.EconomyOptions.SHOP_ITEM_PRICE[b.id], null, null, 'ok', 'true'));
                });
            }),
            (c.prototype.addToHomeScreen = function () {}),
            (c.prototype.getAvatars = function (a) {
                return new Promise(function (b, c) {
                    var d = function (d, e, f) {
                        if (e.length > 0) {
                            for (var g = [], h = 0; h <= a.length; h++)
                                for (var i = 0; i < e.length; i++)
                                    if (e[i].uid == a[h]) {
                                        (g.push(e[i].pic128x128), e.splice(i, 1));
                                        break;
                                    }
                            b(g);
                        } else c();
                    };
                    FAPI.Client.call({ method: 'users.getInfo', fields: 'pic128x128', uids: a.join(',') }, d);
                });
            }),
            c
        );
    })(a.Social);
    a.SocialOK = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var a = (null !== b && b.apply(this, arguments)) || this;
            return ((a.GROUP_ID = 146969311), (a.GAME_GROUP_ID = 209914844), (a.APP_ID = '7890960'), (a._currencyVKName = ['Голосов', 'Голос', 'Голоса']), (a._currencyVKStyle = { join: 'separated', fontSizePrice: 45, fontSizeName: 30 }), a);
        }
        return (
            __extends(c, b),
            Object.defineProperty(c.prototype, 'userID', {
                get: function () {
                    return this._userId;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userName', {
                get: function () {
                    return this._userName;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userFullName', {
                get: function () {
                    return this._userName + ' ' + this._userSurname;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userPhotoUrl', {
                get: function () {
                    return this._userPhotoUrl;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userGender', {
                get: function () {
                    return this._userGender;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userBirthYear', {
                get: function () {
                    return this._userBirthYear;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userСountry', {
                get: function () {
                    return this._userCountry;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userIsGroupMember', {
                get: function () {
                    return this._userIsGroupMember;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'platform', {
                get: function () {
                    return this._platform;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'referrer', {
                get: function () {
                    return this._referrer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.initialize = function (b) {
                var c = this;
                return (
                    (this.haveShare = !0),
                    (this.haveLeaderboard = 0 == a.Main.isWideMode),
                    (this.haveInviteFriend = !0),
                    (this.needAddToHomeScreen = !1),
                    (this.needMnogoigrovkaPopup = !0),
                    (this.haveCustomLevelLeaderboard = !0),
                    (this._DEVS = ['46297949', '237118739']),
                    (this._platform = a.Social.NONE),
                    (this._isWeb = !0),
                    (this._userIsGroupMember = !!b.isGroupMember),
                    (this._secretKey = b.auth_key),
                    (this._token = b.access_token),
                    (this._referrer = b.referrer),
                    new Promise(function (a, d) {
                        return __awaiter(c, void 0, void 0, function () {
                            var c,
                                d,
                                e = this;
                            return __generator(this, function (f) {
                                return (
                                    vkBridge.sendPromise('VKWebAppInit', {}),
                                    (this._platform = b.platform),
                                    'html5_android' == b.platform || 'html5_ios' == b.platform ? (this._isWeb = !1) : (this._isWeb = !0),
                                    (c = b.info[0]),
                                    (this._userId = String(c.id)),
                                    (this._userName = c.first_name),
                                    (this._userSurname = c.last_name),
                                    (this._userPhotoUrl = c.photo_200),
                                    (this._userGender = Number(c.sex)),
                                    (this._userCountry = c.country ? c.country.title : 'none'),
                                    1 == this._userGender ? (this._userGender = 2) : 2 == this._userGender && (this._userGender = 1),
                                    c.bdate && ((d = c.bdate.split('.')), 3 == d.length && (this._userBirthYear = Number(d[2]))),
                                    (this.needAddToHomeScreen = !1),
                                    vkBridge.sendPromise('VKWebAppAddToHomeScreenInfo').then(function (a) {
                                        a.is_feature_supported && (e.needAddToHomeScreen = 1 != a.is_added_to_home_screen);
                                    }),
                                    a(),
                                    [2]
                                );
                            });
                        });
                    })
                );
            }),
            (c.prototype.setProgress = function (b) {
                var c = b.type;
                // a.URLLoader.get(a.Main.serverName + 'vk/addAppEvent.php?user_id=' + this.userID + '&activity_id=' + c + '&value=' + b.value);
            }),
            Object.defineProperty(c.prototype, 'id', {
                get: function () {
                    return 'VK';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'secretKey', {
                get: function () {
                    return this._secretKey;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'isClient', {
                get: function () {
                    return !this._isWeb;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'href', {
                get: function () {
                    return IS_DESKTOP ? 'https://vk.com/' : this.isClient && IS_IOS ? 'vk://vk.com/' : (this.isClient ? 'vk' : 'https') + '://vk.com/';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'mnogoigrovkaLink', {
                get: function () {
                    return 'club' + this.GROUP_ID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'gameGroupLink', {
                get: function () {
                    return 'club' + this.GAME_GROUP_ID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'currency', {
                get: function () {
                    return this._currencyVKName;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'currencyStyle', {
                get: function () {
                    return this._currencyVKStyle;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.localCurrencyToRub = function (a) {
                return 2.91 * a;
            }),
            (c.prototype.joinGroup = function () {
                var a = this;
                return new Promise(function (b, c) {
                    vkBridge
                        .sendPromise('VKWebAppJoinGroup', { group_id: a.GROUP_ID })
                        .then(function (a) {
                            1 == a.result ? b() : c();
                        })
                        .catch(function () {
                            c();
                        });
                });
            }),
            (c.prototype.share = function () {
                var b = this;
                return new Promise(function (c, d) {
                    var e = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL),
                        f = '💪 Я прошёл ' + e + '-й уровень!';
                    vkBridge
                        .sendPromise('VKWebAppShowWallPostBox', { message: f + '\n\n[vk.com/mnogoigrovka|Многоигровка] - заходи, если хочешь больше увлекательных игр!', attachments: 'photo-209914844_457239019,https://vk.com/app' + b.APP_ID })
                        .then(function (a) {
                            a.data && null != a.data.post_id ? c() : d();
                        })
                        .catch(function () {
                            d();
                        });
                });
            }),
            (c.prototype.showLeaderboard = function (a) {
                return vkBridge.sendPromise('VKWebAppShowLeaderBoardBox', { user_result: a.value });
            }),
            (c.prototype.inviteFriend = function () {
                return new Promise(function (a, b) {
                    vkBridge
                        .sendPromise('VKWebAppShowInviteBox', {})
                        .then(function (c) {
                            1 == c.success ? a(c) : b(c);
                        })
                        .catch(function () {
                            b({ data: { success: !1 } });
                        });
                });
            }),
            (c.prototype.checkAds = function (a) {
                return new Promise(function (b, c) {
                    vkBridge
                        .sendPromise('VKWebAppCheckNativeAds', { ad_format: a, use_waterfall: !0 })
                        .then(function (a) {
                            1 == a.result ? b(!0) : c(!1);
                        })
                        .catch(function (a) {
                            c(!1);
                        });
                });
            }),
            (c.prototype.showAds = function (a) {
                return new Promise(function (b, c) {
                    vkBridge
                        .sendPromise('VKWebAppShowNativeAds', { ad_format: a, use_waterfall: !0 })
                        .then(function (a) {
                            1 == a.result ? b() : c();
                        })
                        .catch(function (a) {
                            c();
                        });
                });
            }),
            (c.prototype.orderBox = function (a) {
                return new Promise(function (b, c) {
                    vkBridge
                        .sendPromise('VKWebAppShowOrderBox', { type: 'item', item: String(a.id) })
                        .then(function (a) {
                            1 == a.success ? b() : c();
                        })
                        .catch(function (a) {
                            c();
                        });
                });
            }),
            (c.prototype.addToHomeScreen = function () {
                return new Promise(function (a, b) {
                    vkBridge
                        .sendPromise('VKWebAppAddToHomeScreen')
                        .then(function (c) {
                            1 == c.result ? a() : b();
                        })
                        .catch(function () {
                            b();
                        });
                });
            }),
            (c.prototype.getAvatars = function (a) {
                var b = this;
                return new Promise(function (c, d) {
                    vkBridge
                        .sendPromise('VKWebAppCallAPIMethod', { method: 'users.get', params: { user_ids: a.join(','), fields: 'photo_200', v: '5.131', access_token: b._token } })
                        .then(function (a) {
                            for (var b = [], d = 0; d < a.response.length; d++) b.push(a.response[d].photo_200);
                            c(b);
                        })
                        .catch(function (a) {
                            d(a);
                        });
                });
            }),
            c
        );
    })(a.Social);
    a.SocialVK = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var a = (null !== b && b.apply(this, arguments)) || this;
            return ((a.GROUP_ID = 146969311), a);
        }
        return (
            __extends(c, b),
            Object.defineProperty(c.prototype, 'userID', {
                get: function () {
                    return this._userId;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userName', {
                get: function () {
                    return this._userName;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userFullName', {
                get: function () {
                    return this._userName + ' ' + this._userSurname;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userPhotoUrl', {
                get: function () {
                    return this._userPhotoUrl;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userGender', {
                get: function () {
                    return this._userGender;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userBirthYear', {
                get: function () {
                    return this._userBirthYear;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userСountry', {
                get: function () {
                    return this._userCountry;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userIsGroupMember', {
                get: function () {
                    return this._userIsGroupMember;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'platform', {
                get: function () {
                    return this._platform;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'referrer', {
                get: function () {
                    return this._referrer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.initialize = function (b) {
                var c = this;
                return (
                    (this.haveShare = !1),
                    (this.haveLeaderboard = !1),
                    (this.haveInviteFriend = !1),
                    (this.needAddToHomeScreen = !1),
                    (this.startMoney = 200),
                    (this._DEVS = []),
                    (this._platform = a.Social.NONE),
                    (this._userIsGroupMember = !1),
                    (this._secretKey = a.Social.NONE),
                    (this._referrer = a.Social.NONE),
                    (this._api = b.api),
                    this.loadDescriptions(),
                    new Promise(function (d, e) {
                        return __awaiter(c, void 0, void 0, function () {
                            var c, e;
                            return __generator(this, function (f) {
                                return ((this._platform = b.platform), (c = b.info), (e = a.SOCIAL_GENDER.NONE), 'male' == c.sex ? (e = a.SOCIAL_GENDER.MEN) : 'male' == c.sex && (e = a.SOCIAL_GENDER.WOMEN), (this._userId = String(c.uid)), (this._userName = c.nick), (this._userSurname = ''), (this._userPhotoUrl = c.avatar), (this._userGender = e), (this._userCountry = 'none'), c.birthyear && (this._userBirthYear = Number(c.birthyear)), d(), [2]);
                            });
                        });
                    })
                );
            }),
            (c.prototype.loadDescriptions = function () {
                ((this._description = {}), (this._description[a.SHOP_ITEM_ID.ASSORTED] = 'Набор "Ассорти"'), (this._description[a.SHOP_ITEM_ID.LEGENDARY] = 'Легендарный Набор'), (this._description[a.SHOP_ITEM_ID.STRATEGIST] = 'Набор "Стратег"'), (this._description[a.SHOP_ITEM_ID.NOVICE_SPEC] = 'Набор Новичка'), (this._description[a.SHOP_ITEM_ID.NOVICE_SPEC_SALE] = 'Набор Новичка'), (this._description[a.SHOP_ITEM_ID.MONEY_100] = '100 Монет'), (this._description[a.SHOP_ITEM_ID.MONEY_600] = '600 Монет'), (this._description[a.SHOP_ITEM_ID.MONEY_1300] = '1300 Монет'), (this._description[a.SHOP_ITEM_ID.MONEY_3000] = '3000 Монет'), (this._description[a.SHOP_ITEM_ID.MONEY_10000] = '10000 Монет'), (this._description[a.SHOP_ITEM_ID.PIG] = 'Разбить Копилку'), (this._description[a.SHOP_ITEM_ID.BLACK_FRIDAY_191122] = 'Набор "Чёрная Пятница"'));
            }),
            (c.prototype.setProgress = function (a) {}),
            Object.defineProperty(c.prototype, 'id', {
                get: function () {
                    return 'VKP';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'secretKey', {
                get: function () {
                    return this._secretKey;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'isClient', {
                get: function () {
                    return !1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'href', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'mnogoigrovkaLink', {
                get: function () {
                    return 'https://vk.com/club' + this.GROUP_ID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'gameGroupLink', {
                get: function () {
                    return 'https://community.my.games/community/game/bubbles/';
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.showAds = function (a) {
                var b = this;
                return (
                    (this._showedAds = null),
                    new Promise(function (a, c) {
                        b._api.showAds();
                        var d = function () {
                            if (b._showedAds) {
                                if ('adCompleted' == b._showedAds.type) a();
                                else {
                                    var e = null;
                                    if (b._showedAds.code)
                                        switch (b._showedAds.code) {
                                            case 'AdSkip':
                                                e = 'skip';
                                                break;
                                            case 'AdblockDetectedAdError':
                                                e = 'adBlock';
                                        }
                                    c(e);
                                }
                                return void (b._showedAds = null);
                            }
                            setTimeout(function () {
                                d();
                            }, 250);
                        };
                        d();
                    })
                );
            }),
            (c.prototype.setAdsStatus = function (a) {
                this._showedAds = a;
            }),
            (c.prototype.orderBox = function (b) {
                var c = this;
                return (
                    (this._orderBoxStatus = null),
                    new Promise(function (d, e) {
                        c._api.paymentFrame({ scenario: 'item', merchant_param: { amount: a.EconomyOptions.SHOP_ITEM_PRICE[b.id], currency: 'RUB', description: c._description[b.id], item_id: String(b.id) } });
                        var f = function () {
                            return c._orderBoxStatus && c._orderBoxStatus.close
                                ? (1 == c._orderBoxStatus.ok ? d() : e(), void (c._orderBoxStatus = null))
                                : void setTimeout(function () {
                                      f();
                                  }, 250);
                        };
                        f();
                    })
                );
            }),
            (c.prototype.setOrderBoxStatus = function () {
                this._orderBoxStatus ? (this._orderBoxStatus.ok = !0) : (this._orderBoxStatus = { ok: !0 });
            }),
            (c.prototype.closeOrderBox = function () {
                this._orderBoxStatus ? (this._orderBoxStatus.close = !0) : (this._orderBoxStatus = { close: !0 });
            }),
            c
        );
    })(a.Social);
    a.SocialVKP = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            return (null !== b && b.apply(this, arguments)) || this;
        }
        return (
            __extends(c, b),
            Object.defineProperty(c.prototype, 'userID', {
                get: function () {
                    return this._userId;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userName', {
                get: function () {
                    return this._userName;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userFullName', {
                get: function () {
                    return this._userName + ' ' + this._userSurname;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userPhotoUrl', {
                get: function () {
                    return this._userPhotoUrl;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userGender', {
                get: function () {
                    return this._userGender;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userBirthYear', {
                get: function () {
                    return this._userBirthYear;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userСountry', {
                get: function () {
                    return this._userCountry;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'userIsGroupMember', {
                get: function () {
                    return this._userIsGroupMember;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'platform', {
                get: function () {
                    return this._platform;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'referrer', {
                get: function () {
                    return this._referrer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.initialize = function (b) {
                var c = this;
                return (
                    (this.haveShare = !1),
                    (this.haveLeaderboard = !1),
                    (this.haveInviteFriend = !1),
                    (this.needAddToHomeScreen = !1),
                    (this.startMoney = 200),
                    (this._DEVS = []),
                    (this._platform = a.Social.NONE),
                    (this._userIsGroupMember = !1),
                    (this._secretKey = a.Social.NONE),
                    (this._referrer = a.Social.NONE),
                    new Promise(function (b, d) {
                        return __awaiter(c, void 0, void 0, function () {
                            var c = this;
                            return __generator(this, function (e) {
                                return (
                                    YaGames.init({ orientation: { value: 'portrait', lock: !0 } }).then(function (e) {
                                        ((c._api = e),
                                            (c._platform = e.deviceInfo.type),
                                            (a.Main.isWideMode = 'desktop' == c._platform),
                                            e
                                                .getPlayer({ signed: !0, scopes: !0 })
                                                .then(function (d) {
                                                    ((c.player = d), (c._secretKey = d.signature), (c._userId = String(d.getUniqueID())), (c._userName = d.getName()), (c._userSurname = ''), (c._userPhotoUrl = d.getPhoto('medium')), (c._userGender = a.SOCIAL_GENDER.NONE), (c._userCountry = 'none'), a.MI.get().showAds(a.ADS_TYPE.INTERSTITIAL, a.STATS_AD_PLACEMENT.START_GAME), b());
                                                })
                                                .catch(function (a) {
                                                    d();
                                                }),
                                            c._api.getPayments({ signed: !0 }).then(function (a) {
                                                c._payments = a;
                                            }));
                                    }),
                                    [2]
                                );
                            });
                        });
                    })
                );
            }),
            (c.prototype.setProgress = function (a) {}),
            (c.prototype.showLeaderboard = function (a) {}),
            Object.defineProperty(c.prototype, 'id', {
                get: function () {
                    return 'YA';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'secretKey', {
                get: function () {
                    return this._secretKey;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'isClient', {
                get: function () {
                    return !1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'href', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'mnogoigrovkaLink', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'gameGroupLink', {
                get: function () {
                    return '';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'currency', {
                get: function () {
                    return a.StringManager.array('YAN');
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.prototype.showAds = function (b) {
                var c = this;
                return (
                    KY.Game.instance && (KY.Game.instance.masterVolume = 0),
                    new Promise(function (d, e) {
                        b == a.ADS_TYPE.INTERSTITIAL
                            ? c._api.adv.showFullscreenAdv({
                                  callbacks: {
                                      onClose: function (a) {
                                          1 == a ? (KY.Game.instance && (KY.Game.instance.masterVolume = 1), d()) : (KY.Game.instance && (KY.Game.instance.masterVolume = 1), e());
                                      },
                                  },
                              })
                            : c._api.adv.showRewardedVideo({
                                  callbacks: {
                                      onRewarded: function () {
                                          (KY.Game.instance && (KY.Game.instance.masterVolume = 1), d());
                                      },
                                      onClose: function () {
                                          KY.Game.instance && (KY.Game.instance.masterVolume = 1);
                                      },
                                      onError: function (a) {
                                          (KY.Game.instance && (KY.Game.instance.masterVolume = 1), e());
                                      },
                                  },
                              });
                    })
                );
            }),
            (c.prototype.orderBox = function (b) {
                var c = this;
                return new Promise(function (d, e) {
                    c._payments
                        ? c._payments
                              .purchase({ id: String(b.id) })
                              .then(function (b) {
                                  var f = a.Main.serverName + 'ya/payments.php?sig=' + encodeURIComponent(b.signature) + '&uid=' + encodeURIComponent(c.userID);
                                  a.URLLoader.get(f)
                                      .then(function (a) {
                                          1 == Number(a) ? (c._payments.consumePurchase(b.purchaseToken), d()) : e();
                                      })
                                      .catch(function (a) {
                                          e();
                                      });
                              })
                              .catch(function (a) {
                                  e();
                              })
                        : e();
                });
            }),
            c
        );
    })(a.Social);
    a.SocialYA = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function d(e, f, g, h) {
            (void 0 === g && (g = c.CENTER), void 0 === h && (h = 0));
            var i = b.call(this) || this;
            return ((i.maxWidth = 0), (i._anchor = g), d.DEFAULT_STYLE || (d.DEFAULT_STYLE = { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'left' }), (i._text = new PIXI.Text('', f ? f : d.DEFAULT_STYLE)), i._text.anchor.set(0, 0.5), (i._text.y = 2), (i._text.alpha = 0.9), (i._icon = new KY.Sprite(0, 0, 'ui0', 'popups/coinIcon')), (i.maxWidth = h), (i.text = e), (i.pause = !1), (i._property = a.USER_PROPERTY.MONEY), i.addChild(i._icon), i.addChild(i._text), i);
        }
        return (
            __extends(d, b),
            (d.prototype.setup = function (b, c) {
                (b && (this._icon.texture = b), (this._property = c), c && (this.text = a.UserGameData.getProperty(c)), this.reposition());
            }),
            (d.prototype.reposition = function () {
                var a = 28;
                ((this._icon.x = 0), (this._text.x = 0.5 * this._icon.width + a));
                var b = 0.5 * this._icon.width + this._text.width + a;
                switch (this._anchor) {
                    case c.CENTER:
                        b = 0.5 * -this._icon.width + 0.5 * (this._icon.width + this._text.x + this._text.width);
                        break;
                    case c.RIGHT:
                        break;
                    case c.LEFT:
                        b = 0.5 * -this._icon.width;
                }
                ((this._icon.x -= b), (this._text.x -= b));
            }),
            (d.prototype.refresh = function () {
                ((this._value = a.UserGameData.getProperty(this._property)), (this.text = this._value));
            }),
            (d.prototype.update = function () {
                if (!this.pause && null != this._property) {
                    var b = a.UserGameData.getProperty(this._property);
                    this._value != b && ((this._value += 0.25 * (b - this._value)), Math.abs(b - this._value) < 1 && (this._value = b), (this.text = this._value));
                }
            }),
            (d.prototype.iconOff = function () {
                this._icon.alpha = 0;
            }),
            (d.prototype.destroy = function () {
                ((this.auto = !1), b.prototype.destroy.call(this));
            }),
            Object.defineProperty(d.prototype, 'text', {
                set: function (b) {
                    ((this._value = b), (this._text.text = String(b >> 0)), this.reposition(), this.maxWidth && a.Utils.scaleToFit(this._text, this.maxWidth));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'auto', {
                set: function (a) {
                    ((this.pause = !1), a ? Stage.on(KY.GameEvent.ENTER_FRAME, this.update, this) : Stage.off(KY.GameEvent.ENTER_FRAME, this.update, this));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'fontSize', {
                set: function (a) {
                    this._text.style.fontSize = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            d
        );
    })(PIXI.Container);
    a.CoinText = b;
    var c;
    !(function (a) {
        ((a[(a.CENTER = 0)] = 'CENTER'), (a[(a.RIGHT = 1)] = 'RIGHT'), (a[(a.LEFT = 2)] = 'LEFT'));
    })((c = a.CoinTextAnchor || (a.CoinTextAnchor = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (a) {
        function b(b, c, d, e, f, g) {
            void 0 === g && (g = !1);
            var h = a.call(this) || this;
            ((h.OFFSET = 0), (h._sprites = []));
            var i = PIXI.Sprite.from(b.getImage(e, f));
            ((h._partWidth = i.width), (h._partsCountX = Math.max(2, Math.ceil(c / h._partWidth)) + 1), (h._partJumpX = h._partsCountX * h._partWidth - h._partsCountX + h.OFFSET), (h._partHeight = i.height), (h._partsCountY = Math.max(2, Math.ceil(d / h._partHeight)) + 1), (h._partJumpY = h._partsCountY * h._partHeight - h._partsCountY + h.OFFSET));
            for (var j = 0; j < h._partsCountX; j++) {
                h._sprites.push([]);
                for (var k = 0; k < h._partsCountY; k++) ((i = PIXI.Sprite.from(b.getImage(e, f))), g && i.scale.set(1.5), (i.x = j * h._partWidth - h.OFFSET), (i.y = k * h._partHeight - h.OFFSET), h.addChild(i), h._sprites[j].push(i));
            }
            return h;
        }
        return (
            __extends(b, a),
            (b.prototype.speedUpdate = function (a, b) {
                for (var c = 0; c < this._partsCountX; c++)
                    for (var d = 0; d < this._partsCountY; d++)
                        if (((this._sprites[c][d].x -= a), (this._sprites[c][d].y -= b), this._sprites[c][d].x < -this._partWidth && (this._sprites[c][d].x += this._partJumpX), this._sprites[c][d].y < -this._partHeight)) {
                            var e = 0 == d ? this._partsCountY - 1 : d - 1;
                            this._sprites[c][d].y = this._sprites[c][e].y + this._sprites[c][e].height - 1;
                        }
            }),
            Object.defineProperty(b.prototype, 'realWidth', {
                get: function () {
                    return this._partWidth - this._partsCountX + this.OFFSET;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'realHeight', {
                get: function () {
                    return this._sprites && this._sprites.length ? this._sprites[0][0].height : 0;
                },
                enumerable: !1,
                configurable: !0,
            }),
            b
        );
    })(PIXI.Container);
    a.ParallaxSprite = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c(a, d) {
            var e = b.call(this) || this;
            return (
                (e._id = 0),
                (e.soundFileDown = 'mi_buttonDown'),
                (e.soundVolume = 0.8),
                (e._id = c.ID++),
                (e.anchor.x = e.anchor.y = 0.5),
                (e.x = 0),
                (e.y = 0),
                (e._game = KY.Game.instance),
                (e._key = a),
                (e._isDown = !1),
                (e._isOver = !1),
                (e._currentFrame = ''),
                (e._deltaScale = 1 == d.length ? 0.05 : 0),
                (e._defaultScale = 1),
                e.replaceFrames(d),
                (e.enabled = !0),
                (e._inverse = !1),
                e.on(
                    'pointerdown',
                    function () {
                        return (e.__onDown(), !1);
                    },
                    e
                ),
                e.on(
                    'pointerup',
                    function () {
                        return (e.__onUp(!1), !1);
                    },
                    e
                ),
                e.on(
                    'pointerover',
                    function () {
                        e.__onHover();
                    },
                    e
                ),
                e.on(
                    'pointerout',
                    function () {
                        e.__onOut();
                    },
                    e
                ),
                e.on(
                    'pointerupoutside',
                    function () {
                        e.__onUp(!0);
                    },
                    e
                ),
                e
            );
        }
        return (
            __extends(c, b),
            (c.prototype.setAnimationScale = function (a, b) {
                (void 0 === a && (a = 0), void 0 === b && (b = 1), (this._deltaScale = a), (this._defaultScale = b), this.scale.set((this._inverse ? -1 : 1) * b, b));
            }),
            (c.prototype.inverse = function () {
                ((this._inverse = !0), (this.scale.x *= -1));
            }),
            (c.prototype.replaceFrames = function (a) {
                var b = null,
                    c = null,
                    d = null;
                (a.length > 0 && ((b = a[0]), a.length > 1 ? ((c = a[1]), a.length > 2 ? ((c = a[1]), (d = a[2])) : ((c = a[0]), (d = a[1]))) : ((c = a[0]), (d = a[0]))), (this._frames = [b, c, d]), this.setFrame(b));
            }),
            (c.prototype.setTextureCache = function (a) {
                return this._game.getImage(this._key, a);
            }),
            (c.prototype.setFrame = function (a) {
                this._currentFrame != a && (a instanceof PIXI.Texture ? (this.texture = a) : (this.texture = this.setTextureCache(a)), (this._currentFrame = a));
            }),
            (c.prototype.__onDown = function () {
                ((this._isDown = !0), this.scale.set((this._inverse ? -1 : 1) * (this._defaultScale - this._deltaScale), this._defaultScale - this._deltaScale), (c.CLICKED[this._id] = !0), this.setFrame(this._frames[2]), this.onDown && this.onDown.call(this.onDown_cntx, this), this.soundFileDown && '' != this.soundFileDown && a.SoundsManager.buttonClick());
            }),
            (c.prototype.__onUp = function (a) {
                this._isDown && (delete c.CLICKED[this._id], this.scale.set((this._inverse ? -1 : 1) * this._defaultScale, this._defaultScale), this.setFrame(this._isOver ? this._frames[1] : this._frames[0]), (this._isDown = !1), !a && this.onClick && this.onClick.call(this.onClick_cntx, this), this.onUp && this.onUp.call(this.onUp_cntx, this));
            }),
            (c.prototype.addOnDown = function (a, b) {
                ((this.onDown = a), (this.onDown_cntx = b));
            }),
            (c.prototype.addOnClick = function (a, b) {
                ((this.onClick = a), (this.onClick_cntx = b));
            }),
            (c.prototype.addOnUp = function (a, b) {
                ((this.onUp = a), (this.onUp_cntx = b));
            }),
            (c.prototype.actionClick = function (a) {
                this.onClick && this.onClick.call(this.onClick_cntx, this, a);
            }),
            (c.prototype.__onHover = function () {
                ((this._isOver = !0), 0 == this._isDown && this.setFrame(this._frames[1]), this.onOver && this.onOver());
            }),
            (c.prototype.__onOut = function () {
                ((this._isOver = !1), 0 == this._isDown && this.setFrame(this._frames[0]), this.onOut && this.onOut());
            }),
            (c.prototype.setPosition = function (a, b) {
                ((b = null == b ? this.y : b), (this.x = a), (this.y = b));
            }),
            (c.prototype.destroy = function (a) {
                (delete c.CLICKED[this._id], b.prototype.destroy.call(this, a));
            }),
            Object.defineProperty(c.prototype, 'enabled', {
                get: function () {
                    return this.interactive;
                },
                set: function (a) {
                    ((this.interactive = a), this.scale.set((this._inverse ? -1 : 1) * this._defaultScale, this._defaultScale), a || delete c.CLICKED[this._id]);
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.checkClickedButton = function () {
                for (var a in c.CLICKED) if (c.CLICKED[a]) return !0;
                return !1;
            }),
            (c.clearClickedButton = function () {
                c.CLICKED = {};
            }),
            (c.CLICKED = {}),
            (c.ID = 0),
            c
        );
    })(PIXI.Sprite);
    a.PXButton = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b() {}
        return (
            (b.formatNumber = function (c, d) {
                if ((void 0 === d && (d = 2), (c <<= 0), c < 1e3)) return c + '';
                var e = Math.pow(10, d),
                    f = b.int(((c + '').length - 1) / 3),
                    g = a.StringManager.array('NUMBER'),
                    h = g[f - 1] ? g[f - 1] : '?';
                return ((c = b.int((c / Math.pow(10, 3 * f)) * e) / e), c + ' ' + h);
            }),
            (b.scaleToFit = function (a, b) {
                a.scale.set(1);
                var c = a.width / b;
                c > 1 && a.scale.set(1 / c);
            }),
            (b.formatTime = function (d, e, f) {
                (void 0 === e && (e = c.HH_MM_SS), void 0 === f && (f = ':'));
                var g = b.uint(d / 36e5);
                d -= 60 * g * 60 * 1e3;
                var h = b.uint(d / 6e4);
                d -= 60 * h * 1e3;
                var i = b.uint(d / 1e3),
                    j = '';
                if (e == c.DAYS_HOURS && g >= 24) {
                    var k = b.uint(g / 24);
                    return ((g %= 24), (j = 0 != g ? k + a.StringManager.get('TXT_DAYS') + ' ' + g + a.StringManager.get('TXT_HOUR') : 0 != h ? k + a.StringManager.get('TXT_DAYS') + ' ' + h + a.StringManager.get('TXT_MINUTE') : k + a.StringManager.get('TXT_DAYS')));
                }
                return ((e = c.HH_MM_SS), (e == c.HH_MM_SS || (0 == g && e == c.HH_MM_or_MM_SS)) && ((j += i), i < 10 && (j = '0' + j)), (j = h + ('' == j ? '' : f) + j), h < 10 && (j = '0' + j), g > 0 && (j = g + f + j), j);
            }),
            (b.declension = function (b, c) {
                return a.Locales.isRus ? ((b %= 100), b > 20 && (b %= 10), 0 == b || b > 4 ? c[0] : 1 == b ? c[1] : c[2]) : 1 == b ? c[1] : c[2];
            }),
            (b.is = function (a, b) {
                return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
            }),
            (b.objectDiff = function (a, b) {
                var c = this,
                    d = void 0;
                if (!this.is(a, b))
                    return b && 'object' == typeof b
                        ? (Object.keys(a || {})
                              .concat(Object.keys(b || {}))
                              .forEach(function (e) {
                                  (b[e] === a[e] || c.is(a[e], b[e]) || (d || (d = {}), (d[e] = b[e])), 'object' == typeof b[e] && 'object' == typeof a[e] && null != b[e] && null != a[e] && ((d[e] = c.objectDiff(a[e], b[e])), null == d[e] && delete d[e]));
                              }),
                          d)
                        : b;
            }),
            (b.valuesObject = function (a) {
                return Object.keys(a).map(function (b) {
                    return a[b];
                });
            }),
            (b.cloneObject = function (a, b) {
                if ((void 0 === b && (b = null), null == a || 'object' != typeof a)) return a;
                var c = b || {};
                for (var d in a) a.hasOwnProperty(d) && ('object' == typeof a[d] ? (c[d] = this.cloneObject(a[d], b ? c[d] : void 0)) : (c[d] = a[d]));
                return c;
            }),
            (b.findGetParameter = function (a) {
                for (var b = null, c = [], d = window.parent ? window.parent : window, e = d.location.search.substring(1).split('&'), f = 0; f < e.length; f++) ((c = e[f].split('=')), c[0] === a && (b = decodeURIComponent(c[1])));
                return b;
            }),
            (b.equal = function (a, b, c) {
                return (void 0 === c && (c = 1e-4), Math.abs(a - b) <= c);
            }),
            (b.shuffle = function (a, b) {
                var c,
                    d,
                    e = a.length - 1;
                if (!(e < 2)) for (; 0 != e; ) ((d = b ? b.rangeInt(0, e) : Math.floor(Math.random() * (e + 1))), e--, (c = [a[d], a[e]]), (a[e] = c[0]), (a[d] = c[1]));
            }),
            (b.uint = function (a) {
                return a >>> 0;
            }),
            (b.int = function (a) {
                return a >> 0;
            }),
            Object.defineProperty(b, 'sign', {
                get: function () {
                    return Math.random() < 0.5 ? -1 : 1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.debugMovement = function (a) {
                var b = this;
                ((a.interactive = !0),
                    a.on('pointerdown', function (b) {
                        ((a.__x = b.data.global.x * KY.Game.instance.actionRatio), (a.__y = b.data.global.y * KY.Game.instance.actionRatio), (a.__down = !0));
                    }),
                    a.on('pointerup', function (c) {
                        ((a.__down = !1), console.log('UP:', b.int(a.x), b.int(a.y)));
                    }),
                    a.on('pointerupoutside', function (c) {
                        ((a.__down = !1), console.log('UP:', b.int(a.x), b.int(a.y)));
                    }),
                    a.on('pointermove', function (c) {
                        if (a.__down) {
                            var d = c.data.global.x * KY.Game.instance.actionRatio,
                                e = c.data.global.y * KY.Game.instance.actionRatio,
                                f = d - a.__x,
                                g = e - a.__y;
                            ((a.__x = d), (a.__y = e), (a.x += f), (a.y += g), console.log('MOVE:', b.int(a.x), b.int(a.y)));
                        }
                    }));
            }),
            (b.INIFINITY_CHAR = '∞'),
            (b.MAX_VALUE = 2147483647),
            b
        );
    })();
    ((a.Utils = b),
        (a.delay = function (a) {
            return new Promise(function (b) {
                setInterval(b, a);
            });
        }));
    var c;
    !(function (a) {
        ((a.HH_MM_SS = 'HH_MM_SS'), (a.HH_MM_or_MM_SS = 'HH_MM_or_MM_SS'), (a.DAYS_HOURS = 'DAYS_HOURS'));
    })((c = a.TIME_FORMAT || (a.TIME_FORMAT = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b(a) {
            (void 0 === a && (a = 0), (this.mti = b.N + 1), (this.last = -1), a || (a = Date.now()), (this.mt = new Array(b.N)), this.init_genrand(a), (this._seed = a), console.log('mtseed:', a));
        }
        return (
            (b.prototype.setSeed = function (a) {
                ((this._seed = a), this.init_genrand(a));
            }),
            (b.prototype.getSeed = function () {
                return this._seed;
            }),
            (b.prototype.nextInt = function (a) {
                var b = this.genrand_int32();
                return (2147483647 & b) % a;
            }),
            (b.prototype.nextFloat = function () {
                return this.next(24) / 16777216;
            }),
            (b.prototype.nextDouble = function () {
                return this.next(24) / 16777216;
            }),
            (b.prototype.next = function (b) {
                return ((this.last = this.genrand_int32()), this.last & ((a.Utils.uint(1) << b) - a.Utils.uint(1)));
            }),
            (b.prototype.init_genrand = function (c) {
                for (this.mt[0] = a.Utils.uint(c), this.mti = 1; this.mti < b.N; this.mti++) {
                    var d = a.Utils.uint(this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30)),
                        e = a.Utils.uint(1289 * d);
                    ((e = a.Utils.uint(1406077 * e)), (e = a.Utils.uint(e + this.mti)), (this.mt[this.mti] = e));
                }
            }),
            (b.prototype.genrand_int32 = function () {
                var c;
                if (this.mti >= b.N) {
                    var d = 0;
                    for (this.mti == b.N + 1 && this.init_genrand(5489), d = 0; d < b.N - b.M; d++) ((c = (this.mt[d] & b.UPPER_MASK) | (this.mt[d + 1] & b.LOWER_MASK)), (this.mt[d] = this.mt[d + b.M] ^ (c >>> 1) ^ b.mag01[a.Utils.uint(1 & c)]));
                    for (; d < b.N - 1; d++) ((c = (this.mt[d] & b.UPPER_MASK) | (this.mt[d + 1] & b.LOWER_MASK)), (this.mt[d] = this.mt[d + (b.M - b.N)] ^ (c >>> 1) ^ b.mag01[a.Utils.uint(1 & c)]));
                    ((c = (this.mt[b.N - 1] & b.UPPER_MASK) | (this.mt[0] & b.LOWER_MASK)), (this.mt[b.N - 1] = this.mt[b.M - 1] ^ (c >>> 1) ^ b.mag01[a.Utils.uint(1 & c)]), (this.mti = 0));
                }
                return ((c = this.mt[this.mti++]), (c ^= c >>> 11), (c ^= (c << 7) & 2636928640), (c ^= (c << 15) & 4022730752), (c ^= c >>> 18), a.Utils.uint(c));
            }),
            (b.N = 624),
            (b.M = 397),
            (b.MATRIX_A = 2567483615),
            (b.UPPER_MASK = 2147483648),
            (b.LOWER_MASK = 2147483647),
            (b.mag01 = [a.Utils.uint(0), a.Utils.uint(b.MATRIX_A)]),
            b
        );
    })();
    a.MtRandom = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function a(a) {
            ((this._duration = a), (this._started = !1));
        }
        return (
            (a.prototype.start = function () {
                return ((this._curTime = 0), (this._started = !0), this);
            }),
            (a.prototype.addOnComplete = function (a, b) {
                return ((this._onComplete = a), (this._context = b), this);
            }),
            (a.prototype.update = function (a) {
                return !!this._started && ((this._curTime += a), this._curTime >= this._duration && (this._onComplete && this._onComplete.call(this._context), (this._started = !1), !0));
            }),
            Object.defineProperty(a.prototype, 'isStarted', {
                get: function () {
                    return this._started;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (a.TIME_ONE_FPS = 0.01667),
            a
        );
    })();
    a.UpdateTimer = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b(a, b) {
            (void 0 === a && (a = 0), void 0 === b && (b = 0), (this.x = a), (this.y = b));
        }
        return (
            (b.prototype.classify = function (a, b) {
                return (b.x - a.x) * (this.y - a.y) - (this.x - a.x) * (b.y - a.y);
            }),
            (b.prototype.rotate = function (a, b, c) {
                (void 0 === b && (b = 0), void 0 === c && (c = 0));
                var d = this.x;
                return ((this.x = (this.x - b) * Math.cos(a) - (this.y - c) * Math.sin(a) + b), (this.y = (this.y - c) * Math.cos(a) + (d - b) * Math.sin(a) + c), this);
            }),
            (b.prototype.slope = function (a) {
                return (void 0 === a && (a = null), null != a ? Math.atan2(a.y - this.y, a.x - this.x) : Math.atan2(this.y, this.x));
            }),
            (b.distance = function (a, b, c, d) {
                return Math.sqrt(this.distance2(a, b, c, d));
            }),
            (b.distance2 = function (a, b, c, d) {
                var e = a - c,
                    f = b - d;
                return e * e + f * f;
            }),
            (b.crossLine = function (a, c, d, e) {
                var f,
                    g,
                    h,
                    i = c.x - a.x,
                    j = c.y - a.y,
                    k = e.x - d.x,
                    l = e.y - d.y;
                return (0 == k ? (f = (d.x - a.x) / i) : 0 == l ? (f = (d.y - a.y) / j) : ((g = k / l), (h = i - g * j), (f = (d.x - a.x - (d.y - a.y) * g) / h)), new b(a.x + f * i, a.y + f * j));
            }),
            (b.prototype.subSelf = function (a) {
                ((this.x -= a.x), (this.y -= a.y));
            }),
            (b.prototype.copy = function (a) {
                ((this.x = a.x), (this.y = a.y));
            }),
            (b.prototype.rad = function () {
                return Math.atan2(this.y, this.x);
            }),
            (b.prototype.crossDet = function (a) {
                return this.x * a.y - a.x * this.y;
            }),
            (b.prototype.toString = function () {
                return '{x:' + a.Utils.int(this.x) + ', y:' + a.Utils.int(this.y) + '}';
            }),
            Object.defineProperty(b.prototype, 'length', {
                get: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y);
                },
                enumerable: !1,
                configurable: !0,
            }),
            b
        );
    })();
    a.Vec2 = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function () {
            function a() {}
            return a;
        })();
    a.BubbleComponent = c;
    var d;
    !(function (a) {
        ((a[(a.VISUAL = -2)] = 'VISUAL'),
            (a[(a.DESTROY = -1)] = 'DESTROY'),
            (a[(a.COLOR = 0)] = 'COLOR'),
            (a[(a.ICE = 3)] = 'ICE'),
            (a[(a.CHAMELEON = 4)] = 'CHAMELEON'),
            (a[(a.CROWN = 2)] = 'CROWN'),
            (a[(a.CLOUD = 1)] = 'CLOUD'),
            (a[(a.SPIDER = 5)] = 'SPIDER'),
            (a[(a.AC_RED = 6)] = 'AC_RED'),
            (a[(a.AC_GREEN = 7)] = 'AC_GREEN'),
            (a[(a.AC_YELLOW = 8)] = 'AC_YELLOW'),
            (a[(a.AC_BLUE = 9)] = 'AC_BLUE'),
            (a[(a.AC_PURPLE = 10)] = 'AC_PURPLE'),
            (a[(a.PIG_KEY = 11)] = 'PIG_KEY'),
            (a[(a.SB_MOVE = 12)] = 'SB_MOVE'),
            (a[(a.SB_COIN = 13)] = 'SB_COIN'),
            (a[(a.SB_GUIDELINE = 14)] = 'SB_GUIDELINE'),
            (a[(a.SB_LIGHTNING = 1009)] = 'SB_LIGHTNING'),
            (a[(a.SB_FROZEN = 1010)] = 'SB_FROZEN'),
            (a[(a.WINGS = 15)] = 'WINGS'),
            (a[(a.HIDDEN_BUG = 16)] = 'HIDDEN_BUG'),
            (a[(a.LEAVES = 17)] = 'LEAVES'),
            (a[(a.CLOUD_PARENT = 18)] = 'CLOUD_PARENT'),
            (a[(a.VEIL_CLOSE = 19)] = 'VEIL_CLOSE'),
            (a[(a.VEIL_LOCK = 20)] = 'VEIL_LOCK'),
            (a[(a.PENTAGON = 1001)] = 'PENTAGON'),
            (a[(a.THORN = 1002)] = 'THORN'),
            (a[(a.LASER = 1003)] = 'LASER'),
            (a[(a.SWITCH_PLUS_MINUS = 1004)] = 'SWITCH_PLUS_MINUS'),
            (a[(a.WINDMILL = 1005)] = 'WINDMILL'),
            (a[(a.PUSHER = 1006)] = 'PUSHER'),
            (a[(a.CANNON_BALL = 1007)] = 'CANNON_BALL'),
            (a[(a.RANDOM_WINDMILL = 1008)] = 'RANDOM_WINDMILL'),
            (a[(a.WHEEL = 1011)] = 'WHEEL'),
            (a[(a.UNLOCKER = 1012)] = 'UNLOCKER'));
    })((d = a.TypeBubbleComponent || (a.TypeBubbleComponent = {})));
    var e;
    !(function (a) {
        ((a[(a.EMPTY = -1e3)] = 'EMPTY'),
            (a[(a.RAINBOW = -10)] = 'RAINBOW'),
            (a[(a.FIREBALL = -11)] = 'FIREBALL'),
            (a[(a.BOMB = -12)] = 'BOMB'),
            (a[(a.LIGHTNING = -13)] = 'LIGHTNING'),
            (a[(a.DUMMY = -9)] = 'DUMMY'),
            (a[(a.RED = 1)] = 'RED'),
            (a[(a.GREEN = 2)] = 'GREEN'),
            (a[(a.YELLOW = 3)] = 'YELLOW'),
            (a[(a.BLUE = 4)] = 'BLUE'),
            (a[(a.PURPLE = 5)] = 'PURPLE'),
            (a[(a.NONE = 6)] = 'NONE'),
            (a[(a.ANCHOR = 18)] = 'ANCHOR'),
            (a[(a.POP_COLOR = 20)] = 'POP_COLOR'),
            (a[(a.THORN = 21)] = 'THORN'),
            (a[(a.BURST = 22)] = 'BURST'),
            (a[(a.PENTAGON = 23)] = 'PENTAGON'),
            (a[(a.NONE_GROUP = 2e3)] = 'NONE_GROUP'),
            (a[(a.MINUS = 24)] = 'MINUS'),
            (a[(a.PLUS = 25)] = 'PLUS'),
            (a[(a.LASER = 26)] = 'LASER'),
            (a[(a.SNOWBALL = 28)] = 'SNOWBALL'),
            (a[(a.SWITCH_MINUS = 29)] = 'SWITCH_MINUS'),
            (a[(a.SWITCH_PLUS = 30)] = 'SWITCH_PLUS'),
            (a[(a.WINDMILL = 31)] = 'WINDMILL'),
            (a[(a.PUSHER = 32)] = 'PUSHER'),
            (a[(a.CANNON_BALL = 33)] = 'CANNON_BALL'),
            (a[(a.RANDOM_WINDMILL = 35)] = 'RANDOM_WINDMILL'),
            (a[(a.WHEEL = 36)] = 'WHEEL'),
            (a[(a.UNLOCKER = 37)] = 'UNLOCKER'));
    })((e = a.BubbleColor || (a.BubbleColor = {})));
    var f;
    !(function (a) {
        ((a[(a.POP = 0)] = 'POP'), (a[(a.POP_MYSELF = 1)] = 'POP_MYSELF'), (a[(a.HIT = 2)] = 'HIT'));
    })((f = a.BubbleTypeContact || (a.BubbleTypeContact = {})));
    var g = (function () {
        function a(a, b, c, d, e, f) {
            (void 0 === a && (a = !1), void 0 === b && (b = !1), void 0 === c && (c = !1), void 0 === d && (d = !1), void 0 === e && (e = !1), void 0 === f && (f = null), (this.poped = a), (this.drop = b), (this.fireball = c), (this.bomb = d), (this.destruction = e), (this.killWave = f));
        }
        return a;
    })();
    a.PopParameters = g;
    var h = (function (h) {
        function i(c) {
            var d = h.call(this) || this;
            return (
                (d._id = i.ID++),
                (d._grid = c),
                (d._cell = new a.Vec2()),
                (d._velocity = new a.Vec2()),
                (d._type = -1),
                (d._color = -1),
                (d._strength = 1),
                (d._tmpRotation = 0),
                (d._updBlocker = 0),
                (d._needPop = new g()),
                (d._visualContainer = new b()),
                (d._additionalVisualContainer = new b()),
                (d._visual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghost')),
                d._visual.addAnimation('1', ['bubbles/red'], 50, !1, !0),
                d._visual.addAnimation('2', ['bubbles/green'], 50, !1),
                d._visual.addAnimation('3', ['bubbles/yellow'], 50, !1),
                d._visual.addAnimation('4', ['bubbles/blue'], 50, !1),
                d._visual.addAnimation('5', ['bubbles/purple'], 50, !1),
                d._visual.addAnimation(String(i.NONE_COLOR), ['bubbles/none'], 50, !1),
                d._visual.addAnimation('-10', ['bubbles/rainbow'], 50, !1),
                d._visual.addAnimation('-11', KY.Sprite.createAnimationState('bubbles/fireball/fireball', 1, 9, 4), 12, !0),
                d._visual.addAnimation('-12', KY.Sprite.createAnimationState('bubbles/bomb/bomb', 1, 2, 4), 12, !0),
                d._visual.addAnimation('-13', KY.Sprite.createAnimationState('bubbles/lightning/lightning', 1, 3, 4), 8, !0),
                d._visual.addAnimation('7', ['bubbles/bluePurple'], 50, !1),
                d._visual.addAnimation('8', ['bubbles/greenBlue'], 50, !1),
                d._visual.addAnimation('9', ['bubbles/greenPurple'], 50, !1),
                d._visual.addAnimation('10', ['bubbles/greenYellow'], 50, !1),
                d._visual.addAnimation('11', ['bubbles/redBlue'], 50, !1),
                d._visual.addAnimation('12', ['bubbles/redGreen'], 50, !1),
                d._visual.addAnimation('13', ['bubbles/redPurple'], 50, !1),
                d._visual.addAnimation('14', ['bubbles/redYellow'], 50, !1),
                d._visual.addAnimation('15', ['bubbles/yellowBlue'], 50, !1),
                d._visual.addAnimation('16', ['bubbles/yellowPurple'], 50, !1),
                d._visual.addAnimation('17', ['bubbles/dummy'], 50, !1),
                d._visual.addAnimation('18', ['bubbles/anchor'], 50, !1),
                d._visual.addAnimation('20', ['bubbles/popColor'], 50, !1),
                d._visual.addAnimation('21', ['bubbles/thorn'], 50, !1),
                d._visual.addAnimation('22', KY.Sprite.createAnimationState('bubbles/burst', 1, 3, 4), 10, !1),
                d._visual.addAnimation('24', ['bubbles/minus'], 50, !1),
                d._visual.addAnimation('25', ['bubbles/plus'], 50, !1),
                d._visual.addAnimation('26', ['bubbles/laser'], 50, !1),
                d._visual.addAnimation('28', ['bubbles/snowball'], 50, !1),
                d._visual.addAnimation('29', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('30', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('31', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('32', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('33', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('35', ['bubbles/randomWindMill'], 50, !1),
                d._visual.addAnimation('36', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('37', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('bigRed', ['bubbles/bigRed'], 50, !1),
                d._visual.addAnimation('bigGreen', ['bubbles/bigGreen'], 50, !1),
                d._visual.addAnimation('bigYellow', ['bubbles/bigYellow'], 50, !1),
                d._visual.addAnimation('bigBlue', ['bubbles/bigBlue'], 50, !1),
                d._visual.addAnimation('bigPurple', ['bubbles/bigPurple'], 50, !1),
                d._visual.addAnimation('2000', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('-1000', ['bubbles/empty'], 50, !1),
                d._visual.addAnimation('chameleonRed', KY.Sprite.createAnimationState('bubbles/chameleon/chameleonRed', 1, 19, 4), 20, !0, !1, 500),
                d._visual.addAnimation('chameleonGreen', KY.Sprite.createAnimationState('bubbles/chameleon/chameleonGreen', 1, 19, 4), 20, !0, !1, 500),
                d._visual.addAnimation('chameleonYellow', KY.Sprite.createAnimationState('bubbles/chameleon/chameleonYellow', 1, 19, 4), 20, !0, !1, 500),
                d._visual.addAnimation('chameleonBlue', KY.Sprite.createAnimationState('bubbles/chameleon/chameleonBlue', 1, 19, 4), 20, !0, !1, 500),
                d._visual.addAnimation('chameleonPurple', KY.Sprite.createAnimationState('bubbles/chameleon/chameleonPurple', 1, 19, 4), 20, !0, !1, 500),
                d._visual.addAnimation('pop', KY.Sprite.createAnimationState('bubbles/pop', 1, 8, 4), 30, !1),
                d._visual.addAnimation('popFire', KY.Sprite.createAnimationState('bubbles/fireball/pop/fireballPop', 1, 41, 4), 100, !1),
                d._visual.addAnimation('popLightning', KY.Sprite.createAnimationState('bubbles/lightning/pop/popLightning', 1, 13, 4), 20, !1),
                d._visual.addAnimation('popBomb', KY.Sprite.createAnimationState('bubbles/burstPop/burstPop', 1, 28, 4), 60, !1),
                d._visual.addAnimation('anchorPop', KY.Sprite.createAnimationState('bubbles/anchorPop/anchorPop', 1, 22, 4), 30, !1),
                d._visual.addAnimation('snowPop', KY.Sprite.createAnimationState('bubbles/snowPop/snowPop', 1, 4, 4), 15, !1),
                d._visual.addAnimation('rndWindPop', ['bubbles/rndWindPop'], 50, !1),
                (d._selectVisual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghostWhite')),
                d.setSelect(!1),
                d._visualContainer.addChild(d._visual),
                d._additionalVisualContainer.addChild(d._visualContainer),
                d.addChild(d._additionalVisualContainer),
                d.addChild(d._selectVisual),
                d
            );
        }
        return (
            __extends(i, h),
            (i.prototype.setSelect = function (a) {
                if (!this.getComponent(d.CLOUD)) {
                    switch (this._color) {
                        case e.NONE_GROUP:
                            return void (a && this._groupParent.setSelect(!0));
                    }
                    this._selectVisual.visible = a;
                }
            }),
            (i.prototype.setWorld = function (a) {
                this._grid = a;
            }),
            (i.prototype.anchorUpdate = function (a) {
                if (this.haveAnchor)
                    if (this._handTween) {
                        var b = this.getPosFromCellCircle(this.cx, this.cy),
                            c = b.x - this.x,
                            d = b.y - this.y;
                        ((this.x += 0.4 * c * a), (this.y += 0.4 * d * a), Math.abs(c) <= 1 && Math.abs(d) <= 1 && ((this.x = b.x), (this.y = b.y), (this._handTween = !1), (this._handTweenX = null), (this._handTweenY = null), this.update(0, !0)), (this._visual.rotation = this._bubbleAnchor.rotation));
                    } else (1 != this._bubbleAnchorStopUpdate && ((this.x = this._bubbleAnchor.x + Math.cos(this._bubbleAnchorBeginAngle + this._bubbleAnchor.rotation) * this._bubbleAnchorRadius), (this.y = this._bubbleAnchor.y + Math.sin(this._bubbleAnchorBeginAngle + this._bubbleAnchor.rotation) * this._bubbleAnchorRadius)), (this._visual.rotation = this._bubbleAnchor.rotation));
            }),
            (i.prototype.update = function (b, c) {
                if (0 == b) this._updBlocker = 2;
                else {
                    if ((this._updBlocker--, this._updBlocker > 0)) return;
                    this._updBlocker = 0;
                }
                if (this._handTween)
                    if (this.haveAnchor);
                    else {
                        var f = null != this._handTweenX ? this._handTweenX - this.x : 0,
                            g = null != this._handTweenY ? this._handTweenY - this.y : 0;
                        ((this.x += 0.2 * f * b), (this.y += 0.2 * g * b), Math.abs(f) <= 1 && Math.abs(g) <= 1 && (null != this._handTweenX && (this.x = this._handTweenX), null != this._handTweenY && (this.y = this._handTweenY), (this._handTween = !1), (this._handTweenX = null), (this._handTweenY = null), this.update(0, !0)));
                    }
                if (this.onScreen || 1 == c) {
                    if (((this.visible = !0), this.active || ((this._visual.x = this._offsetX), (this._visual.y = this._offsetY)), 0 == this.fired && this.haveComponent()))
                        for (var h = 0; h < this._components.length; h++) {
                            var i = this._components[h];
                            if (i.inActive)
                                switch (i.type) {
                                    case d.CROWN:
                                        ((i.visual.rotation = 0.2 * Math.sin((this._ang += 0.07))), (i.visual.scale.x = 0.95 + 0.25 * i.visual.rotation), (i.visual.scale.y = 0.95 + 0.2 * Math.cos(this._ang) * 0.25));
                                        break;
                                    case d.PIG_KEY:
                                        ((i.visual.rotation = 0.12 * Math.sin((this._ang += 0.07))), (i.visual.y = 8 * Math.cos(this._ang / 2)));
                                        break;
                                    case d.CLOUD:
                                        ((i.visual.x = this.x + this.visual.x), (i.visual.y = this.y + this.visual.y), (i.visual.scale.x = 1.05 + 0.05 * Math.sin((this._arg += 0.03))), (i.visual.scale.y = i.visual.scale.x));
                                        break;
                                    case d.CLOUD_PARENT:
                                        ((i.visual.x = this.x + this.visual.x), (i.visual.y = this.y + this.visual.y), (i.visual.scale.x = 1.05 + 0.05 * Math.sin((this._arg += 0.03))), (i.visual.scale.y = i.visual.scale.x), i.visual.update(b));
                                        break;
                                    case d.SPIDER:
                                        ((i.visual.x = this.x + 0.25 * this.visual.x), (i.visual.y = this.y + 0.25 * this.visual.y), this.needSpiderCheckForPusher && ((this.needSpiderCheckForPusher = null), this.checkSpiderWeb(i)));
                                        break;
                                    case d.VISUAL:
                                        ((i.visual.x = this.x + this.visual.x), (i.visual.y = this.y + this.visual.y));
                                        break;
                                    case d.PENTAGON:
                                    case d.THORN:
                                    case d.SB_GUIDELINE:
                                    case d.SB_COIN:
                                    case d.SB_MOVE:
                                    case d.SB_LIGHTNING:
                                    case d.SB_FROZEN:
                                    case d.WINDMILL:
                                    case d.PUSHER:
                                    case d.UNLOCKER:
                                        i.visual.update(b);
                                        break;
                                    case d.WINGS:
                                        (this.haveAnchor && (this.rotation = -this._bubbleAnchor.rotation), (i.visual.x = this.x + this.visual.x), (i.visual.y = this.y + this.visual.y), i.visual.update(b));
                                        break;
                                    case d.HIDDEN_BUG:
                                        ((i.visual.x = this.x + this.visual.x), (i.visual.y = this.y + this.visual.y), i.visual.update(b));
                                }
                        }
                    this._color == e.RAINBOW ? (this._visual.rotation = 0.2 * Math.sin((this._ang += 0.06))) : 1 != c && (this._visual.rotation = 0);
                } else this.visible = !0;
                (this.active && ((this.x += this._velocity.x * b), (this.y += this._velocity.y * b)), (this.dropable || this.fountain) && ((this._velocity.y += b), (this._velocity.x *= 0.9), this.x <= a.Options.GRID_LEFT_X && ((this.x = a.Options.GRID_LEFT_X + 1), (this._velocity.x *= -1)), this.x >= a.Options.GRID_RIGHT_X && ((this.x = a.Options.GRID_RIGHT_X - 1), (this._velocity.x *= -1))));
            }),
            (i.prototype.prepareComponentAfterShoot = function (b) {
                var c = this.getComponent(d.CHAMELEON);
                c && c.value();
                var e = this.getComponent(d.SPIDER);
                e && this.checkSpiderWeb(e);
                var f = this.getComponent(d.LASER);
                f && f.visual.next();
                var g = this.getComponent(d.HIDDEN_BUG);
                g && g.visual.next();
                var h = this.getComponent(d.SWITCH_PLUS_MINUS);
                h && h.visual.switch();
                var i = !1;
                if ((this.parent && (i = this.y + this.parent.y > a.Options.BUBBLE_DIAMETR), i && !this.markWings)) {
                    var j = this.getComponent(d.PUSHER);
                    j && this._grid.pucherEffect(this, j.visual.isRight) && j.visual.push();
                    var k = this.getComponent(d.CLOUD_PARENT);
                    if (k && k.moveIndex != b)
                        for (var l = [0, 1, 2, 3, 4, 5]; ; ) {
                            if (!l.length) {
                                (this.addCloudComponent(), this.removeComponent(k), this.update(0));
                                break;
                            }
                            var m = Stage.rnd.removeRandomItem(l),
                                n = this._grid.getNeighbors(this, m),
                                o = null != n && n != this && !n.getComponent(d.CLOUD_PARENT) && !n.getComponent(d.CLOUD) && !n.isWheel;
                            if (o) {
                                (this.removeComponent(k, !0), (k.moveIndex = b), k.visual.setOffset(this.x - n.x, this.y - n.y), this.addCloudComponent(), n.addCloudParentComponent(k), this.update(0), n.update(0));
                                break;
                            }
                        }
                }
                return ((this._wasContact = !1), !1);
            }),
            (i.prototype.wheelNeedRotate = function (a) {
                a.visual.goRotate();
            }),
            (i.prototype.getRotation = function (a) {
                for (var b = a.toString(16), c = 0; c < i.ROTAION_MASK_HEX_PREFIX.length; c++)
                    if (i.ROTAION_MASK_HEX_PREFIX[c] == b[0])
                        switch (c) {
                            case 0:
                                return 180;
                            case 1:
                                return 135;
                            case 2:
                                return 45;
                            case 3:
                                return 225;
                            case 4:
                                return 315;
                            default:
                                return 0;
                        }
                return 0;
            }),
            (i.prototype.getRotationType = function (a) {
                var b = a.toString(16);
                return ((b = b.slice(1, b.length)), parseInt(b, 16));
            }),
            (i.prototype.setPosition = function (a, b, c, d) {
                return ((this._cell.x = a), (this._cell.y = b), c ? this.reposition(!0, d) : 0);
            }),
            (i.prototype.flyout = function (b, c) {
                var e = this,
                    f = this.getComponent(d.WINGS);
                (f && f.visual.fly(), (this._bubbleAnchorStopUpdate = !0));
                var g = this.x - b,
                    h = this.y - c,
                    i = Math.sqrt(g * g + h * h) / a.Options.MAP_WIDTH;
                TweenLite.to(this, 1.5 * i + 0.25 * this._grid.random(), {
                    x: b,
                    y: c,
                    ease: Cubic.easeInOut,
                    onComplete: function () {
                        (e.prepareToRemove(), e._grid.removeBubble(e, void 0, !0));
                    },
                    onUpdate: function () {
                        e.update(0, !0);
                    },
                });
            }),
            (i.prototype.setData = function (a, b, c, d, f) {
                switch (
                    (void 0 === d && (d = !1),
                    void 0 === f && (f = null),
                    Math.abs(a) > 1e5 && ((this._tmpRotation = this.getRotation(a)), (a = this.getRotationType(a)), 0 == this._tmpRotation && (this._tmpRotation = 0.001)),
                    (this.active = !1),
                    (this.fake = !1),
                    (this.kill = !1),
                    (this.dropable = !1),
                    (this.killWave = null),
                    (this.emptyCrown = !1),
                    (this.emptyLock = !1),
                    (this.fountain = !1),
                    (this.shake = !1),
                    (this._handTween = !1),
                    (this._handTweenX = null),
                    (this._handTweenY = null),
                    (this.shiftId = 0),
                    d || (this._bubbleAnchor = null),
                    (this.mark = !1),
                    (this.markLock = null),
                    (this.markContact = !1),
                    (this.popedColor = e.NONE),
                    (this.active = !1),
                    (this.fired = !1),
                    (this._groupParent = null),
                    (this._groupChildren = null),
                    (this._wasContact = !1),
                    this.setNeedPop(!1),
                    (this.cx = b),
                    (this.cy = c),
                    (this._velocity.y = 0),
                    (this._velocity.x = 0),
                    (this._offsetX = 0),
                    (this._offsetY = 0),
                    (this._visual.rotation = 0),
                    (this._visual.x = 0),
                    (this._visual.y = 0),
                    (this._ang = 0),
                    (this._arg = Math.random()),
                    this.scale.set(1),
                    this._visual.scale.set(1),
                    (this._visual.alpha = 1),
                    (this.visual.x = 0),
                    (this.visual.y = 0),
                    (this.visual.rotation = 0),
                    (this._hiddenBug = null),
                    (this._leavesCmps = !1),
                    (this._cannonBallCmp = null),
                    (this._isLock = !1),
                    (this._isUnLocker = !1),
                    this.setSelect(!1),
                    this.reposition(),
                    this.changeType(a, f),
                    this.mainColor)
                ) {
                    case e.PENTAGON:
                        this._selectVisual.frameName = 'bubbles/ghostWhitePentagon';
                        break;
                    default:
                        this._selectVisual.frameName = 'bubbles/ghostWhite';
                }
                this._tmpRotation = 0;
            }),
            (i.prototype.addDebugID = function () {
                if (this._color != e.NONE_GROUP) {
                    var a = '';
                    ((a = this.cx + ':' + this.cy), (this._debugtext = new PIXI.Text(a, { fontFamily: Stage.FONT_BOLD, fill: 0, align: 'center', fontSize: 30, lineHeight: 70 })), this._debugtext.anchor.set(0.5), (this._debugtext.y = 8), this.addChild(this._debugtext));
                }
            }),
            (i.prototype.setDebugText = function (a) {
                this._debugtext && (this._debugtext.text = a);
            }),
            (i.prototype.changeType = function (b, c) {
                ((this._type = b), (this._color = b), (this._visualType = String(b)));
                var f = 0;
                if (
                    (17 == this._color
                        ? (this._color = e.DUMMY)
                        : 17 == this._color
                          ? (this._color = e.NONE)
                          : 19 == this._color
                            ? ((this._color = e.LIGHTNING), (this._visualType = String(this._color)))
                            : this._color == e.PENTAGON
                              ? this.addPentagonComponent()
                              : this._color == e.THORN
                                ? this.addThornComponent()
                                : this._color == e.LASER
                                  ? this.addLaserComponent(this._tmpRotation)
                                  : 27 == this._color
                                    ? ((this._color = e.BOMB), (this._visualType = String(this._color)))
                                    : this._color == e.SWITCH_MINUS
                                      ? this.addSwitchPlusMinusComponent(!1)
                                      : this._color == e.SWITCH_PLUS
                                        ? this.addSwitchPlusMinusComponent(!0)
                                        : this._color == e.WINDMILL
                                          ? this.addWindmillComponent()
                                          : this._color == e.PUSHER
                                            ? this.addPusherComponent(0 == this._tmpRotation)
                                            : this._color == e.CANNON_BALL
                                              ? this.addCannonBallComponent()
                                              : 34 == this._color
                                                ? ((this._color = e.RAINBOW), (this._visualType = String(this._color)))
                                                : this._color == e.RANDOM_WINDMILL
                                                  ? this.addRandomWindmillComponent()
                                                  : this._color == e.WHEEL
                                                    ? this.addWheelComponent()
                                                    : this._color == e.UNLOCKER && this.addVeilUnlockerComponent(),
                    this.mainColor == e.BURST && (c || (c = []), c.push(d.VISUAL)),
                    c)
                )
                    for (var g = 0; g < c.length; g++) {
                        var h = 0,
                            i = c[g];
                        switch ((Math.abs(c[g]) > 1e5 && ((h = this.getRotation(i)), (i = this.getRotationType(i))), i)) {
                            case d.CLOUD:
                                this.addCloudComponent();
                                break;
                            case d.CLOUD_PARENT:
                                this.addCloudParentComponent();
                                break;
                            case d.CROWN:
                                this.addCrownComponent();
                                break;
                            case d.ICE:
                                this.addIceComponent();
                                break;
                            case d.CHAMELEON:
                                (this.addChameleonComponent(), (f = 200 * KY.Game.instance.rnd.js));
                                break;
                            case d.SPIDER:
                                this.addSpiderComponent();
                                break;
                            case d.VISUAL:
                                this.addVisualComponent();
                                break;
                            case d.AC_RED:
                                this.addColorComponent(e.RED);
                                break;
                            case d.AC_GREEN:
                                this.addColorComponent(e.GREEN);
                                break;
                            case d.AC_YELLOW:
                                this.addColorComponent(e.YELLOW);
                                break;
                            case d.AC_BLUE:
                                this.addColorComponent(e.BLUE);
                                break;
                            case d.AC_PURPLE:
                                this.addColorComponent(e.PURPLE);
                                break;
                            case d.PIG_KEY:
                                a.UserGameData.isFirstTimeOnLevel(this._grid.user_level) && this.addKeyPigComponent();
                                break;
                            case d.SB_COIN:
                            case d.SB_GUIDELINE:
                            case d.SB_MOVE:
                            case d.SB_LIGHTNING:
                            case d.SB_FROZEN:
                                this._grid.type == a.WorldType.WEEK_COMPETITION ? (i == d.SB_MOVE ? this.addPointBubbleComponent() : this.addSpecialBubbleComponentWC(c[g])) : this.addSpecialBubbleComponent(c[g]);
                                break;
                            case d.WINGS:
                                this.addWingsComponent(c[g]);
                                break;
                            case d.HIDDEN_BUG:
                                this.addHiddenBugComponent(0 == h);
                                break;
                            case d.LEAVES:
                                this.addLeavesComponent();
                                break;
                            case d.VEIL_CLOSE:
                                this.addVeilClose();
                                break;
                            case d.VEIL_LOCK:
                                this.addVeilLock();
                        }
                    }
                (this._visual.play('' + this._visualType, !0), this._visual.setFrameOffset(f));
            }),
            (i.prototype.anchorPop = function (a) {
                var b = this;
                this._visual.play('anchorPop', !1, function () {
                    (b.prepareToRemove(), a && a());
                });
            }),
            (i.prototype.pop = function (b, c, g, h) {
                var j = this;
                if (this.mainColor != e.NONE_GROUP) {
                    if (this._groupParent) return void this._groupParent.setNeedPop(!0, 4, b, c, g, h);
                    if (this._groupChildren) {
                        this.afterPopPentagon(null, 5);
                        for (var k = 0; k < this._groupChildren.length; k++) this._groupChildren[k].prepareToRemove();
                        ((this._groupChildren.length = 0), (this._groupChildren = null), this.mainColor == e.PENTAGON && this._grid.emit(a.World.EVENT_SHOW_FLY, this.x, this.y, this.additionalColor));
                    }
                    var l = this.fountain;
                    if ((b || c || h ? (this._strength = 0) : this._strength--, this.haveComponent() && (b || h || (this.getComponent(d.SPIDER) && a.QuestPopup.ADD(a.QUEST_TYPE.SPIDER, 1), this.getComponent(d.WINGS) && a.QuestPopup.ADD(a.QUEST_TYPE.BAT, 1)), this.strength > 0))) {
                        var m = this.getComponent(d.ICE);
                        if (m) {
                            if (i.isDefaultColor(this.popedColor)) {
                                var n = (this.killWave ? this.killWave : 0) * i.WAVE_DELAY * 0.001;
                                return (
                                    (m.tween = TweenLite.delayedCall(n, function () {
                                        (m.visual.play('pop', !1, function () {
                                            j.removeComponent(m);
                                        }),
                                            a.SoundsManager.breakingIce());
                                    })),
                                    0.5 * n
                                );
                            }
                            this._strength = 0;
                        }
                        var o = this.getComponent(d.COLOR);
                        if (o) {
                            if (i.isDefaultColor(this.popedColor)) {
                                var p = this.mainColor,
                                    q = this.additionalColor,
                                    r = this.popedColor;
                                ((this._color = this.popedColor == p ? q : p), (this.popedColor = e.NONE), (o.inActive = !1));
                                var s = this.onScreen;
                                0 == s && (this.killWave = 0);
                                var t = (this.killWave ? this.killWave : 0) * i.WAVE_DELAY * 0.001;
                                return (
                                    (o.tween = TweenLite.delayedCall(t, function () {
                                        if ((j.destroyComponent(o), j.changeType(j._color, null), j._grid.contactNeighbors(j, f.POP, r), s)) {
                                            var b = new a.BubbleFlash();
                                            ((b.x = j.x), (b.y = j.y), j._grid.upContainer.addChild(b), b.play(r), j.jumpUp(1.2), a.SoundsManager.popDoubleColor());
                                        }
                                    })),
                                    0.5 * t
                                );
                            }
                            this._strength = 0;
                        }
                    }
                    (this._cannonBallCmp && this._cannonBallCmp.visual.kill(), (this._hiddenBug = null), (this._leavesCmps = !1), (this._cannonBallCmp = null), (this._isLock = !1), this.setSelect(!1));
                    var u = !1,
                        v = !1,
                        w = 'pop';
                    if ((this.noBugColor == e.LIGHTNING || this.popedColor == e.LIGHTNING ? (w = 'popLightning') : this.noBugColor == e.BURST || this.popedColor == e.BOMB ? ((w = 'popBomb'), (u = !b)) : this.noBugColor == e.SNOWBALL ? (w = 'snowPop') : this.noBugColor == e.RANDOM_WINDMILL && ((w = 'rndWindPop'), (v = !0)), (this.kill = !0), !b && !h))
                        switch (this._color) {
                            case e.RED:
                                a.QuestPopup.ADD(a.QUEST_TYPE.BUBLES_RED, 1);
                                break;
                            case e.GREEN:
                                a.QuestPopup.ADD(a.QUEST_TYPE.BUBLES_GREEN, 1);
                                break;
                            case e.YELLOW:
                                a.QuestPopup.ADD(a.QUEST_TYPE.BUBLES_YELLOW, 1);
                                break;
                            case e.BLUE:
                                a.QuestPopup.ADD(a.QUEST_TYPE.BUBLES_BLUE, 1);
                                break;
                            case e.PURPLE:
                                a.QuestPopup.ADD(a.QUEST_TYPE.BUBLES_PURPLE, 1);
                                break;
                            case e.THORN:
                                a.QuestPopup.ADD(a.QUEST_TYPE.THORN, 1);
                                break;
                            case e.BURST:
                                a.QuestPopup.ADD(a.QUEST_TYPE.DYNAMITE, 1);
                        }
                    var x = (this.killWave ? this.killWave : 0) * i.WAVE_DELAY * 0.001;
                    return (
                        TweenLite.to(this.scale, 0.1, {
                            delay: x,
                            x: 1.1,
                            y: 1.1,
                            onStart: function () {
                                (j._grid.addBubbleToUpContainer(j), j._grid.contactNeighbors(j, f.POP));
                            },
                            onComplete: function () {
                                (j.getComponent(d.VISUAL) && j._visualContainer.addChild(j._visual),
                                    j.clearComponents(),
                                    TweenLite.killTweensOf(j._visual.scale),
                                    TweenLite.killTweensOf(j.visual),
                                    j.mainColor != e.DUMMY && 0 == h && j._grid.emit(a.World.EVENT_BUBBLE_POP, j.x + j.parent.x, j.y + j.parent.y, j.mainColor, j.popedColor, b, l, u),
                                    c && (j._visual.scale.set(2.44), (w = 'popFire')),
                                    j.mainColor == e.PENTAGON && j._visual.scale.set(1.5 * j._visual.scale.x),
                                    j.parent.addChild(j),
                                    v
                                        ? (j._visual.play(w),
                                          TweenLite.to(j._visual.scale, 0.4, { x: 3, y: 3 }),
                                          TweenLite.to(j._visual, 0.4, {
                                              alpha: 0,
                                              onComplete: function () {
                                                  j.prepareToRemove();
                                              },
                                          }))
                                        : j._visual.play(w, !1, function () {
                                              j.prepareToRemove();
                                          }),
                                    j.soundPop(c));
                            },
                        }),
                        0
                    );
                }
            }),
            (i.prototype.soundPop = function (b) {
                if (b) return void a.SoundsManager.popFire();
                switch (this.mainColor) {
                    case e.BOMB:
                        a.SoundsManager.bombgActivate();
                        break;
                    case e.RAINBOW:
                        a.SoundsManager.rainbowActivate();
                        break;
                    case e.BURST:
                        a.SoundsManager.popBurst();
                        break;
                    case e.DUMMY:
                        a.SoundsManager.popDummy();
                        break;
                    case e.THORN:
                        a.SoundsManager.popThorn();
                        break;
                    case e.PENTAGON:
                        a.SoundsManager.popPentagon();
                        break;
                    case e.SNOWBALL:
                        a.SoundsManager.popSnowball();
                        break;
                    default:
                        a.SoundsManager.pop();
                }
            }),
            (i.prototype.contact = function (b, c, g) {
                var h = this;
                if (this._groupParent) return void this._groupParent.contact(b, c);
                if (this._color == e.PENTAGON && b == f.HIT && !this._wasContact) {
                    var j = this.getComponent(d.PENTAGON),
                        k = c.mainColor == e.FIREBALL || c.mainColor == e.BOMB || (c.mainColor == e.LIGHTNING && Math.abs(c.cy - this.cy) < 2);
                    (0 == k && (c.mainColor == j.valueColor ? (this.setNeedPop(!0, 4), c.setNeedPop(!0, 4), this.afterPopPentagon(c, 5)) : j.value()), (this._wasContact = !0));
                }
                var l = this.getComponent(d.CLOUD);
                if (
                    (l &&
                        !l.tween &&
                        (l.tween = TweenLite.to(l.visual, 0.2, {
                            alpha: 0,
                            onComplete: function () {
                                h.removeComponent(l);
                            },
                        })),
                    (this._leavesCmps && b == f.POP) || b == f.HIT)
                ) {
                    var m = this.getComponent(d.LEAVES);
                    m &&
                        ((this._leavesCmps = !1),
                        m.visual.hide(),
                        (m.tween = TweenLite.to(m.visual, 0.2, {
                            alpha: 0,
                            onComplete: function () {
                                h.removeComponent(m);
                            },
                        })));
                }
                (this._color == e.SNOWBALL && b == f.HIT && this.setNeedPop(!0, 1), this._color == e.PUSHER && b == f.HIT && this.setNeedPop(!0, 1));
                var n = g ? g : c.popedColor;
                if (this.mainColor == e.POP_COLOR && b == f.POP && n >= e.RED && n <= e.PURPLE) {
                    this._color = e.NONE;
                    var o = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/' + i.colorName(n));
                    ((o.alpha = 0),
                        this._visual.addChild(o),
                        TweenLite.to(o, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                (h.changeType(n, null), o.destroy());
                            },
                        }));
                }
            }),
            (i.prototype.loaded = function () {
                var a = this.getComponent(d.SPIDER);
                (a && this.checkSpiderWeb(a, !0), this._color == e.PENTAGON && this.checkPentagonGroup());
                var b = this.getComponent(d.HIDDEN_BUG);
                b && b.visual.init();
            }),
            (i.prototype.clearLock = function (a) {
                var b = this;
                if (this._isLock) {
                    this._isLock = !1;
                    var c = this.getComponent(d.VEIL_CLOSE) || this.getComponent(d.VEIL_LOCK);
                    return (
                        KY.Game.instance.timer.add(function () {
                            (c.visual.hide(),
                                (c.tween = TweenLite.to(c.visual, 0.2, {
                                    alpha: 0,
                                    delay: 0.1,
                                    onComplete: function () {
                                        b.removeComponent(c);
                                    },
                                })));
                        }, 30 * a),
                        0.03 * a + 0.2 + 0.1
                    );
                }
                return 0;
            }),
            (i.prototype.deleteAnchor = function () {
                this._bubbleAnchor = null;
            }),
            (i.prototype.prepareToRemove = function () {
                (this.clearComponents(), this.parent && this.parent.removeChild(this), this._grid.addBubbleToDeactiveList(this));
            }),
            (i.prototype.setBubbleAnchor = function (a) {
                if (null != a) {
                    this._bubbleAnchor = a;
                    var b = this.x - a.x,
                        c = this.y - a.y;
                    ((this._bubbleAnchorRadius = Math.sqrt(b * b + c * c)), (this._bubbleAnchorBeginAngle = Math.atan2(c, b)), (this._bubbleAnchorStopUpdate = !1));
                }
            }),
            (i.prototype.copyBubbleAnchor = function (a) {
                a.isAnchor ? this.setBubbleAnchor(a) : this.setBubbleAnchor(a._bubbleAnchor);
            }),
            (i.prototype.setStart = function (a, b) {
                ((this.x = a), (this.y = b), (this.startX = a), (this.startY = b));
            }),
            (i.prototype.setVelocity = function (a, b) {
                ((this._velocity.x = a), (this._velocity.y = b));
            }),
            (i.prototype._tweenReposition = function (b, c, e) {
                var f = this;
                void 0 === e && (e = !1);
                var g = c + this.parent.y > -a.Options.BUBBLE_DIAMETR,
                    h = g ? c : -a.Options.BUBBLE_DIAMETR - this.parent.y,
                    i = this.x - b,
                    j = this.y - h,
                    k = Math.sqrt(i * i + j * j) / a.Options.MAP_WIDTH,
                    l = Math.min(2.5 * k + 0.15 * this._grid.random(), 1.8);
                return e
                    ? ((this._handTween = !0), (this._handTweenX = b), (this._handTweenY = c), l)
                    : ((this._reposEndY = c),
                      (this._bubbleAnchorStopUpdate = !0),
                      TweenLite.to(this, l, {
                          x: b,
                          y: c,
                          ease: Cubic.easeInOut,
                          onComplete: function (e, g, h) {
                              var i = c + f.parent.y > -a.Options.BUBBLE_DIAMETR;
                              if (!h && i) return void f._tweenReposition(b, f._reposEndY);
                              ((f.x = e), (f.y = g), (f._bubbleAnchorStopUpdate = !1));
                              var j = f.getComponent(d.WINGS);
                              (j && j.visual.def(), f.onScreen || f.update(0, !0));
                          },
                          onCompleteParams: [b, c, g],
                          onUpdate: function () {
                              f.update(0, !0);
                          },
                      }),
                      l);
            }),
            (i.prototype.reposition = function (a, b) {
                (void 0 === a && (a = !1), void 0 === b && (b = !1));
                var c;
                if (((c = this._bubbleAnchor ? this.getPosFromCellCircle(this.cx, this.cy) : i.getPosFromCell(this.cx, this.cy)), a && this.onScreen)) return this._tweenReposition(c.x, c.y, b);
                if (((this.x = c.x), (this.y = c.y), a)) {
                    var e = this.getComponent(d.WINGS);
                    (e && e.visual.def(), this.onScreen || this.update(0, !0));
                }
                return 0;
            }),
            (i.prototype.jumpUp = function (a) {
                var b = this;
                (void 0 === a && (a = 1.1),
                    TweenLite.to(this._visual.scale, 0.1, {
                        x: a,
                        y: a,
                        onComplete: function () {
                            TweenLite.to(b._visual.scale, 0.15, { x: 1, y: 1, ease: Sine.easeOut });
                        },
                    }));
            }),
            (i.prototype.equalColor = function (a) {
                if (this.mainColor == a) return !0;
                var b = this.getComponent(d.COLOR);
                return !(!b || !i.isDefaultColor(this.mainColor, !1)) && b.valueColor == a;
            }),
            (i.equal = function (a, b) {
                return a == b || (a == e.RAINBOW ? !i.isNoneColor(b) : b == e.RAINBOW && !i.isNoneColor(a));
            }),
            (i.prototype.getPosition = function () {
                return new a.Vec2(this.x, this.y);
            }),
            (i.prototype.textMainColor = function () {
                switch (this.mainColor) {
                    case e.BLUE:
                        return 'BLUE';
                    case e.DUMMY:
                        return 'DUMMY';
                    case e.FIREBALL:
                        return 'FIREBALL';
                    case e.GREEN:
                        return 'GREEN';
                    case e.NONE:
                        return 'NONE';
                    case e.PURPLE:
                        return 'PURPLE';
                    case e.RAINBOW:
                        return 'RAINBOW';
                    case e.RED:
                        return 'RED';
                    case e.YELLOW:
                        return 'YELLOW';
                    case e.BOMB:
                        return 'BOMB';
                    case e.LIGHTNING:
                        return 'LIGHTNING';
                }
            }),
            (i.prototype.hideComponent = function () {
                if (this.haveComponent()) for (var a = 0; a < this._components.length; a++) this._components[a].visual && (this._components[a].visual.visible = !1);
            }),
            (i.prototype.setOffset = function (a, b) {
                ((this._offsetX = a), (this._offsetY = b));
            }),
            (i.prototype.setNeedPop = function (a, b, c, d, e, f) {
                if ((void 0 === b && (b = null), void 0 === c && (c = !1), void 0 === d && (d = !1), void 0 === e && (e = !1), void 0 === f && (f = !1), a)) {
                    if (this._needPop.poped) return;
                    ((this._needPop.poped = !0), (this._needPop.drop = c), (this._needPop.fireball = d), (this._needPop.bomb = e), (this._needPop.destruction = f), (this._needPop.killWave = b));
                } else ((this._needPop.poped = !1), (this._needPop.drop = !1), (this._needPop.fireball = !1), (this._needPop.bomb = !1), (this._needPop.destruction = !1), (this._needPop.killWave = null));
            }),
            (i.prototype.afterPopPentagon = function (a, b) {
                if ((void 0 === b && (b = 2), this._groupChildren && this._groupChildren.length))
                    for (var c = 0; c < this._groupChildren.length; c++)
                        for (var d = 0; d < 6; d++) {
                            var f = this._grid.getNeighbors(this._groupChildren[c], d);
                            f && f != this && f != a && ((f.popedColor = e.BOMB), f.setNeedPop(!0, b, !1));
                        }
            }),
            (i.prototype.isOnScreen = function (b) {
                return !!this.parent && this.y + this.parent.y > -a.Options.BUBBLE_DIAMETR * b;
            }),
            Object.defineProperty(i.prototype, 'identificator', {
                get: function () {
                    return this._id;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'cx', {
                get: function () {
                    return this._cell.x;
                },
                set: function (a) {
                    this._cell.x = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'cy', {
                get: function () {
                    return this._cell.y;
                },
                set: function (a) {
                    this._cell.y = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'vx', {
                get: function () {
                    return this._velocity.x;
                },
                set: function (a) {
                    this._velocity.x = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'vy', {
                get: function () {
                    return this._velocity.y;
                },
                set: function (a) {
                    this._velocity.y = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'mainColor', {
                get: function () {
                    return this._hiddenBug && !this._hiddenBug.visual.isOpen ? e.NONE : this._leavesCmps || this._isLock ? e.NONE : this._cannonBallCmp ? this._cannonBallCmp.valueColor : this.noBugColor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'noBugColor', {
                get: function () {
                    if (this._isLock) return e.NONE;
                    if (this._color == e.SWITCH_MINUS || this._color == e.SWITCH_PLUS) {
                        var a = this.getComponent(d.SWITCH_PLUS_MINUS);
                        if (a && a.visual) return a.visual.color;
                    }
                    return this._groupParent ? this._groupParent.mainColor : this._color;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'activateColor', {
                get: function () {
                    return this._leavesCmps ? this.noBugColor : this.mainColor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'additionalColor', {
                get: function () {
                    var a = this.getComponent(d.COLOR);
                    return (a || (a = this.getComponent(d.PENTAGON)), this._groupParent ? this._groupParent.additionalColor : a ? a.valueColor : null);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'visual', {
                get: function () {
                    return this._additionalVisualContainer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'strength', {
                get: function () {
                    return this._strength;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'dropable', {
                get: function () {
                    return this._dropable;
                },
                set: function (b) {
                    var c = this;
                    if (((this._dropable = b), b)) {
                        (this.deleteAnchor(), (this._handTween = !1), (this._handTweenX = null), (this._handTweenY = null));
                        var e = this.getComponent(d.SPIDER);
                        e && (a.SoundsManager.hitSpider(), this.removeComponent(e));
                        var f = this.getComponent(d.CLOUD);
                        f &&
                            !f.tween &&
                            (f.tween = TweenLite.to(f.visual, 0.2, {
                                alpha: 0,
                                onComplete: function () {
                                    c.removeComponent(f);
                                },
                            }));
                        var g = this.getComponent(d.CLOUD_PARENT);
                        g &&
                            !g.tween &&
                            (g.tween = TweenLite.to(g.visual, 0.2, {
                                alpha: 0,
                                onComplete: function () {
                                    c.removeComponent(g);
                                },
                            }));
                        var h = this.getComponent(d.LEAVES);
                        this._leavesCmps &&
                            h &&
                            (h.visual.hide(),
                            (h.tween = TweenLite.to(h.visual, 0.2, {
                                alpha: 0,
                                onComplete: function () {
                                    c.removeComponent(h);
                                },
                            })),
                            (this._leavesCmps = !1));
                        var i = this.getComponent(d.HIDDEN_BUG);
                        this._hiddenBug && i && (this.removeComponent(i), (this._hiddenBug = null));
                    }
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isAnchor', {
                get: function () {
                    return 18 == this._type;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isCrown', {
                get: function () {
                    return null != this.getComponent(d.CROWN);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isUnlocker', {
                get: function () {
                    return this._isUnLocker;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isLock', {
                get: function () {
                    return this._isLock;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isMainLock', {
                get: function () {
                    return !!this._isLock && null != this.getComponent(d.VEIL_LOCK);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isKey', {
                get: function () {
                    return null != this.getComponent(d.PIG_KEY);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isWings', {
                get: function () {
                    return null != this.getComponent(d.WINGS);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isWheel', {
                get: function () {
                    return null != this.getComponent(d.WHEEL);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'specialType', {
                get: function () {
                    return this.getComponent(d.SB_COIN) ? d.SB_COIN : this.getComponent(d.SB_GUIDELINE) ? d.SB_GUIDELINE : this.getComponent(d.SB_MOVE) ? d.SB_MOVE : this.getComponent(d.SB_LIGHTNING) ? d.SB_LIGHTNING : this.getComponent(d.SB_FROZEN) ? d.SB_FROZEN : null;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'specialMoveCounter', {
                get: function () {
                    var a = this.getComponent(d.SB_MOVE);
                    return a ? a.visual.moveValue : null;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'haveAnchor', {
                get: function () {
                    return null != this._bubbleAnchor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'anchor', {
                get: function () {
                    return this._bubbleAnchor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'haveAdditionalAnchor', {
                get: function () {
                    return null != this.getComponent(d.SPIDER) || null != this.getComponent(d.PENTAGON);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isSelected', {
                get: function () {
                    return this._selectVisual.visible;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'needPop', {
                get: function () {
                    return this._groupParent ? this._groupParent._needPop : this._needPop;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'isGouped', {
                get: function () {
                    return null != this._groupParent || null != this._groupChildren;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(i.prototype, 'onScreen', {
                get: function () {
                    return !!this.parent && this.y + this.parent.y > -a.Options.BUBBLE_DIAMETR;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (i.getPosFromCell = function (b, c) {
                var d = c % 2 == 0,
                    e = a.Options.BUBBLE_GAP_X * b + (d ? 0 : a.Options.BUBBLE_RADIUS) - a.Options.GRID_OFFSET_X,
                    f = a.Options.BUBBLE_GAP_Y * c;
                return ((this._vec.x = e), (this._vec.y = f), this._vec);
            }),
            (i.getPosFromCellCircle = function (a, b, c, d, e) {
                i.getPosFromCell(a, b);
                var f = i._vec.x - c,
                    g = i._vec.y - d,
                    h = Math.sqrt(f * f + g * g),
                    j = Math.atan2(g, f);
                return ((i._vec.x = c + Math.cos(j + e) * h), (i._vec.y = d + Math.sin(j + e) * h), i._vec);
            }),
            (i.prototype.getPosFromCellCircle = function (a, b) {
                i.getPosFromCell(a, b);
                var c = i._vec.x - this._bubbleAnchor.x,
                    d = i._vec.y - this._bubbleAnchor.y;
                return ((this._bubbleAnchorRadius = Math.sqrt(c * c + d * d)), (this._bubbleAnchorBeginAngle = Math.atan2(d, c)), (i._vec.x = this._bubbleAnchor.x + Math.cos(this._bubbleAnchorBeginAngle + this._bubbleAnchor.rotation) * this._bubbleAnchorRadius), (i._vec.y = this._bubbleAnchor.y + Math.sin(this._bubbleAnchorBeginAngle + this._bubbleAnchor.rotation) * this._bubbleAnchorRadius), i._vec);
            }),
            (i.colorValue = function (a) {
                switch (a) {
                    case e.BLUE:
                        return 1084415;
                    case e.GREEN:
                        return 4504880;
                    case e.PURPLE:
                        return 12791255;
                    case e.RED:
                        return 15423505;
                    case e.YELLOW:
                        return 16755723;
                    case e.NONE:
                        return 16755723;
                    default:
                        return 16777215;
                }
            }),
            (i.colorName = function (a) {
                switch (a) {
                    case e.BLUE:
                        return 'blue';
                    case e.GREEN:
                        return 'green';
                    case e.PURPLE:
                        return 'purple';
                    case e.RED:
                        return 'red';
                    case e.YELLOW:
                        return 'yellow';
                    case e.ANCHOR:
                        return 'anchor';
                    case e.BOMB:
                        return 'bomb';
                    case e.BURST:
                        return 'burst';
                    case e.DUMMY:
                        return 'dummy';
                    case e.EMPTY:
                        return 'empty';
                    case e.FIREBALL:
                        return 'fireball';
                    case e.LIGHTNING:
                        return 'lightning';
                    case e.MINUS:
                        return 'minus';
                    case e.NONE:
                        return 'none';
                    case e.NONE_GROUP:
                        return 'none_group';
                    case e.PENTAGON:
                        return 'pentagon';
                    case e.PLUS:
                        return 'plus';
                    case e.POP_COLOR:
                        return 'pop_color';
                    case e.RAINBOW:
                        return 'rainbow';
                    case e.THORN:
                        return 'thorn';
                    case e.SWITCH_MINUS:
                        return 'switch_minus';
                    case e.SWITCH_PLUS:
                        return 'switch_plus';
                    case e.LASER:
                        return 'laser';
                    default:
                        return 'NO NAME';
                }
            }),
            (i.isNoneColor = function (a, b) {
                return (!b || (!b._hiddenBug && !b._leavesCmps)) && (a == e.NONE || a == e.DUMMY || a == e.THORN || a == e.POP_COLOR || a == e.BURST || a == e.LIGHTNING || a == e.ANCHOR || a == e.PLUS || a == e.MINUS || a == e.SNOWBALL || a == e.SWITCH_MINUS || a == e.SWITCH_PLUS || a == e.WINDMILL || a == e.RANDOM_WINDMILL || a == e.PUSHER || a == e.LASER || a == e.BOMB || a == e.FIREBALL || a == e.RAINBOW || a == e.CANNON_BALL || a == e.WHEEL);
            }),
            (i.isDefaultColor = function (a, b) {
                return (void 0 === b && (b = !0), b ? a >= e.RED && a <= e.NONE : a >= e.RED && a <= e.PURPLE);
            }),
            (i.prototype.haveComponent = function () {
                return this._components && 0 != this._components.length;
            }),
            (i.prototype.addComponent = function (a, b, c) {
                (void 0 === c && (c = !1), this._components || (this._components = []), this._components.push(a), (a.inActive = !0), a.visual && (b ? (c ? b.addChildAt(a.visual, 0) : b.addChild(a.visual)) : this._visual.addChild(a.visual)));
            }),
            (i.prototype.getComponent = function (a) {
                if (!this.haveComponent()) return null;
                for (var b = 0; b < this._components.length; b++) if (this._components[b].type == a && 1 == this._components[b].inActive) return this._components[b];
            }),
            (i.prototype.withdrawComponent = function (a) {
                a && (a.visual && a.visual.parent && a.visual.parent.removeChild(a.visual), a.tween && (a.tween.kill(), (a.tween = null)));
            }),
            (i.prototype.destroyComponent = function (a) {
                a && (a.visual && (a.visual.destroy({ children: !0 }), (a.visual = null)), a.tween && (a.tween.kill(), (a.tween = null)), (a.value = null), (a.type = d.DESTROY));
            }),
            (i.prototype.removeComponent = function (a, b) {
                if (null != a) {
                    var e, f;
                    if (('number' == typeof a && ((e = a), (f = this._components[a])), !f))
                        if (a instanceof c) {
                            for (var g = 0; g < this._components.length; g++)
                                if (this._components[g] == a) {
                                    ((e = g), (f = this._components[g]));
                                    break;
                                }
                        } else
                            for (var g = 0; g < this._components.length; g++)
                                if (this._components[g].type == a) {
                                    ((e = g), (f = this._components[g]));
                                    break;
                                }
                    (b ? this.withdrawComponent(f) : this.destroyComponent(f), this._components.splice(e, 1), f.type == d.CANNON_BALL && (this._cannonBallCmp && this._cannonBallCmp.visual.kill(), (this._cannonBallCmp = null)), f.type == d.LEAVES && (this._leavesCmps = !1), (f.type != d.VEIL_CLOSE && f.type != d.VEIL_LOCK) || (this._isLock = !1), f.type == d.HIDDEN_BUG && (this._hiddenBug = null));
                }
            }),
            (i.prototype.clearComponents = function () {
                if (this.haveComponent()) {
                    for (var a = 0; a < this._components.length; a++) {
                        var b = this._components[a];
                        (b.type == d.VISUAL && this._visualContainer.addChild(this._visual), this.destroyComponent(b), delete this._components[a], (b = null));
                    }
                    ((this._components.length = 0), (this._components = []), (this._strength = Math.min(this._strength, 1)), (this._hiddenBug = null), (this._leavesCmps = !1), (this._isLock = !1), (this._isUnLocker = !1), (this._cannonBallCmp = null));
                }
            }),
            (i.prototype.addChameleonComponent = function () {
                switch (this._color) {
                    case 1:
                        this._visualType = 'chameleonRed';
                        break;
                    case 2:
                        this._visualType = 'chameleonGreen';
                        break;
                    case 3:
                        this._visualType = 'chameleonYellow';
                        break;
                    case 4:
                        this._visualType = 'chameleonBlue';
                        break;
                    case 5:
                        this._visualType = 'chameleonPurple';
                }
                var b = this.getComponent(d.CHAMELEON);
                return b ? ((b.visual.texture = this._visual.texture), (b.visual.alpha = 1), void (b.tween = TweenLite.to(b.visual, 0.3, { alpha: 0 }))) : ((b = new c()), (b.type = d.CHAMELEON), (b.value = this.ChameleonComponentAction.bind(this)), (b.visual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, this._visual.frameName)), (b.visual.alpha = 0), void this.addComponent(b));
            }),
            (i.prototype.ChameleonComponentAction = function (a) {
                if ((void 0 === a && (a = !1), !this.kill && !this.dropable)) {
                    var b = 0;
                    do if ((a ? this._color-- : this._color++, this._color > 5 ? (this._color = 1) : this._color < 1 && (this._color = 5), b++, b > i.NONE_COLOR)) break;
                    while (0 == this._grid.checkAvailableColor(this._color));
                    this.changeType(this._color, [d.CHAMELEON]);
                }
            }),
            (i.prototype.addPentagonComponent = function () {
                var b = this.getComponent(d.PENTAGON);
                b || ((b = new c()), (b.type = d.PENTAGON), (b.value = this.PentagonComponentAction.bind(this, b)), (b.visual = new a.BigFly()), (b.valueColor = this._grid.rnd.rangeInt(e.RED, e.PURPLE)), this.addComponent(b));
                var f = 0;
                do if ((b.valueColor++, b.valueColor > 5 && (b.valueColor = 1), f++, f > i.NONE_COLOR)) break;
                while (0 == this._grid.checkAvailableColor(b.valueColor));
                switch ((b.visual.setColor(b.valueColor), b.valueColor)) {
                    case e.RED:
                        this._visualType = 'bigRed';
                        break;
                    case e.GREEN:
                        this._visualType = 'bigGreen';
                        break;
                    case e.YELLOW:
                        this._visualType = 'bigYellow';
                        break;
                    case e.BLUE:
                        this._visualType = 'bigBlue';
                        break;
                    case e.PURPLE:
                        this._visualType = 'bigPurple';
                }
            }),
            (i.prototype.PentagonComponentAction = function (a) {
                this.kill || this.dropable || (a.valueColor > 5 ? (a.valueColor = 1) : a.valueColor < 1 && (a.valueColor = 5), this.changeType(e.PENTAGON, null), a.visual.setColor(a.valueColor));
            }),
            (i.prototype.addThornComponent = function () {
                var b = this.getComponent(d.THORN);
                b || ((b = new c()), (b.type = d.THORN), (b.visual = new a.ThornAlert()), this.addComponent(b));
            }),
            (i.prototype.addCloudComponent = function () {
                var b = new c();
                ((b.type = d.CLOUD), (b.visual = new KY.Sprite(0, -2, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/cloud/' + Stage.rnd.rangeInt(1, 3))), this.addComponent(b, this._grid.additionalContainer2));
            }),
            (i.prototype.addCloudParentComponent = function (b) {
                var e = b;
                (e || ((e = new c()), (e.type = d.CLOUD_PARENT), (e.visual = new a.CloudParent())), this.addComponent(e, this._grid.additionalContainer2));
            }),
            (i.prototype.addLeavesComponent = function () {
                var b = new c();
                ((b.type = d.LEAVES), (b.visual = new a.Leaves()), this.addComponent(b), (this._leavesCmps = !0));
            }),
            (i.prototype.addIceComponent = function () {
                var b = new c();
                ((b.type = d.ICE), (b.visual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/frozen')), b.visual.addAnimation('pop', KY.Sprite.createAnimationState('bubbles/frozenBreak', 1, 10, 4), 30, !0), this.addComponent(b), (this._strength += 1));
            }),
            (i.prototype.addCrownComponent = function () {
                var b = new c();
                ((b.type = d.CROWN), (b.visual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/bubbleCrown')), this.addComponent(b));
            }),
            (i.prototype.addKeyPigComponent = function () {
                var b = new c();
                ((b.type = d.PIG_KEY), (b.visual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/keyPig')), this.addComponent(b));
            }),
            (i.prototype.addLaserComponent = function (b) {
                if (145 == b || 45 == b) throw 'Лазер не может быть направлен вниз!';
                var e = new c();
                ((e.type = d.LASER), (e.visual = new a.LaserArrow(b)), this.addComponent(e));
            }),
            (i.prototype.addSwitchPlusMinusComponent = function (b) {
                var e = new c();
                ((e.type = d.SWITCH_PLUS_MINUS), (e.visual = new a.SwitchPlusMinus(b)), this.addComponent(e));
            }),
            (i.prototype.addWindmillComponent = function () {
                var b = new c();
                ((b.type = d.WINDMILL), (b.visual = new a.Windmill()), this.addComponent(b));
            }),
            (i.prototype.addRandomWindmillComponent = function () {
                var a = new c();
                ((a.type = d.RANDOM_WINDMILL), this.addComponent(a));
            }),
            (i.prototype.addWheelComponent = function () {
                var b = new c();
                ((b.type = d.WHEEL), (b.visual = new a.Wheel()), this.addComponent(b));
            }),
            (i.prototype.addVeilUnlockerComponent = function () {
                var b = new c();
                ((b.type = d.UNLOCKER), (b.visual = new a.UnlockerBubble()), (this._color = e.DUMMY), (this._visualType = String(e.EMPTY)), (this._isUnLocker = !0), this.addComponent(b));
            }),
            (i.prototype.addVeilClose = function () {
                var b = new c();
                ((b.type = d.VEIL_CLOSE), (b.visual = new a.VeilClose()), this.addComponent(b), (this._isLock = !0));
            }),
            (i.prototype.addVeilLock = function () {
                var b = new c();
                ((b.type = d.VEIL_LOCK), (b.visual = new a.VeilLock()), this.addComponent(b), (this._isLock = !0));
            }),
            (i.prototype.addPusherComponent = function (b) {
                var e = new c();
                ((e.type = d.PUSHER), (e.visual = new a.Pusher(b)), this.addComponent(e));
            }),
            (i.prototype.addCannonBallComponent = function () {
                var b = new c();
                ((b.type = d.CANNON_BALL), (b.valueColor = e.NONE), (b.visual = new a.CannonBall(this._grid, b)), this.addComponent(b), (this._cannonBallCmp = b));
            }),
            (i.prototype.addSpecialBubbleComponent = function (b) {
                (b == d.SB_GUIDELINE && a.Options.GUIDELINE_NO_LIMIT && (b = d.SB_COIN), (this._color = e.DUMMY), (this._visualType = String(e.EMPTY)));
                var f = new c();
                ((f.type = b), (f.visual = new a.SpecialBubble(b)), this.addComponent(f));
            }),
            (i.prototype.addSpecialBubbleComponentWC = function (b) {
                ((this._color = e.DUMMY), (this._visualType = String(e.EMPTY)));
                var d = new c();
                ((d.type = b), (d.visual = new a.SpecialBubbleWC(b)), this.addComponent(d));
            }),
            (i.prototype.addPointBubbleComponent = function () {
                ((this._color = e.DUMMY), (this._visualType = String(e.EMPTY)));
                var b = new c();
                ((b.type = d.SB_MOVE), (b.visual = new a.PointBubble()), this.addComponent(b));
            }),
            (i.prototype.addWingsComponent = function (b) {
                var f = new c();
                ((f.type = d.WINGS), (f.visual = new a.Wings(this.mainColor == e.BURST)), this.addComponent(f, this._grid.additionalContainer));
            }),
            (i.prototype.addHiddenBugComponent = function (b) {
                var e = new c();
                ((e.type = d.HIDDEN_BUG), (e.visual = new a.HiddenBug(b)), this.addComponent(e, this._grid.additionalContainer), (this._hiddenBug = e));
            }),
            (i.prototype.addColorComponent = function (b) {
                var f = new c();
                ((f.type = d.COLOR), (f.valueColor = b));
                var g;
                switch (b) {
                    case e.RED:
                        g = 'Red';
                        break;
                    case e.GREEN:
                        g = 'Green';
                        break;
                    case e.YELLOW:
                        g = 'Yellow';
                        break;
                    case e.BLUE:
                        g = 'Blue';
                        break;
                    case e.PURPLE:
                        g = 'Purple';
                }
                ((f.visual = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/add' + g)), (this._strength = 2), this.addComponent(f));
            }),
            (i.prototype.addSpiderComponent = function () {
                var b = new c();
                ((b.type = d.SPIDER), (b.visual = new a.Spider(b)), this.addComponent(b, this._grid.additionalContainer));
            }),
            (i.prototype.checkSpiderWeb = function (a, b) {
                for (var c = 0; c < 6; c++) {
                    var e = this._grid.getNeighbors(this, c),
                        f = null != e && e != this && !e.getComponent(d.SPIDER);
                    a.visual.setWebVisible(c, f, b);
                }
            }),
            (i.prototype.checkPentagonGroup = function () {
                this._groupChildren = [];
                for (var a = 0; a < 6; a++) {
                    var b = this._grid.getNeighbors(this, a);
                    ((b._groupParent = this), this._groupChildren.push(b));
                }
            }),
            (i.prototype.addVisualComponent = function () {
                var a = new c();
                ((a.type = d.VISUAL), (a.visual = new PIXI.Container()), a.visual.addChild(this._visual), this.addComponent(a, this._grid.additionalContainer, !0));
            }),
            (i.prototype.destroy = function (a) {
                (this.clearComponents(), h.prototype.destroy.call(this, a));
            }),
            (i.NONE_COLOR = 6),
            (i.ACTIVATED_COLOR = [e.BOMB, e.RAINBOW, e.LIGHTNING, e.BURST, e.PLUS, e.MINUS, e.LASER, e.SWITCH_MINUS, e.SWITCH_PLUS, e.WINDMILL, e.RANDOM_WINDMILL]),
            (i.BOOSTER_SCORE = [e.FIREBALL, e.BOMB, e.LIGHTNING, e.BURST, e.LASER]),
            (i.NO_SCORE = [e.PLUS, e.MINUS, e.THORN, e.DUMMY, e.SNOWBALL, e.SWITCH_MINUS, e.SWITCH_PLUS, e.PUSHER, e.WHEEL]),
            (i.SAVE_SCORE = [e.SNOWBALL, e.PUSHER]),
            (i.ROTAION_MASK_HEX_PREFIX = ['c', '1', '2', 'e', 'd']),
            (i.WAVE_DELAY = 50),
            (i.ID = 0),
            (i._vec = new a.Vec2()),
            i
        );
    })(b);
    a.Bubble = h;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c(d) {
            var e = b.call(this) || this;
            return ((c._instance = e), (e._grid = d), (e._points = []), (e._sprites = []), (e._offset = 0), (e._ghostTimer = 0), (e._cleared = !0), (e._ghostSpr = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghost')), (e._ghostSpr.visible = !1), e.addChild(e._ghostSpr), e);
        }
        return (
            __extends(c, b),
            (c.prototype.touch = function () {
                this._contact = null;
            }),
            (c.prototype.build = function (b, c, d) {
                if (null == b) b = this._prevAng;
                else if (b == this._prevAng && 1 != d) return;
                if ((1 == this._cleared && this._grid.emit(a.World.EVENT_GUIDELINE_BEGIN), (this._cleared = !1), this._grid.getCurrentColor() == a.BubbleColor.FIREBALL)) return void this.buildFireball(b);
                ((this._points.length = 0), (this._contact = null), (this._prevAng = b), c || (c = a.Options.SPEED_COMPENSATION));
                var e = c / a.Options.SPEED_COMPENSATION,
                    f = a.Options.CANNON_X,
                    g = a.Options.CANNON_Y;
                this._points.push([f, g, 0]);
                for (var h, i, j, k = null, l = (a.Options.BUBBLE_SPEED * Math.cos(b)) / c, m = (a.Options.BUBBLE_SPEED * Math.sin(b)) / c, n = 0; n < c; n++) {
                    for (var o = !1; g > 0; ) {
                        if (((f += l), (g += m), f <= a.Options.GRID_LEFT_X || f >= a.Options.GRID_RIGHT_X)) {
                            ((l *= -1), null == k && 0 == a.Options.GUIDELINE_NO_LIMIT && (k = 0), (h = this._points.length - 1));
                            var p = this._grid.collisionBorder(f - this._grid.bubbleContainer.x, g - this._grid.bubbleContainer.y, this._points[h][0] - this._grid.bubbleContainer.x, this._points[h][1] - this._grid.bubbleContainer.y);
                            ((f = p.x + this._grid.bubbleContainer.x), (g = p.y + this._grid.bubbleContainer.y), (i = f - this._points[h][0]), (j = g - this._points[h][1]), this._points.push([f, g, 1 / (Math.sqrt(i * i + j * j) / a.Options.GUIDELINE_GAP)]));
                        }
                        if (g - this._grid.bubbleContainer.y <= 0)
                            if (this._grid instanceof a.CircleWorld) {
                                ((m *= -1), null == k && 0 == a.Options.GUIDELINE_NO_LIMIT && (k = 0), (h = this._points.length - 1));
                                var p = this._grid.collisionTop(f - this._grid.bubbleContainer.x, g - this._grid.bubbleContainer.y, this._points[h][0] - this._grid.bubbleContainer.x, this._points[h][1] - this._grid.bubbleContainer.y);
                                ((f = p.x + this._grid.bubbleContainer.x), (g = p.y + this._grid.bubbleContainer.y), (i = f - this._points[h][0]), (j = g - this._points[h][1]), this._points.push([f, g, 1 / (Math.sqrt(i * i + j * j) / a.Options.GUIDELINE_GAP)]));
                            } else {
                                b = Math.atan2(m, l);
                                var q = a.Options.ROW_ONE % 2 == 0,
                                    r = (g - this._grid.bubbleContainer.y) / Math.sin(b);
                                f -= r * Math.cos(b);
                                var s = Math.floor((f - this._grid.bubbleContainer.x + a.Options.GRID_OFFSET_X + (q ? 0 : a.Options.BUBBLE_RADIUS)) / a.Options.BUBBLE_GAP_X),
                                    t = 0;
                                if (!this._grid.getBubbleByCell(s, t)) {
                                    ((this._contact = { cx: s, cy: t, contact: null }), (o = !0));
                                    break;
                                }
                            }
                        if (m > 0 && g - this._grid.bubbleContainer.y > a.Options.CANNON_Y - 3 * a.Options.BUBBLE_DIAMETR) {
                            o = !0;
                            break;
                        }
                        if (((this._contact = this._grid.collisionWithActiveBubbles(f - this._grid.bubbleContainer.x, g - this._grid.bubbleContainer.y, !0)), null != this._contact)) {
                            o = !0;
                            break;
                        }
                        if (null != k && (k++, k >= a.Options.GUIDELINE_BOUNCE_STEPS * e)) {
                            o = !0;
                            break;
                        }
                    }
                    if (o) break;
                }
                ((h = this._points.length - 1), (i = f - this._points[h][0]), (j = g - this._points[h][1]), this._points.push([f, g, 1 / (Math.sqrt(i * i + j * j) / a.Options.GUIDELINE_GAP)]));
            }),
            (c.prototype.buildFireball = function (b) {
                ((this._points.length = 0), (this._contact = null), (this._prevAng = b));
                var c = a.Options.CANNON_X,
                    d = a.Options.CANNON_Y;
                this._points.push([c, d, 0]);
                for (var e = a.Options.BUBBLE_SPEED * Math.cos(b), f = a.Options.BUBBLE_SPEED * Math.sin(b); d > 0 && ((c += e), (d += f), !(d < -a.Options.BUBBLE_RADIUS)) && !(c < a.Options.GRID_LEFT_X || c > a.Options.GRID_RIGHT_X); );
                var g = c - this._points[0][0],
                    h = d - this._points[0][1];
                (this._points.push([c, d, 1 / (Math.sqrt(g * g + h * h) / a.Options.GUIDELINE_GAP)]), this._grid.emit(a.World.EVENT_GUIDELINE_NO_LIMIT_MOVE, null, null));
            }),
            (c.prototype.clear = function () {
                if (!this._cleared) {
                    this._cleared = !0;
                    for (var b = 0; b < this._sprites.length; b++) this._sprites[b].visible = !1;
                    (a.Options.GUIDELINE_NO_LIMIT && (this._grid.type == a.WorldType.CIRCLE ? TweenLite.to(this._ghostSpr, 0.1, { alpha: 0 }) : TweenLite.to(this._ghostSpr, 0.2, { alpha: 0, delay: 0.05 })), this._grid.emit(a.World.EVENT_GUIDELINE_END));
                }
            }),
            (c.prototype.contact = function () {}),
            (c.prototype.update = function (b) {
                if (!(!this._points || this._points.length < 2 || this._cleared)) {
                    for (var c = this._points.length - 1, d = 0, e = 0, f = 0, g = 0, h = 0, i = this._grid.getCurrentColor(); e < c; ) {
                        ((g = this._points[h + 1][2]), (d = e + this._offset * g));
                        var j = this._points[h][0],
                            k = this._points[h][1],
                            l = this._points[h + 1][0] - j,
                            m = this._points[h + 1][1] - k,
                            n = this.getSprite(f);
                        if (((n.frameName = this.folderName + 'guideline000' + (i > 0 ? i : 6)), (n.visible = !0), f++, (n.x = j + l * (d - h)), (n.y = k + m * (d - h)), (e += g), Math.floor(e + this._offset * g) > h)) {
                            if ((h++, h >= c)) break;
                            e = h + ((e - h) / g) * this._points[h + 1][2];
                        }
                    }
                    for (var o = f; o < this._sprites.length; o++) this._sprites[o].visible = !1;
                    if (((this._offset += a.Options.GUIDELINE_SPEED * b), this._offset >= 1 && (this._offset = 0), a.Options.GUIDELINE_NO_LIMIT))
                        if (this._contact) {
                            var p = this._ghostSpr.visible;
                            ((this._ghostSpr.visible = !0), i > 0 ? (this._ghostSpr.frameName = 'bubbles/ghost000' + i) : (this._ghostSpr.frameName = 'bubbles/ghost'), TweenLite.killTweensOf(this._ghostSpr), (this._ghostSpr.alpha = 1));
                            var q = a.Bubble.getPosFromCell(this._contact.cx, this._contact.cy),
                                r = q.x,
                                s = q.y;
                            if (this._grid instanceof a.CircleWorld) {
                                var l = r - this._grid.anchor.x,
                                    m = s - this._grid.anchor.y,
                                    t = Math.sqrt(l * l + m * m),
                                    u = Math.atan2(m, l);
                                ((r = this._grid.anchor.x + Math.cos(u + this._grid.anchor.rotation) * t), (s = this._grid.anchor.y + Math.sin(u + this._grid.anchor.rotation) * t));
                            }
                            (this._ghostSpr.x == r + this._grid.bubbleContainer.x && this._ghostSpr.y == s + this._grid.bubbleContainer.y && 1 == p) || ((this._ghostSpr.x = r + this._grid.bubbleContainer.x), (this._ghostSpr.y = s + this._grid.bubbleContainer.y), (this._ghostTimer = 0), this._grid.emit(a.World.EVENT_GUIDELINE_NO_LIMIT_MOVE, q.x, q.y, this._contact.cx, this._contact.cy));
                        } else (this._ghostSpr.visible && this._grid.emit(a.World.EVENT_GUIDELINE_END), (this._ghostSpr.visible = !1));
                }
            }),
            (c.prototype.getSprite = function (b) {
                if (this._sprites.length <= b) {
                    var c = new KY.Sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, this.folderName + 'guideline0001');
                    return (this.addChild(c), this._sprites.push(c), c);
                }
                return this._sprites[b];
            }),
            Object.defineProperty(c.prototype, 'folderName', {
                get: function () {
                    return a.Options.WHITE_GUIDELINE ? 'guideline/' : 'guideline2/';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'contact', {
                get: function () {
                    return c._instance._contact;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'dummyContact', {
                get: function () {
                    return !!c._instance._contact && !!c._instance._contact.contact && c._instance._contact.contact.mainColor == a.BubbleColor.DUMMY;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'points', {
                get: function () {
                    return c._instance._points;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'angleGuide', {
                get: function () {
                    return c._instance._prevAng;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'vx', {
                get: function () {
                    return a.Options.BUBBLE_SPEED * Math.cos(this.angleGuide);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'vy', {
                get: function () {
                    return a.Options.BUBBLE_SPEED * Math.sin(this.angleGuide);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c, 'isCleared', {
                get: function () {
                    return this._instance._cleared;
                },
                enumerable: !1,
                configurable: !0,
            }),
            c
        );
    })(PIXI.Container);
    a.Guideline = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b;
    !(function (a) {
        ((a.ERROR = 'MapLoaderEvent ERROR'), (a.COMPLETE = 'MapLoaderEvent COMPLETE'), (a.PROGRESS = 'MapLoaderEvent PROGRESS'), (a.HTTP_STATUS = 'MapLoaderEvent HTTP_STATUS'));
    })((b = a.MapLoaderEvent || (a.MapLoaderEvent = {})));
    var c = (function (c) {
        function d(b, d, e) {
            (void 0 === d && (d = !0), void 0 === e && (e = null));
            var f = c.call(this) || this;
            return ((f._zipped = d), null == e ? (f._variables = {}) : (f._variables = e), (f._request = new a.URLRequest(b)), (f._loader = new a.URLLoader()), (f._loader.dataFormat = d ? a.URLLoaderDataFormat.BINARY : a.URLLoaderDataFormat.TEXT), f._loader.on(a.URLLoader.COMPLETE, f.onLoadComplete, f), f._loader.on(a.URLLoader.IO_ERROR, f.onLoadError, f), f._loader.on(a.URLLoader.HTTP_STATUS, f.onHTTPStatus, f), f._loader.on(a.URLLoader.PROGRESS, f.onLoadProgress, f), f);
        }
        return (
            __extends(d, c),
            (d.prototype.load = function () {
                ((this._request.data = this._variables), this._loader.load(this._request));
            }),
            (d.prototype.onLoadProgress = function () {
                this.emit(b.PROGRESS);
            }),
            (d.prototype.onLoadComplete = function (a) {
                this._loader.close();
                var c;
                if (this._zipped) {
                    var d = a.currentTarget.data;
                    if (!(d.length > 0)) return ((this._errorData = 'MapLoader: received null data'), void this.onLoadError());
                    try {
                        ((c = pako.inflate(d, { to: 'string' })), (this._data = JSON.parse(c)));
                    } catch (b) {
                        if (((this._errorData = 'MapLoader: [' + b.toString() + '] uncompress or JSON converting failed for ' + this._request.url + '\n' + c), !(String(a.currentTarget.responseText).length > 0))) return ((this._errorData = 'MapLoader: received null data'), void this.onLoadError());
                        try {
                            ((c = String(a.currentTarget.responseText)), (this._data = JSON.parse(c)));
                        } catch (a) {
                            return ((this._errorData = 'MapLoader: [' + a.toString() + '] JSON converting failed for ' + this._request.url + '\n' + String(c)), void this.onLoadError());
                        }
                    }
                } else {
                    if (!(String(a.currentTarget.data).length > 0)) return ((this._errorData = 'MapLoader: received null data'), void this.onLoadError());
                    try {
                        ((c = String(a.currentTarget.data)), (this._data = JSON.parse(c)));
                    } catch (a) {
                        return ((this._errorData = 'MapLoader: [' + a.toString() + '] JSON converting failed for ' + this._request.url + '\n' + String(c)), void this.onLoadError());
                    }
                }
                (this.emit(b.COMPLETE, this._data), this._loader.close());
            }),
            (d.prototype.onHTTPStatus = function (a) {
                200 != a.status && this.emit(b.HTTP_STATUS, a.status);
            }),
            (d.prototype.onLoadError = function () {
                (this._loader.close(), this.emit(b.ERROR, this._errorData), a.MI.get().noServerConnect(!0));
            }),
            d
        );
    })(EventEmitter);
    a.MapLoader = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b() {}
        return (
            (b.setup = function (c, d, e) {
                ((this.BUBBLE_RADIUS = 46),
                    (this.BUBBLE_DIAMETR = 2 * this.BUBBLE_RADIUS),
                    (this.BUBBLE_COLLISION_RADIUS = a.Utils.int(0.2 * this.BUBBLE_RADIUS)),
                    (this.SCREEN_WIDTH = c),
                    (this.SCREEN_HEIGHT = d),
                    (this.MAP_WIDTH = this.BUBBLE_DIAMETR * this.ROW_ONE),
                    (this.MAP_BEGIN_Y = this.BUBBLE_RADIUS + 140),
                    (this.GRID_OFFSET_X = a.Utils.int(0.5 * this.SCREEN_WIDTH - this.BUBBLE_RADIUS - 0.5 * (this.SCREEN_WIDTH - this.MAP_WIDTH))),
                    (this.GRID_LIMIT = 648),
                    (this.GRID_LEFT_X = -this.GRID_OFFSET_X - this.BUBBLE_RADIUS + 10),
                    (this.GRID_RIGHT_X = this.MAP_WIDTH - this.GRID_OFFSET_X - this.BUBBLE_RADIUS - 10),
                    (this.BUBBLE_GAP_X = this.BUBBLE_DIAMETR),
                    (this.BUBBLE_GAP_Y = this.BUBBLE_DIAMETR - 12),
                    (this.CANNON_X = 0),
                    (this.CANNON_Y = d - a.Utils.int(e)),
                    (this.NEXT_BUBBLES_POSITON = [
                        [this.CANNON_X, this.CANNON_Y],
                        [this.CANNON_X + 170, this.CANNON_Y + 60],
                        [this.CANNON_X + 330, this.CANNON_Y + 60],
                    ]),
                    (this.BUBBLE_SPEED = 55),
                    (this.CONTACT_ANIMATION_VELOCITY = 24),
                    (this.GUIDELINE_GAP = 50),
                    (this.POP_DROPED_BUBBLE_Y = this.CANNON_Y - 50 - this.MAP_BEGIN_Y),
                    (this.ACTIVE_ROWS = a.Utils.int((b.CANNON_Y - b.GRID_LIMIT) / b.BUBBLE_DIAMETR + 2)));
            }),
            (b.resize = function (c, d, e) {
                ((this.SCREEN_WIDTH = c),
                    (this.SCREEN_HEIGHT = d),
                    (this.CANNON_X = 0),
                    (this.CANNON_Y = d - a.Utils.int(e)),
                    (this.NEXT_BUBBLES_POSITON = [
                        [this.CANNON_X, this.CANNON_Y],
                        [this.CANNON_X + 170, this.CANNON_Y + 60],
                        [this.CANNON_X + 330, this.CANNON_Y + 60],
                    ]),
                    (this.POP_DROPED_BUBBLE_Y = this.CANNON_Y - 50 - this.MAP_BEGIN_Y),
                    (this.ACTIVE_ROWS = a.Utils.int((b.CANNON_Y - b.GRID_LIMIT) / b.BUBBLE_DIAMETR + 2)));
            }),
            (b.getBubbleCount = function (a) {
                return a % 2 ? 10 * (a + 1) + 0.5 * (a + 1) : 10 * (a + 1) + 0.5 * a;
            }),
            (b.MAX_COLORS = 5),
            (b.ROW_ONE = 11),
            (b.ROW_TWO = 10),
            (b.CONTACT_ANIMATION_TIME = 0.3),
            (b.CONTACT_ROTATION_VELOCITY = 0.3),
            (b.CONTACT_SCALE_VELOCITY = 0.9),
            (b.MIN_GUIDELINE_ANGLE = (15 / 180) * Math.PI),
            (b.GUIDELINE_BOUNCE_STEPS = 15),
            (b.GUIDELINE_SPEED = 0.015),
            (b.SPEED_COMPENSATION = 4),
            (b.SHOW_STARTLEVEL_ANIMATIONS = !0),
            (b.WHITE_GUIDELINE = !0),
            (b.LEVEL_TARGET_SHOW_5PLUS = !0),
            (b.GUIDELINE_NO_LIMIT = !1),
            (b.MAX_NEXT_BUBBLES = 2),
            (b.ADD_5_BUBBLES = !1),
            (b.ACTIVE_ROWS = 0),
            b
        );
    })();
    a.Options = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (a) {
        function b(b) {
            void 0 === b && (b = !1);
            var c = a.call(this) || this;
            return ((c._bytesTotal = 0), (c._needUnpack = b), c._needUnpack && (c._dataFormat = d.BINARY), c);
        }
        return (
            __extends(b, a),
            (b.prototype.load = function (a) {
                var c = this,
                    e = a.makeURL();
                ((this._xmlhttp = new XMLHttpRequest()),
                    this._dataFormat == d.BINARY && this._xmlhttp.overrideMimeType('text/plain; charset=x-user-defined'),
                    this._xmlhttp.open(a.method, e, !0),
                    (this._xmlhttp.onprogress = function (a) {
                        c.emit(b.PROGRESS, a);
                    }),
                    (this._xmlhttp.onreadystatechange = function (a) {
                        if (c._xmlhttp.readyState == XMLHttpRequest.DONE)
                            if ((c.emit(b.HTTP_STATUS, { status: c._xmlhttp.status, self: c }), 200 != c._xmlhttp.status)) c.emit(b.IO_ERROR, { status: c._xmlhttp.status, self: c });
                            else if (((c._bytesTotal = c._xmlhttp.responseText.length), c._dataFormat == d.BINARY)) {
                                for (var e = [], f = 0; f < c._xmlhttp.responseText.length; ++f) e.push(255 & c._xmlhttp.responseText.charCodeAt(f));
                                c._needUnpack ? c.emit(b.COMPLETE, { currentTarget: { data: pako.inflate(e, { to: 'string' }) }, self: c }) : c.emit(b.COMPLETE, { currentTarget: { data: e, responseText: c._xmlhttp.responseText }, self: c });
                            } else c.emit(b.COMPLETE, { currentTarget: { data: c._xmlhttp.responseText }, self: c });
                    }),
                    this._xmlhttp.send(a.makeFormData()));
            }),
            (b.prototype.close = function () {
                (this.removeAllListeners(), this._xmlhttp.abort());
            }),
            Object.defineProperty(b.prototype, 'bytesTotal', {
                get: function () {
                    return this._bytesTotal;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'dataFormat', {
                set: function (a) {
                    this._dataFormat = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.get = function (a) {
                return new Promise(function (b, c) {
                    var d = new XMLHttpRequest();
                    (d.open('GET', a, !0),
                        (d.onreadystatechange = function (a) {
                            d.readyState == XMLHttpRequest.DONE && 200 == d.status ? b(d.responseText) : d.readyState == XMLHttpRequest.DONE && 200 != d.status && c();
                        }),
                        d.send());
                });
            }),
            (b.get_easy = function (a) {
                try {
                    var b = new XMLHttpRequest();
                    (b.open('GET', a, !0), b.send());
                } catch (a) {}
            }),
            (b.post = function (a, b, c) {
                var d = this;
                return (
                    void 0 === c && (c = !0),
                    new Promise(function (e, f) {
                        var g = new XMLHttpRequest();
                        (g.open('POST', b, c),
                            g.setRequestHeader('Content-type', 'application/json; charset=utf-8'),
                            (g.onreadystatechange = function (a) {
                                g.readyState == XMLHttpRequest.DONE && 200 == g.status ? e(g.responseText) : g.readyState == XMLHttpRequest.DONE && 200 != g.status && f(g.statusText);
                            }),
                            g.send(d.stringify(a)));
                    })
                );
            }),
            (b.beacon = function (a, b, c) {
                void 0 === c && (c = !0);
                var d = !1;
                (navigator.sendBeacon && (d = navigator.sendBeacon(b, this.stringify(a))), d || this.post(a, b, c));
            }),
            (b.stringify = function (a) {
                var b = [];
                return JSON.stringify(a, function (a, c) {
                    if (null != c && 'object' == typeof c) {
                        if (b.indexOf(c) >= 0) return;
                        b.push(c);
                    }
                    return c;
                });
            }),
            (b.COMPLETE = 'COMPLETE'),
            (b.IO_ERROR = 'IO_ERROR'),
            (b.HTTP_STATUS = 'HTTP_STATUS'),
            (b.PROGRESS = 'PROGRESS'),
            b
        );
    })(EventEmitter);
    a.URLLoader = b;
    var c = (function () {
        function a(a) {
            ((this.url = a), (this.method = e.GET));
        }
        return (
            (a.prototype.makeURL = function () {
                var a = this.url + (this.data ? '?' : '');
                for (var b in this.data) a += '&' + b + '=' + encodeURI(this.data[b]);
                return a;
            }),
            (a.prototype.makeFormData = function () {
                var a = new FormData();
                for (var b in this.data) a.append(b, this.data[b]);
                return a;
            }),
            (a.navigateToURL = function (a) {
                window.open(a.makeURL(), '_blank');
            }),
            a
        );
    })();
    a.URLRequest = c;
    var d;
    !(function (a) {
        ((a.BINARY = 'BINARY'), (a.TEXT = 'TEXT'));
    })((d = a.URLLoaderDataFormat || (a.URLLoaderDataFormat = {})));
    var e;
    !(function (a) {
        ((a.POST = 'POST'), (a.GET = 'GET'));
    })((e = a.URLRequestMethod || (a.URLRequestMethod = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._arg = 0), (d._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/bigFly/bigBlueFly0001')), (d._hitVisual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/bigFly/bigBlueFly0001')), (d._hitVisual.alpha = 0), d._visual.addAnimation(String(a.BubbleColor.RED), c.createAnimationState('bubbles/bigFly/bigRedFly', 1, 4, 4), 20, !0), d._visual.addAnimation(String(a.BubbleColor.GREEN), c.createAnimationState('bubbles/bigFly/bigGreenFly', 1, 4, 4), 20, !0), d._visual.addAnimation(String(a.BubbleColor.YELLOW), c.createAnimationState('bubbles/bigFly/bigYellowFly', 1, 4, 4), 20, !0), d._visual.addAnimation(String(a.BubbleColor.BLUE), c.createAnimationState('bubbles/bigFly/bigBlueFly', 1, 4, 4), 20, !0), d._visual.addAnimation(String(a.BubbleColor.PURPLE), c.createAnimationState('bubbles/bigFly/bigPurpleFly', 1, 4, 4), 20, !0), (d._isFree = !1), d.addChild(d._visual), d.addChild(d._hitVisual), d);
            }
            return (
                __extends(d, b),
                (d.prototype.setColor = function (a) {
                    this._isFree || ((this._arg = 0), (this._hitVisual.frameName = this._visual.frameName), (this._hitVisual.alpha = 1), TweenLite.to(this._hitVisual, 0.15, { alpha: 0 }), this._visual.play(String(a), !0));
                }),
                (d.prototype.update = function (a) {
                    this._visual.y = 6 * Math.sin((this._arg += 0.06 * a));
                }),
                (d.prototype.destroy = function (a) {
                    (TweenLite.killTweensOf(this._hitVisual), (this._isFree = !0), b.prototype.destroy.call(this, { children: !0 }));
                }),
                d
            );
        })(b);
    a.BigFly = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                ((d._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'flash/blueFlash0001')), d._visual.scale.set(2));
                var e = 25;
                return (d._visual.addAnimation(String(a.BubbleColor.RED), KY.Sprite.createAnimationState('flash/redFlash', 1, 8, 4), e), d._visual.addAnimation(String(a.BubbleColor.BLUE), KY.Sprite.createAnimationState('flash/blueFlash', 1, 8, 4), e), d._visual.addAnimation(String(a.BubbleColor.GREEN), KY.Sprite.createAnimationState('flash/greenFlash', 1, 8, 4), e), d._visual.addAnimation(String(a.BubbleColor.YELLOW), KY.Sprite.createAnimationState('flash/yellowFlash', 1, 8, 4), e), d._visual.addAnimation(String(a.BubbleColor.PURPLE), KY.Sprite.createAnimationState('flash/purpleFlash', 1, 8, 4), e), d.addChild(d._visual), d);
            }
            return (
                __extends(d, b),
                (d.prototype.play = function (b) {
                    var c = this;
                    return b < a.BubbleColor.RED || b > a.BubbleColor.PURPLE
                        ? void this.destroy()
                        : void this._visual.play(String(b), !1, function () {
                              c.destroy();
                          });
                }),
                d
            );
        })(b);
    a.BubbleFlash = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d, e) {
                var f = b.call(this) || this;
                return ((f._ball = new c('atlas', 'bubbles/gray')), (f._ball2 = new c('atlas', 'bubbles/gray')), (f._ball2.alpha = 0), (f._visual = new c('atlas', 'bubbles/cannonBall')), (f._curColor = a.BubbleColor.NONE), (f._grid = d), (f._component = e), f._grid.on(a.World.EVENT_CHANGE_NEXT_BUBBLE_COLOR, f.changeColor, f), f.addChild(f._ball), f.addChild(f._ball2), f.addChild(f._visual), f);
            }
            return (
                __extends(d, b),
                (d.prototype.changeColor = function (a) {
                    var b = a;
                    b != this._curColor && (TweenLite.killTweensOf(this._ball2), (this._ball2.frameName = this.colorName), (this._ball2.alpha = 1), (this._curColor = b), (this._ball.frameName = this.colorName), (this._component.valueColor = b), TweenLite.to(this._ball2, 0.2, { alpha: 0 }));
                }),
                Object.defineProperty(d.prototype, 'colorName', {
                    get: function () {
                        switch (this._curColor) {
                            case a.BubbleColor.RED:
                                return 'bubbles/red';
                            case a.BubbleColor.GREEN:
                                return 'bubbles/green';
                            case a.BubbleColor.YELLOW:
                                return 'bubbles/yellow';
                            case a.BubbleColor.BLUE:
                                return 'bubbles/blue';
                            case a.BubbleColor.PURPLE:
                                return 'bubbles/purple';
                            default:
                                return 'bubbles/gray';
                        }
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.prototype.kill = function () {
                    this._grid.off(a.World.EVENT_CHANGE_NEXT_BUBBLE_COLOR, this.changeColor, this);
                }),
                (d.prototype.destroy = function (c) {
                    (TweenLite.killTweensOf(this._ball2), this._grid.off(a.World.EVENT_CHANGE_NEXT_BUBBLE_COLOR, this.changeColor, this), (this._grid = null), (this._component = null), b.prototype.destroy.call(this, { children: !0 }));
                }),
                d
            );
        })(b);
    a.CannonBall = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function d() {
                var e = c.call(this) || this;
                return ((e._id = d.ID++), (e._container = new b()), (e._visual = new KY.Sprite(0, -2, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/cloudParent/000' + Stage.rnd.rangeInt(1, 2))), e.addChild(e._container), e._container.addChild(e._visual), e);
            }
            return (
                __extends(d, c),
                (d.prototype.setOffset = function (a, b) {
                    ((this._container.x = a), (this._container.y = b), a < 0 ? (this._visual.scale.x = -1) : (this._visual.scale.x = 1));
                }),
                (d.prototype.update = function (a) {
                    ((this._container.x -= 0.15 * this._container.x), (this._container.y -= 0.15 * this._container.y));
                }),
                (d.prototype.destroy = function (a) {
                    c.prototype.destroy.call(this, { children: !0 });
                }),
                (d.ID = 0),
                d
            );
        })(b);
    a.CloudParent = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this;
                return (
                    (e._back = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/bg')),
                    (e._shadow1 = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/shadow')),
                    e._shadow1.anchor.set(1, 0),
                    (e._shadow1.y = -a.Options.BUBBLE_RADIUS),
                    (e._shadow2 = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/shadow')),
                    e._shadow2.anchor.set(1, 0),
                    (e._shadow2.y = -a.Options.BUBBLE_RADIUS),
                    (e._shadow2.scale.x = -1),
                    (e._fly1 = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/fly')),
                    e._fly1.anchor.set(1, 0),
                    (e._fly1.y = -a.Options.BUBBLE_RADIUS),
                    (e._fly2 = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/fly')),
                    e._fly2.anchor.set(1, 0),
                    (e._fly2.y = -a.Options.BUBBLE_RADIUS),
                    (e._fly2.scale.x = -1),
                    (e._blink = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/blink')),
                    (e._head = new c(0, -a.Options.BUBBLE_RADIUS, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/hiddenBug/head')),
                    e.addChild(e._back),
                    e.addChild(e._shadow1),
                    e.addChild(e._shadow2),
                    e.addChild(e._fly1),
                    e.addChild(e._fly2),
                    e.addChild(e._blink),
                    e.addChild(e._head),
                    e.closeFast(),
                    (e._isOpen = d),
                    (e._isFree = !1),
                    e
                );
            }
            return (
                __extends(d, b),
                (d.prototype.closeFast = function () {
                    ((this._fly1.rotation = 0), (this._fly2.rotation = -this._fly1.rotation), (this._fly1.scale.x = 1), (this._fly1.scale.y = 1), (this._fly2.scale.x = -this._fly1.scale.x), (this._fly2.scale.y = this._fly1.scale.y), (this._back.alpha = 1), (this._shadow1.alpha = 0), (this._shadow2.alpha = 0));
                }),
                (d.prototype.open = function () {
                    if (!this._isFree) {
                        var a = 0.5;
                        (TweenLite.to(this._fly1, a, { angle: 20 }), TweenLite.to(this._fly2, a, { angle: -20 }), TweenLite.to(this._fly1.scale, a, { x: 0.9, y: 0.85 }), TweenLite.to(this._fly2.scale, a, { x: -0.9, y: 0.85 }), TweenLite.to(this._back, a, { alpha: 0 }), TweenLite.to(this._shadow1, a, { alpha: 1 }), TweenLite.to(this._shadow2, a, { alpha: 1 }));
                    }
                }),
                (d.prototype.close = function () {
                    if (!this._isFree) {
                        var a = 0.5;
                        (TweenLite.to(this._fly1, a, { angle: 0 }), TweenLite.to(this._fly2, a, { angle: 0 }), TweenLite.to(this._fly1.scale, a, { x: 1, y: 1 }), TweenLite.to(this._fly2.scale, a, { x: -1, y: 1 }), TweenLite.to(this._back, a, { alpha: 1 }), TweenLite.to(this._shadow1, a, { alpha: 0 }), TweenLite.to(this._shadow2, a, { alpha: 0 }));
                    }
                }),
                (d.prototype.next = function () {
                    ((this._isOpen = !this._isOpen), this._isOpen ? this.open() : this.close());
                }),
                (d.prototype.init = function () {
                    this._isOpen && this.open();
                }),
                (d.prototype.update = function (a) {}),
                Object.defineProperty(d.prototype, 'isOpen', {
                    get: function () {
                        return this._isOpen;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.prototype.destroy = function (a) {
                    (TweenLite.killTweensOf(this._fly1), TweenLite.killTweensOf(this._fly2), TweenLite.killTweensOf(this._fly1.scale), TweenLite.killTweensOf(this._fly2.scale), TweenLite.killTweensOf(this._back), TweenLite.killTweensOf(this._shadow1), TweenLite.killTweensOf(this._shadow2), (this._isFree = !0), b.prototype.destroy.call(this, { children: !0 }));
                }),
                d
            );
        })(b);
    a.HiddenBug = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(e) {
                var f = b.call(this) || this;
                return ((f._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/laserArrow')), (f._angleInd = d.ANGLES.indexOf(e)), (f.angle = d.ANGLES_IN_GAME[f._angleInd]), f.addChild(f._visual), f);
            }
            return (
                __extends(d, b),
                (d.prototype.next = function () {
                    (this._angleInd++, this._angleInd >= d.ANGLES.length && (this._angleInd = 0), (this.angle = d.ANGLES[this._angleInd]));
                }),
                (d.prototype.getMovePattern = function () {
                    return d.MOVE_PATTERNS[this._angleInd];
                }),
                (d.prototype.getAngle = function () {
                    return d.ANGLES_IN_GAME[this._angleInd];
                }),
                (d.ANGLES = [0, 180, 225, 315]),
                (d.ANGLES_IN_GAME = [0, 180, 240, 300]),
                (d.MOVE_PATTERNS = [
                    [1, 0],
                    [-1, 0],
                    [-1, -1],
                    [1, -1],
                ]),
                d
            );
        })(b);
    a.LaserArrow = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var a = b.call(this) || this;
                return ((a._spr = new c(0, 0, 'atlas', 'bubbles/leaves/leaves')), (a._isFree = !1), a.addChild(a._spr), a);
            }
            return (
                __extends(d, b),
                (d.prototype.hide = function () {
                    if (!this._isFree) {
                        a.SoundsManager.breakingLeaves();
                        var b = Stage.rnd.range(1.05, 1.2);
                        this._t2 = TweenLite.to(this._spr.scale, 0.2, { x: b, y: b });
                    }
                }),
                (d.prototype.destroy = function (a) {
                    (this._t2 && (this._t2.kill(), (this._t2 = null)), (this._isFree = !0), b.prototype.destroy.call(this, a));
                }),
                d
            );
        })(b);
    a.Leaves = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._visual = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleBg')), (d._top = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleUp')), (d._moveCounter = null), (d._moveCounter = Stage.rnd.rangeIntJS(5, 7)), (d._icon = new c('wc', 'specialBubble/wcBonusCount0001')), d._icon.scale.set(0.9), (d._moveTimer = 0), d.moveBubbleChangeVisual(), (d._ang = 0), d.addChild(d._visual), d.addChild(d._icon), d.addChild(d._top), d);
            }
            return (
                __extends(d, b),
                (d.prototype.moveBubbleChangeVisual = function () {
                    switch (this._moveCounter) {
                        case 5:
                            this._icon.frameName = 'specialBubble/wcBonusCount0001';
                            break;
                        case 6:
                            this._icon.frameName = 'specialBubble/wcBonusCount0002';
                            break;
                        case 7:
                            this._icon.frameName = 'specialBubble/wcBonusCount0003';
                    }
                }),
                (d.prototype.update = function (a) {
                    this._icon.y = 5 * Math.sin((this._ang += 0.04 * a));
                    var b = this._icon.scale.x + 0.1 * (0.9 - this._icon.scale.x);
                    (this._icon.scale.set(b), (this._moveTimer += 0.01667 * a), this._moveTimer >= d.MOVE_FLIP_TIME && ((this._moveTimer = 0), this._moveCounter++, this._moveCounter > 7 && (this._moveCounter = 5), this._icon.scale.set(1), this.moveBubbleChangeVisual()));
                }),
                Object.defineProperty(d.prototype, 'moveValue', {
                    get: function () {
                        return this._moveCounter - 4;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.MOVE_FLIP_TIME = 2),
                d
            );
        })(b);
    a.PointBubble = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function d(d) {
                var e = a.call(this) || this;
                return ((e._arg = 0), (e._isRight = d), (e._container = new b()), (e._visual = new c('atlas', 'bubbles/pusher/pusherBody')), (e._handler = new c('atlas', 'bubbles/pusher/pusherHandler')), d || (e._container.scale.x = -1), (e._isFree = !1), e._container.addChild(e._handler), e._container.addChild(e._visual), e.addChild(e._container), e);
            }
            return (
                __extends(d, a),
                (d.prototype.push = function () {
                    this._isFree || (TweenLite.to(this._visual.scale, 0.1, { x: 0.7, overwrite: 'auto' }), TweenLite.to(this._visual.scale, 0.2, { x: 1, ease: Back.easeOut, overwrite: 'auto', delay: 0.1 }));
                }),
                (d.prototype.update = function (a) {
                    this._container.rotation = 0.1 * Math.sin((this._arg += 0.05 * a)) + 0.05;
                }),
                Object.defineProperty(d.prototype, 'isRight', {
                    get: function () {
                        return this._isRight;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.prototype.destroy = function (b) {
                    (TweenLite.killTweensOf(this._visual.scale), (this._isFree = !0), a.prototype.destroy.call(this, { children: !0 }));
                }),
                d
            );
        })(b);
    a.Pusher = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this;
                switch (((e._type = d), (e._visual = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleBg')), (e._top = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleUp')), (e._moveCounter = null), d)) {
                    case a.TypeBubbleComponent.SB_MOVE:
                        ((e._moveCounter = Stage.rnd.rangeIntJS(5, 7)), (e._icon = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/extMoveCount0001')), e._icon.scale.set(0.9), (e._moveTimer = 0), e.moveBubbleChangeVisual());
                        break;
                    case a.TypeBubbleComponent.SB_GUIDELINE:
                        ((e._icon = new c('ui', 'modifIcon0003')), e._icon.scale.set(0.5));
                        break;
                    case a.TypeBubbleComponent.SB_COIN:
                        e._icon = new c('ui0', 'popups/coinIcon');
                }
                return ((e._ang = 0), e.addChild(e._visual), e.addChild(e._icon), e.addChild(e._top), e);
            }
            return (
                __extends(d, b),
                (d.prototype.moveBubbleChangeVisual = function () {
                    switch (this._moveCounter) {
                        case 5:
                            this._icon.frameName = 'bubbles/specialBubble/extMoveCount0001';
                            break;
                        case 6:
                            this._icon.frameName = 'bubbles/specialBubble/extMoveCount0002';
                            break;
                        case 7:
                            this._icon.frameName = 'bubbles/specialBubble/extMoveCount0003';
                    }
                }),
                (d.prototype.update = function (b) {
                    if (((this._icon.y = 5 * Math.sin((this._ang += 0.04 * b))), this._type == a.TypeBubbleComponent.SB_MOVE)) {
                        var c = this._icon.scale.x + 0.1 * (0.9 - this._icon.scale.x);
                        (this._icon.scale.set(c), (this._moveTimer += 0.01667 * b), this._moveTimer >= d.MOVE_FLIP_TIME && ((this._moveTimer = 0), this._moveCounter++, this._moveCounter > 7 && (this._moveCounter = 5), this._icon.scale.set(1), this.moveBubbleChangeVisual()));
                    }
                }),
                Object.defineProperty(d.prototype, 'moveValue', {
                    get: function () {
                        return this._moveCounter;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.MOVE_FLIP_TIME = 2),
                d
            );
        })(b);
    a.SpecialBubble = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this;
                switch (((e._visual = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleBg')), (e._top = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleUp')), d)) {
                    case a.TypeBubbleComponent.SB_LIGHTNING:
                        ((e._icon = new c('wc', 'specialBubble/wcEnergyIcon')), e._icon.scale.set(0.95));
                        break;
                    case a.TypeBubbleComponent.SB_FROZEN:
                        e._icon = new c('wc', 'specialBubble/wcSnowflakeIcon');
                }
                return ((e._ang = 0), e.addChild(e._visual), e.addChild(e._icon), e.addChild(e._top), e);
            }
            return (
                __extends(d, b),
                (d.prototype.update = function (a) {
                    this._icon.y = 5 * Math.sin((this._ang += 0.04 * a));
                }),
                Object.defineProperty(d.prototype, 'moveValue', {
                    get: function () {
                        return null;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
    a.SpecialBubbleWC = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this;
                ((e._self = d), (e._visual = new KY.Sprite(0, -2, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/spider/spider0001')), e._visual.addAnimation('idle', KY.Sprite.createAnimationState('bubbles/spider/spider', 1, 9, 4), 20, !0, !0, 200), e._visual.play('idle', !0), (e._isFree = !1), (e._web = []));
                for (var f = 0; f < 6; f++) {
                    var g = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/spider/spiderWeb');
                    (g.anchor.set(0.5, 0), (g.angle = 270 - 60 * f), e._web.push(g), (g.alpha = 0), e.addChild(g));
                }
                return (e.addChild(e._visual), e);
            }
            return (
                __extends(d, b),
                (d.prototype.setWebVisible = function (b, c, d) {
                    if (!this._isFree) {
                        0 == b ? (b = 2) : 2 == b && (b = 0);
                        var e = this._web[b].visible;
                        ((this._web[b].visible = c), d || !e || this._web[b].visible || a.SoundsManager.hitSpider(), 0 == this._web[b].alpha && ((this._web[b].alpha = 0.001), TweenLite.to(this._web[b], 0.2, { alpha: 1 })));
                    }
                }),
                (d.prototype.destroy = function (a) {
                    for (var c = 0; c < 6; c++) TweenLite.killTweensOf(this._web[c]);
                    ((this._isFree = !0), b.prototype.destroy.call(this, { children: !0 }));
                }),
                d
            );
        })(b);
    a.Spider = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(a) {
                void 0 === a && (a = !1);
                var d = b.call(this) || this;
                return ((d._plus = a), (d._visual = new c('atlas', a ? 'bubbles/switch_plus' : 'bubbles/switch_minus')), (d._old = new c('atlas', a ? 'bubbles/switch_plus' : 'bubbles/switch_minus')), (d._old.alpha = 0), (d._effect = new c('atlas', 'bubbles/switchMinusPlus')), (d._effect.alpha = 0), (d._isFree = !1), d.addChild(d._effect), d.addChild(d._visual), d.addChild(d._old), d);
            }
            return (
                __extends(d, b),
                (d.prototype.switch = function () {
                    this._isFree || ((this._plus = !this._plus), (this._old.frameName = this._visual.frameName), (this._old.alpha = 1), (this._visual.frameName = this._plus ? 'bubbles/switch_plus' : 'bubbles/switch_minus'), TweenLite.to(this._old, 0.2, { alpha: 0 }), (this._effect.alpha = 0.7), this._effect.scale.set(0.1), TweenLite.to(this._effect.scale, 0.4, { x: 1, y: 1 }), TweenLite.to(this._effect, 0.2, { alpha: 0, delay: 0.2 }));
                }),
                (d.prototype.destroy = function (a) {
                    ((this._isFree = !0), TweenLite.killTweensOf(this._old), TweenLite.killTweensOf(this._effect), TweenLite.killTweensOf(this._effect.scale), b.prototype.destroy.call(this, a));
                }),
                Object.defineProperty(d.prototype, 'color', {
                    get: function () {
                        return this._plus ? a.BubbleColor.SWITCH_PLUS : a.BubbleColor.SWITCH_MINUS;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
    a.SwitchPlusMinus = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._hp = 3), (d._visual = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/thornAlert')), (d._visual.alpha = 0), (d._arg = 0), d.addChild(d._visual), d);
            }
            return (
                __extends(d, b),
                (d.prototype.decHP = function () {
                    (this._hp--, (this._visual.alpha = 1), (this._arg = Math.PI / 2));
                }),
                (d.prototype.update = function (a) {
                    if (this.isDone() || 3 == this._hp) return void (this._visual.alpha = 0);
                    var b = Math.min(0.9, 1 - this._hp / 3),
                        c = 0.8 * b;
                    this._visual.alpha = c * (0.2 + 0.8 * Math.sin((this._arg += 0.08 * a)));
                }),
                (d.prototype.isDone = function () {
                    return this._hp <= 0;
                }),
                d
            );
        })(b);
    a.ThornAlert = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._visual = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/veil/unlockerDiamondBack')), (d._top = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/veil/unlockerDiamondBubble')), (d._moveCounter = null), (d._icon = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/veil/unlockerDiamond')), (d._ang = 0), d.addChild(d._visual), d.addChild(d._icon), d.addChild(d._top), d);
            }
            return (
                __extends(d, b),
                (d.prototype.update = function (a) {
                    this._icon && (this._icon.y = 5 * Math.sin((this._ang += 0.04 * a)));
                }),
                Object.defineProperty(d.prototype, 'moveValue', {
                    get: function () {
                        return this._moveCounter;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.prototype.destroy = function (a) {
                    (this._visual.destroy(), this._top.destroy(), this._icon.destroy(), (this._visual = null), (this._top = null), (this._icon = null), b.prototype.destroy.call(this, a));
                }),
                d
            );
        })(b);
    a.UnlockerBubble = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b() {
                var b = a.call(this) || this;
                return ((b._spr = new c(0, 0, 'atlas', 'bubbles/veil/closebbl')), (b._isFree = !1), b.addChild(b._spr), b);
            }
            return (
                __extends(b, a),
                (b.prototype.hide = function () {
                    if (!this._isFree) {
                        var a = 0.5;
                        this._t2 = TweenLite.to(this._spr.scale, 0.2, { x: a, y: a, ease: Back.easeIn });
                    }
                }),
                (b.prototype.destroy = function (b) {
                    (this._t2 && (this._t2.kill(), (this._t2 = null)), (this._isFree = !0), a.prototype.destroy.call(this, b));
                }),
                b
            );
        })(b);
    a.VeilClose = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b() {
                var b = a.call(this) || this;
                return ((b._spr = new c(0, 0, 'atlas', 'bubbles/veil/lock')), (b._isFree = !1), b.addChild(b._spr), b);
            }
            return (
                __extends(b, a),
                (b.prototype.done = function () {
                    this._spr.frameName = 'bubbles/veil/lockDone';
                }),
                (b.prototype.hide = function () {
                    if (!this._isFree) {
                        var a = 0.5;
                        this._t2 = TweenLite.to(this._spr.scale, 0.2, { x: a, y: a, ease: Back.easeIn });
                    }
                }),
                (b.prototype.destroy = function (b) {
                    (this._t2 && (this._t2.kill(), (this._t2 = null)), (this._isFree = !0), a.prototype.destroy.call(this, b));
                }),
                b
            );
        })(b);
    a.VeilLock = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b() {
                var b = a.call(this) || this;
                return ((b._visual = new c('atlas', 'bubbles/wheel')), b.addChild(b._visual), b);
            }
            return (
                __extends(b, a),
                (b.prototype.goRotate = function () {
                    this._tween = TweenLite.to(this._visual, 0.3, { angle: this._visual.angle + 60 });
                }),
                (b.prototype.destroy = function (b) {
                    (this._tween && (this._tween.kill(), (this._tween = null)), a.prototype.destroy.call(this, b));
                }),
                b
            );
        })(b);
    a.Wheel = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b() {
                var b = a.call(this) || this;
                return ((b._visual = new c('atlas', 'bubbles/windmill/windmill')), (b._fg = new c('atlas', 'bubbles/windmill/windmillFg')), b.addChild(b._visual), b.addChild(b._fg), b);
            }
            return (
                __extends(b, a),
                (b.prototype.update = function (a) {
                    this._visual.rotation += 0.02 * a;
                }),
                b
            );
        })(b);
    a.Windmill = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this;
                return ((e._isDynamite = d), (e._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/bat/bat_0001')), (e._visual.anchor.y = 1), e._visual.addAnimation('def', KY.Sprite.createAnimationState('bubbles/bat/bat_', 1, 5, 4), 20, !0, !1, 200), e._visual.addAnimation('dynamiteDef', ['bubbles/bat/bat_dynamite'], 20, !0, !1, 200), e._visual.addAnimation('fly', ['bubbles/bat/batHead']), (e._wing1 = new c(-10, 0.5 * -e._visual.height - 15, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/bat/batWing')), (e._wing1.anchor.x = 1), (e._wing2 = new c(10, 0.5 * -e._visual.height - 15, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/bat/batWing')), (e._wing2.scale.x = -1), (e._wing2.anchor.x = 1), (e._arg = 0), e.addChild(e._wing1), e.addChild(e._wing2), e.addChild(e._visual), e.def(), e);
            }
            return (
                __extends(d, b),
                (d.prototype.def = function () {
                    (this._isDynamite ? this._visual.play('dynamiteDef', !0) : this._visual.play('def', !0), (this._wing1.alpha = 0), (this._wing2.alpha = 0), (this._isFlying = !1));
                }),
                (d.prototype.fly = function () {
                    (this._visual.play('fly'), (this._arg = 0), (this._isFlying = !0), (this._wing1.alpha = 1), (this._wing2.alpha = 1), (this._wing1.rotation = 0), (this._wing2.rotation = 0));
                }),
                (d.prototype.update = function (a) {
                    this._isFlying && (0 == a && (a = 1), (this._wing1.rotation = 0.5 * Math.sin((this._arg += 0.5 * a))), (this._wing2.rotation = -this._wing1.rotation));
                }),
                Object.defineProperty(d.prototype, 'isFlying', {
                    get: function () {
                        return this._isFlying;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
    a.Wings = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function d() {
            var c = b.call(this) || this;
            return ((c._windmillTypeException = [a.TypeBubbleComponent.CROWN, a.TypeBubbleComponent.PENTAGON, a.TypeBubbleComponent.PIG_KEY, a.TypeBubbleComponent.SB_COIN, a.TypeBubbleComponent.SB_GUIDELINE, a.TypeBubbleComponent.SB_MOVE, a.TypeBubbleComponent.WINDMILL, a.TypeBubbleComponent.RANDOM_WINDMILL]), (c._rnd = new KY.Rnd()), (c._guideline = new a.Guideline(c)), d.TMP_BUBBLE || (d.TMP_BUBBLE = new a.Bubble(null)), (c.needGuidelineOptimization = !0), c);
        }
        return (
            __extends(d, b),
            (d.prototype.setup = function (b, c, d) {
                (void 0 === c && (c = !0),
                    void 0 === d && (d = !1),
                    (this._KOSTYL = !1),
                    (this._stopCheckZeroBubble = !1),
                    (this._unlockCells = null),
                    (this._moveIndex = 0),
                    (this._gameEnd = !1),
                    (this._fountainMode = !1),
                    (this._fountainDelay = 0.1),
                    (this._swapHeightOffset = 0),
                    (this._demoScrollLevel = c),
                    (this._prevHaveBubblesOnScreen = !0),
                    (this._manualPause = !1),
                    (this._lastShot = { count: 0, color: null }),
                    (this._activeList = []),
                    (this._deactiveList = []),
                    (this._purgatory = []),
                    (this._firedBubbles = []),
                    (this._wingsBubbles = []),
                    (this._bubbles = {}),
                    (this._tmpRandomColors = []),
                    (this._tmpLockers = []),
                    (this._guidelinePointIndex = 1),
                    (this._countNoneBubbles = 0),
                    (this._guidlineBuildDelta = 0),
                    (this._checkAfterShoot = !1),
                    (this._needCheckDrop = !1),
                    (this._countDropBalls = 0),
                    (this._countPurgatoryBalls = 0),
                    (this._purgatoryCoef = 0.5),
                    (this._delayCheckDrop = 0),
                    (this._swapDelay = 0),
                    (this.pcMode = !1),
                    (this._weRemoveBubbles = !1),
                    (this._guidelineConttainer = new PIXI.Container()),
                    this.addChild(this._guidelineConttainer),
                    this._guidelineConttainer.addChild(this._guideline),
                    (this._ceilingContainer = new PIXI.Container()),
                    this.addChild(this._ceilingContainer),
                    (this._bubbleContainer = new PIXI.Container()),
                    this.addChild(this._bubbleContainer),
                    (this._additionalContainer = new PIXI.Container()),
                    this.addChild(this._additionalContainer),
                    (this._additionalContainer2 = new PIXI.Container()),
                    this.addChild(this._additionalContainer2),
                    (this._guidelineUpConttainer = new PIXI.Container()),
                    this.addChild(this._guidelineUpConttainer),
                    (this._upContainer = new PIXI.Container()),
                    this.addChild(this._upContainer),
                    (this._cannonContainer = new PIXI.Container()),
                    this.addChild(this._cannonContainer),
                    (this._ceiling = new KY.Sprite(0, -a.Options.BUBBLE_RADIUS - 10, a.LoadManager.CURRENT_ATLAS_NAME, 'top_default')),
                    this._ceilingContainer.addChild(this._ceiling),
                    (this.bubblesTopY = a.Options.MAP_BEGIN_Y),
                    (this._cp = []),
                    (this._dist = []));
                for (var e = 0; e < 6; e++) (this._cp.push(new a.Vec2()), this._dist.push(Number.MAX_VALUE));
                ((this._colorRequestCount = 0), (this._prevColorRequestCount = 0), (this._availableColors = []), this.clearAvailableColor(), (this._bubbleCount = 0), (this._nextBubbles = []), (this._effectiveShot = 0), (this._needGameOver = !1), d || (this._lastRandomSeed = -1), this.parseMapData(b));
            }),
            (d.prototype.parseMapData = function (b) {
                (0 != b.seed ? this._rnd.seed(b.seed) : (this._lastRandomSeed == -1 && (this._lastRandomSeed = Date.now()), this._rnd.seed(this._lastRandomSeed), console.log('game seed:', this._lastRandomSeed)), this.loadMap(b.data, b.height, b.random), this.changeBubbleCount(b.bubbles, !0), (this._maxNextBubbles = a.Options.MAX_NEXT_BUBBLES), (this._prepareBubbles = b.shots));
                for (var c = 0; c < this._maxNextBubbles; c++) this.getNextFiredBubble(!1);
                this.changeNextBubbleColor();
            }),
            (d.prototype.processUpdateActiveList = function (a, b) {}),
            (d.prototype.update = function (b, e, f) {
                if (((this._lastDT = b), !this._demoTween)) {
                    (this._swapDelay && ((this._swapDelay -= 0.016 * b), this._swapDelay < 0 && (this._swapDelay = 0)), this._guideline && (this.pcMode || this._isTouched) && this.canShoot && this._guideline.update(b), (this._lastSpeedCompensation = Math.max(a.Options.SPEED_COMPENSATION, Math.round(a.Options.SPEED_COMPENSATION * b))));
                    for (var g = 0; g < this._lastSpeedCompensation; g++) this.firedBubbleStep(b / this._lastSpeedCompensation);
                    for (var h = !1, g = this._activeList.length - 1; g >= 0; g--)
                        if (!this._activeList[g].fired) {
                            if (!this.isScrolling && 0 == this._weRemoveBubbles && 0 != b && this._activeList[g].cy < this.threshold) break;
                            (this._activeList[g].update(b), this.processUpdateActiveList(this._activeList[g], b));
                            var i = !1;
                            (this._activeList[g].haveAnchor && (this._activeList[g].x < a.Options.GRID_LEFT_X || this._activeList[g].x > a.Options.GRID_RIGHT_X || this._activeList[g].y + this._bubbleContainer.y >= a.Options.POP_DROPED_BUBBLE_Y) && (i = !0),
                                (this._activeList[g].dropable && this._activeList[g].y + this._bubbleContainer.y >= a.Options.POP_DROPED_BUBBLE_Y) || (this._activeList[g].fountain && this._activeList[g].vy > -0.5) || i || this._activeList[g].needPop.poped ? (this._activeList[g].needPop.poped ? (this.activateSpecialBubble(this._activeList[g], null, null, this._activeList[g].needPop.killWave), (this._activeList[g].killWave = this._activeList[g].needPop.killWave), this._activeList[g].pop(this._activeList[g].needPop.drop, this._activeList[g].needPop.fireball, this._activeList[g].needPop.bomb, this._activeList[g].needPop.destruction), (this._delayCheckDrop = 0.45)) : i ? this._activeList[g].pop(!1, !1, !1, !0) : this._activeList[g].pop(!0, !1, !1, !1), this.removeBubble(this._activeList[g], g, !0)) : this._activeList[g].dropable && 1 != this._activeList[g].fountain && (h = !0));
                        }
                    if ((this._purgatory.length && (h = !0), 0 == h && (this._weRemoveBubbles = !1), this._checkAfterShoot && this._purgatory.length <= this._countPurgatoryBalls * this._purgatoryCoef && 0 == this._delayCheckDrop)) {
                        this._checkAfterShoot = !1;
                        var j = this._countDropBalls;
                        (this._needCheckDrop && ((j = this.detectFlyBubbles()), (this._needCheckDrop = !1)), this.emit(d.EVENT_AFTER_COLLISION, this._markedCounter, j), this.prepareAfterShoot(!0, !1));
                    }
                    this._fountainMode && ((this._fountainDelayCounter -= 0.01667 * b), this._fountainDelayCounter <= 0 && ((this._fountainDelayCounter = this._fountainDelay * (0.9 + 0.1 * this._rnd.js)), 0 == h && this.fountain()));
                    for (var g = 0; g < this._nextBubbles.length; g++) (this._nextBubbles[g].setOffset(-this.x, -this.y), this._nextBubbles[g].update(b));
                    if ((0 == this._gameEnd && this._needGameOver && 0 == h && 0 == this._firedBubbles.length && 0 == this.achievedTheGoal && this.setGameEnd(!1), this._prevCanTouch != this.canTouch && ((this._prevCanTouch = this.canTouch), this.emit(d.EVENT_CAN_TOUCH, this._prevCanTouch), this._prevCanTouch && this.updatePositionNextBubble_KOSTYL(), this.pcMode && this._nextBubbles.length && this._prevCanTouch && this._nextBubbles[0]))) {
                        var k = e - a.Options.CANNON_X,
                            l = f - a.Options.CANNON_Y,
                            m = Math.atan2(l, k);
                        this._guideline.build(m, this._lastSpeedCompensation, !0);
                    }
                    this.haveBubblesOnScreen == this._prevHaveBubblesOnScreen || this._upContainer.children.length || this._bubbleContainer.children.length || ((this._prevHaveBubblesOnScreen = this.haveBubblesOnScreen), this._prevHaveBubblesOnScreen || this.emit(d.EVENT_STAGE_CLEAR));
                    var n = null;
                    if (this.pcMode && this.isScrolling && this._nextBubbles.length && this._prevCanTouch && this._nextBubbles[0]) {
                        var k = e - a.Options.CANNON_X,
                            l = f - a.Options.CANNON_Y;
                        n = Math.atan2(l, k);
                    }
                    (this.additionalBuildGuideline(b, this.isScrolling && this._type != c.CIRCLE, n), this._delayCheckDrop > 0 && ((this._delayCheckDrop -= 0.016 * b), this._delayCheckDrop <= 0 && ((this._delayCheckDrop = 0), (this._needCheckDrop = !0))));
                }
            }),
            (d.prototype.additionalBuildGuideline = function (b, c, e) {
                this.canShoot && !a.Guideline.isCleared && c && ((this._guidlineBuildDelta += 0.016 * b), this._guidlineBuildDelta >= d.GUIDELINE_UPDATE_TIME && this._nextBubbles[0] && ((this._guidlineBuildDelta = 0), this._guideline.build(e ? e : this._fireAngle, this._lastSpeedCompensation, !0)));
            }),
            (d.prototype.skipDemo = function () {
                this._demoTween && (this._demoTween.timeScale(4), (this._demoTween = null));
            }),
            (d.prototype.setSwapAreaHeightOffset = function (a) {
                this._swapHeightOffset = a;
            }),
            (d.prototype.inSwapArea = function (b, c) {
                var d = 235 + this._swapHeightOffset,
                    e = 15 + 0.5 * this._swapHeightOffset,
                    f = 0.5 * -d + e,
                    g = 0.5 * d + e;
                return b >= 0.5 * -a.Options.MAP_WIDTH && b <= 0.5 * a.Options.MAP_WIDTH && c >= f && c <= g;
            }),
            (d.prototype.touch = function (b, c, e) {
                var f = b - a.Options.CANNON_X,
                    g = c - a.Options.CANNON_Y;
                return ((this._fireAngle = Math.atan2(g, f)), (this._validMouseArea = !(this._fireAngle > -a.Options.MIN_GUIDELINE_ANGLE || this._fireAngle < a.Options.MIN_GUIDELINE_ANGLE - Math.PI)), g > -60 && (this._validMouseArea = !1), this.pcMode && Math.abs(f) - 40 > 0.5 * a.Options.MAP_WIDTH && (this._validMouseArea = !1), this.inSwapArea(f, g) && ((this._validMouseArea = !1), e && !this._isTouched && this.emit(d.EVENT_SWAP)), e && (this._guideline.touch(), (this._isTouched = !0)), this._guideline && this._nextBubbles[0] && (this.canShoot ? ((this._guidlineBuildDelta = 0), this._guideline.build(this._fireAngle, this._lastSpeedCompensation, e)) : this._guideline.clear()), this._validMouseArea);
            }),
            (d.prototype.move = function (a, b) {
                return (0 == this.pcMode && 0 == this._isTouched) || this.touch(a, b, !1);
            }),
            (d.prototype.swap = function () {
                if (!(this._nextBubbles.length < 2)) {
                    var b = this._nextBubbles.shift();
                    this._nextBubbles.push(b);
                    for (var c = 0; c < this._nextBubbles.length; c++) {
                        var d = 0 == c ? 1 : 0.8;
                        (TweenLite.to(this._nextBubbles[c], 0.1, { x: a.Options.NEXT_BUBBLES_POSITON[c][0], y: a.Options.NEXT_BUBBLES_POSITON[c][1], ease: Sine.easeOut }), TweenLite.to(this._nextBubbles[c].scale, 0.1, { x: d, y: d }), (this._swapDelay = 0.11));
                    }
                    this.changeNextBubbleColor(!1);
                }
            }),
            (d.prototype.clearCannon = function () {
                for (; this._nextBubbles.length; ) {
                    var a = this._nextBubbles.pop();
                    (a.prepareToRemove(), this.removeBubble(a, null, !0));
                }
            }),
            (d.prototype.checkCannon = function () {
                for (var a = this._nextBubbles.length - this._bubbleCount; a > 0; ) {
                    var b = this._nextBubbles.pop();
                    (b.prepareToRemove(), this.removeBubble(b, null, !0), a--);
                }
            }),
            (d.prototype.startFountain = function () {
                (this.emit(d.EVENT_FOUNTAIN_START), (this._fountainMode = !0), (this._fountainDelayCounter = d.FOUNTAIN_DELAY));
            }),
            (d.prototype.fountain = function () {
                if (0 != this._bubbleCount) {
                    var b = this._nextBubbles.shift();
                    (this.changeBubbleCount(-1), b && ((b.active = !0), (b.fired = !1), (b.fountain = !0), b.setVelocity(30 - 60 * KY.Game.instance.rnd.js, -(30 + 20 * KY.Game.instance.rnd.js)), (b.x = a.Options.CANNON_X - this._bubbleContainer.x), (b.y = a.Options.CANNON_Y - this.bubblesTopY), b.setStart(b.x, b.y), this._bubbleContainer.addChild(b)), this.getNextFiredBubble(!0));
                }
                0 == this._bubbleCount && ((this._fountainMode = !1), this.emit(d.EVENT_FOUNTAIN_END));
            }),
            (d.prototype.unselectAllBubbles = function () {
                if (0 != a.Options.GUIDELINE_NO_LIMIT) for (var b = 0; b < this._activeList.length; b++) this._activeList[b].setSelect(!1);
            }),
            (d.prototype.selectRainbowGuideline = function (b, c) {
                0 != a.Options.GUIDELINE_NO_LIMIT && this.markSelectBubbles(b, c, a.BubbleColor.RAINBOW);
            }),
            (d.prototype.selectLightningGuideline = function (b, c) {
                0 != a.Options.GUIDELINE_NO_LIMIT && this.markSelectLightningBubbles(b, c);
            }),
            (d.prototype.selectFireGuideline = function () {
                if (0 != a.Options.GUIDELINE_NO_LIMIT) {
                    var b = d.TMP_BUBBLE;
                    (b.setWorld(this), (b.active = !0), b.setVelocity(a.Options.BUBBLE_SPEED * Math.cos(this._fireAngle), a.Options.BUBBLE_SPEED * Math.sin(this._fireAngle)), (b.x = a.Options.CANNON_X - this._bubbleContainer.x), (b.y = a.Options.CANNON_Y - this.bubblesTopY), b.setStart(b.x, b.y));
                    for (var c = 1e3; ; ) {
                        if ((b.update(this._lastDT / this._lastSpeedCompensation), b.mark || b.y <= 2 * -a.Options.BUBBLE_DIAMETR || b.x < a.Options.GRID_LEFT_X - a.Options.BUBBLE_DIAMETR || b.x > a.Options.GRID_RIGHT_X + a.Options.BUBBLE_DIAMETR)) break;
                        if (0 == this.simpleCollisionWithActiveBubblesAndPop(b.x, b.y, !1)) break;
                        if ((c--, c <= 0)) break;
                    }
                }
            }),
            (d.prototype.addDebugBubble = function () {
                for (var a = 0; a < this._activeList.length; a++) this._activeList[a].addDebugID();
            }),
            (d.prototype.cancelStopCheckZeroBubble = function () {
                ((this._stopCheckZeroBubble = !1), 0 == this._bubbleCount && 0 == this._fountainMode && (this._needGameOver = !0));
            }),
            (d.prototype.getStopCheckZeroBubble = function () {
                return this._stopCheckZeroBubble;
            }),
            (d.prototype.removeFireBubble = function () {
                var a = this._firedBubbles[0];
                (this._firedBubbles.splice(0, 1), (a.fired = !1), a.pop(!1, !1, !1, !0), this.addBubbleToUpContainer(a), this.removeBubble(a), this._activatedBubblesInSimpleCollision && (this.popMarkedBubbles(!1), (this._activatedBubblesInSimpleCollision = !1)), this._burnOutBubbles && this._effectiveShot++, this.prepareAfterShoot(!0, !1));
            }),
            (d.prototype.firedBubbleStep = function (b) {
                for (var e = 0; e < this._firedBubbles.length; e++) {
                    var f = this._firedBubbles[e];
                    if ((f.update(b), f.mainColor != a.BubbleColor.FIREBALL)) {
                        if (f.x <= a.Options.GRID_LEFT_X || f.x >= a.Options.GRID_RIGHT_X) {
                            if (((f.vx *= -1), a.SoundsManager.collision(!0), a.Options.GUIDELINE_NO_LIMIT && a.Guideline.points && a.Guideline.points.length < this._guidelinePointIndex)) f.setStart(a.Guideline.points[this._guidelinePointIndex][0], a.Guideline.points[this._guidelinePointIndex][1] - this.bubbleContainer.y);
                            else {
                                var g = this.collisionBorder(f.x, f.y, f.startX, f.startY);
                                f.setStart(g.x, g.y);
                            }
                            (this._guidelinePointIndex++, this.emit(d.EVENT_BOUNCE_WALL, f.x <= a.Options.GRID_LEFT_X));
                        }
                        var h = void 0,
                            i = f.y <= 0;
                        if (i) {
                            if (this instanceof a.CircleWorld) {
                                ((f.vy *= -1), a.SoundsManager.collision(!0));
                                var g = this.collisionTop(f.x, f.y, f.startX, f.startY);
                                f.setStart(g.x, g.y);
                            } else {
                                var j = f.x,
                                    k = Math.atan2(f.vy, f.vx),
                                    l = f.y / Math.sin(k);
                                j -= l * Math.cos(k);
                                var m = Math.floor((j - this.bubbleContainer.x + a.Options.GRID_OFFSET_X + a.Options.BUBBLE_RADIUS) / a.Options.BUBBLE_GAP_X),
                                    n = 0;
                                ((h = { cx: m, cy: n, contact: f }), this._bubbles[m + '/' + n] && ((h = null), (i = !1)));
                            }
                            ((this._ceiling.y = -a.Options.BUBBLE_RADIUS + 5), TweenLite.to(this._ceiling, 1, { y: -a.Options.BUBBLE_RADIUS - 10, ease: Elastic.easeOut }));
                        }
                        i || ((h = this.collisionWithActiveBubbles(f.x, f.y, void 0, f.identificator)), h && h.contact.mainColor == a.BubbleColor.DUMMY && ((this._dummyEffectiveShot = h.contact.isUnlocker), (f.specialType || h.contact.specialType) && (this._findSpecialBubble = !0), this.deleteBubbles(h.contact, null, null, !0, !1, !1, !1), (this._deleteDummyBubble = !0), (h = null)));
                        var o = !1;
                        if ((f.vy > 0 && f.fired && f.y > a.Options.CANNON_Y - 3 * a.Options.BUBBLE_DIAMETR && (o = !0), (this._checkAfterShoot = !1), null != h)) {
                            (a.SoundsManager.collision(!1), (this._guidelinePointIndex = 1), this._firedBubbles.splice(e, 1), (f.active = !1), (f.cx = h.cx), (f.cy = h.cy), (this._lastContactX = f.x), (this._lastContactY = f.y), f.reposition(), (f.fired = !1), f.copyBubbleAnchor(h.contact), (this._bubbles[f.cx + '/' + f.cy] = f), (this._currentMapHeight = Math.max(this._currentMapHeight, f.cy)), this.contactShake(h.contact, f, 1), (this._markedCounter = 0));
                            for (var p = !1, q = !1, r = !1, s = 0; s < 6; s++) {
                                var t = this.getNeighbors(f, s);
                                if (t)
                                    switch (((t.markContact = !0), t.mainColor)) {
                                        case a.BubbleColor.THORN:
                                        case a.BubbleColor.PLUS:
                                        case a.BubbleColor.MINUS:
                                        case a.BubbleColor.SWITCH_MINUS:
                                        case a.BubbleColor.SWITCH_PLUS:
                                            q = !0;
                                            break;
                                        case a.BubbleColor.PENTAGON:
                                            r = t.additionalColor == f.mainColor;
                                    }
                            }
                            f.mainColor == a.BubbleColor.BOMB ? (this.markPopBombBubbles(f), (p = !0)) : f.mainColor == a.BubbleColor.LIGHTNING ? (this.markPopLightningBubbles(f), (p = !0)) : this.markPopBubbles(f, 0, f.mainColor);
                            for (var u = [], v = 0; v < 6; v++) {
                                var s = this.getNeighbors(f, v);
                                s && this.activateSpecialBubble(s, u, f) && (p = !0);
                            }
                            for (; u.length; ) this.activateSpecialBubble(u.shift(), u, f);
                            ((p = p || this._markedCounter >= 3 || f.mainColor == a.BubbleColor.RAINBOW), (this._lastShot.count = this._markedCounter), (this._needCheckDrop = !1), p ? ((this._deleteDummyBubble = !1), this.popMarkedBubbles(f.mainColor == a.BubbleColor.BOMB), (this._needCheckDrop = !0)) : this.unMarkBubbles(), this._deleteDummyBubble && ((this._countDropBalls = this.detectFlyBubbles()), (this._deleteDummyBubble = !1)), this._markedCounter > 1 && (q = !1), (p && !q) || r ? this._effectiveShot++ : 1 != this._findSpecialBubble && a.Bubble.SAVE_SCORE.indexOf(h.contact.mainColor) == -1 && 0 == this._dummyEffectiveShot && (this._effectiveShot = 0), (this._checkAfterShoot = !0), (this._countPurgatoryBalls = this._purgatory.length), this.contact(h.contact, f));
                        } else o && (this._firedBubbles.splice(e, 1), (f.fired = !1), f.pop(!1, !1, !1, !0), this.addBubbleToUpContainer(f), this.removeBubble(f), (this._effectiveShot = 0), this.emit(d.EVENT_AFTER_COLLISION, 0, 0, 0), this._type == c.CIRCLE && this._deleteDummyBubble && ((this._countDropBalls = this.detectFlyBubbles()), (this._deleteDummyBubble = !1)), this.prepareAfterShoot(!0, !1));
                    } else if (f.mark || f.y + this._bubbleContainer.y <= 2 * -a.Options.BUBBLE_DIAMETR || f.x < a.Options.GRID_LEFT_X - a.Options.BUBBLE_DIAMETR || f.x > a.Options.GRID_RIGHT_X + a.Options.BUBBLE_DIAMETR) {
                        var w = 0;
                        (this._firedBubbles.splice(e, 1), (f.fired = !1), f.pop(!1, !1, !1, !0), this.addBubbleToUpContainer(f), this.removeBubble(f), this._activatedBubblesInSimpleCollision && (this.popMarkedBubbles(!1), (this._activatedBubblesInSimpleCollision = !1)), (w = this.detectFlyBubbles()), this._burnOutBubbles && this._effectiveShot++, this.emit(d.EVENT_AFTER_COLLISION, this._burnOutBubbles, w), this.prepareAfterShoot(!0, !1));
                    } else 0 == this.simpleCollisionWithActiveBubblesAndPop(f.x, f.y, !0, f) && (f.mark = !0);
                }
            }),
            (d.prototype.activateSpecialBubble = function (b, c, e, f) {
                if ((void 0 === f && (f = 0), !b || b.kill)) return !1;
                if (this.stopCeiling && !b.onScreen) return !1;
                var g = !e || e.mainColor == a.BubbleColor.FIREBALL,
                    h = g ? b.activateColor : b.mainColor;
                switch (h) {
                    case a.BubbleColor.THORN:
                        if (g) return !1;
                        (2 == this._markedCounter && (this.unMarkBubbles(a.BubbleColor.THORN, !0, 2), this._markedCounter--), e && ((e.kill = !0), (e.killWave = 0), (e.popedColor = a.BubbleColor.THORN)));
                        var i = b.getComponent(a.TypeBubbleComponent.THORN);
                        return (i && (i.visual.decHP(), i.visual.isDone() && ((b.kill = !0), (b.killWave = 0))), !0);
                    case a.BubbleColor.LIGHTNING:
                        return (this.markPopLightningBubbles(b), this.emit(d.EVENT_SHOW_LIGHTNING, b), !0);
                    case a.BubbleColor.BOMB:
                        return (this.markPopBombBubbles(b), !0);
                    case a.BubbleColor.RAINBOW:
                        return (this.markPopBubbles(b, f, a.BubbleColor.RAINBOW), !0);
                    case a.BubbleColor.LASER:
                        return (this.markPopLaserBubbles(b), this.emit(d.EVENT_SHOW_LASER, b), !0);
                    case a.BubbleColor.BURST:
                        if (((b.kill = !0), (b.popedColor = a.BubbleColor.BURST), e && (e.popedColor = a.BubbleColor.BURST), this._markedCounter <= 2)) {
                            var j = this.unMarkBubbles(null, !0, 2, !0);
                            this._markedCounter -= j;
                        }
                        (null == b.killWave && ((b.killWave = 0), (this._markedCounter += 1)), b.onScreen ? (b.killWave += f) : (b.killWave = 0));
                        for (var k = c, l = 0; l < 6; l++) {
                            var m = this.getNeighborsTop(b, l);
                            if (m && !m.isAnchor && !m.isMainLock && (!m.kill || a.Bubble.isDefaultColor(m.popedColor))) {
                                var n = m.activateColor;
                                (a.Bubble.ACTIVATED_COLOR.indexOf(n) == -1 ? (m.onScreen ? (m.killWave = b.killWave) : (m.killWave = 0), (m.kill = !0), (m.popedColor = a.BubbleColor.BURST), this._markedCounter++) : (k || (k = []), n == a.BubbleColor.BURST && (m.onScreen ? (m.killWave = b.killWave + 2) : (m.killWave = 0)), k.push(m)), (f = Math.max(m.killWave, f)));
                            }
                        }
                        if (k && !c) {
                            for (var l = 0; l < k.length; l++) this.activateSpecialBubble(k[l], null, null, f);
                            k = null;
                        }
                        return !0;
                    case a.BubbleColor.PLUS:
                    case a.BubbleColor.MINUS:
                    case a.BubbleColor.SWITCH_PLUS:
                    case a.BubbleColor.SWITCH_MINUS:
                        var o = void 0;
                        switch (b.mainColor) {
                            case a.BubbleColor.PLUS:
                                o = 2;
                                break;
                            case a.BubbleColor.MINUS:
                                o = -2;
                                break;
                            case a.BubbleColor.SWITCH_PLUS:
                                o = 1;
                                break;
                            case a.BubbleColor.SWITCH_MINUS:
                                o = -1;
                        }
                        if (((b.kill = !0), (b.killWave = 0), this.changeBubbleCount(o, !1, !0), this.emit(d.EVENT_PLUS_MINUS_TWO, o, b.x, b.y), a.SoundsManager.plusMinusBall(), this._markedCounter <= 2)) {
                            e && e.popedColor == a.BubbleColor.NONE && (e.kill = !1);
                            var j = this.unMarkBubbles(null, !0, 2, !0);
                            this._markedCounter -= j;
                        }
                        return (o < 0 && (this._delayCheckDrop = 1), !0);
                    case a.BubbleColor.WINDMILL:
                        return (this._markedCounter <= 2 && (this._markedCounter -= this.unMarkBubbles(a.BubbleColor.WINDMILL, !0, this._markedCounter)), (b.kill = !0), (b.popedColor = a.BubbleColor.WINDMILL), this.windMillEffect(b), !0);
                    case a.BubbleColor.RANDOM_WINDMILL:
                        return (this._markedCounter <= 2 && (this._markedCounter -= this.unMarkBubbles(a.BubbleColor.RANDOM_WINDMILL, !0, this._markedCounter)), (b.kill = !0), (b.popedColor = a.BubbleColor.RANDOM_WINDMILL), this.randomWindMillEffect(b), !0);
                }
                return !1;
            }),
            (d.prototype.tmpGetAvailableColor = function () {
                for (var b = [], c = 0; c < a.Options.MAX_COLORS; c++) this._availableColors[c] && b.push(c + 1);
                return b.length ? (a.Utils.shuffle(b, this._rnd), b[0]) : void console.log('Не нашлось цветов?');
            }),
            (d.prototype.windMillEffect = function (b) {
                for (var c = this.tmpGetAvailableColor(), e = 0; e < d.BOMB_MASK.length; e++) {
                    var f = d.BOMB_MASK[e][0] % 2 == 0,
                        g = void 0,
                        h = b.cy + d.BOMB_MASK[e][0];
                    g = h % 2 == 0;
                    var i = b.cx + d.BOMB_MASK[e][1] - 1 - (g ? 0 : 1) - (f && g ? 1 : 0),
                        j = this.getBubbleByCellTop(i, h);
                    if (null != j && !j.isAnchor) {
                        if (j.kill) {
                            if (j.strength <= 1 || !a.Bubble.isDefaultColor(j.popedColor)) continue;
                            ((j.kill = !1), (j.killWave = null));
                        }
                        if (!j.markContact || a.Bubble.BOOSTER_SCORE.indexOf(j.mainColor) == -1) {
                            var k = j.noBugColor;
                            if (k != a.BubbleColor.PENTAGON && k != a.BubbleColor.NONE_GROUP && !j.isLock && !j.isUnlocker) {
                                for (var l = !1, m = 0; m < this._windmillTypeException.length; m++)
                                    if (j.getComponent(this._windmillTypeException[m])) {
                                        l = !0;
                                        break;
                                    }
                                l || (j.clearComponents(), j.changeType(c, null), j.jumpUp());
                            }
                        }
                    }
                }
            }),
            (d.prototype.randomWindMillEffect = function (b) {
                for (var c = 0; c < d.BOMB_MASK.length; c++) {
                    var e = d.BOMB_MASK[c][0] % 2 == 0,
                        f = void 0,
                        g = b.cy + d.BOMB_MASK[c][0];
                    f = g % 2 == 0;
                    var h = b.cx + d.BOMB_MASK[c][1] - 1 - (f ? 0 : 1) - (e && f ? 1 : 0),
                        i = this.getBubbleByCellTop(h, g);
                    if (null != i && !i.isAnchor) {
                        if (i.kill) {
                            if (i.strength <= 1 || !a.Bubble.isDefaultColor(i.popedColor)) continue;
                            ((i.kill = !1), (i.killWave = null));
                        }
                        if (!i.markContact || a.Bubble.BOOSTER_SCORE.indexOf(i.mainColor) == -1) {
                            var j = i.noBugColor;
                            if (j != a.BubbleColor.PENTAGON && j != a.BubbleColor.NONE_GROUP && !i.isLock && !i.isUnlocker) {
                                for (var k = !1, l = 0; l < this._windmillTypeException.length; l++)
                                    if (i.getComponent(this._windmillTypeException[l])) {
                                        k = !0;
                                        break;
                                    }
                                if (!k) {
                                    for (var m = this.tmpGetAvailableColor(), n = 10; m == i.noBugColor && ((m = this.tmpGetAvailableColor()), n--, !(n <= 0)); );
                                    (i.clearComponents(), i.changeType(m, null), i.jumpUp());
                                }
                            }
                        }
                    }
                }
            }),
            (d.prototype.wheelEffect = function (b) {
                for (var c = b.cy % 2 == 0 ? 0 : 1, e = [], f = 0; f < 6; f++) {
                    var g = b.cx + d.NEIGHBORS_WHEEL[c][f][0],
                        h = b.cy + d.NEIGHBORS_WHEEL[c][f][1],
                        i = this.getBubbleByCell(g, h);
                    if (null != i) {
                        var j = f + 1;
                        6 == j && (j = 0);
                        var k = b.cx + d.NEIGHBORS_WHEEL[c][j][0],
                            l = b.cy + d.NEIGHBORS_WHEEL[c][j][1];
                        (this.freeBubbleCell(g, h), i.setPosition(k, l, !0, !0), e.push([i, k, l]), i.getComponent(a.TypeBubbleComponent.SPIDER) && (i.needSpiderCheckForPusher = !0));
                    }
                }
                for (var f = 0; f < e.length; f++) this._bubbles[e[f][1] + '/' + e[f][2]] = e[f][0];
                ((e.length = 0), (e = null), (this._delayCheckDrop = Math.max(this._delayCheckDrop, 0.3)));
            }),
            (d.prototype.pucherEffect = function (b, c) {
                var d = b.cy % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO,
                    e = c ? 1 : -1;
                if (b.cx + e < 0 || b.cx + e >= d) return !1;
                var f = this.getBubbleByCellTop(b.cx + e, b.cy),
                    g = null != f ? -1 : 0;
                if (f && f.mainColor == a.BubbleColor.WHEEL) return !1;
                if (0 != g)
                    if (c) {
                        for (var h = b.cx + 2; h < d; h++) {
                            var i = this.getBubbleByCellTop(h, b.cy);
                            if (i && i.mainColor == a.BubbleColor.PUSHER) break;
                            if (null == i || i.kill) {
                                g = h;
                                break;
                            }
                        }
                        if (g == -1) return !1;
                        for (var h = g - 1; h >= b.cx + 1; h--) {
                            var j = this.getBubbleByCellTop(h, b.cy);
                            (j.setPosition(h + 1, j.cy, !1), this.repositionBubble(j, h + 1, j.cy), j.reposition(!0));
                            var k = j.getComponent(a.TypeBubbleComponent.SPIDER);
                            k && (j.needSpiderCheckForPusher = !0);
                        }
                    } else {
                        for (var h = b.cx - 2; h >= 0; h--) {
                            var l = this.getBubbleByCellTop(h, b.cy);
                            if (l && l.mainColor == a.BubbleColor.PUSHER) break;
                            if (null == l || l.kill) {
                                g = h;
                                break;
                            }
                        }
                        if (g == -1) return !1;
                        for (var h = g + 1; h < b.cx; h++) {
                            var m = this.getBubbleByCellTop(h, b.cy);
                            (m.setPosition(h - 1, m.cy, !1), this.repositionBubble(m, h - 1, m.cy), m.reposition(!0));
                            var k = m.getComponent(a.TypeBubbleComponent.SPIDER);
                            k && (m.needSpiderCheckForPusher = !0);
                        }
                    }
                var n = this.tmpGetAvailableColor(),
                    o = this.getBubble();
                return (o.setData(n, b.cx + e, b.cy), o.reposition(!0), (this._bubbles[o.cx + '/' + o.cy] = o), this._bubbleContainer.addChild(o), (o.alpha = 0), o.scale.set(0.5), TweenLite.to(o, 0.3, { alpha: 1 }), TweenLite.to(o.scale, 0.3, { x: 1, y: 1 }), (this._delayCheckDrop = Math.max(this._delayCheckDrop, 0.3)), !0);
            }),
            (d.prototype.prepareAfterShoot = function (b, e) {
                var f = this;
                this.clearAvailableColor();
                var g,
                    h = !1,
                    i = 0;
                this._lastYBall = 0;
                for (var j = 0; j <= this._currentMapHeight; j++) {
                    g = j % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                    for (var k = 0; k < g; k++) {
                        var l = this._bubbles[k + '/' + j];
                        !l || l.kill || l.dropable || l.fired || (0 == a.Bubble.isNoneColor(l.noBugColor, l) && (h = !0), h ? (this._countNoneBubbles = 0) : this._countNoneBubbles++, this._bubbleContainer.addChild(l), this.addAvailableColor(l.noBugColor, l.additionalColor), 1 != l.markWings && ((this._lastYBall = Math.max(this._lastYBall, l.y)), (i = Math.max(i, l.cy))));
                    }
                }
                if (((this._currentMapHeight = i), this.isNoStableBubble)) (0 == this._manualPause && 0 == this._gameEnd && (this._countNoneBubbles ? ((this._manualPause = !0), this.dropFlyBubbles(!0), this.setGameEnd(!0)) : this.setGameEnd(!0)), this.changeNextBubbleColor(!1));
                else {
                    var m = !1;
                    if (b) {
                        for (var n = [], o = 0; o < this._activeList.length; o++) {
                            var l = this._activeList[o];
                            if (l && !l.kill && !l.dropable && !l.fired) {
                                var p = l.getComponent(a.TypeBubbleComponent.WHEEL);
                                p ? (l.wheelNeedRotate(p), (m = !0), n.push(l)) : l.prepareComponentAfterShoot(this._moveIndex);
                            }
                        }
                        for (var o = 0; o < n.length; o++) this.wheelEffect(n[o]);
                        ((n.length = 0), (n = null));
                    }
                    for (var o = 0; o < this._nextBubbles.length; o++) 0 == this._availableColors[this._nextBubbles[o].mainColor - 1] && this._nextBubbles[o].changeType(this.getRandomAvailableColor(), null);
                    var q = !1;
                    if (
                        (m &&
                            !e &&
                            ((q = !0),
                            (this._delayCheckDrop = 0.4),
                            setTimeout(function () {
                                (f.detectFlyBubbles(), f.prepareAfterShoot(!1, !0));
                            }, 300)),
                        q)
                    )
                        return;
                    (this.emit(d.EVENT_AFTER_FIRED), this.changeNextBubbleColor());
                }
                if (this._tmpLockers)
                    for (; this._tmpLockers.length; ) {
                        var r = this._tmpLockers.pop(),
                            s = r[0],
                            t = r[1];
                        this.getLocker(s.x, s.y, t, s);
                    }
                (this._guideline && (this._guideline.contact(), this._noAvailableColor && this._guideline.clear()), 0 != this._bubbleCount || 0 != this._fountainMode || this._stopCheckZeroBubble || (this._needGameOver = !0));
                var u = 0 == h || this._gameEnd;
                (this._type == c.CIRCLE && this._wingsBubbles && this._wingsBubbles.length && 1 != u ? ((this._wingsPause = !0), this.cirleWorldWingsStart()) : this.wingsLogic(0 == h || this._gameEnd),
                    (this._lastYBall = a.Options.BUBBLE_GAP_Y * this._currentMapHeight),
                    this._activeList.sort(function (a, b) {
                        return a.cy - b.cy;
                    }),
                    this.scroll());
            }),
            (d.prototype.cirleWorldWingsStart = function () {
                for (var b = 0; b < this._wingsBubbles.length; b++) {
                    var c = this._wingsBubbles[b],
                        d = c.getComponent(a.TypeBubbleComponent.WINGS);
                    d && d.visual.fly();
                }
            }),
            (d.prototype.random = function () {
                return Stage.rnd.value;
            }),
            (d.prototype.wingsLogic = function (b) {
                if (!this._wingsPause && this._wingsBubbles && this._wingsBubbles.length) {
                    var c = null,
                        d = !1;
                    if (b) {
                        for (; this._wingsBubbles.length; ) {
                            var e = this._wingsBubbles.pop(),
                                f = e.x,
                                g = e.y + a.Utils.sign * this.random() * 100;
                            (0 == f && (f = this.random() > 0.5 ? -1 : 1), (f = f - 46 < 0 ? -(a.Options.MAP_WIDTH + a.Options.BUBBLE_DIAMETR) : a.Options.MAP_WIDTH + a.Options.BUBBLE_DIAMETR), e.flyout(f, g));
                        }
                        return void this.setGameEnd(!0);
                    }
                    for (var h = [], i = 0, j = void 0; ; ) {
                        null == c && (c = this._wingsBubbles.pop());
                        var k = 0,
                            l = 0,
                            m = !1,
                            n = 0;
                        j = d ? this._currentMapHeight : this.random() < 0.5 ? this._currentMapHeight : Math.max(a.Utils.uint(0.6 * this._currentMapHeight + 0.4 * this._currentMapHeight * this.random()), 0);
                        for (var o = j + 1; o >= 0; o--) {
                            for (var p = o % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO, q = n % 2 == 0, r = q ? 0 : p - 1; q ? r < p : r >= 0; q ? r++ : r--) {
                                if (d || this.random() < 0.05) {
                                    var s = this._bubbles[r + '/' + o],
                                        t = !1;
                                    if (c.haveAnchor) {
                                        var u = a.Bubble.getPosFromCellCircle(r, o, c.anchor.x, c.anchor.y, c.anchor.rotation),
                                            v = u.x,
                                            w = u.y;
                                        (v < a.Options.GRID_LEFT_X || v > a.Options.GRID_RIGHT_X || w + this._bubbleContainer.y >= a.Options.POP_DROPED_BUBBLE_Y || w + this._bubbleContainer.y <= a.Options.BUBBLE_RADIUS) && (t = !0);
                                    }
                                    if (!s && 1 != t)
                                        for (var x = 0; x < 6; x++) {
                                            var y = this.getNeighborsCellXY(r, o, x);
                                            if (y && 1 != y.markWings) {
                                                ((m = !0), (k = r), (l = o));
                                                break;
                                            }
                                        }
                                }
                                if (m) break;
                            }
                            if ((n++, m)) break;
                        }
                        if (m) {
                            c.markWings = !1;
                            var e = c.getComponent(a.TypeBubbleComponent.WINGS);
                            if ((e && e.visual.fly(), h.push(c), this.repositionBubble(c, k, l), (i = Math.max(i, c.setPosition(k, l, !0))), (c = null), (d = !1), (this._currentMapHeight = Math.max(this._currentMapHeight, l)), 0 == this._wingsBubbles.length)) break;
                        } else d = !0;
                    }
                    if (((this._delayCheckDrop = i), h.length))
                        for (
                            h.sort(function (a, b) {
                                return b.cy - a.cy;
                            });
                            h.length;

                        )
                            this._bubbleContainer.addChild(h.pop());
                    h.length = 0;
                }
            }),
            (d.prototype.setGameEnd = function (a) {
                this._gameEnd || ((this._gameEnd = !0), a ? (this.emit(d.EVENT_GAME_WIN), this.startFountain()) : this.emit(d.EVENT_GAME_OVER));
            }),
            (d.prototype.continue = function (a) {
                (void 0 === a && (a = !0), (this._gameEnd = !1), (this._prevCanTouch = null), (this._needGameOver = !1), (this._manualPause = !1), (this._stopCheckZeroBubble = !1), this.emit(d.EVENT_GAME_CONTINUE, a));
            }),
            (d.prototype.scroll = function (b, c) {
                var e = this;
                (void 0 === b && (b = !1), void 0 === c && (c = !1));
                var f = a.Options.CANNON_Y - this.getLastYBubble() - a.Options.GRID_LIMIT;
                if ((f > a.Options.MAP_BEGIN_Y && (f = a.Options.MAP_BEGIN_Y), b)) this.bubblesTopY = f;
                else {
                    var g = Math.abs(f - this.bubblesTopY),
                        h = Math.ceil(g / (1.73 * a.Options.BUBBLE_RADIUS));
                    if (h > 0)
                        if (c)
                            if (f == a.Options.MAP_BEGIN_Y) ((this.bubblesTopY = f), this.emit(d.EVENT_END_START_DEMO), this.changeNextBubbleColor());
                            else {
                                var i = 0.5,
                                    j = 0.05 * h;
                                this._demoTween = TweenLite.to(this, j, {
                                    delay: i,
                                    bubblesTopY: f,
                                    ease: Sine.easeOut,
                                    onComplete: function () {
                                        ((e._demoTween = null), e.emit(d.EVENT_END_START_DEMO), e.changeNextBubbleColor());
                                    },
                                });
                            }
                        else
                            (this.emit(d.EVENT_MAP_SCROLL, f, f - this.bubblesTopY, 0.15 * h),
                                (this._isScrolling = !0),
                                TweenLite.to(this, 0.1 * h, {
                                    delay: 0.05,
                                    bubblesTopY: f,
                                    ease: Sine.easeOut,
                                    onComplete: function () {
                                        e._isScrolling = !1;
                                    },
                                }));
                }
            }),
            (d.prototype.resize = function () {
                this.scroll(!0);
                for (var b = 0; b < this._nextBubbles.length; b++) (TweenLite.killTweensOf(this._nextBubbles[b]), (this._nextBubbles[b].x = a.Options.NEXT_BUBBLES_POSITON[b][0]), (this._nextBubbles[b].y = a.Options.NEXT_BUBBLES_POSITON[b][1]));
            }),
            (d.prototype.collisionBorder = function (b, c, d, e) {
                var f = b >= a.Options.GRID_RIGHT_X ? a.Options.GRID_RIGHT_X : a.Options.GRID_LEFT_X,
                    g = a.Options.SCREEN_HEIGHT,
                    h = d,
                    i = e,
                    j = (f * g * (h - b)) / (g * (h - b)),
                    k = (f * g * (i - c) + g * (h * c - i * b)) / (g * (h - b));
                return new a.Vec2(j, k);
            }),
            (d.prototype.collisionTop = function (b, c, d, e) {
                return a.Vec2.crossLine(new a.Vec2(d, e), new a.Vec2(b, c), new a.Vec2(a.Options.GRID_LEFT_X, 0), new a.Vec2(a.Options.GRID_RIGHT_X, 0));
            }),
            (d.prototype.simpleCollisionWithActiveBubblesAndPop = function (b, d, e, f, g) {
                (void 0 === e && (e = !0), void 0 === f && (f = null), void 0 === g && (g = null));
                for (var h, i = this._activeList.length - 1; i >= 0; i--) {
                    var j = this._activeList[i];
                    if (j && !j.fired && !j.dropable && !(Math.abs(j.x - b) >= 2 * a.Options.BUBBLE_RADIUS || Math.abs(j.y - d) >= 2 * a.Options.BUBBLE_RADIUS)) {
                        var k = a.Options.BUBBLE_RADIUS,
                            l = a.Options.BUBBLE_COLLISION_RADIUS,
                            m = j.cy % 2 == 0,
                            n = void 0,
                            o = void 0;
                        if ((this.type == c.CIRCLE ? ((n = j.x), (o = j.y)) : ((n = a.Options.BUBBLE_GAP_X * j.cx + (m ? 0 : a.Options.BUBBLE_RADIUS) - a.Options.GRID_OFFSET_X), (o = a.Options.BUBBLE_GAP_Y * j.cy)), this.checkCircleCollision(b, d, n, o, k, l))) {
                            if (j.isAnchor || j.isMainLock) return !1;
                            e ? (h || (h = []), this.activateSpecialBubble(j, h, f) && (this._activatedBubblesInSimpleCollision = !0), null == this._lastContactX && ((this._lastContactX = j.x), (this._lastContactY = j.y)), this.deleteBubbles(j, i, null, !1, !0, !1, !1), this._burnOutBubbles++) : g ? g(j) : j.setSelect(!0);
                        }
                    }
                }
                if (h) for (; h.length; ) this.activateSpecialBubble(h.shift(), h);
                return !0;
            }),
            (d.prototype.deleteBubbles = function (a, b, c, d, e, f, g) {
                (a.pop(d, e, f, g), this.addBubbleToUpContainer(a), (a.kill = !0), (a.killWave = c), this.removeBubble(a, b, !1));
            }),
            (d.prototype.contactNeighbors = function (b, c, e) {
                var f;
                c == a.BubbleTypeContact.POP && b.contact(a.BubbleTypeContact.POP_MYSELF, b);
                for (var g = b.cy % 2 == 0 ? 0 : 1, h = 0; h < 6; h++) ((f = this.getBubbleByCell(b.cx + d.NEIGHBORS[g][h][0], b.cy + d.NEIGHBORS[g][h][1])), null != f && f.contact(c, b, e));
            }),
            (d.prototype.neighborsCount = function (a) {
                for (var b, c = 0, e = a.cy % 2 == 0 ? 0 : 1, f = 0; f < 6; f++) ((b = this.getBubbleByCell(a.cx + d.NEIGHBORS[e][f][0], a.cy + d.NEIGHBORS[e][f][1])), null != b && c++);
                return c;
            }),
            (d.prototype.getNeighbors = function (a, b) {
                var c = a.cy % 2 == 0 ? 0 : 1;
                return this.getBubbleByCell(a.cx + d.NEIGHBORS[c][b][0], a.cy + d.NEIGHBORS[c][b][1]);
            }),
            (d.prototype.getNeighborsTop = function (a, b) {
                var c = a.cy % 2 == 0 ? 0 : 1;
                return this.getBubbleByCellTop(a.cx + d.NEIGHBORS[c][b][0], a.cy + d.NEIGHBORS[c][b][1]);
            }),
            (d.prototype.getNeighborsCellXY = function (a, b, c) {
                var e = b % 2 == 0 ? 0 : 1;
                return this.getBubbleByCell(a + d.NEIGHBORS[e][c][0], b + d.NEIGHBORS[e][c][1]);
            }),
            (d.prototype.collisionWithActiveBubbles = function (b, c, e, f) {
                if (this.needGuidelineOptimization && !e && a.Guideline.contact && a.Guideline.contact.contact && !a.Guideline.dummyContact && (Math.abs(a.Guideline.contact.contact.x - b) >= 3 * a.Options.BUBBLE_RADIUS || Math.abs(a.Guideline.contact.contact.y - c) >= 3 * a.Options.BUBBLE_RADIUS)) return null;
                for (var g = this._activeList.length - 1; g >= 0; g--) {
                    var h = this._activeList[g];
                    if (h && !h.fired && !h.dropable) {
                        if (c - h.y >= 2 * a.Options.BUBBLE_RADIUS) return null;
                        if (!(Math.abs(h.x - b) >= 2 * a.Options.BUBBLE_RADIUS || Math.abs(h.y - c) >= 2 * a.Options.BUBBLE_RADIUS)) {
                            var i = a.Options.BUBBLE_COLLISION_RADIUS,
                                j = 0.9 * a.Options.BUBBLE_RADIUS,
                                k = 0 == h.cx && h.x >= b,
                                l = h.cx == (h.cy % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO) - 1 && h.x <= b;
                            (k || l) && ((i = a.Options.BUBBLE_RADIUS), (j = a.Options.BUBBLE_RADIUS));
                            var m = h.cy % 2 == 0,
                                n = a.Options.BUBBLE_GAP_X * h.cx + (m ? 0 : a.Options.BUBBLE_RADIUS) - a.Options.GRID_OFFSET_X,
                                o = a.Options.BUBBLE_GAP_Y * h.cy,
                                p = this.checkCircleCollision(b, c, h.x, h.y, i, j);
                            if (p) {
                                if (this.needGuidelineOptimization && !e && a.Guideline.contact && !a.Guideline.dummyContact) return { cx: a.Guideline.contact.cx, cy: a.Guideline.contact.cy, contact: h };
                                var q = void 0;
                                ((this._cp[0].x = n - a.Options.BUBBLE_GAP_X / 1.6), (this._cp[0].y = o - a.Options.BUBBLE_GAP_Y), (this._cp[1].x = n + a.Options.BUBBLE_GAP_X / 1.6), (this._cp[1].y = o - a.Options.BUBBLE_GAP_Y), (this._cp[2].x = n + 1.3 * a.Options.BUBBLE_GAP_X), (this._cp[2].y = o), (this._cp[3].x = n - 1.3 * a.Options.BUBBLE_GAP_X), (this._cp[3].y = o), (this._cp[4].x = n - a.Options.BUBBLE_GAP_X / 1.6), (this._cp[4].y = o + a.Options.BUBBLE_GAP_Y), (this._cp[5].x = n + a.Options.BUBBLE_GAP_X / 1.6), (this._cp[5].y = o + a.Options.BUBBLE_GAP_Y));
                                for (var r = h.cy % 2 == 0 ? 0 : 1, s = 0; s < 6; s++) ((q = this.getBubbleByCell(h.cx + d.NEIGHBORS[r][s][0], h.cy + d.NEIGHBORS[r][s][1])), null != q && ((this._cp[s].x = Number.MAX_VALUE), (this._cp[s].y = Number.MAX_VALUE)), (this._cp[s].x <= a.Options.GRID_LEFT_X || this._cp[s].x >= a.Options.GRID_RIGHT_X) && (this._cp[s].x = this._cp[s].y = Number.MAX_VALUE), (this._dist[s] = a.Vec2.distance2(b, c, this._cp[s].x, this._cp[s].y)));
                                var t = Math.min(this._dist[2], this._dist[3], this._dist[4], this._dist[5]),
                                    u = void 0,
                                    v = void 0;
                                return (t == this._dist[0] && ((u = h.cy % 2 == 0 ? h.cx - 1 : h.cx), (v = h.cy - 1)), t == this._dist[1] && ((u = h.cy % 2 == 0 ? h.cx : h.cx + 1), (v = h.cy - 1)), t == this._dist[2] && ((u = h.cx + 1), (v = h.cy)), t == this._dist[3] && ((u = h.cx - 1), (v = h.cy)), t == this._dist[4] && ((u = h.cy % 2 == 0 ? h.cx - 1 : h.cx), (v = h.cy + 1)), t == this._dist[5] && ((u = h.cy % 2 == 0 ? h.cx : h.cx + 1), (v = h.cy + 1)), { cx: u, cy: v, contact: h });
                            }
                        }
                    }
                }
                return null;
            }),
            (d.prototype._contactShake = function (b, c, d, e) {
                if ((void 0 === d && (d = 1), void 0 === e && (e = !1), !b.shake)) {
                    (e && (d = 0.5), (b.shake = !0));
                    var f = e ? -1 : 1,
                        g = 1,
                        h = 1;
                    (this instanceof a.CircleWorld && ((g = Math.cos(-this.anchor.rotation)), (h = Math.sin(-this.anchor.rotation))),
                        TweenLite.to(b.visual, a.Options.CONTACT_ANIMATION_TIME / 2, { ease: Back.easeOut, x: ((-(c.cx - b.cx) * a.Options.CONTACT_ANIMATION_VELOCITY) / 2) * d * f * g, y: ((-(c.cy - b.cy) * a.Options.CONTACT_ANIMATION_VELOCITY) / 2) * d * f * h, delay: 0.1 * (1 - d) }),
                        TweenLite.to(b.visual.scale, a.Options.CONTACT_ANIMATION_TIME / 2, {
                            ease: Back.easeOut,
                            y: 1 + 0.05 * d,
                            delay: 0.1 * (1 - d),
                            onComplete: function (b) {
                                (TweenLite.to(b.visual, a.Options.CONTACT_ANIMATION_TIME, { ease: Back.easeOut, x: 0, y: 0 }),
                                    TweenLite.to(b.visual.scale, a.Options.CONTACT_ANIMATION_TIME, {
                                        ease: Back.easeOut,
                                        y: 1,
                                        onComplete: function () {
                                            b.shake = !1;
                                        },
                                    }));
                            },
                            onCompleteParams: [b],
                        }));
                }
            }),
            (d.prototype.contact = function (b, c) {
                (this.contactNeighbors(c, a.BubbleTypeContact.HIT), this.emit(d.EVENT_BUBBLE_CONTACT, c, b));
            }),
            (d.prototype.contactShake = function (b, c, d) {
                void 0 === d && (d = 1);
                var e = [[b, c]];
                do {
                    var f = e.shift(),
                        g = f[0],
                        h = f[1];
                    if ((this._contactShake(h, g, d, 1 == d), (d *= 0.9), d <= 0.1)) break;
                    for (var i = 0; i < 6; i++) {
                        var j = this.getNeighbors(h, i);
                        null != j && (j.kill || j.dropable || j.shake || j.y < -a.Options.BUBBLE_RADIUS || e.push([h, j]));
                    }
                } while (e.length > 0);
                ((e.length = 0), (e = null));
            }),
            (d.prototype.markPopBombBubbles = function (b) {
                if (((b.kill = !0), (b.killWave = 0), (this._markedCounter += 1), (b.popedColor = a.BubbleColor.BOMB), !this.stopCeiling || b.onScreen)) {
                    for (var c, e = 0, f = 0; f < d.BOMB_MASK.length; f++) {
                        var g = d.BOMB_MASK[f][0] % 2 == 0,
                            h = void 0,
                            i = b.cy + d.BOMB_MASK[f][0];
                        h = i % 2 == 0;
                        var j = b.cx + d.BOMB_MASK[f][1] - 1 - (h ? 0 : 1) - (g && h ? 1 : 0),
                            k = this.getBubbleByCellTop(j, i);
                        if (null != k) {
                            var l = k.activateColor,
                                m = a.Bubble.ACTIVATED_COLOR.indexOf(l) != -1,
                                n = !k.isAnchor && 0 == m && !k.isMainLock;
                            (n && !k.kill ? ((k.killWave = b.killWave + 1), (k.kill = !0), (e = Math.max(e, k.killWave)), a.Bubble.isDefaultColor(k.popedColor) && (k.popedColor = a.BubbleColor.BOMB), this._markedCounter++) : n && k.kill && (k.popedColor = a.BubbleColor.BOMB), m && (c || (c = []), c.push(k)));
                        }
                    }
                    if (c) {
                        for (var o = [], f = 0; f < c.length; f++) this.activateSpecialBubble(c[f], o, null, e);
                        for (; o.length; ) this.activateSpecialBubble(o.shift(), o, null, e);
                    }
                }
            }),
            (d.prototype.markPopLightningBubbles = function (b) {
                var c,
                    d = b.cy % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                if (((b.popedColor = a.BubbleColor.LIGHTNING), !this.stopCeiling || b.onScreen)) {
                    for (var e = 0, f = b.cx; f < d; f++) {
                        var g = this.getBubbleByCellTop(f, b.cy);
                        if (null != g) {
                            var h = g.activateColor,
                                i = a.Bubble.ACTIVATED_COLOR.indexOf(h) != -1 && h != a.BubbleColor.LIGHTNING,
                                j = !g.isAnchor && 0 == i && !g.isMainLock;
                            (j && !g.kill ? ((g.killWave = f == b.cx ? 0 : 8), (g.kill = !0), (e = Math.max(e, g.killWave)), a.Bubble.isDefaultColor(g.popedColor) && (g.popedColor = a.BubbleColor.LIGHTNING), this._markedCounter++) : j && g.kill && (g.popedColor = a.BubbleColor.LIGHTNING), i && (c || (c = []), c.push(g)));
                        }
                    }
                    for (var f = b.cx - 1; f >= 0; f--) {
                        var g = this.getBubbleByCellTop(f, b.cy);
                        if (null != g) {
                            var h = g.activateColor,
                                i = a.Bubble.ACTIVATED_COLOR.indexOf(h) != -1 && h != a.BubbleColor.LIGHTNING,
                                j = !g.isAnchor && 0 == i && !g.isMainLock;
                            (j && !g.kill ? ((g.killWave = 8), (g.kill = !0), (e = Math.max(e, g.killWave)), a.Bubble.isDefaultColor(g.popedColor) && (g.popedColor = a.BubbleColor.LIGHTNING), this._markedCounter++) : j && g.kill && (g.popedColor = a.BubbleColor.LIGHTNING), i && (c || (c = []), c.push(g)));
                        }
                    }
                    if (c) {
                        for (var k = [], f = 0; f < c.length; f++) this.activateSpecialBubble(c[f], k, null, e);
                        for (; k.length; ) this.activateSpecialBubble(k.shift(), k, null, e);
                    }
                }
            }),
            (d.prototype.markPopLaserBubbles = function (b) {
                var c,
                    d = b.cy % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO,
                    e = b.getComponent(a.TypeBubbleComponent.LASER),
                    f = e.visual.getMovePattern(),
                    g = b.cx,
                    h = b.cy;
                b.popedColor = a.BubbleColor.LASER;
                var i = 0,
                    j = !1;
                do {
                    var k = this.getBubbleByCellTop(g, h),
                        l = !1;
                    if (k) {
                        var m = k.activateColor;
                        l = k != b && a.Bubble.ACTIVATED_COLOR.indexOf(m) != -1;
                        var n = !k.isAnchor && 0 == l && !k.isMainLock;
                        if (this.stopCeiling && !k.onScreen) break;
                        n && !k.kill ? ((k.killWave = 8), (k.kill = !0), a.Bubble.isDefaultColor(k.popedColor) && (k.popedColor = a.BubbleColor.LASER), this._markedCounter++, i > 3 && k.y + this._bubbleContainer.y <= 2 * -a.Options.BUBBLE_DIAMETR && (j = !0)) : n && k.kill && (k.popedColor = a.BubbleColor.LASER);
                    }
                    if ((l && (c || (c = []), (k.killWave = 8), c.push(k)), j)) break;
                    (f[1] ? (b.cy % 2 ? (b.cy + h + 0.5 * (f[0] + 1)) % 2 && (g += f[0]) : (b.cy + h - 0.5 * (f[0] - 1)) % 2 && (g += f[0])) : (g += f[0]), (h += f[1]), i++);
                } while (g >= 0 && h >= 0 && g <= d);
                if (c) {
                    for (var o = [], p = 0; p < c.length; p++) this.activateSpecialBubble(c[p], o, null);
                    for (; o.length; ) this.activateSpecialBubble(o.shift(), o, null);
                }
            }),
            (d.prototype.markPopBubbles = function (b, c, e) {
                var f = [b];
                ((b.kill = !0), (b.killWave = c), b.popedColor == a.BubbleColor.NONE && (b.popedColor = b.mainColor), (this._markedCounter += 1));
                do {
                    b = f.shift();
                    for (var g = b.cy % 2 == 0 ? 0 : 1, h = 0; h < 6; h++) {
                        var i = this.getBubbleByCellTop(b.cx + d.NEIGHBORS[g][h][0], b.cy + d.NEIGHBORS[g][h][1]),
                            j = b.mainColor;
                        if (null != i) {
                            0 == c && j == a.BubbleColor.RAINBOW && 0 == a.Bubble.isNoneColor(i.mainColor) && 0 == i.isGouped && (j = i.mainColor);
                            var k = void 0;
                            if (e == a.BubbleColor.RAINBOW) {
                                if (((k = j), i.kill || !a.Bubble.equal(i.mainColor, j))) continue;
                            } else if (((k = e), i.kill || 0 == i.equalColor(e))) continue;
                            if (this.stopCeiling && !i.onScreen) continue;
                            ((i.killWave = c), (i.kill = !0), (i.popedColor = k), this._markedCounter++, f.push(i));
                        }
                    }
                    c++;
                } while (f.length > 0);
            }),
            (d.prototype.markSelectBubbles = function (b, c, e) {
                var f,
                    g = [{ cx: b, cy: c, mainColor: e }],
                    h = 0;
                do {
                    f = g.shift();
                    for (var i = f.cy % 2 == 0 ? 0 : 1, j = 0; j < 6; j++) {
                        var k = this.getBubbleByCellTop(f.cx + d.NEIGHBORS[i][j][0], f.cy + d.NEIGHBORS[i][j][1]),
                            l = f.mainColor;
                        if (null != k) {
                            if ((0 == h && l == a.BubbleColor.RAINBOW && 0 == a.Bubble.isNoneColor(k.mainColor) && 0 == k.isGouped && (l = k.mainColor), k.isSelected || k.mainColor != l)) continue;
                            (k.setSelect(!0), g.push(k));
                        }
                    }
                    if ((h++, h > 1e3)) break;
                } while (g.length > 0);
            }),
            (d.prototype.markSelectLightningBubbles = function (b, c) {
                for (var d = c % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO, e = b; e < d; e++) {
                    var f = this.getBubbleByCellTop(e, c),
                        g = null != f && !f.isAnchor;
                    g && !f.isSelected && f.setSelect(!0);
                }
                for (var e = b - 1; e >= 0; e--) {
                    var f = this.getBubbleByCellTop(e, c),
                        g = null != f && !f.isAnchor;
                    g && !f.isSelected && f.setSelect(!0);
                }
            }),
            (d.prototype.detectFlyBubbles = function () {
                for (var b = 0; b < a.Options.ROW_ONE; b++) {
                    var c = this._bubbles[b + '/0'];
                    c && this.markFlyBubbles(c);
                }
                for (var b = this._activeList.length - 1; b >= 0; b--) {
                    var c = this._activeList[b];
                    !c || c.fired || c.mark || (c.haveAdditionalAnchor && this.neighborsCount(c) && this.markFlyBubbles(c));
                }
                return this.dropFlyBubbles(this._gameEnd);
            }),
            (d.prototype.dropOneFlyBubble = function (b, c) {
                return !b.dropable && !b.markWings && (b.isWings ? (this._wingsBubbles.push(b), (b.markWings = !0), this.freeBubbleCell(b.cx, b.cy), (b.cx = null), (b.cy = null), !1) : ((b.active = !0), (b.dropable = !0), this.addBubbleToUpContainer(b), b.setVelocity(a.Utils.int(5 * (KY.Game.instance.rnd.js > 0.5 ? 1 : -1)), a.Utils.int(3 * (-1 + 2 * KY.Game.instance.rnd.js) - 6)), this.freeBubbleCell(b.cx, b.cy), !b.isUnlocker || 1 == b.emptyLock || (this._tmpLockers.push([b, !0]), (b.emptyLock = !0), !0)));
            }),
            (d.prototype.getLocker = function (a, b, c, e) {
                var f = this;
                this._unlockCells &&
                    this._unlockCells.length &&
                    ((this._delayCheckDrop = Math.max(this._delayCheckDrop, 0.1)),
                    KY.Game.instance.timer.add(function () {
                        for (var g, h, i, j, k, l = !1; ; ) {
                            if (!f._unlockCells.length) {
                                l = !0;
                                break;
                            }
                            if (((g = f._unlockCells.pop()), (j = g.cx), (k = g.cy), (h = g.x), (i = g.y), g && !g.kill && !g.dropable && g.isMainLock)) {
                                if (!g.isOnScreen(2)) {
                                    ((l = !0), f._unlockCells.push(g));
                                    break;
                                }
                                var m = [g];
                                ((g.markLock = g.identificator), (l = !1));
                                do
                                    for (var n = m.shift(), o = n.cy % 2 == 0 ? 0 : 1, p = 0; p < 6; p++) {
                                        var q = n.cx + d.NEIGHBORS[o][p][0],
                                            r = n.cy + d.NEIGHBORS[o][p][1];
                                        if (!(r <= 0)) {
                                            var s = f.getBubbleByCell(q, r);
                                            s && s.markLock != g.identificator && s.isLock && ((s.markLock = g.identificator), m.push(s));
                                        }
                                    }
                                while (m.length > 0);
                                break;
                            }
                            l = !0;
                        }
                        if (l) f.emit(d.EVENT_GET_UNLOCKER_FREE);
                        else {
                            c && (e.hideComponent(), e.changeType(17, []));
                            var t = (c ? 0 : 0.2) + 0.6 + 0.5;
                            ((f._delayCheckDrop = Math.max(f._delayCheckDrop, t + 0.1)), f.emit(d.EVENT_GET_UNLOCKER, a, b, h, i, c, j, k, g));
                        }
                    }, 10));
            }),
            (d.prototype.lockDone = function (b, c) {
                var d = this,
                    e = this.getBubbleByCell(b, c);
                (e.getComponent(a.TypeBubbleComponent.VEIL_LOCK).visual.done(),
                    (this._delayCheckDrop = Math.max(this._delayCheckDrop, 0.05 + 0.1)),
                    KY.Game.instance.timer.add(function () {
                        var a = d.openLock(e);
                        d._delayCheckDrop = Math.max(d._delayCheckDrop, a + 0.1);
                    }, 50));
            }),
            (d.prototype.openLock = function (a) {
                var b = [a],
                    c = 0,
                    e = a.clearLock(0);
                do {
                    a = b.shift();
                    for (var f = a.cy % 2 == 0 ? 0 : 1, g = 0; g < 6; g++) {
                        var h = this.getBubbleByCellTop(a.cx + d.NEIGHBORS[f][g][0], a.cy + d.NEIGHBORS[f][g][1]);
                        null != h && h.isLock && ((e = Math.max(e, h.clearLock(c + 1))), b.push(h));
                    }
                    c++;
                } while (b.length > 0);
                return e;
            }),
            (d.prototype.addBubbleToUpContainer = function (a) {
                null != a.parent && this._upContainer.addChild(a);
            }),
            (d.prototype.dropFlyBubbles = function (a) {
                var b = 0;
                this._currentMapHeight = 0;
                for (var c = this._activeList.length - 1; c >= 0; c--) {
                    var d = this._activeList[c];
                    d && (d.fired || (0 == d.mark ? this.dropOneFlyBubble(d, a) && b++ : (this._currentMapHeight = Math.max(this._currentMapHeight, d.cy))));
                }
                this._currentCountBubbles = 0;
                for (var e in this._bubbles) this._currentCountBubbles++;
                return (this.unMarkBubbles(), b);
            }),
            (d.prototype.markFlyBubbles = function (a) {
                if (null != a && !a.kill && !a.dropable && !a.mark) {
                    a.mark = !0;
                    for (var b = a.cy % 2 == 0 ? 0 : 1, c = 0; c < 6; c++) {
                        var e = this.getBubbleByCell(a.cx + d.NEIGHBORS[b][c][0], a.cy + d.NEIGHBORS[b][c][1]);
                        if (null != e) {
                            if (e.mark) continue;
                            this.markFlyBubbles(e);
                        }
                    }
                }
            }),
            (d.prototype.popMarkedBubbles = function (a) {
                for (var b = 0, c = this._activeList.length - 1; c >= 0; c--) {
                    var d = this._activeList[c];
                    d.kill && ((b = Math.max(d.pop(!1, !1, a, !1), b)), d.strength <= 0 ? this.removeBubble(d, c, !1) : ((d.kill = !1), (d.killWave = null)));
                }
                b && (this._delayCheckDrop = b);
            }),
            (d.prototype.unMarkBubbles = function (b, c, d, e) {
                void 0 === e && (e = !1);
                for (var f = 0, g = this._activeList.length - 1; g >= 0; g--) {
                    var h = this._activeList[g];
                    if ((!c || 1 == a.Bubble.isDefaultColor(h.popedColor)) && h.mainColor != b) {
                        if (e && 0 == a.Bubble.isDefaultColor(h.mainColor, !1)) continue;
                        var i = h.kill;
                        if (((h.kill = !1), (h.killWave = null), (h.mark = !1), (h.markContact = !1), (h.markLock = null), i && (f++, d && f == d))) return f;
                    }
                }
                return f;
            }),
            (d.prototype.preFireBubble = function (a) {}),
            (d.prototype.fireBubble = function (b) {
                if (0 == this.canShoot || 1 != this._isTouched) return ((this._isTouched = !1), !1);
                ((this._KOSTYL = !0), (this._isTouched = !1), (this._deleteDummyBubble = !1), (this._dummyEffectiveShot = !1), (this._findSpecialBubble = !1), (this._lastContactX = null), (this._lastContactY = null), (this._prevColorRequestCount = this._colorRequestCount));
                var c = this._nextBubbles.shift();
                return (b && this.changeBubbleCount(-1), this._firedBubbles.push(c), (c.active = !0), c.setVelocity(a.Options.BUBBLE_SPEED * Math.cos(this._fireAngle), a.Options.BUBBLE_SPEED * Math.sin(this._fireAngle)), (c.x = a.Options.CANNON_X - this._bubbleContainer.x), (c.y = a.Options.CANNON_Y - this.bubblesTopY), c.setStart(c.x, c.y), this.preFireBubble(c), this._bubbleContainer.addChild(c), this.getNextFiredBubble(!1), this._guideline.clear(), (this._tmpBallColor = null), (this._lastShot.color = c.mainColor), (this._lastShot.count = 0), (this._burnOutBubbles = 0), (this._activatedBubblesInSimpleCollision = !1), this.emit(d.EVENT_FIRED), this._moveIndex++, (this._stopCheckZeroBubble = !1), !0);
            }),
            (d.prototype.fakeFireBubble = function () {}),
            (d.prototype.getNextBubbleColor = function (b) {
                void 0 === b && (b = !1);
                var c;
                return ((c = this._nextBubbles.length && this._nextBubbles[0] ? this._nextBubbles[0].noBugColor : a.BubbleColor.NONE), a.Bubble.isDefaultColor(c) ? c : a.BubbleColor.NONE);
            }),
            (d.prototype.changeNextBubbleColor = function (b) {
                (void 0 === b && (b = !1), b ? this.emit(d.EVENT_CHANGE_NEXT_BUBBLE_COLOR, a.BubbleColor.NONE) : this.emit(d.EVENT_CHANGE_NEXT_BUBBLE_COLOR, this.getNextBubbleColor()));
            }),
            (d.prototype.setBomb = function (b) {
                (b ? this._nextBubbles[0] && ((this._tmpBallColor = this._nextBubbles[0].mainColor), this._nextBubbles[0].changeType(a.BubbleColor.BOMB, null), this.changeNextBubbleColor(!0)) : this._tmpBallColor && this._nextBubbles[0] && (this._nextBubbles[0].changeType(this._tmpBallColor, null), this.changeNextBubbleColor()), this._nextBubbles[0] && this._nextBubbles[0].jumpUp());
            }),
            (d.prototype.setLightning = function (b) {
                (b ? this._nextBubbles[0] && ((this._tmpBallColor = this._nextBubbles[0].mainColor), this._nextBubbles[0].changeType(a.BubbleColor.LIGHTNING, null), this.changeNextBubbleColor(!0)) : this._tmpBallColor && this._nextBubbles[0] && (this._nextBubbles[0].changeType(this._tmpBallColor, null), this.changeNextBubbleColor()), this._nextBubbles[0] && this._nextBubbles[0].jumpUp());
            }),
            (d.prototype.setRainbow = function (b) {
                (b ? this._nextBubbles[0] && ((this._tmpBallColor = this._nextBubbles[0].mainColor), this._nextBubbles[0].changeType(a.BubbleColor.RAINBOW, null), this.changeNextBubbleColor(!0)) : this._tmpBallColor && this._nextBubbles[0] && (this._nextBubbles[0].changeType(this._tmpBallColor, null), this.changeNextBubbleColor()), this._nextBubbles[0] && this._nextBubbles[0].jumpUp());
            }),
            (d.prototype.setFireball = function (b) {
                (b ? this._nextBubbles[0] && ((this._tmpBallColor = this._nextBubbles[0].mainColor), this._nextBubbles[0].changeType(a.BubbleColor.FIREBALL, null), this.changeNextBubbleColor(!0), this._guidelineUpConttainer.addChild(this._guideline)) : (this._tmpBallColor && this._nextBubbles[0] && (this._nextBubbles[0].changeType(this._tmpBallColor, null), this.changeNextBubbleColor()), this._guidelineConttainer.addChild(this._guideline)), this._nextBubbles[0] && this._nextBubbles[0].jumpUp());
            }),
            (d.prototype.getBubble = function () {
                var b;
                return ((b = this._deactiveList.length ? this._deactiveList.pop() : new a.Bubble(this)), this._activeList.push(b), b);
            }),
            (d.prototype.removeBubble = function (b, c, e) {
                var f = this;
                if ((void 0 === c && (c = -1), void 0 === e && (e = !1), this._bubbles[b.cx + '/' + b.cy] == b && this.freeBubbleCell(b.cx, b.cy), (this._weRemoveBubbles = !0), (c != -1 && null != c) || (c = this._activeList.indexOf(b)), c != -1 && this._activeList.splice(c, 1), 0 == e && this._purgatory.push(b), b.isKey && !b.dropable)) {
                    var g = Math.max((b.killWave ? b.killWave : 0) * a.Bubble.WAVE_DELAY, 1);
                    KY.Game.instance.timer.add(function () {
                        f.emit(d.EVENT_PIG_KEY_SHOW, b.x, b.y);
                    }, g);
                }
                var h = b.specialType;
                (null != h && !b.dropable && a.Bubble.isDefaultColor(b.popedColor) && ((this._stopCheckZeroBubble = !0), this.emit(d.EVENT_GET_SPECIAL_BUBBLE, h, b.specialMoveCounter, b.x, b.y)), b.isUnlocker && 1 != b.emptyLock && this._tmpLockers.push([b, !1]));
            }),
            (d.prototype.addBubbleToDeactiveList = function (a) {
                if (this._deactiveList.indexOf(a) == -1) {
                    this._deactiveList.push(a);
                    var b = this._purgatory.indexOf(a);
                    b != -1 && this._purgatory.splice(b, 1);
                }
            }),
            (d.prototype.getBubbleByCell = function (a, b) {
                var c = this._bubbles[a + '/' + b];
                return c ? c : null;
            }),
            (d.prototype.getBubbleByCellTop = function (a, b) {
                return this.getBubbleByCell(a, b);
            }),
            (d.prototype.reloadCannon = function () {
                if (this._maxNextBubbles) {
                    for (var a = this._nextBubbles.length, b = 0; b < this._maxNextBubbles - a; b++) this.getNextFiredBubble(!1);
                    (this.updatePositionNextBubble_KOSTYL(), this.emit(d.EVENT_CHANGE_NEXT_BUBBLE_COLOR, this.getNextBubbleColor()));
                }
            }),
            (d.prototype.getNextFiredBubble = function (b) {
                if ((void 0 === b && (b = !1), !(this._bubbleCount <= 0))) {
                    for (var c = Math.max(Math.min(this._maxNextBubbles, this._bubbleCount + 1), 2), d = Math.min(c - 1, this._nextBubbles.length), e = c - 1 - this._nextBubbles.length, f = !1, g = 0; g < d; g++)
                        if (this._nextBubbles[g].x != a.Options.NEXT_BUBBLES_POSITON[g + e][0] || this._nextBubbles[g].y != a.Options.NEXT_BUBBLES_POSITON[g + e][1]) {
                            var h = g + e == 0 ? 1 : 0.8;
                            (TweenLite.to(this._nextBubbles[g], 0.1, { x: a.Options.NEXT_BUBBLES_POSITON[g + e][0], y: a.Options.NEXT_BUBBLES_POSITON[g + e][1], ease: Sine.easeOut }), TweenLite.to(this._nextBubbles[g].scale, 0.1, { x: h, y: h }), TweenLite.to(this._nextBubbles[g], 0.1, { alpha: 1 }), (f = !0));
                        }
                    f && (this._swapDelay = 0.11);
                    var i = !1;
                    if (this._bubbleCount <= this._maxNextBubbles - 1) {
                        if (0 != this._nextBubbles.length) return;
                        i = !0;
                    }
                    var j = this.getBubble();
                    this._nextBubbles.push(j);
                    var k = this.getRandomAvailableColor(b);
                    j.setData(k, 0, 0);
                    var l = i ? 0 : this._maxNextBubbles - 1,
                        m = i ? 1 : 0.8;
                    ((j.x = a.Options.NEXT_BUBBLES_POSITON[l][0]), (j.y = a.Options.NEXT_BUBBLES_POSITON[l][1]), j.scale.set(1e-4), TweenLite.to(j.scale, 0.1, { x: m, y: m }), (j.fired = !0), this._cannonContainer.addChild(j));
                }
            }),
            (d.prototype.updatePositionNextBubble_KOSTYL = function () {
                if (this._KOSTYL) {
                    for (var b = Math.min(this._bubbleCount, this._maxNextBubbles); this._nextBubbles.length < b; ) this.addNextBubble_KOSTYL();
                    for (var c = 0; c < this._nextBubbles.length; c++) {
                        var d = 0 == c ? 1 : 0.8;
                        (TweenLite.killTweensOf(this._nextBubbles[c]), TweenLite.killTweensOf(this._nextBubbles[c].scale), (this._nextBubbles[c].x = a.Options.NEXT_BUBBLES_POSITON[c][0]), (this._nextBubbles[c].y = a.Options.NEXT_BUBBLES_POSITON[c][1]), this._nextBubbles[c].scale.set(d), (this._nextBubbles[c].alpha = 1));
                    }
                }
            }),
            (d.prototype.addNextBubble_KOSTYL = function (b) {
                void 0 === b && (b = !1);
                var c = this.getBubble(),
                    d = this._nextBubbles.length;
                this._nextBubbles.push(c);
                var e = this.getRandomAvailableColor(b);
                c.setData(e, 0, 0);
                ((c.x = a.Options.NEXT_BUBBLES_POSITON[d][0]), (c.y = a.Options.NEXT_BUBBLES_POSITON[d][1]), c.scale.set(1), (c.fired = !0), this._cannonContainer.addChild(c));
            }),
            (d.prototype.getRandomAvailableColor = function (b) {
                if ((void 0 === b && (b = !1), b)) return this._rnd.rangeInt(a.BubbleColor.RED, a.BubbleColor.PURPLE);
                if (this._noAvailableColor) return 1;
                if ((this._colorRequestCount++, this._prepareBubbles.length >= this._colorRequestCount)) return this._prepareBubbles[this._colorRequestCount - 1];
                for (var c = this._tmpRandomColors.length - 1; c >= 0; c--) 0 == this._availableColors[this._tmpRandomColors[c] - 1] && this._tmpRandomColors.splice(c, 1);
                for (var d = 0, c = 0; c < this._availableColors.length; c++) this._availableColors[c] && d++;
                if (0 == this._tmpRandomColors.length) {
                    for (var e = [], c = 0; c < this._nextBubbles.length - 1; c++) this._nextBubbles[c].mainColor != -1 && e.push(this._nextBubbles[c].mainColor);
                    this._firedBubbles && this._firedBubbles[0] && e.push(this._firedBubbles[0].mainColor);
                    for (var c = 0; c < a.Options.MAX_COLORS; c++) this._availableColors[c] && (d > e.length ? e.indexOf(c + 1) == -1 && this._tmpRandomColors.push(c + 1) : this._tmpRandomColors.push(c + 1));
                    a.Utils.shuffle(this._tmpRandomColors, this._rnd);
                }
                if (!d) {
                    if (a.MI.get().isMapEditor) throw 'getRandomAvailableColor: Нет цветов';
                    return (a.Statistics.customError(a.STATS_CUSTOM_ERROR_CODE.NO_COLORS), 1);
                }
                if (this._tmpRandomColors.length) {
                    var f = this._tmpRandomColors.shift();
                    return f;
                }
                for (var c = 0; c < this._availableColors.length; c++) if (this._availableColors[c]) return c + 1;
            }),
            (d.prototype.getLastYBubble = function () {
                return this._lastYBall;
            }),
            (d.prototype.getCurrentColor = function () {
                return this._nextBubbles[0].mainColor;
            }),
            (d.prototype.checkCircleCollision = function (b, c, d, e, f, g) {
                var h = f + g;
                return a.Vec2.distance2(b, c, d, e) <= h * h;
            }),
            (d.prototype.clearAvailableColor = function (b) {
                void 0 === b && (b = !1);
                for (var c = 0; c < a.Options.MAX_COLORS; c++) this._availableColors[c] = !!b;
                this._noAvailableColor = !b;
            }),
            (d.prototype.addAvailableColor = function (b, c) {
                (b >= a.BubbleColor.RED && b <= a.BubbleColor.PURPLE && ((this._noAvailableColor = !1), (this._availableColors[b - 1] = !0)), null != c && c >= a.BubbleColor.RED && c <= a.BubbleColor.PURPLE && ((this._noAvailableColor = !1), (this._availableColors[c - 1] = !0)));
            }),
            (d.prototype.checkAvailableColor = function (a) {
                return this._availableColors[a - 1];
            }),
            (d.prototype.isEmptyAvailableColor = function () {
                for (var a = 0; a < this._availableColors.length; a++) if (this._availableColors[a]) return !1;
                return !0;
            }),
            (d.prototype.changeBubbleCount = function (a, b, c) {
                (void 0 === b && (b = !1), void 0 === c && (c = !1), a && ((this._bubbleCount += a), this._bubbleCount < 0 && (this._bubbleCount = 0), 0 == c && this.emit(d.EVENT_BUBBLE_COUNT_CHANGE, this._bubbleCount), 1 == this._bubbleCount && this.emit(d.EVENT_LAST_BUBBLE), a > 0 && 0 == b && this.reloadCannon(), a < 0 && this.checkCannon()));
            }),
            (d.prototype.showCannonBubbles = function (a) {
                (void 0 === a && (a = 0.2), TweenLite.to(this._cannonContainer, a, { alpha: 1 }));
            }),
            (d.prototype.clearGuidline = function () {
                (this._guideline.clear(), (this._isTouched = !1));
            }),
            (d.prototype.reset = function () {
                (this.clearAvailableColor(), (this._wingsBubbles.length = 0), (this._swapDelay = 0), (this._KOSTYL = !1), (this._stopCheckZeroBubble = !1), (this._unlockCells = null));
                for (var a in this._bubbles) delete this._bubbles[a];
                for (; this._activeList.length; ) {
                    var b = this._activeList.pop();
                    (b.destroy(), (b = null));
                }
                for (; this._deactiveList.length; ) {
                    var b = this._deactiveList.pop();
                    (b.destroy(), (b = null));
                }
                for (; this._purgatory.length; ) {
                    var b = this._purgatory.pop();
                    (b.destroy(), (b = null));
                }
                for (; this._firedBubbles.length; ) {
                    var b = this._firedBubbles.pop();
                    (b.destroy(), (b = null));
                }
                (this._cannonContainer.removeChildren(), this._bubbleContainer.removeChildren(), this._additionalContainer.removeChildren(), this._additionalContainer2.removeChildren(), this._upContainer.removeChildren(), this._guidelineConttainer.removeChildren(), this._guidelineUpConttainer.removeChildren(), (this._prevCanTouch = null), (this._lastYBall = this._lastYBallInit), this.scroll(!0));
            }),
            (d.prototype.pause = function () {
                this._manualPause = !0;
            }),
            (d.prototype.unpause = function () {
                this._manualPause = !1;
            }),
            (d.prototype.loadMap = function (b, e, f) {
                void 0 === f && (f = !1);
                var g,
                    h = 0;
                if (((this._currentMapHeight = e - 1), (this._currentCountBubbles = 0), (this.user_haveSpecialBubbles = !1), (this._lastYBall = -1), f)) {
                    g = [];
                    for (var i = 0; i < b.length; i++) 0 != b[i] && g.push(b[i]);
                }
                var j,
                    k,
                    l,
                    m,
                    n = !1;
                if (this.user_level >= a.UserGameData.PIG_KEY_MIN_LEVEL && a.UserGameData.isFirstTimeOnLevel(this.user_level)) {
                    var o = a.UserGameData.getProperty(a.USER_PROPERTY.LAST_KEY_LEVEL);
                    m = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) - o;
                    var p = a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK);
                    m >= a.UserGameData.PIG_KEY_FREQUENCY && p >= a.UserGameData.PIG_KEY_MIN_BANK && (n = !0);
                }
                n && ((j = a.UserGameData.getProperty(a.USER_PROPERTY.KEYS)), j < 4 ? (k = a.UserGameData.PIG_KEY_OPTIONS[j]) : (n = !1), m >= a.UserGameData.PIG_KEY_LEVEL_GAP_MAX && (k = a.UserGameData.PIG_KEY_OPTIONS[5]));
                for (var q = 0; q <= this._currentMapHeight; q++) {
                    l = Stage.rnd.js < a.UserGameData.PIG_KEY_OPTIONS[4];
                    var r = 11;
                    if (f) {
                        var s = q % 2 == 0;
                        r = s ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                    }
                    for (var t = 0; t < r; t++) {
                        var u = void 0,
                            v = null;
                        if (f) {
                            if (((u = this._rnd.getRandomItem(g)), 0 == q && u == a.BubbleColor.NONE))
                                for (var w = 0; w < g.length; w++)
                                    if (g[w] != a.BubbleColor.NONE) {
                                        u = g[w];
                                        break;
                                    }
                        } else {
                            if (Array.isArray(b[h])) {
                                ((u = a.Utils.int(b[h][0])), (v = []));
                                for (var x = 1; x < b[h].length; x++) v.push(b[h][x]);
                            } else u = a.Utils.int(b[h]);
                            if ((h++, 0 == u)) continue;
                        }
                        var y = this.getBubble();
                        (n && l && !f && (!v || 0 == v.length || (1 == v.length && v[0] == a.TypeBubbleComponent.CLOUD)) && a.Bubble.isDefaultColor(u, !1) && Stage.rnd.js < k && ((v = v ? v : []), v.push(a.TypeBubbleComponent.PIG_KEY), (n = !1), a.UserGameData.setProperty(a.USER_PROPERTY.LAST_KEY_LEVEL, this.user_level)), !f && v && 1 == v.length && (v[0] >= a.TypeBubbleComponent.SB_MOVE && v[0] <= a.TypeBubbleComponent.SB_GUIDELINE && (this.user_haveSpecialBubbles = !0), v[0] == a.TypeBubbleComponent.VEIL_LOCK && (this._unlockCells || (this._unlockCells = []), this._unlockCells.push(y))), y.setData(u, t, q, void 0, v), this.loadMapProcess(y), this._currentCountBubbles++, this.addAvailableColor(y.noBugColor, y.additionalColor), (this._bubbles[t + '/' + q] = y), (this._lastYBall = Math.max(this._lastYBall, y.y)), this._bubbleContainer.addChild(y));
                    }
                }
                this._lastYBallInit = this._lastYBall;
                for (var i = 0; i < this._activeList.length; i++) this._activeList[i].loaded();
                (this._type != c.CIRCLE && this.update(0, 0, 0), this._type != c.CIRCLE && 0 != a.Options.SHOW_STARTLEVEL_ANIMATIONS && this._demoScrollLevel ? ((this.bubblesTopY = a.Options.MAP_BEGIN_Y + 0.25 * a.Options.SCREEN_HEIGHT), this.scroll(!1, !0)) : (this.emit(d.EVENT_END_START_DEMO), this.scroll(!0), this.changeNextBubbleColor()), (this._cannonContainer.alpha = 0));
            }),
            (d.prototype.repositionBubble = function (a, b, c) {
                (null != a.cx && null != a.cy && this._bubbles[a.cx + '/' + a.cy] == a && this.freeBubbleCell(a.cx, a.cy), (this._bubbles[b + '/' + c] = a));
            }),
            (d.prototype.freeBubbleCell = function (a, b) {
                delete this._bubbles[a + '/' + b];
            }),
            (d.prototype.loadMapProcess = function (a) {}),
            Object.defineProperty(d.prototype, 'threshold', {
                get: function () {
                    return this._currentMapHeight - a.Options.ACTIVE_ROWS;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'effectiveShots', {
                get: function () {
                    return this._effectiveShot;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'achievedTheGoal', {
                get: function () {
                    return 0 == this.haveBubblesOnScreen;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'type', {
                get: function () {
                    return this._type;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'bubbleContainer', {
                get: function () {
                    return this._bubbleContainer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'canTouch', {
                get: function () {
                    if (this._bubbleCount <= 0) return !1;
                    if (this._gameEnd || this._fountainMode) return !1;
                    if (this._purgatory.length > 0) return !1;
                    if (this._manualPause) return !1;
                    if (0 != this._delayCheckDrop) return !1;
                    if (this._wingsBubbles.length) return !1;
                    if (0 != this._swapDelay) return !1;
                    if (!this.isScrolling) return 0 == this.haveFiredBubbles && 0 == this._noAvailableColor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'bubbleCount', {
                get: function () {
                    return this._bubbleCount;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'canShoot', {
                get: function () {
                    return this._validMouseArea && this.canTouch;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isNoStableBubble', {
                get: function () {
                    return this._currentCountBubbles - this._countNoneBubbles == 0;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'haveFiredBubbles', {
                get: function () {
                    return 0 != this._firedBubbles.length;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'bubblesTopY', {
                get: function () {
                    return this._bubbleContainer.y;
                },
                set: function (a) {
                    ((this._bubbleContainer.y = a), (this._additionalContainer.y = a), (this._additionalContainer2.y = a), (this._upContainer.y = a), (this._ceilingContainer.y = a));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'lastShotInfo', {
                get: function () {
                    return this._lastShot;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'haveBubblesOnScreen', {
                get: function () {
                    return 0 != this._activeList.length || 0 != this._purgatory.length;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'nextBubbles', {
                get: function () {
                    return this._nextBubbles;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'additionalContainer', {
                get: function () {
                    return this._additionalContainer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'additionalContainer2', {
                get: function () {
                    return this._additionalContainer2;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'upContainer', {
                get: function () {
                    return this._upContainer;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isScrolling', {
                get: function () {
                    return this._isScrolling;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'rnd', {
                get: function () {
                    return this._rnd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'lastContactX', {
                get: function () {
                    return this._lastContactX;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'lastContactY', {
                get: function () {
                    return this._lastContactY;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isGameEnd', {
                get: function () {
                    return this._gameEnd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'firstNextBubble', {
                get: function () {
                    return this._nextBubbles ? this._nextBubbles[0] : null;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (d.prototype.debugTrace1 = function () {
                console.log('---------- TRACE 1 ---------------');
                for (var b, c = '', d = 0; d <= this._currentMapHeight; d++) {
                    b = d % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                    for (var e = '', f = 0; f < b; f++) {
                        var g = this._bubbles[f + '/' + d];
                        e += g ? '[' + (f + '/' + d) + ': ' + a.Bubble.colorName(g.mainColor) + ' | ' + g.kill + ',' + g.dropable + ',' + g.fired + '], ' : '[' + (f + '/' + d) + ': null], ';
                    }
                    c += e + '\n';
                }
                ((c += '--------------------------------------\n'), console.log(c));
            }),
            (d.prototype.debugTrace2 = function () {
                console.log('---------- TRACE 2 ---------------');
                for (var b, c = 0; c <= this._currentMapHeight; c++) {
                    b = c % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                    for (var d = 0; d < b; d++) {
                        var e = this._bubbles[d + '/' + c];
                        console.log('[' + d + '/' + c + ']: ', e);
                    }
                }
                console.log('--------------------------------------\n');
            }),
            (d.prototype.debugTrace3 = function () {
                for (var b, c = 0; c <= this._currentMapHeight; c++) {
                    b = c % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                    for (var d = 0; d < b; d++) {
                        var e = this._bubbles[d + '/' + c];
                        e && e.addDebugID();
                    }
                }
            }),
            (d.prototype.debugTrace5 = function () {
                for (var a = 0; a < this._activeList.length; a++) {
                    var b = this._activeList[a],
                        c = b ? b.cx : '?',
                        d = b ? b.cy : '?';
                    console.log('[' + c + '/' + d + ']: ', b);
                }
            }),
            (d.MAP_TYPE_DEFAULT = 0),
            (d.MAP_TYPE_CIRCLE = 1),
            (d.MAP_TYPE_CROWN = 2),
            (d.EVENT_BUBBLE_COUNT_CHANGE = 'EVENT_BUBBLE_COUNT_CHANGE'),
            (d.EVENT_LAST_BUBBLE = 'EVENT_LAST_BUBBLE'),
            (d.EVENT_FIRED = 'EVENT_FIRED'),
            (d.EVENT_AFTER_FIRED = 'EVENT_AFTER_FIRED'),
            (d.EVENT_SWAP = 'EVENT_SWAP'),
            (d.EVENT_AFTER_COLLISION = 'EVENT_AFTER_COLLISION'),
            (d.EVENT_CAN_TOUCH = 'EVENT_CAN_TOUCH'),
            (d.EVENT_GAME_OVER = 'EVENT_GAME_OVER'),
            (d.EVENT_GAME_WIN = 'EVENT_GAME_WIN'),
            (d.EVENT_GAME_CONTINUE = 'EVENT_GAME_CONTINUE'),
            (d.EVENT_STAGE_CLEAR = 'EVENT_STAGE_CLEAR'),
            (d.EVENT_FOUNTAIN_START = 'EVENT_FOUNTAIN_START'),
            (d.EVENT_FOUNTAIN_END = 'EVENT_FOUNTAIN_END'),
            (d.EVENT_BOUNCE_WALL = 'EVENT_BOUNCE_WALL'),
            (d.EVENT_BUBBLE_POP = 'EVENT_BUBBLE_POP'),
            (d.EVENT_GUIDELINE_NO_LIMIT_MOVE = 'EVENT_GUIDELINE_NO_LIMIT_MOVE'),
            (d.EVENT_GUIDELINE_BEGIN = 'EVENT_GUIDELINE_BEGIN'),
            (d.EVENT_GUIDELINE_END = 'EVENT_GUIDELINE_END'),
            (d.EVENT_BUBBLE_CONTACT = 'EVENT_BUBBLE_CONTACT'),
            (d.EVENT_CROWN_COUNT = 'EVENT_CROWN_COUNT'),
            (d.EVENT_CROWN_SHOW = 'EVENT_CROWN_SHOW'),
            (d.EVENT_END_START_DEMO = 'EVENT_END_START_DEMO'),
            (d.EVENT_SHOW_LIGHTNING = 'EVENT_SHOW_LIGHTNING'),
            (d.EVENT_SHOW_LASER = 'EVENT_SHOW_LASER'),
            (d.EVENT_MAP_SCROLL = 'EVENT_MAP_SCROLL'),
            (d.EVENT_SHOW_FLY = 'EVENT_SHOW_FLY'),
            (d.EVENT_PIG_KEY_SHOW = 'EVENT_PIG_KEY_SHOW'),
            (d.EVENT_GET_SPECIAL_BUBBLE = 'EVENT_GET_SPECIAL_BUBBLE'),
            (d.EVENT_PLUS_MINUS_TWO = 'EVENT_PLUS_MINUS_TWO'),
            (d.EVENT_CHANGE_NEXT_BUBBLE_COLOR = 'EVENT_CHANGE_NEXT_BUBBLE_COLOR'),
            (d.EVENT_GET_UNLOCKER = 'EVENT_GET_UNLOCKER'),
            (d.EVENT_GET_UNLOCKER_FREE = 'EVENT_GET_UNLOCKER_FREE'),
            (d.NEIGHBORS = [
                [
                    [-1, -1],
                    [0, -1],
                    [1, 0],
                    [-1, 0],
                    [-1, 1],
                    [0, 1],
                ],
                [
                    [0, -1],
                    [1, -1],
                    [1, 0],
                    [-1, 0],
                    [0, 1],
                    [1, 1],
                ],
            ]),
            (d.NEIGHBORS_WHEEL = [
                [
                    [-1, -1],
                    [0, -1],
                    [1, 0],
                    [0, 1],
                    [-1, 1],
                    [-1, 0],
                ],
                [
                    [0, -1],
                    [1, -1],
                    [1, 0],
                    [1, 1],
                    [0, 1],
                    [-1, 0],
                ],
            ]),
            (d.BOMB_MASK = [
                [-2, 1],
                [-2, 2],
                [-2, 3],
                [-1, 0],
                [-1, 1],
                [-1, 2],
                [-1, 3],
                [0, 0],
                [0, 1],
                [0, 3],
                [0, 4],
                [1, 0],
                [1, 1],
                [1, 2],
                [1, 3],
                [2, 1],
                [2, 2],
                [2, 3],
            ]),
            (d.FOUNTAIN_DELAY = 0.5),
            (d.GUIDELINE_UPDATE_TIME = 0.1),
            (d.CHECK_ZERO_BUBBLE_TIME = 10),
            d
        );
    })(PIXI.Container);
    a.World = b;
    var c;
    !(function (a) {
        ((a[(a.DEFAULT = 1)] = 'DEFAULT'), (a[(a.CROWN = 2)] = 'CROWN'), (a[(a.CIRCLE = 3)] = 'CIRCLE'), (a[(a.WEEK_COMPETITION = 4)] = 'WEEK_COMPETITION'));
    })((c = a.WorldType || (a.WorldType = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._type = a.WorldType.CIRCLE), c);
        }
        return (
            __extends(c, b),
            (c.prototype.setup = function (a, c, d) {
                (void 0 === c && (c = !0), void 0 === d && (d = !1), b.prototype.setup.call(this, a, c, d), (this._deltaRotation = 0), (this._ceiling.frameName = 'top_circle'), (this._rotationUnits = null), (this._rotationUnitParams = null), (this._rotationUnitTimer = 0), (this._rotationStep = 0), (this._rotationUnitIdx = 0), (this._knifeMode = !1), 'string' == typeof a.angleSpeed ? ('[' == a.angleSpeed[0] ? ((this._rotationUnits = JSON.parse('[' + a.angleSpeed + ']')), (this._knifeMode = !0)) : ((this._angleSpeed = Number(a.angleSpeed[0])), this._angleSpeed ? (this._angleSpeed *= PIXI.DEG_TO_RAD) : (this._angleSpeed = 0)), (this._anchor.rotation = a.beginAngle ? a.beginAngle : 0)) : ((this._angleSpeed = a.angleSpeed ? a.angleSpeed : 0), (this._anchor.rotation = a.beginAngle ? a.beginAngle : 0)), this.update(0, 0, 0));
            }),
            (c.prototype.updateRotationStep = function (a) {
                if (null == this._rotationUnitParams) {
                    var b = this._rotationUnits[this._rotationUnitIdx];
                    1 === b.length ? (this._rotationUnitParams = { changeSpeed: !1, duration: b[0] }) : (this._rotationUnitParams = { changeSpeed: !0, initialSpeed: 100 * this._rotationStep, finalSpeed: b[1], duration: b[0] });
                }
                ((this._rotationUnitTimer += 0.016 * a), this._rotationUnitParams.changeSpeed === !0 && ((this._rotationStep = this._rotationUnitParams.initialSpeed + (this._rotationUnitTimer / this._rotationUnitParams.duration) * (this._rotationUnitParams.finalSpeed - this._rotationUnitParams.initialSpeed)), (this._rotationStep = Math.round(this._rotationStep / 10) / 10)), this._rotationUnitTimer >= this._rotationUnitParams.duration && (this._rotationUnitParams.changeSpeed === !0 && ((this._rotationStep = this._rotationUnitParams.finalSpeed), (this._rotationStep = Math.round(this._rotationStep / 10) / 10)), (this._rotationUnitTimer = 0), this._rotationUnitIdx++, (this._rotationUnitParams = null), this._rotationUnitIdx >= this._rotationUnits.length && (this._rotationUnitIdx = 0)));
            }),
            (c.prototype.processUpdateActiveList = function (a, b) {
                a.anchorUpdate(b);
            }),
            (c.prototype.update = function (a, d, e) {
                if ((b.prototype.update.call(this, a, d, e), this._knifeMode ? (this.updateRotationStep(a), this._anchor && ((this._deltaRotation = this._rotationStep * a), (this._anchor.rotation += this._deltaRotation * PIXI.DEG_TO_RAD))) : (this._angleSpeed && (this._deltaRotation = this._angleSpeed), this._anchor && (this._deltaRotation > 0 ? ((this._deltaRotation *= c.DELTA_ROTATION_REDUCTION), this._deltaRotation < 0.001 && (this._deltaRotation = 0)) : this._deltaRotation < 0 && ((this._deltaRotation *= c.DELTA_ROTATION_REDUCTION), this._deltaRotation > -0.001 && (this._deltaRotation = 0)), (this._anchor.rotation += this._deltaRotation), this._anchor.rotation > 2 * Math.PI && (this._anchor.rotation -= 2 * Math.PI), this._anchor.rotation < 0 && (this._anchor.rotation += 2 * Math.PI))), this._wingsPause && Math.abs(this._deltaRotation) < 0.001 && ((this._wingsPause = !1), this.wingsLogic(this._gameEnd)), this._anchor))
                    for (var f = 0; f < this._purgatory.length; f++) this._purgatory[f].anchorUpdate(a);
                this.additionalBuildGuideline(a, 0 != this._deltaRotation);
            }),
            (c.prototype.contact = function (d, e) {
                var f = !0;
                if (((e.mainColor != a.BubbleColor.LIGHTNING && e.mainColor != a.BubbleColor.FIREBALL) || (f = !1), f)) {
                    var g,
                        h,
                        i = new a.Vec2(),
                        j = new a.Vec2();
                    ((g = d.getPosition()), g.subSelf(this._anchor.getPosition()), (h = g.length), i.copy(g), (j.x = e.vx), (j.y = e.vy));
                    var k = j.crossDet(i),
                        l = -a.Utils.int(k / Math.abs(k)),
                        m = j.rad() - i.rad(),
                        n = Math.sin(m) * j.length,
                        o = Math.abs(n),
                        p = Math.floor(5.5) * a.Options.BUBBLE_DIAMETR,
                        q = h / Math.floor(p);
                    q > 1 && (q = 1);
                    var r = l * Math.min((o * o * c.ROTATION_SPEED_FACTOR * q) / 2, 0.117);
                    this._deltaRotation += r / 2;
                }
                b.prototype.contact.call(this, d, e);
            }),
            (c.prototype.collisionWithActiveBubbles = function (b, c, d) {
                for (var e = this._activeList.length - 1; e >= 0; e--) {
                    var f = this._activeList[e];
                    if (f && !f.fired && !f.dropable) {
                        var g = a.Options.BUBBLE_COLLISION_RADIUS,
                            h = 0.9 * a.Options.BUBBLE_RADIUS;
                        if (this.checkCircleCollision(b, c, f.x, f.y, g, h)) {
                            var i = void 0,
                                j = 1.6,
                                k = 1.15,
                                l = Math.cos(this._anchor.rotation),
                                m = Math.sin(this._anchor.rotation);
                            ((this._cp[0].x = f.x + ((-a.Options.BUBBLE_GAP_X / j) * l - -a.Options.BUBBLE_GAP_Y * m)), (this._cp[0].y = f.y + (-a.Options.BUBBLE_GAP_Y * l - (a.Options.BUBBLE_GAP_X / j) * m)), (this._cp[1].x = f.x + ((a.Options.BUBBLE_GAP_X / j) * l - -a.Options.BUBBLE_GAP_Y * m)), (this._cp[1].y = f.y + (-a.Options.BUBBLE_GAP_Y * l + (a.Options.BUBBLE_GAP_X / j) * m)), (this._cp[2].x = f.x + a.Options.BUBBLE_GAP_X * k * l), (this._cp[2].y = f.y + a.Options.BUBBLE_GAP_X * k * m), (this._cp[3].x = f.x - a.Options.BUBBLE_GAP_X * k * l), (this._cp[3].y = f.y - a.Options.BUBBLE_GAP_X * k * m), (this._cp[4].x = f.x + ((-a.Options.BUBBLE_GAP_X / j) * l - a.Options.BUBBLE_GAP_Y * m)), (this._cp[4].y = f.y + (a.Options.BUBBLE_GAP_Y * l - (a.Options.BUBBLE_GAP_X / j) * m)), (this._cp[5].x = f.x + ((a.Options.BUBBLE_GAP_X / j) * l - a.Options.BUBBLE_GAP_Y * m)), (this._cp[5].y = f.y + (a.Options.BUBBLE_GAP_Y * l + (a.Options.BUBBLE_GAP_X / j) * m)));
                            for (var n = f.cy % 2 == 0 ? 0 : 1, o = 0; o < 6; o++) ((i = this.getBubbleByCell(f.cx + a.World.NEIGHBORS[n][o][0], f.cy + a.World.NEIGHBORS[n][o][1])), null != i ? ((this._cp[o].x = Number.MAX_VALUE), (this._cp[o].y = Number.MAX_VALUE), (this._dist[o] = Number.MAX_VALUE)) : (this._dist[o] = a.Vec2.distance2(b, c, this._cp[o].x, this._cp[o].y)));
                            var p = Math.min(this._dist[0], this._dist[1], this._dist[2], this._dist[3], this._dist[4], this._dist[5]),
                                q = void 0,
                                r = void 0;
                            return (p == this._dist[0] && ((q = f.cy % 2 == 0 ? f.cx - 1 : f.cx), (r = f.cy - 1)), p == this._dist[1] && ((q = f.cy % 2 == 0 ? f.cx : f.cx + 1), (r = f.cy - 1)), p == this._dist[2] && ((q = f.cx + 1), (r = f.cy)), p == this._dist[3] && ((q = f.cx - 1), (r = f.cy)), p == this._dist[4] && ((q = f.cy % 2 == 0 ? f.cx - 1 : f.cx), (r = f.cy + 1)), p == this._dist[5] && ((q = f.cy % 2 == 0 ? f.cx : f.cx + 1), (r = f.cy + 1)), { cx: q, cy: r, contact: f });
                        }
                    }
                }
                return null;
            }),
            (c.prototype.detectFlyBubbles = function () {
                return (this.markFlyBubbles(this._anchor), this.dropFlyBubbles());
            }),
            (c.prototype.scroll = function () {}),
            (c.prototype.loadMapProcess = function (a) {
                a.isAnchor && (this._anchor = a);
            }),
            (c.prototype.loadMap = function (a, c, d) {
                (void 0 === d && (d = !1), b.prototype.loadMap.call(this, a, c, d), this.markAnchorBubbles(this._anchor, this._anchor));
            }),
            (c.prototype.markAnchorBubbles = function (b, c) {
                var d = [b];
                do {
                    b = d.shift();
                    for (var e = b.cy % 2 == 0 ? 0 : 1, f = 0; f < 6; f++) {
                        var g = this.getBubbleByCell(b.cx + a.World.NEIGHBORS[e][f][0], b.cy + a.World.NEIGHBORS[e][f][1]);
                        if (null != g) {
                            if (g.haveAnchor || g.isAnchor) continue;
                            (g.setBubbleAnchor(c), d.push(g));
                        }
                    }
                } while (d.length > 0);
            }),
            (c.prototype.markPopLightningBubbles = function (b) {
                var c = this;
                ((b.killWave = 0), (b.kill = !0), this._markedCounter++);
                var d,
                    e = a.World.TMP_BUBBLE;
                (e.setWorld(this), (e.active = !0));
                var f = function () {
                    for (d = 150, e.cx = b.cx, e.cy = b.cy, e.setBubbleAnchor(c.anchor), e.anchorUpdate(1), e.reposition(); d-- && (e.update(c._lastDT / c._lastSpeedCompensation), !(e.mark || e.y <= 2 * -a.Options.BUBBLE_DIAMETR || e.x < a.Options.GRID_LEFT_X - a.Options.BUBBLE_DIAMETR || e.x > a.Options.GRID_RIGHT_X + a.Options.BUBBLE_DIAMETR)); )
                        c.simpleCollisionWithActiveBubblesAndPop(e.x, e.y, !1, e, function (b) {
                            ((b.killWave = 8), (b.kill = !0), (b.popedColor = a.BubbleColor.LIGHTNING), c._markedCounter++);
                        });
                };
                (e.setVelocity(a.Options.BUBBLE_SPEED, 0), f(), e.setVelocity(-a.Options.BUBBLE_SPEED, 0), f());
            }),
            (c.prototype.markSelectLightningBubbles = function (b, c) {
                var d,
                    e = this,
                    f = a.World.TMP_BUBBLE;
                (f.setWorld(this), (f.active = !0));
                var g = function () {
                    for (d = 150, f.cx = b, f.cy = c, f.setBubbleAnchor(e.anchor), f.anchorUpdate(1), f.reposition(); d-- && (f.update(e._lastDT / e._lastSpeedCompensation), !(f.mark || f.y <= 2 * -a.Options.BUBBLE_DIAMETR || f.x < a.Options.GRID_LEFT_X - a.Options.BUBBLE_DIAMETR || f.x > a.Options.GRID_RIGHT_X + a.Options.BUBBLE_DIAMETR)); ) e.simpleCollisionWithActiveBubblesAndPop(f.x, f.y, !1);
                };
                (f.setVelocity(a.Options.BUBBLE_SPEED, 0), g(), f.setVelocity(-a.Options.BUBBLE_SPEED, 0), g());
            }),
            (c.prototype.setGameEnd = function (a) {
                var c = this;
                if (!this._gameEnd)
                    return (
                        a &&
                            (this._anchor.anchorPop(function () {
                                (c._anchor.prepareToRemove(), (c._anchor = null));
                            }),
                            this.removeBubble(this._anchor)),
                        b.prototype.setGameEnd.call(this, a)
                    );
            }),
            Object.defineProperty(c.prototype, 'anchor', {
                get: function () {
                    return this._anchor;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.ROTATION_SPEED_FACTOR = 6e-4),
            (c.DELTA_ROTATION_REDUCTION = 0.96),
            c
        );
    })(a.World);
    a.CircleWorld = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._type = a.WorldType.CROWN), c);
        }
        return (
            __extends(c, b),
            (c.prototype.setup = function (c, d, e) {
                (void 0 === d && (d = !0), void 0 === e && (e = !1), (this._maxCrown = 0), (this._countCrown = 0), b.prototype.setup.call(this, c, d, e), (this._minCrown = c.minCrown ? c.minCrown : this._maxCrown), this.emit(a.World.EVENT_CROWN_COUNT, this._countCrown, this._minCrown));
            }),
            (c.prototype.checkCrown = function (b, c, d, e) {
                var f = this;
                (void 0 === d && (d = !1), this.addCountCrown(1));
                var g = Math.max((e.killWave ? e.killWave : 0) * a.Bubble.WAVE_DELAY, 1);
                (KY.Game.instance.timer.add(function () {
                    f.crownPopup(b, c, d);
                }, g),
                    this._countCrown >= this.needCrownCount &&
                        ((this._manualPause = !0),
                        (this._wingsPause = !0),
                        KY.Game.instance.timer.add(function () {
                            ((f._wingsPause = !1), f.dropFlyBubbles(!0), f.wingsLogic(!0), f.setGameEnd(!0));
                        }, 1200)));
            }),
            (c.prototype.removeBubble = function (a, c, d) {
                (void 0 === c && (c = -1), void 0 === d && (d = !1), b.prototype.removeBubble.call(this, a, c, d), a.isCrown && 1 != a.emptyCrown && this.checkCrown(a.x, a.y, !1, a));
            }),
            (c.prototype.dropOneFlyBubble = function (a, c) {
                var d = b.prototype.dropOneFlyBubble.call(this, a, c);
                return a.isCrown && 1 != a.emptyCrown ? (0 == this.achievedTheGoal && this.checkCrown(a.x, a.y, !0, a), (a.emptyCrown = !0), a.hideComponent(), !0) : d;
            }),
            (c.prototype.crownPopup = function (b, c, d) {
                this.emit(a.World.EVENT_CROWN_SHOW, b, c, d);
            }),
            (c.prototype.loadMapProcess = function (a) {
                a.isCrown && this._maxCrown++;
            }),
            (c.prototype.addCountCrown = function (b) {
                this.achievedTheGoal || ((this._countCrown += b), a.QuestPopup.ADD(a.QUEST_TYPE.CROWN, b), this.emit(a.World.EVENT_CROWN_COUNT, this._countCrown, this.needCrownCount));
            }),
            Object.defineProperty(c.prototype, 'maxCrownCount', {
                get: function () {
                    return this._maxCrown;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'needCrownCount', {
                get: function () {
                    return this._minCrown;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'achievedTheGoal', {
                get: function () {
                    return this._countCrown >= this.needCrownCount;
                },
                enumerable: !1,
                configurable: !0,
            }),
            c
        );
    })(a.World);
    a.CrownWorld = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._type = a.WorldType.DEFAULT), c);
        }
        return (__extends(c, b), c);
    })(a.World);
    a.DefaultWorld = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var d = b.call(this) || this;
            return ((d._type = a.WorldType.WEEK_COMPETITION), (d.needGuidelineOptimization = !1), (d.stopCeiling = !0), c.fakeBubble || (c.fakeBubble = new a.Bubble(d)), d);
        }
        return (
            __extends(c, b),
            (c.prototype.setup = function (c) {
                ((this._PATTERNS = c), (this.user_haveSpecialBubbles = !1), (this._currentMapHeight = -1), (this._topDeadLine = a.Options.BUBBLE_RADIUS), (this._shiftCounter = 0), (this._frozenTime = 0), (this._pauseTime = 0), (this._currentSpeed = 0), (this._needAddMoveBubble = !1), (this._needAddSpecialBubble = !0), (this._firstShoot = !1), (this._complexity = 0), (this._randomPart = !1), this._rnd.seed(a.MI.get().getSeed()), this.getLevelData(), b.prototype.setup.call(this, { seed: this._rnd.getSeed(), random: !1, height: 20, bubbles: 25, shots: [] }, !1, !1));
            }),
            (c.prototype.update = function (d, e, f) {
                var g = Math.floor(this.bubblesTopY / a.Options.BUBBLE_GAP_Y),
                    h = this.bubblesTopY + this.getLastYBubble();
                if (((this._nearDeadline = this.deadline - h), this._nearDeadline >= 0)) {
                    g > -2 && this.shiftBoard();
                    var i = Math.max(1, 3 * Math.min((0.5 * Stage.screenHeight) / h, 5));
                    (h > 7 * a.Options.BUBBLE_GAP_Y && (i = 1), (0 != this._delayCheckDrop || this._frozenTime > 0 || this._pauseTime > 0) && (i = 0), (this._firstShoot && !this.isGameEnd) || (i = 0));
                    var j = this.speed * d;
                    ((this._currentSpeed += 0.01 * (j - this._currentSpeed)), (this.bubblesTopY += Math.min(this._currentSpeed * i, 1.5 * a.Options.BUBBLE_DIAMETR)));
                } else this._firstShoot && !this._gameEnd && ((this._gameEnd = !0), this.emit(a.World.EVENT_GAME_OVER, 1));
                if ((this._pauseTime > 0 && (this._pauseTime -= 0.0167 * d), this._frozenTime > 0 && this._pauseTime <= 0 && ((this._frozenTime -= 0.0167 * d), this._frozenTime <= 0 && this.emit(c.EVENT_FROZEN_HIDE)), this._firedBubbles.length)) {
                    var k = this._firedBubbles[0];
                    if (!k || k.y + this.bubblesTopY < this._topDeadLine) {
                        var l = k.mainColor;
                        if ((this.removeFireBubble(), l == a.BubbleColor.FIREBALL || this._deleteDummyBubble)) {
                            var m = this.detectFlyBubbles();
                            ((this._burnOutBubbles || this._deleteDummyBubble) && this._effectiveShot++, this.emit(a.World.EVENT_AFTER_COLLISION, this._burnOutBubbles, m), this.prepareAfterShoot(!0));
                        } else ((this._effectiveShot = 0), this.emit(a.World.EVENT_AFTER_COLLISION, 0, 0, 0));
                    }
                }
                (b.prototype.update.call(this, d, e, f), this.additionalBuildGuideline(d, IS_DESKTOP));
            }),
            (c.prototype.otkat = function () {
                var a = this;
                TweenLite.to(this, 1, {
                    bubblesTopY: this.bubblesTopY - Stage.screenHeight / 2,
                    onComplete: function () {
                        a.continue();
                    },
                });
            }),
            (c.prototype.win = function () {
                this._gameEnd = !0;
            }),
            (c.prototype.setPause = function (a) {
                this._pauseTime = Math.max(this._pauseTime, a);
            }),
            (c.prototype.frozen = function () {
                ((this._frozenTime += 5), this.emit(c.EVENT_FROZEN_SHOW));
            }),
            (c.prototype.pucherEffect = function (b, c) {
                var d = this.tmpGetAvailableColor(),
                    e = b.cy % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO,
                    f = c ? 1 : -1;
                if (b.cx + f < 0 || b.cx + f >= e) return !1;
                var g = this.getBubbleByCellTop(b.cx + f, b.cy),
                    h = null != g ? -1 : 0;
                if (0 != h)
                    if (c) {
                        for (var i = b.cx + 2; i < e; i++) {
                            var j = this.getBubbleByCellTop(i, b.cy);
                            if (j && j.mainColor == a.BubbleColor.PUSHER) break;
                            if (null == j || j.kill) {
                                h = i;
                                break;
                            }
                        }
                        if (h == -1) return !1;
                        for (var i = h - 1; i >= b.cx + 1; i--) {
                            var k = this.getBubbleByCellTop(i, b.cy);
                            (k.setPosition(i + 1, k.cy, !1), this.repositionBubble(k, i + 1, k.cy), k.reposition(!0, !0));
                            var l = k.getComponent(a.TypeBubbleComponent.SPIDER);
                            l && (k.needSpiderCheckForPusher = !0);
                        }
                    } else {
                        for (var i = b.cx - 2; i >= 0; i--) {
                            var m = this.getBubbleByCellTop(i, b.cy);
                            if (m && m.mainColor == a.BubbleColor.PUSHER) break;
                            if (null == m || m.kill) {
                                h = i;
                                break;
                            }
                        }
                        if (h == -1) return !1;
                        for (var i = h + 1; i < b.cx; i++) {
                            var n = this.getBubbleByCellTop(i, b.cy);
                            (n.setPosition(i - 1, n.cy, !1), this.repositionBubble(n, i - 1, n.cy), n.reposition(!0, !0));
                            var l = n.getComponent(a.TypeBubbleComponent.SPIDER);
                            l && (n.needSpiderCheckForPusher = !0);
                        }
                    }
                var o = this.getBubble();
                return (o.setData(d, b.cx + f, b.cy), o.reposition(!0, !0), (this._bubbles[o.cx + '/' + o.cy] = o), this._bubbleContainer.addChild(o), (o.alpha = 0), o.scale.set(0.5), TweenLite.to(o, 0.3, { alpha: 1 }), TweenLite.to(o.scale, 0.3, { x: 1, y: 1 }), (this._delayCheckDrop = Math.max(this._delayCheckDrop, 0.3)), !0);
            }),
            (c.prototype.processUpdateActiveList = function (a, b) {
                a.kill || a.dropable || (a.shiftId = this._shiftCounter);
            }),
            (c.prototype.preFireBubble = function (a) {
                a.shiftId = this._shiftCounter;
            }),
            (c.prototype.contactNeighbors = function (b, c, d) {
                var e;
                c == a.BubbleTypeContact.POP && b.contact(a.BubbleTypeContact.POP_MYSELF, b);
                var f = 0;
                b.shiftId != this._shiftCounter && (f = this._shiftCounter - b.shiftId);
                for (var g = b.cy % 2 == 0 ? 0 : 1, h = 0; h < 6; h++) ((e = this.getBubbleByCell(b.cx + a.World.NEIGHBORS[g][h][0], b.cy + 2 * f + a.World.NEIGHBORS[g][h][1])), null != e && e.contact(c, b, d));
            }),
            (c.prototype.getBubbleByCellTop = function (a, b) {
                var c = this._bubbles[a + '/' + b];
                return !c || c.y + this.bubblesTopY < this._topDeadLine ? null : c;
            }),
            (c.prototype.additionalBuildGuideline = function (b, c, d) {
                this.canShoot && !a.Guideline.isCleared && c && ((this._guidlineBuildDelta += 0.016 * b), this._guidlineBuildDelta >= 1 && this._nextBubbles[0] && ((this._guidlineBuildDelta = 0), this._guideline.build(d ? d : this._fireAngle, this._lastSpeedCompensation, !0)));
            }),
            (c.prototype.shiftBoard = function () {
                this._shiftCounter++;
                for (var b = this._activeList.length - 1; b >= 0; b--) {
                    var c = this._activeList[b];
                    c.fired ? c.active && (c.y += 2 * a.Options.BUBBLE_GAP_Y) : c.dropable ? (c.y += 2 * a.Options.BUBBLE_GAP_Y) : c && ((this._bubbles[c.cx + '/' + (c.cy + 2)] = c), (this._bubbles[c.cx + '/' + c.cy] = null), c.setPosition(c.cx, c.cy + 2, !1), c.reposition(!1), c.kill || (c.shiftId = this._shiftCounter));
                }
                for (var b = 0; b < this._purgatory.length; b++) this._purgatory[b].y += 2 * a.Options.BUBBLE_GAP_Y;
                (this.partialLoadMap(2),
                    (this._lastYBall = a.Options.BUBBLE_GAP_Y * this._currentMapHeight),
                    (this.bubblesTopY -= 2 * a.Options.BUBBLE_GAP_Y),
                    this._activeList.sort(function (a, b) {
                        return a.cy - b.cy;
                    }));
            }),
            (c.prototype.prepareAfterShoot = function (b) {
                this.clearAvailableColor();
                var c,
                    d = !1,
                    e = 0;
                this._lastYBall = 0;
                for (
                    var f = [],
                        g = function (b) {
                            if (b && a.Bubble.isDefaultColor(b, !1)) {
                                var c = f.indexOf(b);
                                c != -1 ? (f.splice(c, 1), f.push(b)) : f.push(b);
                            }
                        },
                        h = 0;
                    h <= this._currentMapHeight;
                    h++
                ) {
                    c = h % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                    for (var i = 0; i < c; i++) {
                        var j = this._bubbles[i + '/' + h];
                        !j || j.kill || j.dropable || j.fired || (0 == a.Bubble.isNoneColor(j.noBugColor, j) && (d = !0), d ? (this._countNoneBubbles = 0) : this._countNoneBubbles++, this._bubbleContainer.addChild(j), j.y + this.bubblesTopY > 1.5 * a.Options.BUBBLE_DIAMETR ? this.addAvailableColor(j.noBugColor, j.additionalColor) : (g(j.noBugColor), g(j.additionalColor)), (this._lastYBall = Math.max(this._lastYBall, j.y)), (e = Math.max(e, j.cy)));
                    }
                }
                if (this.isEmptyAvailableColor()) for (var k = Math.min(f.length, 2), l = 0; l < k; l++) this.addAvailableColor(f.pop(), void 0);
                if (((this._currentMapHeight = e), this.isNoStableBubble)) (0 == this._manualPause && 0 == this._gameEnd && (this._countNoneBubbles ? ((this._manualPause = !0), this.dropFlyBubbles(!0), this.setGameEnd(!0)) : this.setGameEnd(!0)), this.changeNextBubbleColor(!1));
                else {
                    if (b)
                        for (var l = 0; l < this._activeList.length; l++) {
                            var j = this._activeList[l];
                            !j || j.kill || j.dropable || j.fired || j.prepareComponentAfterShoot(this._moveIndex);
                        }
                    for (var l = 0; l < this._nextBubbles.length; l++)
                        if (0 == this._availableColors[this._nextBubbles[l].mainColor - 1])
                            if (f.length) {
                                var m = f.pop();
                                this._nextBubbles[l].changeType(m, null);
                            } else this._nextBubbles[l].changeType(this.getRandomAvailableColor(), null);
                    (this.emit(a.World.EVENT_AFTER_FIRED), this.changeNextBubbleColor());
                }
                (this._guideline && (this._guideline.contact(), this._noAvailableColor && this._guideline.clear()),
                    0 == this._bubbleCount && 0 == this._fountainMode && (this._needGameOver = !0),
                    this._activeList.sort(function (a, b) {
                        return a.cy - b.cy;
                    }));
            }),
            (c.prototype.removeBubble = function (b, c, d) {
                var e = this;
                if ((void 0 === c && (c = -1), void 0 === d && (d = !1), this._bubbles[b.cx + '/' + b.cy] == b && this.freeBubbleCell(b.cx, b.cy), (this._weRemoveBubbles = !0), (c != -1 && null != c) || (c = this._activeList.indexOf(b)), c != -1 && this._activeList.splice(c, 1), 0 == d && this._purgatory.push(b), b.isKey && !b.dropable)) {
                    var f = Math.max((b.killWave ? b.killWave : 0) * a.Bubble.WAVE_DELAY, 1);
                    KY.Game.instance.timer.add(function () {
                        e.emit(a.World.EVENT_PIG_KEY_SHOW, b.x, b.y);
                    }, f);
                }
                var g = b.specialType;
                null == g || b.dropable || ((this._stopCheckZeroBubble = !0), this.emit(a.World.EVENT_GET_SPECIAL_BUBBLE, g, b.specialMoveCounter, b.x, b.y, b.cx, b.cy));
            }),
            (c.prototype.firedBubbleStep = function (d) {
                if ((b.prototype.firedBubbleStep.call(this, d), c.fakeBubble.active && (this._fakeDelay--, this._fakeDelay < 0))) {
                    for (var e = 0; e < this._firedBubbles.length; e++)
                        if (this._firedBubbles[e].fake) {
                            this._firedBubbles.splice(e, 1);
                            break;
                        }
                    var f = this._markedCounter;
                    ((c.fakeBubble.active = !1), a.WeekCompetition.instance.grid.markPopLightningBubbles({ cx: c.fakeBubble.cx, cy: c.fakeBubble.cy, onScreen: !0 }), (f -= this._markedCounter), this.emit(a.World.EVENT_SHOW_LIGHTNING, { y: c.fakeBubble.yy }), f && (this.popMarkedBubbles(!1), (this._needCheckDrop = !0), (this._checkAfterShoot = !0)));
                }
            }),
            (c.prototype.fireBubble = function (a) {
                var c = b.prototype.fireBubble.call(this, a);
                return (c && (this._firstShoot = !0), c);
            }),
            (c.prototype.fakeFireBubble = function () {
                ((this._isTouched = !1), (this._deleteDummyBubble = !1), (this._findSpecialBubble = !1), this._firedBubbles.push(c.fakeBubble), (c.fakeBubble.active = !0), (c.fakeBubble.fake = !0), (c.fakeBubble.x = a.Options.CANNON_X), (c.fakeBubble.y = a.Options.CANNON_Y - this.bubblesTopY), c.fakeBubble.setStart(c.fakeBubble.x, c.fakeBubble.y), (c.fakeBubble.cx = 0), (c.fakeBubble.cy = 8), (c.fakeBubble.yy = a.Bubble.getPosFromCell(0, c.fakeBubble.cy).y), (this._fakeDelay = 50), this.emit(a.World.EVENT_FIRED));
            }),
            (c.prototype.scroll = function (b) {
                var c = this;
                void 0 === b && (b = !1);
                var d = a.Options.CANNON_Y - this.getLastYBubble() - a.Options.GRID_LIMIT;
                if ((d > a.Options.MAP_BEGIN_Y && (d = a.Options.MAP_BEGIN_Y), b)) this.bubblesTopY = d;
                else {
                    var e = Math.abs(d - this.bubblesTopY),
                        f = Math.ceil(e / (1.73 * a.Options.BUBBLE_RADIUS));
                    f > 0 &&
                        (this.emit(a.World.EVENT_MAP_SCROLL, d, d - this.bubblesTopY, 0.15 * f),
                        (this._isScrolling = !0),
                        TweenLite.to(this, 0.1 * f, {
                            delay: 0.05,
                            bubblesTopY: d,
                            ease: Sine.easeOut,
                            onComplete: function () {
                                c._isScrolling = !1;
                            },
                        }));
                }
            }),
            (c.prototype.partialLoadMap = function (b, d) {
                (void 0 === b && (b = 2), void 0 === d && (d = !1), (this._currentMapHeight += b));
                var e = 0,
                    f = [!1, !1, !1, !1, !1],
                    g = null;
                if (this._randomPart)
                    for (var h = void 0, i = 0; i < b; i++) {
                        h = i % 2 == 0 ? a.Options.ROW_ONE : a.Options.ROW_TWO;
                        for (var j = 0; j < h; j++) {
                            var k = this._rnd.getRandomItem(this._currentData),
                                l = null;
                            this._needAddMoveBubble ? this._rnd.value < 0.25 && ((this._needAddMoveBubble = !1), i != g && this._rnd.value < 0.7 && ((g = i), (l = [a.TypeBubbleComponent.SB_MOVE]), this.emit(c.EVENT_ADD_MARK_BUBBLES))) : this._needAddSpecialBubble && this._rnd.value < 0.4 && (!(i != g && this._rnd.value < 0.5 && this._firstShoot) || (l && l.length) || ((this._needAddSpecialBubble = !1), (g = i), (l = Math.random() < 0.5 ? [a.TypeBubbleComponent.SB_LIGHTNING] : [a.TypeBubbleComponent.SB_FROZEN])));
                            var m = this.getBubble();
                            (m.setData(k, j, i, void 0, l), (m.shiftId = this._shiftCounter), m.loaded(), this._currentCountBubbles++, d && (m.y + this.bubblesTopY > 2 * a.Options.BUBBLE_DIAMETR ? this.addAvailableColor(m.noBugColor, m.additionalColor) : ((f[m.noBugColor] = !0), m.additionalColor && (f[m.additionalColor] = !0))), (this._bubbles[j + '/' + i] = m), this._bubbleContainer.addChildAt(m, e), e++);
                        }
                        (this._currentDataIndex--, this._currentDataIndex <= 0 && (this.getLevelData(), (this._needAddMoveBubble = !0), (this._needAddSpecialBubble = !1)));
                    }
                else
                    for (var i = b - 1; i >= 0; i--)
                        for (var n = 11, j = n - 1; j >= 0; j--) {
                            var k = void 0,
                                l = null;
                            if (Array.isArray(this._currentData[this._currentDataIndex])) {
                                ((k = a.Utils.int(this._currentData[this._currentDataIndex][0])), (l = []));
                                for (var o = 1; o < this._currentData[this._currentDataIndex].length; o++) l.push(this._currentData[this._currentDataIndex][o]);
                            } else k = a.Utils.int(this._currentData[this._currentDataIndex]);
                            if ((this._currentDataIndex--, this._currentDataIndex < 0 && (this.getLevelData(), (this._needAddMoveBubble = !0), (this._needAddSpecialBubble = !0)), 0 != k)) {
                                var m = this.getBubble();
                                (this._needAddMoveBubble ? this._rnd.value < 0.25 && ((this._needAddMoveBubble = !1), i != g && this._rnd.value < 0.7 && ((g = i), (l = [a.TypeBubbleComponent.SB_MOVE]), this.emit(c.EVENT_ADD_MARK_BUBBLES))) : this._needAddSpecialBubble && this._rnd.value < 0.4 && (!(i != g && this._rnd.value < 0.5 && this._firstShoot) || (l && l.length) || ((this._needAddSpecialBubble = !1), (g = i), (l = Math.random() < 0.5 ? [a.TypeBubbleComponent.SB_LIGHTNING] : [a.TypeBubbleComponent.SB_FROZEN]))), m.setData(k, j, i, void 0, l), m.loaded(), this._currentCountBubbles++, d && (m.y + this.bubblesTopY > 2 * a.Options.BUBBLE_DIAMETR ? this.addAvailableColor(m.noBugColor, m.additionalColor) : ((f[m.noBugColor] = !0), m.additionalColor && (f[m.additionalColor] = !0))), (this._bubbles[j + '/' + i] = m), this._bubbleContainer.addChildAt(m, e), e++);
                            }
                        }
                if (d || this.isEmptyAvailableColor()) for (var p = 0; p < f.length; p++) f[p] && this.addAvailableColor(p + 1, void 0);
            }),
            (c.prototype.loadMap = function () {
                ((this._currentCountBubbles = 0),
                    this.partialLoadMap(16, !0),
                    (this._lastYBall = a.Options.BUBBLE_GAP_Y * this._currentMapHeight),
                    this._activeList.sort(function (a, b) {
                        return a.cy - b.cy;
                    }),
                    (this._lastYBallInit = this._lastYBall),
                    this.update(0, 0, 0),
                    this.emit(a.World.EVENT_END_START_DEMO),
                    this.scroll(!0),
                    this.changeNextBubbleColor(),
                    (this._cannonContainer.alpha = 0));
            }),
            (c.prototype.getLevelData = function () {
                var b;
                if (this._complexity < 1) {
                    b = 'e';
                    var d = a.UserGameData.getProperty(a.USER_PROPERTY.WC_STARTED);
                    d > 8 && Math.random() < 0.4 && (b = 'm');
                } else b = this._complexity < 2 ? this._rnd.getRandomItem(c.LEVEL_1) : Stage.rnd.value < 0.3 ? this._rnd.getRandomItem(c.LEVEL_2) : this._rnd.getRandomItem(c.LEVEL_3);
                if ('r' == b || 'r0' == b || 'r1' == b) {
                    switch (((this._randomPart = !0), b)) {
                        case 'r0':
                            this._currentData = this._rnd.getRandomItem(c.R_LEVEL_0);
                            break;
                        case 'r1':
                            this._currentData = this._rnd.getRandomItem(c.R_LEVEL_1);
                            break;
                        case 'r':
                            this._currentData = this._rnd.getRandomItem(this._rnd.value < 0.5 ? c.R_LEVEL_0 : c.R_LEVEL_1);
                    }
                    ((this._currentDataIndex = this._rnd.rangeInt(8, 10)), this._currentDataIndex % 2 != 0 && this._currentDataIndex++);
                } else ((this._randomPart = !1), (this._currentData = this._rnd.getRandomItem(this._PATTERNS[b])), (this._currentDataIndex = this._currentData.length - 2));
                this._firstShoot && (this._complexity += a.UserGameData.getProperty(a.USER_PROPERTY.WC_CURRENT_SCALE) / a.UserGameData.WC_START_SCALE);
            }),
            Object.defineProperty(c.prototype, 'deadline', {
                get: function () {
                    return a.Options.CANNON_Y - 200;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'deadlineCoef', {
                get: function () {
                    var a = this._nearDeadline / 390;
                    return (a > 1 ? (a = 1) : a < 0 && (a = 0), a);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'speed', {
                get: function () {
                    return Math.min(c.MAX_SPEED, c.MIN_SPEED + (c.MAX_SPEED - c.MIN_SPEED) * (this._complexity * c.SPEED_STEP));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'threshold', {
                get: function () {
                    return 0;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(c.prototype, 'fisrtShoot', {
                get: function () {
                    return this._firstShoot;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (c.EVENT_FROZEN_SHOW = 'EVENT_FROZEN_SHOW'),
            (c.EVENT_FROZEN_HIDE = 'EVENT_FROZEN_HIDE'),
            (c.EVENT_ADD_MARK_BUBBLES = 'EVENT_ADD_MARK_BUBBLES'),
            (c.MIN_SPEED = 0.2),
            (c.MAX_SPEED = 0.4),
            (c.SPEED_STEP = 1 / 6),
            (c.LEVEL_1 = ['e', 'e', 'm', 'r0']),
            (c.LEVEL_2 = ['e', 'm', 'm', 'r']),
            (c.LEVEL_3 = ['e', 'm', 'm', 'h', 'e', 'm', 'm', 'h', 'r1']),
            (c.R_LEVEL_0 = [
                [1, 2],
                [2, 3],
                [3, 4],
            ]),
            (c.R_LEVEL_1 = [
                [1, 2, 3],
                [2, 3, 4],
            ]),
            c
        );
    })(a.World);
    a.WeekCompetitionWorld = b;
})(Game || (Game = {}));
var DebugReplay;
!(function (a) {
    a.REPLAY = null;
})(DebugReplay || (DebugReplay = {}));
var Game;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.initDevice = function (a, b, c, d, e) {
                (a || b ? ((IS_DESKTOP = !1), (IS_MAC = !1)) : ((IS_DESKTOP = !0), (IS_MAC = e)), (IS_MOBILE = a), (IS_TABLET = b), (IS_IOS = c), (IS_ANDROID = d));
            }),
            (a.initSocial = function (a) {
                switch (((IS_VK = !1), (IS_OK = !1), (IS_YA = !1), a)) {
                    case 'VK':
                        IS_VK = !0;
                        break;
                    case 'OK':
                        IS_OK = !0;
                        break;
                    case 'YA':
                        IS_YA = !0;
                }
            }),
            a
        );
    })();
    a.Define = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b() {}
        return (
            (b.initEconomy = function (a, b) {
                null == this.SHOP_ITEM_PRICE && (this.SHOP_ITEM_PRICE = {});
                for (var c in a) this.SHOP_ITEM_PRICE[c] = a[c];
                ((this.LIGHTNING_X1_COST = b.LIGHTNING_X1_COST), (this.RAINBOW_X1_COST = b.RAINBOW_X1_COST), (this.FIREBALL_X1_COST = b.FIREBALL_X1_COST), (this.BOMB_X1_COST = b.BOMB_X1_COST), (this.NO_ADS_COST = b.NO_ADS_COST), (this.ONE_LIVE_COST = b.ONE_LIVE_COST), (this.ONE_HOUR_LIVE_COST = b.ONE_HOUR_LIVE_COST), (this.ADS_REWARD_COIN = b.ADS_REWARD_COIN), (this.RETRY_1_COST = b.RETRY_1_COST), (this.RETRY_2_COST = b.RETRY_2_COST), (this.RETRY_3_COST = b.RETRY_3_COST), (this.SPECIAL_REWARD_COIN = b.SPECIAL_REWARD_COIN), (this.MEMBERSHIP_COIN = b.MEMBERSHIP_COIN), (this.SPECIAL_NO_ADS_COIN = b.SPECIAL_NO_ADS_COIN), (this.FERTILIZER_COST = b.FERTILIZER_COST), (this.PESTICIDES_COST = b.PESTICIDES_COST), (this.GARDEN_ACTION_REWARD = b.GARDEN_ACTION_REWARD), (this.GARDEN_WAKEUP_COST = b.GARDEN_WAKEUP_COST));
            }),
            (b.buyForCoins = function (b, c, d, e) {
                return (void 0 === e && (e = 'empty'), b <= a.UserGameData.getProperty(a.USER_PROPERTY.MONEY) ? (a.UserGameData.subProperty(a.USER_PROPERTY.MONEY, b), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.COIN, b, d, e), a.SoundsManager.coinPurchase(), !0) : (this.showShop(!1, c), !1));
            }),
            (b.showShop = function (b, c) {
                (void 0 === b && (b = !1), void 0 === c && (c = !1), a.MI.get().popupManager.show(a.AllPopups.SHOP, b, c));
            }),
            (b.buy = function (b, c, d) {
                var e = this;
                return new Promise(function (f, g) {
                    return __awaiter(e, void 0, void 0, function () {
                        var e;
                        return __generator(this, function (h) {
                            return (e = !1)
                                ? [2]
                                : (a.MI.get()
                                      .social.orderBox({ id: b, amount: c })
                                      .then(function () {
                                          (a.Statistics.iap(c, b, d), a.MI.get().mtzAddCurrency(c), a.UserGameData.setLastPurchase(), a.SoundsManager.successfulPurchase(), f());
                                      })
                                      .catch(function () {
                                          (a.Statistics.customError(a.STATS_CUSTOM_ERROR_CODE.PURCHASE, String(b)), g());
                                      }),
                                  [2]);
                        });
                    });
                });
            }),
            (b.showFailBuyMessage = function () {
                (a.MI.get().popupManager.show(a.AllPopups.ERROR, a.StringManager.get('ERROR_FAIL_BUY')), a.Statistics.customError(a.STATS_CUSTOM_ERROR_CODE.PURCHASE));
            }),
            (b.MIN_LEVEL_SHOW_LEVEL_ADS = 4),
            (b.ADS_LEVEL_BEGIN_COUNT = 15),
            (b.ADS_LEVEL_INTERVAL_BEGIN = 2),
            (b.ADS_LEVEL_INTERVAL_DEFAULT = 1),
            (b.ADS_LEVEL_MAX_INTERVAL = 4),
            (b.ADS_LEVEL_DELAY_AFTER_PURCHASE = 1),
            (b.ADS_LEVEL_TARGET = 3),
            (b.SHOW_NO_ADS_MIN_LEVEL = b.MIN_LEVEL_SHOW_LEVEL_ADS + 1),
            (b.ADS_REWARD_DELAY = 5),
            b
        );
    })();
    a.EconomyOptions = b;
    var c;
    !(function (a) {
        ((a.NONE = 'none'), (a.NOVICE_SPEC = 'si01'), (a.STRATEGIST = 'si02'), (a.ASSORTED = 'si03'), (a.LEGENDARY = 'si04'), (a.MONEY_100 = 'si05'), (a.MONEY_600 = 'si06'), (a.MONEY_1300 = 'si07'), (a.MONEY_3000 = 'si08'), (a.MONEY_10000 = 'si09'), (a.NOVICE_SPEC_SALE = 'si10'), (a.PIG = 'pig'), (a.BLACK_FRIDAY_191122 = 'blackFriday191122'));
    })((c = a.SHOP_ITEM_ID || (a.SHOP_ITEM_ID = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(e, f, g) {
                void 0 === g && (g = 0);
                var h = c.call(this, 'ui0', ['uiBoostBtns0002']) || this;
                return (
                    (h._bgCounter = new b(62, -60, 'ui0', 'uiBoostCounter')),
                    (h._type = e),
                    a.LoadManager.ATLAS_UI && ((h._iconBg = new b(0, 0, 'ui', 'boostIcoBack')), h._iconBg.scale.set(0.5), (h._icon = new b(0, g, 'ui', 'boostIco000' + e)), h._icon.scale.set(0.5)),
                    (h._counter = new PIXI.Text('+', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 50 })),
                    (h._counter.y = 2),
                    h._counter.anchor.set(0.5),
                    h._bgCounter.addChild(h._counter),
                    f && ((h._progress = new b(0, 0, 'ui0', 'uiBoostBtns0003')), (h._progressMask = new PIXI.Graphics()), h._progressMask.beginFill(16711680, 0.5), h._progressMask.drawRect(-6, 0, 150, 132), h._progressMask.endFill(), (h._progressMask.rotation = Math.PI), (h._progressMask.x += 0.5 * h._progress.width), (h._progressMask.y += 60), (h._progress.mask = h._progressMask), (h._progressMask.scale.y = 1e-5), h.setProgress(0)),
                    (h._arg = 0),
                    (h._valueProgress = 0),
                    (h._lvl = new PIXI.Text(a.StringManager.get('TXT_BOOSTER_LVL') + ' ' + (d.requiredLevel(h._type) + 1), { fontFamily: Stage.FONT_BOLD, fill: 4349040, align: 'center', fontSize: 22 })),
                    (h._lvl.y = 46),
                    h._lvl.anchor.set(0.5),
                    (h._lvl.visible = !1),
                    h.setCount(0),
                    h._progress && (h.addChild(h._progress), h.addChild(h._progressMask)),
                    h._iconBg && (h.addChild(h._iconBg), h.addChild(h._icon)),
                    h.addChild(h._bgCounter),
                    h.addChild(h._lvl),
                    h
                );
            }
            return (
                __extends(d, c),
                (d.prototype.setProgress = function (a) {
                    this._progress && !this.isInfinity && this.isOpened && (a > 1 && (a = 1), a <= 0 && (a = 0), (this._valueProgress = a), a >= 1 ? (this._bgCounter.visible = !1) : ((this._bgCounter.visible = !0), this._icon && (this._icon.scale.set(0.5), (this._icon.rotation = 0)), (this._arg = 0)));
                }),
                (d.prototype.setCount = function (b) {
                    if (!this.isOpened) return void this.close();
                    if (((this._value = b), this.isInfinity)) return ((this._counter.text = a.Utils.INIFINITY_CHAR), (this._counter.style.fontSize = 40), void this._counter.scale.set(1));
                    if (this._value <= 0) ((this._counter.text = '+'), (this._counter.style.fontSize = 50), this._counter.scale.set(1));
                    else {
                        ((this._counter.text = '' + this._value), (this._counter.style.fontSize = 36));
                        var c = this._counter.width,
                            d = 40 / c;
                        (d > 1 && (d = 1), this._counter.scale.set(d));
                    }
                }),
                (d.prototype.close = function () {
                    ((this.enabled = !1), (this._bgCounter.visible = !1), this._iconBg && ((this._icon.visible = !1), (this._iconBg.visible = !1)), (this._lvl.visible = !0), this.replaceFrames(['uiBoostBtns0001']));
                }),
                (d.prototype.update = function (a) {
                    0 != this.enabled && (this.isFull && this._icon && ((this._icon.scale.x = this._icon.scale.y = 0.5 * (0.9 + Math.abs(0.1 * Math.sin((this._arg += 0.035 * a))))), (this._icon.rotation = 0.4 * Math.sin(this._arg))), this._progressMask && ((this._progressMask.scale.y += 0.1 * (this._valueProgress - this._progressMask.scale.y)), this._progressMask.scale.y <= 1e-5 && (this._progressMask.scale.y = 1e-5)));
                }),
                Object.defineProperty(d.prototype, 'isInfinity', {
                    get: function () {
                        return this.value == a.UserGameData.INFINITY;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'value', {
                    get: function () {
                        return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) == d.requiredLevel(this._type) ? a.UserGameData.INFINITY : this._value;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'isFull', {
                    get: function () {
                        return this._valueProgress >= 1;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'isOpened', {
                    get: function () {
                        return 0 != a.UserGameData.isLoaded && a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) >= d.requiredLevel(this._type);
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.requiredLevel = function (b) {
                    switch (b) {
                        case 1:
                            return a.UserGameData.REQ_BOOST_LEVEL_LIGHTNING;
                        case 2:
                            return a.UserGameData.REQ_BOOST_LEVEL_RAINBOW;
                        case 3:
                            return a.UserGameData.REQ_BOOST_LEVEL_FIREBALL;
                        case 4:
                            return a.UserGameData.REQ_BOOST_LEVEL_BOMB;
                    }
                }),
                d
            );
        })(a.PXButton);
    a.BoosterButton = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var a = b.call(this) || this;
                return ((a._bg = new c(0, 0, 'ui0', 'scoreBg0001')), (a._alert = new c(0, 0, 'ui0', 'scoreBg0002')), (a._alert.alpha = 0), (a._fiveOrLess = !1), (a._alertArg = 0), (a._numValue = 0), (a._needSoundAlert = !0), (a._text = new PIXI.Text('0', { fill: 16777215, align: 'center', fontSize: 45, fontFamily: Stage.FONT_BOLD })), a._text.anchor.set(0.5), (a._text.y = 3), (a._showed5Bubbles = !1), (a._onceShowed5Bubbles = !1), a.addChild(a._bg), a.addChild(a._alert), a.addChild(a._text), a);
            }
            return (
                __extends(d, b),
                (d.prototype.countVisible = function (a) {
                    ((this._bg.visible = a), (this._alert.visible = a), (this._text.visible = a));
                }),
                (d.prototype.reset5Bubbles = function () {}),
                (d.prototype.startFountain = function () {
                    this._fountain = !0;
                }),
                (d.prototype.setCount = function (b, c) {
                    (void 0 === c && (c = null),
                        (this._numValue = b),
                        c ? (this._needJump = !1) : (this._text.text = '' + b),
                        (this._animDelay = c),
                        b > 10 && 0 == this._needSoundAlert && (this._needSoundAlert = !0),
                        b > 0 && b <= 5 && 1 != this._fountain
                            ? (this._fiveOrLess ||
                                  (this._needSoundAlert &&
                                      (setTimeout(function () {
                                          a.SoundsManager.alert5Bubbles();
                                      }, 500),
                                      (this._needSoundAlert = !1))),
                              (this._fiveOrLess = !0))
                            : ((this._fiveOrLess = !1), (this._alert.alpha = 0)));
                }),
                (d.prototype.jump = function (a) {
                    return a ? void (this._needJump = !0) : (TweenLite.to(this._text.scale, 0.1, { x: 1.3, y: 1.3, overwrite: 'auto' }), TweenLite.to(this._text.scale, 0.2, { x: 1, y: 1, delay: 0.1 }), TweenLite.to(this._bg.scale, 0.1, { x: 1.2, y: 1.2, delay: 0.05, overwrite: 'auto' }), void TweenLite.to(this._bg.scale, 0.2, { x: 1, y: 1, delay: 0.15 }));
                }),
                (d.prototype.update = function (a) {
                    (this._fiveOrLess && (this._alert.alpha = 0.5 * (Math.sin((this._alertArg += 0.1 * a)) + 1)), this._animDelay && ((this._animDelay -= 0.016 * a), this._animDelay <= 0 && ((this._animDelay = null), (this._text.text = '' + this.value), this._needJump && this.jump(), (this._needJump = !1))));
                }),
                Object.defineProperty(d.prototype, 'value', {
                    get: function () {
                        return this._numValue;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
    a.BubbleCounter = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                return ((e._ballBg = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/laser/laserBallBg')), (e._headBg = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/laser/laserHeadBg')), (e._rayBg = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/laser/laserBg')), (e._rayBg.anchor.x = 0), (e._head = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/laser/laserHead')), (e._ray = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/laser/laserBody')), (e._ray.anchor.x = 0), (e._rayContainer = new b()), e.addChild(e._ballBg), e.addChild(e._headBg), e.addChild(e._rayContainer), e.addChild(e._head), e._rayContainer.addChild(e._rayBg), e._rayContainer.addChild(e._ray), e);
            }
            return (
                __extends(e, d),
                (e.prototype.show = function (a) {
                    ((this.alpha = 0), TweenLite.to(this, 0.1, { alpha: 1 }), this._ballBg.scale.set(1), TweenLite.to(this._ballBg.scale, 0.2, { x: 2.2, y: 2.2, ease: Sine.easeOut }), (this._rayContainer.width = Stage.screenHeight), (this._rayContainer.angle = a), (this._rayContainer.scale.y = 0.001), TweenLite.to(this._rayContainer.scale, 0.2, { y: 1, ease: Sine.easeOut }), (this.isFree = !1));
                }),
                e
            );
        })(b);
    a.LaserEffect = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var a = b.call(this) || this;
                return (d.FREE_COINS || (d.FREE_COINS = []), a);
            }
            return (
                __extends(d, b),
                (d.prototype.getSprite = function () {
                    var a;
                    return ((a = d.FREE_COINS.length ? d.FREE_COINS.pop() : new c(0, 0, 'lobby', 'lbCoin')), (a.alpha = 0), a.scale.set(0.1), a.position.set(0, 0), a);
                }),
                (d.prototype.start = function (b, c, d, e, f) {
                    var g = this;
                    if (this._counter) return void console.error('Error MoneyExplosion:', 'Попытка повторно запустить экземпляр MoneyExplosion. Дождитесь завершения работы предыдущего запуска!');
                    a.SoundsManager.getCoinsExp();
                    var h = 70;
                    ((c -= this.x), (d -= this.y), (this._counter = 0), (this._callback = e), (this._callbackContext = f));
                    for (
                        var i = function (b) {
                                var e = j.getSprite(),
                                    f = h * Math.random() * a.Utils.sign,
                                    i = h * Math.random() * a.Utils.sign,
                                    k = 0.3 * Math.random();
                                (j._counter++,
                                    TweenLite.to(e, 0.2, { alpha: 1, delay: k }),
                                    TweenLite.to(e.scale, 0.4, {
                                        x: 0.7,
                                        y: 0.7,
                                        ease: Sine.easeOut,
                                        delay: k,
                                        onComplete: function () {
                                            g.fly(e, c, d, 0.3);
                                        },
                                    }),
                                    TweenLite.to(e, 0.3, { x: f, y: i, ease: Sine.easeOut, delay: k }),
                                    j.addChild(e));
                            },
                            j = this,
                            k = 0;
                        k < b;
                        k++
                    )
                        i(k);
                    Stage.on(KY.GameEvent.ENTER_FRAME, this.update, this);
                }),
                (d.prototype.fly = function (b, c, e, f) {
                    var g = this,
                        h = !1,
                        i = 1,
                        j = 0.95,
                        k = 0.2;
                    ((b.progress = 0),
                        TweenLite.to(b, i, {
                            x: c,
                            y: e,
                            progress: 1,
                            ease: Sine.easeInOut,
                            delay: f,
                            onUpdate: function () {
                                h ||
                                    (b.progress >= j &&
                                        (a.SoundsManager.addOneCoin(),
                                        g.emit(d.EVENT_ADD_COIN),
                                        (h = !0),
                                        TweenLite.to(b.scale, (1 - b.progress) * i + k, { x: 0.1, y: 0.1, ease: Sine.easeOut }),
                                        TweenLite.to(b, (1 - b.progress) * i + k, {
                                            alpha: 0,
                                            onComplete: function () {
                                                (g._counter--, g.removeChild(b), d.FREE_COINS.push(b));
                                            },
                                        })));
                            },
                        }));
                }),
                (d.prototype.stop = function (a) {
                    for (void 0 === a && (a = !1); this.children.length; ) {
                        var b = this.children[this.children.length - 1];
                        (this.removeChild(b), d.FREE_COINS.push(b), TweenLite.killTweensOf(b), TweenLite.killTweensOf(b.scale));
                    }
                    ((this._counter = 0), 1 != a && this.call(), Stage.off(KY.GameEvent.ENTER_FRAME, this.update, this));
                }),
                (d.prototype.update = function () {
                    0 == this._counter && (this.call(), this.emit(d.EVENT_COMPLETE), Stage.off(KY.GameEvent.ENTER_FRAME, this.update, this));
                }),
                (d.prototype.call = function () {
                    this._callback && (this._callback.call(this._callbackContext), (this._callback = null), (this._callbackContext = null));
                }),
                (d.prototype.destroy = function (a) {
                    (this.stop(), b.prototype.destroy.call(this, a));
                }),
                (d.EVENT_COMPLETE = 'EVENT_COMPLETE_ME'),
                (d.EVENT_ADD_COIN = 'EVENT_ADD_COIN'),
                d
            );
        })(b);
    a.MoneyExplosion = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function c(a) {
                var c = b.call(this) || this;
                return ((c._garden = a), (c._coins = []), (c._pool = []), (c._lastDirection = Stage.rnd.js > 0.5 ? 1 : -1), c);
            }
            return (
                __extends(c, b),
                (c.prototype.addCoin = function (b, c) {
                    var d;
                    (a.SoundsManager.garden_coinDrop(), (d = this._pool.length ? this._pool.pop() : new e(this)), d.reset(), (d.x = b + Stage.rnd.rangeJS(0, 40) * this._lastDirection), (d.y = c + Stage.rnd.rangeJS(-20, 10)), (this._lastDirection *= -1), (d.isFly = !0), (d.velX = (Stage.rnd.js > 0.5 ? 1 : -1) * (2 + Stage.rnd.js)), (d.velY = -Stage.rnd.rangeJS(7, 10)), this.addChild(d), this._coins.push(d));
                }),
                (c.prototype.update = function (a) {
                    for (var b = this._coins.length - 1; b >= 0; b--) (this._coins[b].update(a), this._coins[b].isFree && this._pool.push(this._coins.splice(b, 1)[0]));
                }),
                (c.prototype.collect = function () {
                    if (this._coins.length) {
                        for (var a = 0; a < this._coins.length; a++) this._coins[a].onTap();
                        return !1;
                    }
                    return !0;
                }),
                (c.prototype.addMoney = function () {
                    this._garden.coinsShower.jump();
                }),
                Object.defineProperty(c.prototype, 'count', {
                    get: function () {
                        return this._coins.length;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                c
            );
        })(b);
    a.DropMoney = d;
    var e = (function (b) {
        function d(a) {
            var d = b.call(this) || this;
            return ((d._manager = a), (d._arg = 0), (d._visual = new c(0, 0, 'lobby', 'lbCoin')), d.addChild(d._visual), IS_DESKTOP ? (d.on('pointermove', d.onMove, d), d.on('pointerover', d.over, d), d.on('pointerout', d.out, d), d.on('pointerupoutside', d.out, d)) : d.on('pointerdown', d.onTap, d), d);
        }
        return (
            __extends(d, b),
            (d.prototype.out = function () {
                this._mouseOver = !1;
            }),
            (d.prototype.over = function () {
                this._mouseOver = !0;
            }),
            (d.prototype.onMove = function () {
                this._mouseOver && this.onTap();
            }),
            (d.prototype.onTap = function () {
                var b = this;
                ((this.interactive = !1), TweenLite.killTweensOf(this), TweenLite.killTweensOf(this.scale), a.SoundsManager.garden_coinTap());
                var c = -this.parent.x + Stage.screenWidth - 350,
                    d = -this.parent.y + 115;
                (TweenLite.to(this.scale, 0.1, { x: 0.95, y: 0.95 }),
                    TweenLite.to(this, 0.1, { alpha: 0, delay: 0.3 }),
                    TweenLite.to(this, 0.3, {
                        x: c,
                        y: d,
                        progress: 1,
                        ease: Sine.easeInOut,
                        delay: 0.1,
                        onComplete: function () {
                            (a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, a.EconomyOptions.GARDEN_ACTION_REWARD), (b.isFree = !0), b._manager.addMoney(), a.SoundsManager.addOneCoin());
                        },
                    }));
            }),
            (d.prototype.reset = function () {
                (TweenLite.killTweensOf(this), TweenLite.killTweensOf(this.scale), (this._arg = 0), (this.interactive = !1), (this.isFree = !1), (this.alpha = 0), TweenLite.to(this, 0.1, { alpha: 1 }));
            }),
            (d.prototype.free = function () {
                ((this.interactive = !1), 0 == this.isFree && a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, a.EconomyOptions.GARDEN_ACTION_REWARD), (this.isFree = !0), (this.alpha = 0), TweenLite.killTweensOf(this), TweenLite.killTweensOf(this.scale), this.destroy());
            }),
            (d.prototype.update = function (a) {
                if (!this.isFree) {
                    if (!this.isFly) return void (this.rotation = 0.1 * Math.sin((this._arg += 0.05 * a)));
                    ((this.x += this.velX * a), (this.velX *= 0.98), (this.y += this.velY * a), (this.velY += 0.45), this.y >= 0 && ((this.y = 0), (this.isFly = !1), this.onTable()));
                }
            }),
            (d.prototype.onTable = function () {
                var a = this,
                    b = 0.02;
                TweenLite.to(this.scale, b, { x: 1.05, y: 0.95, overwrite: 'auto' });
                var c = b;
                ((b = 0.1),
                    TweenLite.to(this.scale, b, { x: 0.95, y: 1.05, delay: c, overwrite: 'auto' }),
                    TweenLite.to(this, b, { y: -30, delay: c, overwrite: 'auto' }),
                    (c += 0.2),
                    TweenLite.to(this, 0.2, { y: 0, ease: Back.easeOut, delay: c, overwrite: 'auto' }),
                    TweenLite.to(this.scale, 0.4, {
                        x: 1,
                        y: 1,
                        delay: c,
                        ease: Back.easeOut,
                        overwrite: 'auto',
                        onComplete: function () {
                            a.interactive = !0;
                        },
                    }));
            }),
            d
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._potContainer = new b()), (e._potShadow = new c(0, -25, 'garden', 'pot/potShadow')), (e._pot = new c('garden', 'pot/pot')), (e._pot.anchor.y = 1), (e._topGround = new c(0, -306, 'garden', 'pot/potGround')), (e._soon = new c('garden', 'pot/fakePlant')), e._soon.anchor.set(0.5, 1), (e._soon.angle = -12), (e._soon.y = e._topGround.y - 2));
                var f = new PIXI.Text(a.StringManager.get('GRADEN_PLANT_FAKE'), { fontFamily: Stage.FONT_BOLD, fill: 13650726, align: 'center', fontSize: 63 });
                return (f.anchor.set(0.5), (f.y = -165), (e._jumped = !1), e.addChild(e._potShadow), e.addChild(e._potContainer), e._potContainer.addChild(e._pot), e._potContainer.addChild(e._soon), e._potContainer.addChild(e._topGround), e._soon.addChild(f), e);
            }
            return (
                __extends(e, d),
                (e.prototype.jumpPot = function () {
                    var a = this;
                    if (!this._jumped) {
                        this._jumped = !0;
                        var b = this._potContainer.y,
                            c = 0.2;
                        (TweenLite.to(this._potContainer.scale, c, { x: 0.95, y: 1.05, overwrite: 'auto' }), TweenLite.to(this._potContainer, c, { y: b - 60, overwrite: 'auto' }));
                        var d = c;
                        (TweenLite.to(this._potContainer.scale, 0.2, { x: 1.05, y: 0.95, delay: d, overwrite: 'auto' }),
                            TweenLite.to(this._potContainer, 0.2, { y: b, delay: d, overwrite: 'auto' }),
                            (d += 0.2),
                            TweenLite.to(this._potContainer.scale, 0.4, {
                                x: 1,
                                y: 1,
                                delay: d,
                                ease: Back.easeOut,
                                overwrite: 'auto',
                                onComplete: function () {
                                    a._jumped = !1;
                                },
                            }));
                    }
                }),
                e
            );
        })(PIXI.Container);
    a.FakePot = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var a = b.call(this) || this;
                return ((a._base = new c(0, 0, 'garden', 'actions/waterCan')), (a._particles = new c(0, 0, 'garden', 'actions/water')), (a._particles.x = -120), (a._particles.y = 70), a._particles.anchor.set(1, 0), a._particles.addAnimation('water', ['actions/water', 'actions/water2'], 6, !0), a._particles.addAnimation('fertilizer', ['actions/fertilizer', 'actions/fertilizer2'], 6, !0), a._particles.addAnimation('pesticides', ['actions/pesticides']), (a.visible = !1), a.addChild(a._particles), a.addChild(a._base), a);
            }
            return (
                __extends(d, b),
                (d.prototype.water = function () {
                    ((this._base.frameName = 'actions/waterCan'),
                        this._particles.play('water', !0),
                        (this._particles.x = -160),
                        (this._particles.y = -10),
                        (this._particles.rotation = 0),
                        this._particles.scale.set(0.7),
                        TweenLite.delayedCall(0.3, function () {
                            a.SoundsManager.garden_watering();
                        }));
                }),
                (d.prototype.fertilizer = function () {
                    ((this._base.frameName = 'actions/fertilizerBag'),
                        this._particles.play('fertilizer', !0),
                        (this._particles.x = -100),
                        (this._particles.y = -40),
                        (this._particles.rotation = 0),
                        this._particles.scale.set(1),
                        TweenLite.delayedCall(0.3, function () {
                            a.SoundsManager.garden_fertilizer();
                        }));
                }),
                (d.prototype.pesticides = function () {
                    var b = this;
                    ((this._base.frameName = 'actions/pesticidesCap'),
                        this._particles.play('pesticides'),
                        (this._particles.x = -115),
                        (this._particles.y = -55),
                        (this._particles.rotation = -Math.PI / 6),
                        this._particles.scale.set(0.5),
                        TweenLite.to(this._particles.scale, 0.3, { x: 1, y: 1, delay: 0.6, overwrite: 'auto' }),
                        TweenLite.to(this._particles, 0.3, { x: this._particles.x - 100, y: this._particles.y + 50, delay: 0.6, overwrite: 'auto' }),
                        TweenLite.to(this._particles, 0.2, {
                            alpha: 0,
                            delay: 0.7,
                            overwrite: 'auto',
                            onComplete: function () {
                                (b._particles.scale.set(0.5), (b._particles.alpha = 1), (b._particles.x = -115), (b._particles.y = -55), TweenLite.to(b._particles.scale, 0.3, { x: 1, y: 1, overwrite: 'auto' }), TweenLite.to(b._particles, 0.3, { x: b._particles.x - 100, y: b._particles.y + 50, overwrite: 'auto' }), TweenLite.to(b._particles, 0.2, { alpha: 0, delay: 0.1, overwrite: 'auto' }));
                            },
                        }),
                        TweenLite.delayedCall(0.3, function () {
                            (a.SoundsManager.garden_pesticides(),
                                TweenLite.delayedCall(0.3, function () {
                                    a.SoundsManager.garden_pesticides();
                                }));
                        }));
                }),
                (d.prototype.show = function () {
                    var a = this;
                    return new Promise(function (b, c) {
                        return a.visible
                            ? void b()
                            : ((a.visible = !0),
                              (a.alpha = 0),
                              TweenLite.to(a, 0.2, { alpha: 1, overwrite: 'auto' }),
                              (a._base.rotation = 0),
                              TweenLite.to(a._base, 0.4, { rotation: -Math.PI / 6, delay: 0.2 }),
                              (a._particles.alpha = 0),
                              TweenLite.to(a._particles, 0.2, { alpha: 1, delay: 0.5, overwrite: 'auto' }),
                              TweenLite.to(a._particles, 0.2, { alpha: 0, delay: 1.4, overwrite: 'auto' }),
                              TweenLite.to(a._base, 0.4, { rotation: 0, delay: 1.4, overwrite: 'auto' }),
                              void TweenLite.to(a, 0.2, {
                                  alpha: 0,
                                  delay: 1.6,
                                  overwrite: 'auto',
                                  onComplete: function () {
                                      ((a.visible = !1), TweenLite.killTweensOf(a._particles), TweenLite.killTweensOf(a._particles.scale), (a._particles.alpha = 0), a._particles.stop(), b());
                                  },
                              }));
                    });
                }),
                d
            );
        })(b);
    a.GardenActionAnimation = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(d, e, f) {
                (void 0 === e && (e = 0), void 0 === f && (f = 40));
                var g = c.call(this, 'garden', ['ui/actionBtn0002']) || this;
                return ((g._type = d), (g._icon = new b(0, e, 'garden', 'ui/actionIcon000' + d)), (g._fontSize = f), (g._isWeb = !1), (g._isClose = !1), 1 != d && ((g._bgCounter = new b(82, -90, 'garden', 'ui/actionCounterBg')), (g._counter = new PIXI.Text('+', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: a.Utils.int(g._fontSize) })), (g._counter.y = 2), g._counter.anchor.set(0.5), g._bgCounter.addChild(g._counter), g.setCount(0)), (g._web = new b(0, 0, 'garden', 'ui/web')), (g._web.visible = !1), g.addChild(g._icon), g._bgCounter && g.addChild(g._bgCounter), g.addChild(g._web), g);
            }
            return (
                __extends(d, c),
                (d.prototype.setCount = function (b, c) {
                    if (1 != this._type) {
                        if (!this.isOpened) return void this.close();
                        if (((this._value = b), this._value <= 0)) ((this._counter.text = '+'), (this._counter.style.fontSize = 50), this._counter.scale.set(1));
                        else {
                            ((this._counter.text = '' + this._value + (c ? '/' + c : '')), (this._counter.style.fontSize = a.Utils.int(this._fontSize)), this._counter.scale.set(1));
                            var d = this._counter.width,
                                e = 50 / d;
                            (e > 1 && (e = 1), this._counter.scale.set(e));
                        }
                    }
                }),
                (d.prototype.web = function (a) {
                    var b = this;
                    ((this._isWeb = a),
                        a
                            ? ((this._web.alpha = 0), TweenLite.to(this._web, 0.1, { alpha: 1 }), (this._web.visible = !0), (this.enabled = !1))
                            : (this._isClose || (this.enabled = !0),
                              TweenLite.to(this._web, 0.1, {
                                  alpha: 0,
                                  onComplete: function () {
                                      b._web.visible = !1;
                                  },
                              })));
                }),
                (d.prototype.close = function () {
                    ((this._isClose = !0), (this.enabled = !1), (this._bgCounter.visible = !1), (this._icon.visible = !1), this.replaceFrames(['ui/actionBtn0001']));
                }),
                (d.prototype.update = function (a) {
                    0 == this.enabled;
                }),
                (d.prototype.delayDisable = function (a) {
                    var b = this;
                    (void 0 === a && (a = 1500),
                        (this.alpha = 0.6),
                        (this.enabled = !1),
                        setTimeout(function () {
                            ((b.alpha = 1), b._isClose || b._isWeb || (b.enabled = !0));
                        }, a));
                }),
                (d.prototype.disable = function (a) {
                    a ? ((this.alpha = 0.6), (this.enabled = !1)) : ((this.alpha = 1), this._isClose || this._isWeb || (this.enabled = !0));
                }),
                Object.defineProperty(d.prototype, 'value', {
                    get: function () {
                        return this._value;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'isOpened', {
                    get: function () {
                        return 0 != a.UserGameData.isLoaded;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(a.PXButton);
    a.GardenActionButton = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this;
                return (d ? (e._coinIcon = new c(10, 0, 'lobby', 'lbGold')) : (e._coinIcon = new c(10, 0, 'lobby', 'lbCoin')), (e._bgCoinText = new a.CoinText(0, void 0, a.CoinTextAnchor.LEFT, 159.72)), e._bgCoinText.refresh(), e._bgCoinText.iconOff(), (e._bgCoinText.y = 2), d && e._bgCoinText.setup(null, a.USER_PROPERTY.GOLD), (e._bgCoinText.auto = !0), (e._bgCoin = new c(15, 0, 'garden', 'ui/coinBg')), (e._bgCoin.anchor.x = 0), (e._bgCoin.alpha = 0.3), e.addChild(e._bgCoin), e.addChild(e._bgCoinText), e.addChild(e._coinIcon), e);
            }
            return (
                __extends(d, b),
                (d.prototype.jump = function () {
                    (TweenLite.to(this._coinIcon.scale, 0.1, { x: 1.15, y: 1.15, overwrite: 'auto' }), TweenLite.to(this._coinIcon.scale, 0.3, { x: 1, y: 1, ease: Back.easeOut, delay: 0.1 }));
                }),
                d
            );
        })(b);
    a.MoneyShower = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (a) {
            function c(c) {
                var d = a.call(this) || this;
                return ((d._levelValue = 0), (d._visual = new b(0, 0, 'garden', 'pot/plants/plant_lvl1')), (d._visual.anchor.y = 1), (d._animVisual = new b(0, 0, 'garden', 'pot/plants/plant_lvl1')), (d._animVisual.anchor.y = 1), (d._animVisual.visible = !1), (d._bonusIcon = new b(-6, -300, 'ui', 'shop/icons/lbLotIcon0002')), (d._bonusIcon.visible = !1), c >= 1 ? ((d._mainLevel = c >> 0), (d.level = c)) : (d._planted = !1), (d._arg = 0), d.hardUpdate(), d.addChild(d._visual), d.addChild(d._animVisual), d.addChild(d._bonusIcon), d);
            }
            return (
                __extends(c, a),
                (c.prototype.hardUpdate = function () {
                    ((this._visual.frameName = 'pot/plants/plant_lvl' + this._mainLevel), this._planted || (this._visual.alpha = 0));
                }),
                (c.prototype.update = function (a) {
                    this._bonusIcon.rotation = 0.1 * Math.sin((this._arg += 0.04 * a));
                }),
                (c.prototype.setIcon = function (a) {
                    this._bonusIcon.frameName = 'shop/icons/lbLotIcon' + b.zeroPad(a, 4);
                }),
                (c.prototype.hideIcon = function () {
                    this._bonusIcon.visible = !1;
                }),
                (c.prototype.sleep = function (a) {
                    ((this._mainLevel = 3), a ? ((this._visual.frameName = 'pot/plants/plant_lvl3'), (this._visual.alpha = 1)) : ((this._visual.frameName = 'pot/plants/plant_lvl3'), (this._visual.alpha = 0), (this._animVisual.frameName = 'pot/plants/plant_lvl4'), (this._animVisual.visible = !0), (this._animVisual.alpha = 1), TweenLite.to(this._visual, 0.8, { alpha: 1 }), TweenLite.to(this._animVisual, 0.8, { alpha: 0 })));
                }),
                (c.prototype.planted = function (a) {
                    ((this._planted = !0), (a = a ? a : 1), (this._mainLevel = Math.min(a >> 0, 4)), (this._visual.frameName = 'pot/plants/plant_lvl' + this._mainLevel), (this._animVisual.visible = !1), (this.level = a), (this._visual.alpha = 1), this._mainLevel >= 4 && ((this._bonusIcon.visible = !0), (this._bonusIcon.alpha = 1)));
                }),
                Object.defineProperty(c.prototype, 'level', {
                    get: function () {
                        return this._planted ? this._levelValue : 0;
                    },
                    set: function (a) {
                        var b = this;
                        if (this._planted) {
                            this._levelValue = a;
                            var c = this._mainLevel;
                            ((this._mainLevel = a >> 0),
                                (this._subLevel = a - this._mainLevel),
                                this._mainLevel >= 4 ? ((this._mainLevel = 4), (this._subLevel = 1)) : (this._bonusIcon.visible = !1),
                                this.scale.set(0.5 + 0.5 * this._subLevel),
                                this._animVisual.scale.set(1 / this.scale.x),
                                this._mainLevel > c &&
                                    ((this._animVisual.frameName = 'pot/plants/plant_lvl' + (this._mainLevel - 1)),
                                    (this._visual.frameName = 'pot/plants/plant_lvl' + this._mainLevel),
                                    (this._animVisual.alpha = 1),
                                    (this._animVisual.visible = !0),
                                    (this._visual.alpha = 0),
                                    this._mainLevel >= 4 && ((this._bonusIcon.visible = !0), (this._bonusIcon.alpha = 0), TweenLite.to(this._bonusIcon, 0.6, { alpha: 1, delay: 0.2 })),
                                    TweenLite.to(this._visual, 0.8, { alpha: 1 }),
                                    TweenLite.to(this._animVisual, 0.8, {
                                        alpha: 0,
                                        onComplete: function () {
                                            ((b._visual.alpha = 1), (b._animVisual.visible = !1));
                                        },
                                    })));
                        }
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'mainLevel', {
                    get: function () {
                        return this._mainLevel;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'isReady', {
                    get: function () {
                        return this._mainLevel >= 4;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'bonusX', {
                    get: function () {
                        return this._bonusIcon.x;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'bonusY', {
                    get: function () {
                        return this._bonusIcon.y;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                c
            );
        })(PIXI.Container);
    a.Plant = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var f = d.call(this) || this;
                return (
                    (f._arg = 0),
                    (f._asleep = !1),
                    (f._potContainer = new b()),
                    (f._potShadow = new c(0, -25, 'garden', 'pot/potShadow')),
                    (f._pot = new c('garden', 'pot/pot')),
                    (f._pot.anchor.y = 1),
                    (f._topGround = new c(0, -306, 'garden', 'pot/potGround')),
                    (f._plant = new a.Plant(0)),
                    (f._plantContainer = new b()),
                    (f._plantContainer.y = f._topGround.y - 2),
                    (f._plantAnim = !1),
                    (f._emotionBg = new c(200, 0, 'garden', 'ui/emotionBg')),
                    (f._emotionIcon = new c(0, 0, 'garden', 'ui/emotionIcon0001')),
                    (f._bugVisual = new c(0, f._topGround.y - 30, 'garden', 'pot/bug')),
                    (f._bugVisual.visible = !1),
                    (f._fertilizerEffect = new c(0, 0, 'garden', 'pot/effectFertilizer')),
                    f._fertilizerEffect.scale.set(2),
                    (f._fertilizerEffect.anchor.y = 1),
                    (f._fertilizerEffect.visible = !1),
                    (f._zPool = new a.ZPool(100, -500)),
                    (f._zPool.pause = !0),
                    (f._actionAnim = new a.GardenActionAnimation()),
                    (f._actionAnim.x = 270),
                    (f._actionAnim.y = -450),
                    (f._allTime = 0),
                    (f._jumped = !1),
                    f.setEmotion(e.NONE),
                    f.addChild(f._potShadow),
                    f.addChild(f._potContainer),
                    f.addChild(f._emotionBg),
                    f.addChild(f._zPool),
                    f.addChild(f._fertilizerEffect),
                    f.addChild(f._actionAnim),
                    f._potContainer.addChild(f._pot),
                    f._potContainer.addChild(f._plantContainer),
                    f._potContainer.addChild(f._topGround),
                    f._potContainer.addChild(f._bugVisual),
                    f._plantContainer.addChild(f._plant),
                    f._emotionBg.addChild(f._emotionIcon),
                    f
                );
            }
            return (
                __extends(f, d),
                (f.prototype.actionAnim = function (a) {
                    switch (a) {
                        case 1:
                            this._actionAnim.water();
                            break;
                        case 2:
                            this._actionAnim.fertilizer();
                            break;
                        case 3:
                            this._actionAnim.pesticides();
                    }
                    return this._actionAnim.show();
                }),
                (f.prototype.activateBug = function (b) {
                    var c = this;
                    (void 0 === b && (b = !0),
                        b
                            ? (a.SoundsManager.garden_showBug(), (this._bugVisual.visible = !0), (this._bugVisual.y = this._topGround.y - (30 + 5 * (this._plant.level - 1))))
                            : TweenLite.to(this._bugVisual, 0.2, {
                                  alpha: 0,
                                  delay: 1,
                                  onStart: function () {
                                      a.SoundsManager.garden_hideBug();
                                  },
                                  onComplete: function () {
                                      c._bugVisual.visible = !1;
                                  },
                              }));
                }),
                (f.prototype.zPause = function (a) {
                    this._zPool.pause = a;
                }),
                (f.prototype.update = function (b) {
                    (this._plantAnim && (this._plant.scale.x = 1 + 0.01 * Math.sin((this._arg += 0.03 * b))), (this._plant.rotation = 0.01 * Math.sin((this._arg += 0.01 * b))), (this._bugVisual.scale.x = 1 + 0.02 * Math.sin(this._arg)), (this._bugVisual.scale.y = 1 - 0.03 * Math.sin(this._arg)), (this._plant.level = (1 == this._progressCoef ? 3 : 1) + a.Garden.plantProgress() * this._progressCoef), (this._emotionBg.y = -this._potContainer.height - 80 + 16 * Math.sin(this._arg / 2)), this._plant.update(b), this._zPool.update(b));
                }),
                (f.prototype.planting = function (b, c) {
                    var d = this;
                    ((this._allTime = b), (this._activateTime = c), (this._asleep = !1), (this._progressCoef = 3), a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_HAS_GROWN) && (this._progressCoef = 1));
                    var e = this.currentTime > 5 || 1 == this._progressCoef ? (1 == this._progressCoef ? 3 : 1) + a.Garden.plantProgress() * this._progressCoef : null;
                    ((this._plantAnim = !0),
                        null == e &&
                            ((this._plantAnim = !1),
                            this._plantContainer.scale.set(0.001),
                            TweenLite.to(this._plantContainer.scale, 0.3, {
                                x: 1,
                                y: 1,
                                onComplete: function () {
                                    d._plantAnim = !0;
                                },
                            })),
                        this._plant.planted(e));
                }),
                (f.prototype.fertilizer = function (a) {
                    var b = this;
                    ((this._allTime = a),
                        0 == a && (this._allTime = 1),
                        TweenLite.killTweensOf(this._fertilizerEffect),
                        (this._fertilizerEffect.alpha = 0),
                        (this._fertilizerEffect.visible = !0),
                        (this._fertilizerEffect.y = 50),
                        TweenLite.to(this._fertilizerEffect, 0.2, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(this._fertilizerEffect, 0.4, { y: -150, ease: Sine.easeOut }),
                        TweenLite.to(this._fertilizerEffect, 0.2, {
                            alpha: 0,
                            delay: 0.3,
                            overwrite: 'auto',
                            onComplete: function () {
                                b._fertilizerEffect.visible = !1;
                            },
                        }));
                }),
                (f.prototype.setActivateTime = function (a) {
                    this._activateTime = a;
                }),
                (f.prototype.sleep = function (a) {
                    (void 0 === a && (a = !1), this._plant.sleep(a), (this._plant.level = 3), (this._asleep = !0), (this._progressCoef = 1), (this._allTime = 0));
                }),
                (f.prototype.jumpPot = function () {
                    var a = this;
                    if (!this._jumped) {
                        this._jumped = !0;
                        var b = this._potContainer.y,
                            c = 0.2;
                        (TweenLite.to(this._potContainer.scale, c, { x: 0.95, y: 1.05, overwrite: 'auto' }), TweenLite.to(this._potContainer, c, { y: b - 60, overwrite: 'auto' }));
                        var d = c;
                        (TweenLite.to(this._potContainer.scale, 0.2, { x: 1.05, y: 0.95, delay: d, overwrite: 'auto' }),
                            TweenLite.to(this._potContainer, 0.2, { y: b, delay: d, overwrite: 'auto' }),
                            (d += 0.2),
                            TweenLite.to(this._potContainer.scale, 0.4, {
                                x: 1,
                                y: 1,
                                delay: d,
                                ease: Back.easeOut,
                                overwrite: 'auto',
                                onComplete: function () {
                                    a._jumped = !1;
                                },
                            }));
                    }
                }),
                (f.prototype.setBoosterIcon = function (a) {
                    (this._plant.setIcon(a), (this._boosterId = a));
                }),
                (f.prototype.hideBoosterIcon = function () {
                    this._plant.hideIcon();
                }),
                (f.prototype.setEmotion = function (a) {
                    switch (a) {
                        case e.NONE:
                            this._emotionBg.visible = !1;
                            break;
                        default:
                            (0 == this._emotionBg.visible && ((this._emotionBg.alpha = 0), TweenLite.to(this._emotionBg, 0.2, { alpha: 1 })), (this._emotionBg.visible = !0), (this._emotionIcon.frameName = 'ui/emotionIcon000' + a));
                    }
                }),
                Object.defineProperty(f.prototype, 'time', {
                    get: function () {
                        return Math.max(this._allTime - this.currentTime, 0);
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'currentTime', {
                    get: function () {
                        return a.MI.get().time - this._activateTime - a.Garden.timeOffset();
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'haveActivePlant', {
                    get: function () {
                        return this._allTime > 0;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'isDone', {
                    get: function () {
                        return !this._asleep && this._allTime > 0 && 0 == this.time;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'bonusX', {
                    get: function () {
                        return this._plant.x + this._plantContainer.x + this._plant.bonusX;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'bonusY', {
                    get: function () {
                        return this._plant.y + this._plantContainer.y + this._plant.bonusY;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'boosterId', {
                    get: function () {
                        return this._boosterId;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                f
            );
        })(PIXI.Container);
    a.PlantPot = d;
    var e;
    !(function (a) {
        ((a[(a.NONE = 0)] = 'NONE'), (a[(a.WATER = 1)] = 'WATER'), (a[(a.BUG = 2)] = 'BUG'), (a[(a.DONE = 3)] = 'DONE'), (a[(a.SLEEP = 4)] = 'SLEEP'), (a[(a.NEED_PLANTED = 5)] = 'NEED_PLANTED'));
    })((e = a.PLANT_EMOTION || (a.PLANT_EMOTION = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b(b, d, e, f) {
                var g = a.call(this) || this;
                return ((g._visual = new c(0, 0, 'garden', 'ui/emotionIcon0004')), g.reuse(b, d, e, f), g.addChild(g._visual), g);
            }
            return (
                __extends(b, a),
                (b.prototype.reuse = function (a, b, c, d) {
                    ((this._timeLife = c), (this._maxTime = c), (this._speed = d), (this.dead = !1), (this.x = a), (this.y = b), (this.alpha = 0), (this._beginX = a), (this._ang = 0));
                }),
                (b.prototype.update = function (a) {
                    if (!this.dead) {
                        ((this.y -= this._speed * a), (this.x = this._beginX + 4 * Math.sin((this._ang += 0.04 * a))));
                        var b = this._timeLife / this._maxTime;
                        (b < 0.4 ? ((this.alpha = b / 0.4), this.alpha < 0.1 && ((this.alpha = 0), (this.dead = !0), this.parent.removeChild(this))) : this.alpha < 1 && ((this.alpha += 0.1), this.alpha > 1 && (this.alpha = 1)), this._timeLife--);
                    }
                }),
                b
            );
        })(b),
        e = (function (a) {
            function b(b, c) {
                var d = a.call(this) || this;
                return ((d.x = b), (d.y = c), (d._zTimer = 30 + Stage.rnd.rangeIntJS(0, 30)), (d.pause = !1), (d._pool = []), d);
            }
            return (
                __extends(b, a),
                (b.prototype.addNote = function (a, b, c, e) {
                    for (var f, g = 0; g < this._pool.length; g++)
                        if (this._pool[g].dead) {
                            ((f = this._pool[g]), f.reuse(a, b, c, e));
                            break;
                        }
                    (null == f && ((f = new d(a, b, c, e)), this._pool.push(f)), this.addChild(f));
                }),
                (b.prototype.update = function (a) {
                    for (var b = 0; b < this._pool.length; b++) this._pool[b].update(a);
                    this.pause || (this._zTimer <= 0 ? (this.addNote(4 * (-10 + 14 * Math.random()), 4 * Stage.rnd.rangeJS(-6, 4), Stage.rnd.rangeIntJS(90, 120), Stage.rnd.rangeJS(0.6, 1)), (this._zTimer = 30 + Stage.rnd.rangeIntJS(0, 30))) : (this._zTimer -= a));
                }),
                b
            );
        })(b);
    a.ZPool = e;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b(b) {
                var d = a.call(this) || this;
                return ((d._key = b), (d._visual = new c('ui', 'moneyBox/keyBg')), (d._keyIco = new c('ui', 'moneyBox/uiGoldKey0002')), (d._text = new PIXI.Text(b + '/4', { fontFamily: Stage.FONT_BOLD, fontSize: 54, fill: 16777215, align: 'left' })), d._text.anchor.set(0, 0.5), (d._keyIco.x = -80), (d._text.x = d._keyIco.x + 0.5 * d._keyIco.width + 45), (d._text.y = 6), d.addChild(d._visual), d.addChild(d._keyIco), d.addChild(d._text), d);
            }
            return (
                __extends(b, a),
                (b.prototype.addKey = function () {
                    var a = this;
                    (this._key++,
                        (this.alpha = 0),
                        TweenLite.to(this, 0.3, { alpha: 1 }),
                        this.scale.set(0.5),
                        TweenLite.to(this.scale, 0.4, {
                            x: 1,
                            y: 1,
                            ease: Back.easeOut,
                            onComplete: function () {
                                ((a._text.text = a._key + '/4'),
                                    TweenLite.to(a._text.scale, 0.2, {
                                        x: 1.2,
                                        y: 1.2,
                                        onComplete: function () {
                                            (TweenLite.to(a._text.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut }), TweenLite.to(a, 0.2, { alpha: 0, delay: 1 }));
                                        },
                                    }));
                            },
                        }));
                }),
                b
            );
        })(b);
    a.KeyCounter = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var f = d.call(this) || this;
                return (
                    (f._container = new b()),
                    (f._bg = new c('ui', 'battlePass/bpProgressBg')),
                    (f._bgShadow = new c('ui', 'battlePass/bpBgShadow')),
                    f._bgShadow.scale.set(2),
                    (f._bgShadow.y = 60),
                    (f._progress = new c('ui', 'battlePass/bpProgress')),
                    (f._star = new c(-250, 20, 'ui0', 'popups/win/winStar0001')),
                    f._star.scale.set(0.61),
                    (f._starExplosion = new a.StarExplosion()),
                    (f._starExplosion.x = f._star.x - 30),
                    (f._starExplosion.y = f._star.y - 30),
                    (f._lvl = new PIXI.Text('1', { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'center' })),
                    (f._lvl.x = f._star.x + 2),
                    (f._lvl.y = f._star.y + 10),
                    f._lvl.anchor.set(0.5),
                    (f._caption = new PIXI.Text(a.StringManager.getRank(0), { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center' })),
                    (f._caption.x = 0),
                    (f._caption.y = -23),
                    f._caption.anchor.set(0.5),
                    (f._count = new PIXI.Text('0/1', { fontFamily: Stage.FONT_BOLD, fontSize: 30, fill: 16777215, align: 'right', lineJoin: 'round', stroke: '#104170', strokeThickness: 8 })),
                    (f._count.x = 270),
                    (f._count.y = 35),
                    f._count.anchor.set(1, 0.5),
                    (f._ang = 0),
                    (f._delay = 30),
                    (f._rankMask = new PIXI.Graphics()),
                    f._rankMask.beginFill(16711680),
                    f._rankMask.drawRect(0, 0, 495, 100),
                    f._rankMask.endFill(),
                    (f._rankMask.x = -210),
                    (f._rankMask.y = -30),
                    (f._progress.mask = f._rankMask),
                    (f._nextScale = f._rankMask.scale.x = 1e-4),
                    f.resize(),
                    f._container.addChild(f._bgShadow),
                    f._container.addChild(f._bg),
                    f._container.addChild(f._progress),
                    f._container.addChild(f._rankMask),
                    f._container.addChild(f._star),
                    f._container.addChild(f._lvl),
                    f._container.addChild(f._caption),
                    f._container.addChild(f._count),
                    f._container.addChild(f._starExplosion),
                    f.addChild(f._container),
                    null == e.LAST_RANK && ((e.LAST_RANK = 0), (e.LAST_STAR = 0), (e.LAST_MAX_STAR = a.UserGameData.getMaxStarForNextRank(e.LAST_RANK))),
                    f
                );
            }
            return (
                __extends(e, d),
                (e.prototype.setValue = function (b, c, d, f) {
                    (1 != f && (d ? ((e.LAST_RANK = b), (e.LAST_STAR = c), (e.LAST_MAX_STAR = a.UserGameData.getMaxStarForNextRank(e.LAST_RANK))) : null != e.LAST_RANK && null != e.LAST_STAR && this.setValue(e.LAST_RANK, e.LAST_STAR, !0, !0), (this._needOverhead = null != e.LAST_RANK && e.LAST_RANK < b)), (this._currentStars = c), (this._maxStars = a.UserGameData.getMaxStarForNextRank(b)), (this._currentRank = b));
                    var g = c / this._maxStars;
                    ((g = Math.max(g, 1e-4)), d ? ((this._rankMask.scale.x = g), (this._nextScale = this._rankMask.scale.x), this.updateText(b, c)) : (this._nextScale = g));
                }),
                (e.prototype.updateText = function (b, c) {
                    ((this._count.text = c + '/' + this._maxStars), (this._lvl.text = String(b + 1)), (this._caption.text = a.StringManager.getRank(b)), this._lvl.scale.set(1), this._caption.scale.set(1));
                    var d = 56 / this._lvl.width;
                    (d < 1 && this._lvl.scale.set(d), (d = 400 / this._caption.width), d < 1 && this._caption.scale.set(d));
                }),
                (e.prototype.checkNewLvl = function () {
                    (a.MI.get().CG.happytime(), this._starExplosion.exp(), this.updateText(this._currentRank, this._currentStars), this.saveRank(), this.setValue(this._currentRank, this._currentStars, !1, !0), a.SoundsManager.getStarInLevel(0));
                    var b = 0.61;
                    (TweenLite.to(this._star.scale, 0.5, { x: 1.2 * b, y: 1.2 * b, ease: Back.easeOut, overwrite: 'auto' }), TweenLite.to(this._star.scale, 0.5, { x: 1 * b, y: 1 * b, ease: Back.easeIn, delay: 0.55 }));
                }),
                (e.prototype.saveRank = function () {
                    ((e.LAST_RANK = this._currentRank), (e.LAST_STAR = this._currentStars), (e.LAST_MAX_STAR = a.UserGameData.getMaxStarForNextRank(e.LAST_RANK)));
                }),
                (e.prototype.resize = function () {
                    ((this.x = 0.5 * Stage.screenWidth), (this.y = 340));
                }),
                (e.prototype.hide = function () {
                    this._showed && ((this._showed = !1), TweenLite.to(this._container, 0.3, { y: -this.y, ease: Sine.easeOut }));
                }),
                (e.prototype.show = function () {
                    this._showed || ((this._showed = !0), TweenLite.to(this._container, 0.3, { y: 0, ease: Sine.easeOut }));
                }),
                (e.prototype.update = function (a) {
                    if (this._delay > 0) return void this._delay--;
                    if (((this._star.rotation = 0.1 * Math.sin((this._ang += 0.05 * a))), this._rankMask.scale.x != this._nextScale || this._needOverhead))
                        if (this._rankMask.scale.x > this._nextScale || this._needOverhead)
                            if (this._rankMask.scale.x >= 1) ((this._rankMask.scale.x = 1e-4), (e.LAST_MAX_STAR = this._maxStars), (this._count.text = '0/' + e.LAST_MAX_STAR), (this._needOverhead = !1), this.checkNewLvl());
                            else {
                                var b = 1 - this._rankMask.scale.x;
                                ((this._rankMask.scale.x += 0.2 * b), (this._count.text = Math.floor(this._rankMask.scale.x * e.LAST_MAX_STAR) + '/' + e.LAST_MAX_STAR), b < 0.05 && ((this._rankMask.scale.x = 1), (this._count.text = e.LAST_MAX_STAR + '/' + e.LAST_MAX_STAR)));
                            }
                        else {
                            var b = this._nextScale - this._rankMask.scale.x;
                            ((this._rankMask.scale.x += 0.2 * b), (this._count.text = Math.floor(this._rankMask.scale.x * e.LAST_MAX_STAR) + '/' + e.LAST_MAX_STAR), b < 0.05 && ((this._rankMask.scale.x = this._nextScale), (this._count.text = this._currentStars + '/' + e.LAST_MAX_STAR), this._rankMask.scale.x >= 1 ? this.checkNewLvl() : this.saveRank()));
                        }
                    this._starExplosion.update(a);
                }),
                (e.prototype.destroy = function (a) {
                    d.prototype.destroy.call(this, { children: !0 });
                }),
                e
            );
        })(b);
    a.BattlePassPanel = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b() {
                var b = a.call(this) || this;
                return ((b._stars = []), (b._pool = []), b);
            }
            return (
                __extends(b, a),
                (b.prototype.update = function (a) {
                    for (var b = this._stars.length - 1; b >= 0; b--) (this._stars[b].update(a), this._stars[b].isDead && (this._stars[b].parent && this._stars[b].parent.removeChild(this._stars[b]), this._pool.push(this._stars.splice(b, 1)[0])));
                }),
                (b.prototype.exp = function () {
                    for (var a = 0; a < 10; a++) {
                        var b = this.getStar();
                        (this._stars.push(b), this.addChild(b), (b.x = 50 * Math.random()), (b.y = 50 * Math.random()), b.scale.set(0.4));
                        var c = 5,
                            d = 15;
                        b.setVel(c - Math.random() * d, c - Math.random() * d, 0.5 + 1 * Math.random());
                    }
                }),
                (b.prototype.getStar = function () {
                    if (this._pool.length) return this._pool.pop();
                    var a = new e();
                    return a;
                }),
                b
            );
        })(b);
    a.StarExplosion = d;
    var e = (function (a) {
        function b() {
            var b = a.call(this) || this;
            return ((b._visual = new c(0, 0, 'ui', 'battlePass/star')), (b._time = null), b.addChild(b._visual), b);
        }
        return (
            __extends(b, a),
            (b.prototype.setVel = function (a, b, c) {
                ((this._velX = a), (this._velY = b), (this._time = c), (this._maxTime = this._time), (this._rot = Math.random() < 0.5 ? 1 : -1), (this.rotation = Math.random() * Math.PI), this._visual.scale.set(0.5));
            }),
            (b.prototype.update = function (a) {
                this._time && ((this._time -= 0.016 * a), (this.alpha = this._time / this._maxTime), (this.x += this._velX), (this.y += this._velY), (this._velX *= 0.98), (this._velY += 0.1), (this._visual.scale.x += 0.02), this._visual.scale.x > 1 && (this._visual.scale.x = 1), (this._visual.scale.y = this._visual.scale.x), (this.rotation += 0.01 * this._rot), this._time <= 0 && (this._time = null));
            }),
            Object.defineProperty(b.prototype, 'isDead', {
                get: function () {
                    return null == this._time;
                },
                enumerable: !1,
                configurable: !0,
            }),
            b
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                return (
                    (e._arg = 0),
                    (e._btn = new a.PXButton('lobby', ['garden/lobbyGardenBtn'])),
                    (e._bg = new c('lobby', 'garden/lobbyGardenBtnBg')),
                    (e._bg.anchor.x = 0),
                    (e._bg.x = 30),
                    (e._bg.y = 20),
                    (e._progressContainer = new b()),
                    (e._progressContainer.x = 148),
                    (e._progressContainer.y = 35),
                    (e._progressBG = new c(0, 0, 'lobby', 'garden/lbGardenProgressBg')),
                    (e._progress = new c(e._progressBG.x, e._progressBG.y, 'lobby', 'garden/lbGardenProgress')),
                    (e._progressMask = new PIXI.Graphics()),
                    e._progressMask.beginFill(16711680, 0.6),
                    e._progressMask.drawRect(0, -19, 122, 38),
                    e._progressMask.endFill(),
                    (e._progressMask.x = -61),
                    (e._progress.mask = e._progressMask),
                    (e._stars = new c(115, 5, 'lobby', 'garden/lbStarFertilizer')),
                    (e._fertilizerIcon = new c(250, 20, 'lobby', 'garden/lbFertilizerIcon')),
                    (e._plusOneIcon = new c(0, 0, 'lobby', 'garden/plusOne')),
                    (e.progress = 0),
                    (e._text = new PIXI.Text('0/15', { fontFamily: Stage.FONT_BOLD, fontSize: 25, fill: 16251903, align: 'left', dropShadow: !0, dropShadowAngle: 1.2, dropShadowAlpha: 0.6, dropShadowDistance: 6 })),
                    e._text.anchor.set(0, 0.5),
                    (e._text.x = e._stars.x + 20),
                    (e._text.y = e._stars.y + 5),
                    (e._markEmotions = new c(80, -80, 'lobby', 'garden/lbEmotionBg')),
                    (e._markEmotionsIcon = new c(0, 0, 'lobby', 'garden/lbEmotionIcon0001')),
                    e.checkEmotion(),
                    e.addChild(e._bg),
                    e.addChild(e._btn),
                    e.addChild(e._progressContainer),
                    e.addChild(e._stars),
                    e.addChild(e._text),
                    e.addChild(e._markEmotions),
                    e.addChild(e._fertilizerIcon),
                    e.addChild(e._plusOneIcon),
                    e._progressContainer.addChild(e._progressBG),
                    e._progressContainer.addChild(e._progress),
                    e._progressContainer.addChild(e._progressMask),
                    e._markEmotions.addChild(e._markEmotionsIcon),
                    e
                );
            }
            return (
                __extends(e, d),
                (e.prototype.checkEmotion = function () {
                    var b = a.PLANT_EMOTION.NONE,
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_BUG_TIME),
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        e = a.UserGameData.getProperty(a.USER_PROPERTY.GOLD);
                    (a.Garden.plantDone() ? (b = a.PLANT_EMOTION.DONE) : d == -1 ? e >= a.UserGameData.GARDEN_BUY_PLANT_GOLD && (b = a.PLANT_EMOTION.NEED_PLANTED) : 0 == d ? (b = a.PLANT_EMOTION.SLEEP) : 0 != c ? (b = a.PLANT_EMOTION.BUG) : 0 != a.Garden.waterOffset() && (b = a.PLANT_EMOTION.WATER), this.showEmotion(b));
                }),
                (e.prototype.init = function (b, c, d) {
                    var e = this;
                    if (((this._plusOneIcon.alpha = 0), (this._arg = 0), null == b || b == -1 || d == a.UserGameData.MAX_GARDEN_FERTILIZER_COUNT)) {
                        if (this.checkMax()) return;
                        ((this.starsCount = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_STARS)), (this._nextStarCount = this.starsCount));
                    } else {
                        var f = a.UserGameData.getLevelStars(b),
                            g = f - c;
                        ((this._nextStarCount = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_STARS)),
                            this._nextStarCount >= g
                                ? (this.starsCount = this._nextStarCount - g)
                                : ((this.starsCount = a.UserGameData.MAX_GARDEN_FERTILIZER_STARS + (this._nextStarCount - g)),
                                  (this._nextStarCount = a.UserGameData.MAX_GARDEN_FERTILIZER_STARS),
                                  TweenLite.to(this._fertilizerIcon, 0.4, { x: 0, y: 0, delay: 0.35, ease: Sine.easeOut, overwrite: 'auto' }),
                                  TweenLite.to(this._fertilizerIcon.scale, 0.5, { x: 2, y: 2, ease: Back.easeOut, delay: 0.35, overwrite: 'auto' }),
                                  TweenLite.to(this._fertilizerIcon.scale, 0.4, { x: 1, y: 1, ease: Back.easeIn, delay: 1.5, overwrite: 'auto' }),
                                  TweenLite.to(this._fertilizerIcon, 0.4, {
                                      alpha: 0,
                                      delay: 1.5,
                                      overwrite: 'auto',
                                      onComplete: function () {
                                          (e.jump(function () {
                                              e.checkMax() || (e._nextStarCount = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_STARS));
                                          }),
                                              (e._fertilizerIcon.x = 250),
                                              (e._fertilizerIcon.y = 20),
                                              TweenLite.to(e._fertilizerIcon, 0.4, { alpha: 1, delay: 0.5 }));
                                      },
                                  }),
                                  TweenLite.to(this._plusOneIcon, 0.2, { alpha: 1, delay: 0.6, overwrite: 'auto' }),
                                  TweenLite.to(this._plusOneIcon, 0.2, { alpha: 0, delay: 1.4, overwrite: 'auto' })),
                            g && ((this._initDelay = 0.3), TweenLite.to(this._stars, 0.1, { angle: -15, delay: 0.3, overwrite: 'auto' }), TweenLite.to(this._stars.scale, 0.1, { x: 1.15, y: 1.15, delay: 0.3, overwrite: 'auto' }), TweenLite.to(this._stars, 0.4, { angle: 0, delay: 0.5, overwrite: 'auto' }), TweenLite.to(this._stars.scale, 0.8, { x: 1, y: 1, ease: Elastic.easeOut, delay: 0.5, overwrite: 'auto' })));
                    }
                }),
                (e.prototype.showEmotion = function (b) {
                    switch (b) {
                        case a.PLANT_EMOTION.NONE:
                            this._markEmotions.visible = !1;
                            break;
                        default:
                            ((this._markEmotions.visible = !0), (this._markEmotionsIcon.frameName = 'garden/lbEmotionIcon000' + b));
                    }
                }),
                (e.prototype.checkMax = function () {
                    return a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT) >= a.UserGameData.MAX_GARDEN_FERTILIZER_COUNT && ((this.starsCount = a.UserGameData.MAX_GARDEN_FERTILIZER_STARS), (this._nextStarCount = this._starsCount), (this._text.text = a.StringManager.get('TXT_MAX')), !0);
                }),
                (e.prototype.jump = function (a) {
                    (TweenLite.to(this.scale, 0.3, { x: 1.1, y: 1.1, overwrite: 'auto', onComplete: a }), TweenLite.to(this.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut, delay: 0.3, overwrite: 'auto' }));
                }),
                (e.prototype.update = function (a) {
                    if (this._nextStarCount != this._starsCount)
                        if (this._initDelay <= 0) {
                            var b = this._nextStarCount - this._starsCount;
                            Math.abs(b) < 0.05 ? (this.starsCount = this._nextStarCount) : (this.starsCount += 0.2 * b);
                        } else this._initDelay -= 0.016 * a;
                    this._markEmotions.y = -80 + 8 * Math.sin((this._arg += 0.04 * a));
                }),
                Object.defineProperty(e.prototype, 'progress', {
                    set: function (a) {
                        (a <= 0 && (a = 1e-5), a > 1 && (a = 1), (this._progressMask.scale.x = a));
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(e.prototype, 'starsCount', {
                    get: function () {
                        return this._starsCount;
                    },
                    set: function (b) {
                        ((this._starsCount = b), (this.progress = b / a.UserGameData.MAX_GARDEN_FERTILIZER_STARS), (this._text.text = (this._starsCount >> 0) + '/' + a.UserGameData.MAX_GARDEN_FERTILIZER_STARS));
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(e.prototype, 'button', {
                    get: function () {
                        return this._btn;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                e
            );
        })(b);
    a.GardenButton = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._bgCoinText = new a.CoinText(0, void 0, a.CoinTextAnchor.LEFT, 50)), d._bgCoinText.refresh(), (d._bgCoinText.y = 2), (d._bgCoinText.x = -10), d._bgCoinText.setup(null, a.USER_PROPERTY.GOLD), (d._coinIcon = new c(10, 0, 'lobby', 'lbGold')), (d._bg = new c(80, 0, 'lobby', 'lbGoldBg')), d.addChild(d._bg), d.addChild(d._bgCoinText), d.addChild(d._coinIcon), d);
            }
            return (__extends(d, b), d);
        })(b);
    a.GoldCounter = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f(g, h, i, j) {
                var k = d.call(this) || this;
                if (((k._alertContainer = h), (k._lobby = g), (k._mapBlock = j), (k._downContainer = new PIXI.Container()), (k._topContainer = i), (k._visual = new a.PXButton('lobby', ['LevelButton0002'])), k._visual.setAnimationScale(0.05, 0.8), (k._visual.soundFileDown = ''), (k._text = new PIXI.BitmapText('00', { fontName: 'Pony-60-LevelButton', fontSize: 60, align: 'center', tint: 16777215 })), (k._text.anchor = 0.5), (k._text.x = -4), (k._text.y = 3), (k._isInf = !1), (k._infIcon = new c(0, 0, 'lobby', 'infIco')), (k._infIcon.visible = !1), !f.INF_ALERT && 0 == a.UserGameData.USE_INFINITY)) {
                    var l = a.Locales.get('lobby', 'infAlert');
                    ((f.INF_ALERT = new c(0, 0, l[0], l[1])), f.INF_ALERT.anchor.set(0.5, 1), (f.INF_ALERT.alpha = 0));
                }
                (f.CURRENT || (f.CURRENT = new c(0, 0, 'lobby', 'selectCurrentLevel')), k._visual.addOnUp(k.click, k), (k._starsContainer = new b()), (k._starsContainer.visible = !1), (k._stars = []));
                for (var m = 0; m < 3; m++) (k._stars.push(new e(m)), k._starsContainer.addChild(k._stars[m]));
                return ((k._hardMark = new c(-60, 40, 'lobby', 'skull0001')), (k._chestIcon = new c(0, -110, 'lobby', 'chest_icon')), k.addChild(k._downContainer), k.addChild(k._visual), k.addChild(k._starsContainer), k._visual.addChild(k._text), k._visual.addChild(k._infIcon), k._visual.addChild(k._hardMark), k._topContainer.addChild(k._chestIcon), k);
            }
            return (
                __extends(f, d),
                (f.prototype.click = function () {
                    this._lobby.isScroll || (a.SoundsManager.levelBallClick(), this._lobby.playLevel(this._isInf ? -1 : this._level));
                }),
                (f.prototype.init = function (b, c) {
                    var d = this,
                        e = a.Lobby.HARD_LEVELS.indexOf(b + 1) != -1;
                    (a.USER_PROPERTY.USE_INF && (e = b <= a.Lobby.COUNT_LEVELS ? a.Lobby.HARD_LEVELS.indexOf(b + 1) != -1 : a.Lobby.HARD_LEVELS.indexOf(b - a.Lobby.COUNT_LEVELS + 1) != -1), (this._level = b));
                    var g = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL);
                    if (b <= g || (b == a.Lobby.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY)) {
                        var h = !1,
                            i = a.UserGameData.getLevelStars(b);
                        if ((g - 1 == b && a.Lobby.MAX_PREV_CURRENT_LEVEl < g && (h = !0), this._visual.replaceFrames(a.UserGameData.getLevelGold(b) ? ['LevelButton0003'] : [e ? 'LevelButton0004' : 'LevelButton0001']), (this._visual.enabled = !0), (this._text.alpha = 1), (this._infIcon.alpha = 1), b == a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) || (b == a.Lobby.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY))) this._starsContainer.visible = !1;
                        else {
                            this._starsContainer.visible = !0;
                            for (var j = 0; j < 3; j++) this._stars[j].set(i > j, h);
                            if (h) {
                                var k = 0.5,
                                    l = 0.15;
                                (TweenLite.to(this.scale, l, { x: 1.2, y: 1.2, delay: k, overwrite: 'auto' }), TweenLite.to(this.scale, 0.3, { x: 1, y: 1, delay: l + k, ease: Back.easeOut }));
                            }
                        }
                    } else (this._visual.replaceFrames([e ? 'LevelButton0005' : 'LevelButton0002']), (this._visual.enabled = !1), (this._text.alpha = 0.8), (this._infIcon.alpha = 0.8), (this._starsContainer.visible = !1));
                    if ((e && !this._starsContainer.visible ? (this._hardMark.visible = !0) : (this._hardMark.visible = !1), a.UserGameData.getProperty(a.USER_PROPERTY.YA_OLGA) && a.MI.get().social.needOlga)) {
                        a.UserGameData.getProperty(a.USER_PROPERTY.YA_OLGA_COUNTER);
                    }
                    this._current = !1;
                    var m = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL);
                    if ((m >= a.Lobby.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY && m--, f.CURRENT[c] == c && (f.CURRENT.alpha = 0), b == m && (f.CURRENT.scale.set(0.4), (f.CURRENT.alpha = 0), (f.CURRENT[c] = c), (this._arg = 0), (this._current = !0), this._downContainer.addChild(f.CURRENT), (f.CURRENT_LEVEL_BUTTON = this)), b == a.Lobby.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY)) ((this._text.text = ''), (this._infIcon.visible = !0), this._visual.setAnimationScale(0.05, 0.9), this._alertContainer.addChild(f.INF_ALERT), (f.INF_ALERT.x = this.x), (f.INF_ALERT.y = this.y - 120), (f.INF_ALERT.cur = this), (f.INF_ALERT.alpha = 0), (f.INF_ALERT.arg = 0), (this._isInf = !0));
                    else {
                        ((this._text.text = '' + (b + 1)), (this._infIcon.visible = !1), this._text.scale.set(1));
                        var n = 100 / this._text.width;
                        (n < 1 && this._text.scale.set(n), this._visual.setAnimationScale(0.05, 0.8), this._isInf && f.INF_ALERT.cur == this && f.clear(), (this._isInf = !1));
                    }
                    this._index = c;
                    var o = b == g - 1 && a.Lobby.MAX_PREV_CURRENT_LEVEl < g;
                    ((this._needShowChest = o),
                        (b + 1) % a.UserGameData.CHEST_LEVEL_INTERVAL == 0 && (b < a.Lobby.COUNT_LEVELS || 1 == a.UserGameData.USE_INFINITY) && (0 == this._starsContainer.visible || this._needShowChest) ? ((this._chestIcon.visible = !0), (this._chestIcon.x = this.x), (this._chestIcon.y = this.y - 110)) : ((this._chestIcon.visible = !1), (this._needShowChest = !1)),
                        this._needShowChest &&
                            (TweenLite.to(this._chestIcon, 0.4, { alpha: 0, y: this.y - 150, delay: 0.3 }),
                            TweenLite.to(this._chestIcon.scale, 0.4, {
                                x: 1.15,
                                y: 1.15,
                                delay: 0.3,
                                onComplete: function () {
                                    d._chestIcon.visible = !1;
                                },
                            })));
                }),
                (f.prototype.free = function () {}),
                (f.prototype.update = function (a, b) {
                    if (this._current) {
                        this._arg >= Math.PI && (this._arg = 0);
                        var c = 0.2 + 0.8 * Math.sin(this._arg / 2);
                        (f.CURRENT.scale.set(c), (f.CURRENT.alpha = 0.4 * Math.sin(this._arg)), (this._arg += 0.04 * a));
                    }
                    if (this._hardMark.visible) {
                        var c = 0.95 + 0.05 * Math.sin(b / 10);
                        this._hardMark.scale.set(c);
                    }
                    this._chestIcon.visible && !this._needShowChest && (this._chestIcon.y = this.y + (-110 + 5 * Math.sin(b / 25)));
                }),
                Object.defineProperty(f.prototype, 'index', {
                    get: function () {
                        return this._index;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (f.updateAlert = function (a, b) {
                    f.INF_ALERT && f.INF_ALERT.cur && ((f.INF_ALERT.rotation = 0.1 * Math.sin(0.05 * f.INF_ALERT.arg)), (f.INF_ALERT.arg += a), f.INF_ALERT.alpha < 1 && ((f.INF_ALERT.alpha += 0.1 * a), f.INF_ALERT.alpha > 1 && (f.INF_ALERT.alpha = 1)));
                }),
                (f.clear = function () {
                    (f.INF_ALERT && f.INF_ALERT.parent && (f.INF_ALERT.parent.removeChild(f.INF_ALERT), (f.INF_ALERT.cur = null)), f.CURRENT && f.CURRENT.parent && f.CURRENT.parent.removeChild(f.CURRENT));
                }),
                f
            );
        })(b);
    a.LevelButton = d;
    var e = (function (a) {
        function b(b) {
            var d = a.call(this) || this;
            d._ind = b;
            var e = 0,
                f = 0,
                g = 0;
            switch (b) {
                case 0:
                    ((e = -50), (f = -50), (g = -30));
                    break;
                case 1:
                    ((e = 0), (f = -70), (g = 0));
                    break;
                case 2:
                    ((e = 50), (f = -50), (g = 30));
            }
            return ((d._visual = new c(e, f, 'lobby', 'LevelButtonStar0001')), (d._visual.angle = g), d.addChild(d._visual), d);
        }
        return (
            __extends(b, a),
            (b.prototype.set = function (a, b) {
                var c = this;
                if (a && b) {
                    var d = 0.2 + 0.05 * this._ind,
                        e = 0.15;
                    (TweenLite.to(this._visual.scale, e, {
                        x: 1.2,
                        y: 1.2,
                        ease: Circ.easeOut,
                        delay: d,
                        overwrite: 'auto',
                        onComplete: function () {
                            c._visual.frameName = 'LevelButtonStar0002';
                        },
                    }),
                        TweenLite.to(this._visual.scale, 0.5, { x: 1, y: 1, ease: Back.easeOut, delay: e + d }));
                } else this._visual.frameName = a ? 'LevelButtonStar0002' : 'LevelButtonStar0001';
            }),
            b
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                ((d._bg = new c(0, 0, 'lobby', 'selectIconBg')), (d._avatarBG = new c(0, 0, 'lobby', 'noAvatar76')));
                var e = new PIXI.Graphics();
                return (e.beginFill(16711680), e.drawRoundedRect(0, 0, 76, 76, 10), e.endFill(), (e.x = -38), (e.y = -38), (d._avatarBG.mask = e), a.MI.get().social.userPhotoUrl && ((d._avatar = PIXI.Sprite.from(a.MI.get().social.userPhotoUrl)), d._avatar.anchor.set(0.5), (d._avatar.width = 76), (d._avatar.height = 76), (d._avatar.mask = e)), d.addChild(d._bg), d.addChild(d._avatarBG), d._avatar && d.addChild(d._avatar), d.addChild(e), d);
            }
            return (__extends(d, b), d);
        })(b);
    a.MiniAvatarBlock = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function c() {
                var c = b.call(this) || this;
                ((c.y = -100), (c._bg = new PIXI.NineSlicePlane(Stage.getImage('ui', 'boostCountPanelBg'), 40, 40, 40, 92)), (c._bg.width = 710), (c._bg.height = 123), (c._bg.x -= 0.5 * c._bg.width), (c._bg.y -= 0.5 * c._bg.height), (c._icons = []));
                for (var d = [a.USER_PROPERTY.LIGHTNING_COUNT, a.USER_PROPERTY.RAINBOW_COUNT, a.USER_PROPERTY.FIREBALL_COUNT, a.USER_PROPERTY.BOMB_COUNT, a.USER_PROPERTY.PLUSFIVE_COUNT, a.USER_PROPERTY.THREENEXT_COUNT, a.USER_PROPERTY.GUIDELINE_COUNT], f = 0; f < 7; f++) {
                    var g = new e(f + 2, d[f]);
                    ((g.x = 83 * f - 0.5 * c._bg.width + 100), (g.y = -18), c._icons.push(g));
                }
                c.addChild(c._bg);
                for (var f = 0; f < 7; f++) c.addChild(c._icons[f]);
                return c;
            }
            return (
                __extends(c, b),
                (c.prototype.init = function () {
                    this.hide(!0);
                    for (var a = 0; a < 7; a++) this._icons[a].getValue();
                }),
                (c.prototype.show = function () {
                    var b = this;
                    (a.MI.get().addChild(this),
                        (this.x = 0.5 * Stage.screenWidth),
                        TweenLite.to(this, 0.4, {
                            y: 100,
                            ease: Back.easeOut,
                            onComplete: function () {
                                (b.check(), b.hide(!1));
                            },
                        }));
                }),
                (c.prototype.hide = function (a, b) {
                    var c = this;
                    (void 0 === b && (b = 1),
                        a
                            ? ((this.y = -100), this.reset(), this.free())
                            : TweenLite.to(this, 0.3, {
                                  y: -100,
                                  ease: Back.easeIn,
                                  delay: b,
                                  onComplete: function () {
                                      (c.reset(), c.free());
                                  },
                              }));
                }),
                (c.prototype.free = function () {
                    this.parent && this.parent.removeChild(this);
                }),
                (c.prototype.check = function () {
                    for (var a = 0; a < 7; a++) this._icons[a].check();
                }),
                (c.prototype.reset = function () {
                    for (var a = 0; a < 7; a++) this._icons[a].reset();
                }),
                (c.get = function () {
                    return (this._instance || (this._instance = new c()), this._instance);
                }),
                c
            );
        })(b);
    a.BoostCounter = d;
    var e = (function (b) {
        function d(a, d) {
            var e = b.call(this) || this;
            return ((e._id = d), (e._idIcon = a), (e._visual = new c(0, 0, 'ui', 'shop/icons/lbLotIcon' + c.zeroPad(a, 4))), e._visual.scale.set(0.5), (e._text = new PIXI.Text('0', { fontFamily: 'Pony', fontSize: 30, fill: 16777215, align: 'center' })), e._text.anchor.set(0.5), (e._text.y = 45), e.addChild(e._visual), e.addChild(e._text), e.getValue(), e.reset(), e);
        }
        return (
            __extends(d, b),
            (d.prototype.reset = function () {
                ((this._text.alpha = 0.5), this.isOpened ? (this._visual.frameName = 'shop/icons/lbLotIcon' + c.zeroPad(this._idIcon, 4)) : (this._visual.frameName = 'shop/icons/lvlBoostLock'));
            }),
            (d.prototype.getValue = function () {
                var b = a.UserGameData.getProperty(this._id);
                ((this._curValue = b), (this.value = b));
            }),
            (d.prototype.check = function () {
                var b = this,
                    c = a.UserGameData.getProperty(this._id);
                c != this._curValue &&
                    this.isOpened &&
                    ((this._curValue = c),
                    (this.value = c),
                    TweenLite.to(this.scale, 0.05, {
                        x: 1.15,
                        y: 1.15,
                        onComplete: function () {
                            ((b._text.alpha = 1), TweenLite.to(b.scale, 0.2, { x: 1, y: 1, ease: Sine.easeOut, delay: 0.1 }));
                        },
                    }));
            }),
            Object.defineProperty(d.prototype, 'value', {
                set: function (b) {
                    this._text.text = this.isOpened ? a.Utils.formatNumber(b) : '?';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isOpened', {
                get: function () {
                    switch (this._id) {
                        case a.USER_PROPERTY.LIGHTNING_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_LIGHTNING;
                        case a.USER_PROPERTY.RAINBOW_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_RAINBOW;
                        case a.USER_PROPERTY.FIREBALL_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_FIREBALL;
                        case a.USER_PROPERTY.BOMB_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_BOMB;
                        case a.USER_PROPERTY.THREENEXT_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_THREENEXT;
                        case a.USER_PROPERTY.GUIDELINE_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE;
                        case a.USER_PROPERTY.PLUSFIVE_COUNT:
                            return a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 >= a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE;
                    }
                },
                enumerable: !1,
                configurable: !0,
            }),
            d
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                for (var a = [], c = 0; c < arguments.length; c++) a[c] = arguments[c];
                var d = b.call(this) || this;
                if (((d._mainText = null), (d._varText = null), (d._args = a), (d._itemCounter = 0), (d._inited = !1), d.create(), d.addBackground(), d.addActionButton('Test'), d.setItems(), d._items)) for (var e = 0; e < d._items.length; e++) d.addItem(d._items[e][0], d._items[e][1]);
                return d;
            }
            return (
                __extends(d, b),
                (d.prototype.show = function () {}),
                (d.prototype.init = function () {
                    this._inited || ((this._inited = !0), this.addTextToActionButton());
                }),
                (d.prototype.onClickButton = function (b, c, d) {
                    var e = this;
                    if (!this.blockBtn)
                        return (
                            (this._actionBtn.enabled = !1),
                            this._id == a.SHOP_ITEM_ID.NONE
                                ? (a.LoaderScreen.show(!0),
                                  void a.MI.get()
                                      .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.SHOP)
                                      .then(function () {
                                          (a.LoaderScreen.hide(), e.getAdsPrize(), e.success(), c && c.call(d), (e._actionBtn.enabled = !0));
                                      })
                                      .catch(function (b) {
                                          (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, b), e.error(), (e._actionBtn.enabled = !0));
                                      }))
                                : void a.EconomyOptions.buy(this._id, this.price, a.STATS_IAP_PLACEMENT.SHOP)
                                      .then(function () {
                                          (a.Shop.buyLots(e._id, e._items), e.success(), c && c.call(d, e), (e._actionBtn.enabled = !0));
                                      })
                                      .catch(function () {
                                          (a.EconomyOptions.showFailBuyMessage(), e.error(), (e._actionBtn.enabled = !0));
                                      })
                        );
                }),
                (d.prototype.getAdsPrize = function () {
                    a.MI.get().popupManager.show(a.AllPopups.GET_REWARD_COIN);
                }),
                (d.prototype.success = function () {
                    a.Shop.instance.emit(a.Shop.EVENT_SUCCESS_BUY, this._id);
                }),
                (d.prototype.error = function () {
                    a.Shop.instance.emit(a.Shop.EVENT_ERROR_BUY, this._id);
                }),
                (d.prototype.create = function () {}),
                (d.prototype.addBackground = function (a, b) {
                    switch ((void 0 === a && (a = e.DEBUG), void 0 === b && (b = ''), (this._type = a), a)) {
                        case e.DEBUG:
                            var d = this.slotWidth,
                                f = 340,
                                g = new PIXI.Graphics();
                            (g.beginFill(16711680, 0.5), g.drawRect(0.5 * -d, 0.5 * -f, d, f), g.endFill(), this.addChild(g));
                            break;
                        case e.DEFAULT:
                        case e.GOLD:
                        case e.OFFER_NOVICE:
                            var h = void 0;
                            switch (a) {
                                case e.DEFAULT:
                                    h = 1;
                                    break;
                                case e.GOLD:
                                    h = 2;
                                    break;
                                case e.OFFER_NOVICE:
                                    h = 5;
                            }
                            this._bg = new PIXI.NineSlicePlane(Stage.getImage('lobby', 'shop/lbLotBg-' + h), 50, 100, 90, 50);
                            break;
                        case e.MONEY:
                            this._bg = new PIXI.NineSlicePlane(Stage.getImage('lobby', 'shop/lbLotBg-3'), 400, 72, 50, 72);
                    }
                    this._bg && ((this._bg.width = this.slotWidth), (this._bg.height = this.realHeight), (this._bg.x = 0.5 * -this._bg.width), (this._bg.y = 0.5 * -this._bg.height), this.addChild(this._bg));
                    var i = null;
                    if ((b && '' != b && this._type != e.MONEY && ((i = new PIXI.Text(b, { fontFamily: 'Pony', fontSize: 36, fill: this._type == e.GOLD ? 8010253 : 16777215, align: 'left', dropShadow: !0, dropShadowAlpha: 0.9, dropShadowAngle: 1.6, dropShadowBlur: 4, dropShadowColor: a == e.GOLD ? 16777215 : 2236962, dropShadowDistance: 8 })), i.anchor.set(0, 0), (i.x = 0.5 * -this.slotWidth + 40), (i.y = 0.5 * -this.realHeight + 12), (i.alpha = 0.9), this.addChild(i)), this._type == e.MONEY)) {
                        var j = new c(0.5 * -this.slotWidth + 90, 0, 'ui', 'shop/icons/lbLotIcon0001'),
                            k = new c(0.5 * -this.slotWidth + 90 + 0.2 * j.width, 0, 'ui', 'shop/icons/lbLotIcon0001'),
                            l = new c(0.5 * -this.slotWidth + 90 + 0.4 * j.width, 0, 'ui', 'shop/icons/lbLotIcon0001');
                        (this.addChild(j), this.addChild(k), this.addChild(l), (i = new PIXI.Text(b, { fontFamily: 'Pony', fontSize: 45, fill: 1595076, align: 'left' })), i.anchor.set(0, 0.5), (i.x = l.x + 70), this.addChild(i));
                    }
                }),
                (d.prototype.addActionButton = function (b, c, d) {
                    (void 0 === c && (c = !0), void 0 === d && (d = 0), c && ((this._actionBtn = new a.PXButton('lobby', ['shop/lbGreenMiniBtn'])), this._actionBtn.addOnUp(this.onClickButton, this), (this._actionBtn.x = 0.5 * this.slotWidth - 0.5 * this._actionBtn.width - 20), (this._actionBtn.y = d), (this._caption = b), this.addChild(this._actionBtn)));
                }),
                (d.prototype.setButtonCaption = function (a) {
                    a != this._caption && ((this._caption = a), (this._mainText.text = this._caption));
                }),
                (d.prototype.setGrayBtn = function (a) {
                    a ? this._actionBtn.replaceFrames(['shop/grayMiniBtn']) : this._actionBtn.replaceFrames(['shop/lbGreenMiniBtn']);
                }),
                (d.prototype.updatePrice = function (b) {
                    (b && ((this._caption = String(this.price >> 0)), 'separated' != a.MI.get().social.currencyStyle.join ? (this._caption += ' ' + a.Utils.declension(this.price, a.MI.get().social.currency)) : ((this._varText.text = a.Utils.declension(this.price, a.MI.get().social.currency)), (this._mainText.y = 0.5 * -a.MI.get().social.currencyStyle.fontSizePrice + 5), (this._varText.y = 0.5 * a.MI.get().social.currencyStyle.fontSizeName + 5))), (this._mainText.text = this._caption));
                }),
                (d.prototype.addTextToActionButton = function () {
                    if (this._actionBtn) {
                        ((this._mainText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: a.Utils.int(a.MI.get().social.currencyStyle.fontSizePrice), fill: 16777215, align: 'center' })), this._mainText.anchor.set(0.5), (this._mainText.alpha = 0.9), (this._mainText.y = 1), this._caption || 'separated' != a.MI.get().social.currencyStyle.join || ((this._varText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: a.Utils.int(a.MI.get().social.currencyStyle.fontSizeName), fill: 16777215, align: 'center' })), this._varText.anchor.set(0.5), (this._varText.alpha = 0.75)), this.updatePrice(!this._caption), this._actionBtn.addChild(this._mainText), this._varText && this._actionBtn.addChild(this._varText));
                        var b = 200;
                        this._mainText.scale.set(1);
                        var c = b / this._mainText.width;
                        (this._varText && (this._varText.scale.set(1), (c = Math.min(c, b / this._varText.width))), c < 1 && (this._mainText.scale.set(c), this._varText && this._varText.scale.set(c)));
                    }
                }),
                (d.prototype.setItems = function (a) {
                    (void 0 === a && (a = null), (this._items = a));
                }),
                (d.prototype.addItem = function (b, c) {
                    var d = 'x' + c;
                    b == f.ENDLESS_LIVES && (d = c <= 120 ? c + ' ' + a.StringManager.get('TXT_MINUTE') : Math.floor(c / 60) + ' ' + a.StringManager.get('TXT_HOUR'));
                    var e = new g(b + 1, d),
                        h = this._items.length,
                        i = 30,
                        j = 140,
                        k = 0.5 * -this.slotWidth + 0.5 * j + i,
                        l = 0.5 * this.slotWidth - 0.5 * j - (this._actionBtn ? this._actionBtn.width + 20 : 0) - i,
                        m = Math.min(Math.max(j, (l - k) / h), 170);
                    ((e.x = k + this._itemCounter * m), this._itemCounter++, this.addChild(e));
                }),
                Object.defineProperty(d.prototype, 'price', {
                    get: function () {
                        return a.EconomyOptions.SHOP_ITEM_PRICE[this._id];
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'realHeight', {
                    get: function () {
                        switch (this._type) {
                            case e.MONEY:
                                return 145;
                            default:
                                return 340;
                        }
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'slotWidth', {
                    get: function () {
                        return 1004;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'actionButton', {
                    get: function () {
                        return this._actionBtn;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'parameters', {
                    get: function () {
                        return this._args;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
    a.ShopLot = d;
    var e;
    !(function (a) {
        ((a[(a.NONE = 0)] = 'NONE'), (a[(a.DEBUG = 1)] = 'DEBUG'), (a[(a.DEFAULT = 2)] = 'DEFAULT'), (a[(a.GOLD = 3)] = 'GOLD'), (a[(a.MONEY = 4)] = 'MONEY'), (a[(a.OFFER_NOVICE = 5)] = 'OFFER_NOVICE'));
    })((e = a.ShopLotBGType || (a.ShopLotBGType = {})));
    var f;
    !(function (a) {
        ((a[(a.MONEY = 0)] = 'MONEY'), (a[(a.LIGHTNING = 1)] = 'LIGHTNING'), (a[(a.RAINBOW = 2)] = 'RAINBOW'), (a[(a.FIREBALL = 3)] = 'FIREBALL'), (a[(a.BOMB = 4)] = 'BOMB'), (a[(a.ADD_5_BUBBLES = 5)] = 'ADD_5_BUBBLES'), (a[(a.MAX_NEXT_BUBBLES = 6)] = 'MAX_NEXT_BUBBLES'), (a[(a.GUIDELINE_NO_LIMIT = 7)] = 'GUIDELINE_NO_LIMIT'), (a[(a.ENDLESS_LIVES = 8)] = 'ENDLESS_LIVES'), (a[(a.LIVE = 9)] = 'LIVE'));
    })((f = a.ShopLotItemType || (a.ShopLotItemType = {})));
    var g = (function (a) {
        function b(b, d) {
            var e = a.call(this) || this;
            return ((e._visual = new c(0, 0, 'ui', 'shop/icons/lbLotIcon' + c.zeroPad(b, 4))), (e._text = new PIXI.Text(d, { fontFamily: 'Pony', fontSize: 41, fill: 1595076, align: 'center' })), e._text.anchor.set(0.5), (e._text.y = 90), e.addChild(e._visual), e.addChild(e._text), e);
        }
        return (__extends(b, a), b);
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d() {
                var b = c.call(this) || this;
                return ((b._arg = 0), (b._id = a.SHOP_ITEM_ID.NONE), (b._lastClickTime = null), b);
            }
            return (
                __extends(d, c),
                (d.prototype.success = function () {
                    (c.prototype.success.call(this), (this._lastClickTime = a.MI.get().time));
                }),
                (d.prototype.update = function (b) {
                    if (((this.actionButton.rotation = 0.1 * Math.sin((this._arg += 0.1 * b))), null != this._lastClickTime)) {
                        var c = a.MI.get().time,
                            d = c - this._lastClickTime;
                        d > 6e4 * a.EconomyOptions.ADS_REWARD_DELAY && this.blockBtn ? ((this._lastClickTime = null), (this.blockBtn = !1), this.setButtonCaption(a.StringManager.get('SHOP_LOT_ADS_BUTTON')), this.setGrayBtn(!1)) : (this.blockBtn || ((this.blockBtn = !0), this.setGrayBtn(!0)), this.setButtonCaption(String(a.Utils.formatTime(6e4 * a.EconomyOptions.ADS_REWARD_DELAY - d))));
                    }
                }),
                (d.prototype.addBackground = function () {
                    var c = a.Locales.get('lobby', 'shop/lbLotBg-4');
                    ((this._visual = new b(0, 0, c[0], c[1])), this.addChild(this._visual));
                }),
                (d.prototype.addActionButton = function () {
                    c.prototype.addActionButton.call(this, a.StringManager.get('SHOP_LOT_ADS_BUTTON'));
                }),
                Object.defineProperty(d.prototype, 'realHeight', {
                    get: function () {
                        return 190;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(a.ShopLot);
    a.SLAds = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._id = a.SHOP_ITEM_ID.ASSORTED), c);
        }
        return (
            __extends(c, b),
            (c.prototype.addBackground = function () {
                b.prototype.addBackground.call(this, a.ShopLotBGType.DEFAULT, a.StringManager.get('SHOP_LOT_ASSORTED'));
            }),
            (c.prototype.addActionButton = function () {
                b.prototype.addActionButton.call(this, null, !0, 50);
            }),
            (c.prototype.setItems = function () {
                b.prototype.setItems.call(this, [
                    [a.ShopLotItemType.MONEY, 600],
                    [a.ShopLotItemType.LIGHTNING, 4],
                    [a.ShopLotItemType.RAINBOW, 4],
                    [a.ShopLotItemType.FIREBALL, 4],
                    [a.ShopLotItemType.BOMB, 4],
                ]);
            }),
            c
        );
    })(a.ShopLot);
    a.SLAssorted = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d() {
                var b = c.call(this) || this;
                return ((b._id = a.SHOP_ITEM_ID.LEGENDARY), b);
            }
            return (
                __extends(d, c),
                (d.prototype.addBackground = function () {
                    c.prototype.addBackground.call(this, a.ShopLotBGType.GOLD, a.StringManager.get('SHOP_LOT_LEGENDARY'));
                }),
                (d.prototype.addActionButton = function () {
                    c.prototype.addActionButton.call(this, null, !0, 50);
                }),
                (d.prototype.setItems = function () {
                    var d = 120,
                        e = 10,
                        f = 7;
                    (c.prototype.setItems.call(this, [
                        [a.ShopLotItemType.ENDLESS_LIVES, d],
                        [a.ShopLotItemType.LIGHTNING, e],
                        [a.ShopLotItemType.RAINBOW, e],
                        [a.ShopLotItemType.FIREBALL, e],
                        [a.ShopLotItemType.BOMB, e],
                        [a.ShopLotItemType.GUIDELINE_NO_LIMIT, f],
                        [a.ShopLotItemType.MAX_NEXT_BUBBLES, f],
                        [a.ShopLotItemType.ADD_5_BUBBLES, f],
                    ]),
                        c.prototype.addItem.call(this, a.ShopLotItemType.ENDLESS_LIVES, d));
                    for (var g = 2; g <= 5; g++) {
                        var h = new b(-330 + 40 * g, 0, 'ui', 'shop/icons/lbLotIcon' + b.zeroPad(g, 4));
                        this.addChild(h);
                    }
                    for (var g = 6; g <= 8; g++) {
                        var h = new b(-250 + 45 * g, 0, 'ui', 'shop/icons/lbLotIcon' + b.zeroPad(g, 4));
                        this.addChild(h);
                    }
                    var i = new PIXI.Text('x' + e, { fontFamily: 'Pony', fontSize: 41, fill: 1595076, align: 'center' });
                    (i.anchor.set(0.5), (i.y = 90), (i.x = -180), this.addChild(i), (i = new PIXI.Text('x' + f, { fontFamily: 'Pony', fontSize: 41, fill: 1595076, align: 'center' })), i.anchor.set(0.5), (i.y = 90), (i.x = 75), this.addChild(i));
                }),
                (d.prototype.addItem = function (a, b) {}),
                d
            );
        })(a.ShopLot);
    a.SLLegendary = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            return (null !== b && b.apply(this, arguments)) || this;
        }
        return (
            __extends(c, b),
            (c.prototype.create = function () {
                switch (this.parameters[0]) {
                    case 100:
                        this._id = a.SHOP_ITEM_ID.MONEY_100;
                        break;
                    case 600:
                        this._id = a.SHOP_ITEM_ID.MONEY_600;
                        break;
                    case 1300:
                        this._id = a.SHOP_ITEM_ID.MONEY_1300;
                        break;
                    case 3e3:
                        this._id = a.SHOP_ITEM_ID.MONEY_3000;
                        break;
                    case 1e4:
                        this._id = a.SHOP_ITEM_ID.MONEY_10000;
                }
            }),
            (c.prototype.setItems = function () {
                b.prototype.setItems.call(this, [[a.ShopLotItemType.MONEY, this.parameters[0]]]);
            }),
            (c.prototype.addBackground = function () {
                b.prototype.addBackground.call(this, a.ShopLotBGType.MONEY, 'x ' + a.Utils.formatNumber(this.parameters[0]));
            }),
            (c.prototype.addActionButton = function () {
                b.prototype.addActionButton.call(this, null, !0);
            }),
            (c.prototype.addItem = function (a, b) {}),
            c
        );
    })(a.ShopLot);
    a.SLMoney = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c(c, d) {
            var e = b.call(this) || this,
                f = a.Locales.get('lobby', 'shop/lbShowMore');
            return ((e._btn = new a.PXButton(f[0], [f[1]])), e._btn.addOnUp(c, d), e.addChild(e._btn), e);
        }
        return (
            __extends(c, b),
            (c.prototype.addBackground = function () {}),
            (c.prototype.addActionButton = function () {}),
            Object.defineProperty(c.prototype, 'realHeight', {
                get: function () {
                    return 74;
                },
                enumerable: !1,
                configurable: !0,
            }),
            c
        );
    })(a.ShopLot);
    a.SLMoreButton = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(d, e) {
                var f = c.call(this) || this;
                ((f._id = a.UserGameData.needSaleForNovaceSet() ? a.SHOP_ITEM_ID.NOVICE_SPEC_SALE : a.SHOP_ITEM_ID.NOVICE_SPEC), (f._clbk = d), (f._context = e), (f._offerMark = new b(0.5 * f.slotWidth - 280, 0.5 * -f.realHeight + 40, 'lobby', 'shop/saleMark')), (f._offerMark.visible = !1));
                var g = a.Locales.get('lobby', 'shop/lbProfit');
                return ((f._bestChoice = new b(0.5 * f.slotWidth + 6, 0.5 * -f.realHeight, g[0], g[1])), f._bestChoice.anchor.set(1, 0), f.addChild(f._bestChoice), f.addChild(f._offerMark), f);
            }
            return (
                __extends(d, c),
                (d.prototype.init = function () {
                    ((this._id = a.UserGameData.needSaleForNovaceSet() ? a.SHOP_ITEM_ID.NOVICE_SPEC_SALE : a.SHOP_ITEM_ID.NOVICE_SPEC), c.prototype.init.call(this));
                }),
                (d.prototype.show = function () {
                    (this.isOffer ? ((this._bg.texture = Stage.getImage('lobby', 'shop/lbLotBg-5')), (this._offerMark.visible = !0), (this._offerMark.alpha = 0), this._offerMark.scale.set(2), TweenLite.to(this._offerMark, 0.2, { alpha: 1, delay: 0.3 }), TweenLite.to(this._offerMark.scale, 0.5, { x: 1, y: 1, ease: Back.easeInOut, delay: 0.3 })) : ((this._bg.texture = Stage.getImage('lobby', 'shop/lbLotBg-1')), (this._offerMark.visible = !1)), this.updatePrice(!0));
                }),
                (d.prototype.onClickButton = function (a, b, d) {
                    c.prototype.onClickButton.call(this, null, this._clbk, this._context);
                }),
                (d.prototype.addBackground = function () {
                    c.prototype.addBackground.call(this, this.isOffer ? a.ShopLotBGType.OFFER_NOVICE : a.ShopLotBGType.DEFAULT, a.StringManager.get('SHOP_LOT_NOVICE'));
                }),
                (d.prototype.addActionButton = function () {
                    c.prototype.addActionButton.call(this, null, !0, 50);
                }),
                (d.prototype.setItems = function () {
                    c.prototype.setItems.call(this, d.NOVICE_ITEMS);
                }),
                (d.prototype.success = function () {
                    (c.prototype.success.call(this), this.isOffer && a.Lobby.instance.popitManager.hidePopit('OfferNovicePopit'));
                }),
                Object.defineProperty(d.prototype, 'isOffer', {
                    get: function () {
                        return this._id == a.SHOP_ITEM_ID.NOVICE_SPEC_SALE;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.NOVICE_ITEMS = [
                    [a.ShopLotItemType.MONEY, 400],
                    [a.ShopLotItemType.ENDLESS_LIVES, 1440],
                    [a.ShopLotItemType.BOMB, 5],
                    [a.ShopLotItemType.FIREBALL, 5],
                    [a.ShopLotItemType.GUIDELINE_NO_LIMIT, 5],
                ]),
                d
            );
        })(a.ShopLot);
    a.SLNovice = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._id = a.SHOP_ITEM_ID.STRATEGIST), c);
        }
        return (
            __extends(c, b),
            (c.prototype.addBackground = function () {
                b.prototype.addBackground.call(this, a.ShopLotBGType.DEFAULT, a.StringManager.get('SHOP_LOT_STRATEGIST'));
            }),
            (c.prototype.addActionButton = function () {
                b.prototype.addActionButton.call(this, null, !0, 50);
            }),
            (c.prototype.setItems = function () {
                b.prototype.setItems.call(this, [
                    [a.ShopLotItemType.ENDLESS_LIVES, 60],
                    [a.ShopLotItemType.GUIDELINE_NO_LIMIT, 3],
                    [a.ShopLotItemType.MAX_NEXT_BUBBLES, 3],
                    [a.ShopLotItemType.ADD_5_BUBBLES, 3],
                ]);
            }),
            c
        );
    })(a.ShopLot);
    a.SLStrategist = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (a) {
            function c(c) {
                var d = a.call(this, 0, 0) || this;
                return ((d.MAX_OFFSET = 100), (d._allHg = 0), (d._hgs = []), (d._containerHeight = c), (d._velocity = 0), (d.updateItems = !1), (d._container = new b(0, 0)), d.addChild(d._container), d);
            }
            return (
                __extends(c, a),
                (c.prototype.add = function (a, b, c, d) {
                    ((d |= 0), (this._margin = d), this._container.addChild(a), (a.y = this._allHg + (c ? c : 0) + (this._hgs.length ? d : 0)), (this._allHg += b), this._hgs.length && ((this._allHg += d), (b += 0.5 * d), (this._hgs[this._hgs.length - 1] += 0.5 * d)), (a['-springlist-index'] = this._hgs.length), this._hgs.push(b));
                }),
                (c.prototype.remove = function (a, b) {
                    if ((void 0 === b && (b = 0), !(a < 0 || a >= this._hgs.length))) {
                        var c = this._hgs[a];
                        (this._hgs.splice(a, 1), (this._allHg -= c), a == this._hgs.length && this._hgs.length >= 1 && ((this._hgs[this._hgs.length - 1] -= 0.5 * this._margin), (this._allHg -= 0.5 * this._margin)));
                        for (var d, e = this._container.children.length - 1; e >= 0; e--)
                            if (this._container.children[e]['-springlist-index'] == a) {
                                d = this._container.removeChildAt(e);
                                break;
                            }
                        for (var e = 0; e < this._container.children.length; e++) this._container.children[e]['-springlist-index'] > a && (this._container.children[e]['-springlist-index']--, 0 == b ? (this._container.children[e].y -= c) : TweenLite.to(this._container.children[e], b, { y: this._container.children[e].y - c }));
                        return d;
                    }
                }),
                (c.prototype.upDraw = function (a) {
                    for (var b = this._container.children.length - 1; b >= 0; b--)
                        if (this._container.children[b]['-springlist-index'] == a) {
                            this._container.swapChildren(this._container.children[b], this._container.children[this._container.children.length - 1]);
                            break;
                        }
                }),
                (c.prototype.setDebug = function () {
                    var a = new PIXI.Graphics();
                    (a.beginFill(65280, 0.3), a.drawRect(0, 0, this._allHg, 40), a.drawCircle(0, 0, 20));
                    for (var b = 5, c = 0, d = 0; d < this._hgs.length; d++) (a.drawRect(0, c + b, 40, this._hgs[d] - 2 * b), (c += this._hgs[d]));
                    (a.endFill(), this._container.addChild(a));
                }),
                (c.prototype.getIndex = function (a) {
                    if (((a -= this._container.y), a < 0 || a > this._allHg)) return -1;
                    var b = this._hgs.length;
                    if (b < 1) return -1;
                    for (var c = 0, d = 0; d < b; d++) if (((c += this._hgs[d]), c > a)) return d;
                    return b - 1;
                }),
                (c.prototype.getIndexEase = function (a) {
                    return ((a -= this._container.y), a < 0 || a > this._allHg ? -1 : Math.floor((a / this.allHeight) * this.count));
                }),
                (c.prototype.find = function (a) {
                    if (a < 0) return null;
                    for (var b = 0; b < this._container.children.length; b++) if (this._container.children[b]['-springlist-index'] == a) return this._container.children[b];
                    return null;
                }),
                (c.prototype.down = function (a) {
                    ((this._my = a), (this._velocity = 0), (this._oldy = this._container.y));
                }),
                (c.prototype.up = function () {
                    this._my = null;
                }),
                (c.prototype.move = function (a) {
                    if (null != this._my) {
                        var b = (a - this._my) * this.coef();
                        ((this._container.y += b), (this._my = a), (this._velocity = 0.5 * b));
                    }
                }),
                (c.prototype.moveWheele = function (a) {
                    ((a *= this.coef()), (this._container.y += a), (this._velocity = 0.5 * a));
                }),
                (c.prototype.coef = function () {
                    var a = 0,
                        b = this.borderHeight();
                    return (this._container.y < -b ? (a = Math.min(1, Math.abs(b + this._container.y) / this.MAX_OFFSET)) : this._container.y > 0 && (a = Math.min(1, this._container.y / this.MAX_OFFSET)), 1 - a);
                }),
                (c.prototype.borderHeight = function () {
                    return Math.max(this._allHg - this._containerHeight, 0);
                }),
                (c.prototype.update = function (a) {
                    if ((null == this._my && ((this._container.y += this._velocity * a), (this._velocity *= 0.93), this._container.y < -this.borderHeight() ? ((this._container.y += 0.2 * (-this.borderHeight() - this._container.y) * a), (this._velocity = 0)) : this._container.y > 0 && ((this._container.y += 0.2 * (0 - this._container.y) * a), (this._velocity = 0))), this.updateItems)) for (var b = 0; b < this._container.children.length; b++) this._container.children[b].update && this._container.children[b].update(a);
                }),
                (c.prototype.resetPosition = function () {
                    ((this._container.y = 0), (this._velocity = 0));
                }),
                (c.prototype.addY = function (a) {
                    this._container.y += a;
                }),
                (c.prototype.getBeforeHeight = function (a, b) {
                    void 0 === b && (b = 0);
                    for (var c = 0, d = 0; d < a; d++) c += this._hgs[d];
                    return (b && this._hgs[a] < b && (c += 1.1 * (this._hgs[a] - b)), c);
                }),
                (c.prototype.getAfterHeight = function (a, b) {
                    void 0 === b && (b = 0);
                    for (var c = 0, d = 0; d <= a; d++) c += this._hgs[d];
                    return (b && this._hgs[a] < b && (c -= 1.1 * (this._hgs[a] - b)), c);
                }),
                (c.prototype.getPartHeight = function (a) {
                    return this._hgs[a];
                }),
                Object.defineProperty(c.prototype, 'allHeight', {
                    get: function () {
                        return this._allHg;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'isMoving', {
                    get: function () {
                        return 0 != this._velocity || Math.abs(this._oldy - this._container.y) > 4;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'containerY', {
                    get: function () {
                        return this._container.y;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'count', {
                    get: function () {
                        return this._hgs.length;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (c.prototype.getChild = function (a) {
                    return this._container.children[a];
                }),
                c
            );
        })(b);
    a.SpringListY = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var a = b.call(this) || this;
                ((a._current = 0), (a._rings = []));
                for (var d = 30, e = 10, f = (Math.PI / e) * 2, g = 0, h = 0; h < e; h++) {
                    var i = new c(Math.cos(g) * d, Math.sin(g) * d, 'ui0', 'miniloader');
                    (i.scale.set(0.6), (i.alpha = 0), (g += f), a.addChild(i), a._rings.push(i));
                }
                return a;
            }
            return (
                __extends(d, b),
                (d.prototype.update = function (b) {
                    this._current += 0.1 * b;
                    for (var c = a.Utils.int(this._current) % 10, d = 0; d < this._rings.length; d++) {
                        var e = c - d,
                            f = 0;
                        e >= 0 ? ((f = Math.max(0, 1 - e / 10)), (this._rings[d].alpha = f), this._rings[d].scale.set(0.7 * f)) : ((this._rings[d].alpha *= 0.96), this._rings[d].scale.set(0.96 * this._rings[d].scale.x));
                    }
                }),
                d
            );
        })(b);
    a.MiniLoading = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (b) {
            function c(c) {
                var d = b.call(this) || this;
                return (a.LoadManager.ATLAS_UI ? (d._visual = new KY.Sprite(0, 0, 'ui', 'modifIcon0001')) : (d._visual = new KY.Sprite(0, 0, 'ui0', 'modifIcon0001')), (d.isReadyToShow = !0), (d._gameStage = c), (d._text = new PIXI.Text('+0', { fontFamily: 'Pony', fontSize: 58, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#98241c', strokeThickness: 8, padding: 6 })), d._text.anchor.set(0.5), (d._text.visible = !1), d.addChild(d._visual), d.addChild(d._text), d);
            }
            return (
                __extends(c, b),
                (c.prototype.show = function (b) {
                    var c = this;
                    a.SoundsManager.demoBusterShow();
                    var d;
                    ((this._value = 0), (this._text.visible = !1), 'object' == typeof b ? ((d = b.type), (this._value = b.value), (this._text.visible = !0), (this._text.text = this._value > 0 ? '+' + this._value : '' + this._value)) : (d = b), (this.isReadyToShow = !1), (this.type = d), (this._visual.frameName = 'modifIcon' + KY.Sprite.zeroPad(d + 1)), (this.y = -250), this.scale.set(0.2), (this.alpha = 0));
                    var e = 0.7;
                    (TweenLite.to(this, 0.2, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(this.scale, 0.3, { x: 1, y: 1, ease: Back.easeOut, overwrite: 'auto' }),
                        TweenLite.to(this, 0.3, { y: 0, delay: e, ease: Back.easeIn }),
                        TweenLite.to(this, 0.2, { alpha: 0, delay: e + 0.3 }),
                        TweenLite.to(this.scale, 0.3, {
                            x: 0.5,
                            y: 0.5,
                            delay: e,
                            onComplete: function () {
                                c.hide();
                            },
                        }));
                }),
                (c.prototype.hide = function () {
                    var b = this;
                    (a.SoundsManager.demoBusterApply(),
                        setTimeout(function () {
                            b.isReadyToShow = !0;
                        }, 100),
                        this.parent.removeChild(this),
                        c.applyModification(this._gameStage, this.type, this._value));
                }),
                (c.applyModification = function (a, b, c) {
                    switch (b) {
                        case d.PLUS_N_BUBLES:
                            a.M_plusNBubbles(c);
                            break;
                        case d.PLUS_5_BUBLES:
                            a.M_plusNBubbles(5);
                            break;
                        case d.THREE_NEXT_BUBBLES:
                            a.M_show3NextBubbles();
                    }
                }),
                c
            );
        })(b);
    a.Modification = c;
    var d;
    !(function (a) {
        ((a[(a.PLUS_N_BUBLES = 0)] = 'PLUS_N_BUBLES'), (a[(a.THREE_NEXT_BUBBLES = 1)] = 'THREE_NEXT_BUBBLES'), (a[(a.GUIDELINE_NOLIMIT = 2)] = 'GUIDELINE_NOLIMIT'), (a[(a.PLUS_5_BUBLES = 3)] = 'PLUS_5_BUBLES'));
    })((d = a.MODIFICATION_TYPE || (a.MODIFICATION_TYPE = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(e, f) {
                var g = b.call(this) || this;
                return (
                    (g._lobby = e),
                    (g._level = f),
                    (g._visual = new a.PXButton('newYear', ['balls/empty'])),
                    (g._visual.enabled = !1),
                    (g._visual.interactiveChildren = !1),
                    (g._body = new c(0, 0, 'newYear', 'balls/glass/ball_glass_body')),
                    (g._holder = new c(0, 0, 'newYear', 'balls/glass/ball_glass_holder')),
                    (g._light = new c(0, 0, 'newYear', 'balls/glass/ball_glass_light')),
                    (g._holder.angle = Stage.rnd.rangeInt(-30, 30)),
                    g._visual.addOnUp(g.click, g),
                    (g._visual.soundFileDown = ''),
                    (g._text = new PIXI.Text(String(f + 1), { fontFamily: 'Pony', fontSize: 70, fill: d._mainColors[0], align: 'center', lineJoin: 'round', stroke: d._strokeColors[0], strokeThickness: 10, padding: 6 })),
                    (g._text.anchor.x = 0.5),
                    (g._text.anchor.y = 0.5),
                    (g._text.y = 4),
                    (g._curSpr = new c(0, 0, 'lobby', 'selectCurrentLevel')),
                    (g._curSpr.visible = !1),
                    (g._current = !1),
                    (g._arg = 0),
                    (g._arg2 = 0),
                    g.addChild(g._curSpr),
                    g.addChild(g._visual),
                    g._visual.addChild(g._body),
                    g._visual.addChild(g._holder),
                    g._visual.addChild(g._text),
                    g._visual.addChild(g._light),
                    g
                );
            }
            return (
                __extends(d, b),
                (d.prototype.click = function () {
                    this._lobby.isScroll || (a.SoundsManager.levelBallClick(), this._lobby.playLevel(this._level));
                }),
                (d.prototype.setCurrent = function () {
                    ((this._body.frameName = 'balls/frozen/ball_frozen_body'), (this._holder.frameName = 'balls/frozen/ball_frozen_holder'), (this._light.frameName = 'balls/frozen/ball_frozen_light'), (this._text.style.fill = d._mainColors[1]), (this._text.style.stroke = d._strokeColors[1]), (this._visual.enabled = !0), (this._current = !0), (this._curSpr.visible = !0), this._curSpr.scale.set(0.4), (this._curSpr.alpha = 0));
                }),
                (d.prototype.setDone = function () {
                    ((this._body.frameName = 'balls/gold/ball_gold_body'), (this._holder.frameName = 'balls/gold/ball_gold_holder'), (this._light.frameName = 'balls/gold/ball_gold_light'), (this._text.style.fill = d._mainColors[2]), (this._text.style.stroke = d._strokeColors[2]));
                }),
                (d.prototype.update = function (a) {
                    if (this._current) {
                        this._arg >= Math.PI && (this._arg = 0);
                        var b = 0.2 + 0.8 * Math.sin(this._arg / 2);
                        (this._curSpr.scale.set(b), (this._curSpr.alpha = 0.4 * Math.sin(this._arg)), (this.angle = 10 * Math.sin(this._arg2 / 2)), (this._arg += 0.04 * a), (this._arg2 += 0.04 * a));
                    }
                }),
                (d._mainColors = [10014710, 15465471, 16776170]),
                (d._strokeColors = ['#3569C9', '#1D95D0', '#db6e1a']),
                d
            );
        })(b);
    a.NYLevelButton = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b(d) {
                var e = a.call(this) || this,
                    f = b.names[d] + '/' + b.names[d] + '_';
                return ((e._shine = new c(0, 0, 'newYear', f + 'shine')), (e._body = new c(0, 0, 'newYear', f + 'bottom')), (e._top = new c(0, 0, 'newYear', f + 'top')), (e._snowBack = new c(0, 0, 'newYear', f + 'snow_back')), (e._snowFront = new c(0, 0, 'newYear', f + 'snow_front')), e.addChild(e._snowBack), e.addChild(e._shine), e.addChild(e._body), e.addChild(e._top), e.addChild(e._snowFront), e);
            }
            return (
                __extends(b, a),
                (b.prototype.open = function (a) {
                    a ? (TweenLite.to(this._shine, 0.2, { alpha: 0, delay: 0.2 }), TweenLite.to(this._top, 0.2, { alpha: 0, delay: 0.3 }), TweenLite.to(this._top, 0.3, { y: -40, delay: 0.2 })) : ((this._shine.alpha = 0), (this._top.alpha = 0));
                }),
                (b.names = ['gift_purple', 'gift_yellow', 'gift_red']),
                b
            );
        })(b);
    a.NYPrize22 = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._bg = new c(0, 0, 'ui0', 'popups/bottomBgAds')), (d._bg.width = 2 * Stage.screenWidth), (d._beginY = 0.5 * -d._bg.height), (d._icon = new c(0, 0, 'ui0', 'popups/noadsIcon')), (d._icon.anchor.x = 0), (d._icon.x = 0.5 * -Stage.screenWidth + 40), (d._buy = new a.PXButton('ui', ['popups/greenSmallBtn'])), (d._buy.x = 0.5 * Stage.screenWidth - 0.5 * d._buy.width - 40), d._buy.addOnUp(d.buy, d), (d._text = new a.CoinText(0, null, a.CoinTextAnchor.LEFT, 100)), (d._text.x = -100), (d._text.y = -2), d._buy.addChild(d._text), (d.visible = !1), d.addChild(d._bg), d.addChild(d._icon), d.addChild(d._buy), d);
            }
            return (
                __extends(d, b),
                (d.prototype.buy = function () {
                    ((this._buy.alpha = 0.5), (this._buy.enabled = !1), a.EconomyOptions.buyForCoins(a.EconomyOptions.NO_ADS_COST, !1, a.STATS_GAME_RESOURCE_PLACEMENT.NO_ADS) ? ((this._buy.alpha = 1), this.hide(), a.UserGameData.setProperty(a.USER_PROPERTY.NO_ADS, 1)) : ((this._buy.alpha = 1), (this._buy.enabled = !0)));
                }),
                (d.prototype.show = function () {
                    ((this.visible = !0), (this._text.text = a.EconomyOptions.NO_ADS_COST), (this.y = 2 * -this._beginY), TweenLite.to(this, 0.3, { y: this._beginY, ease: Sine.easeOut }));
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    TweenLite.to(this, 0.1, {
                        y: 2 * -this._beginY,
                        ease: Sine.easeOut,
                        onComplete: function () {
                            a.visible = !1;
                        },
                    });
                }),
                d
            );
        })(b);
    a.BuyNoAds = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._coinContainer = new b()), (e._pigContainer = new b()), e._pigContainer.scale.set(0.85), (e._pigBg = new c(0, 0, 'ui0', 'popups/pig/pigBg')), e._pigBg.scale.set(2), (e._pig = new c(0, 0, 'ui0', 'popups/pig/piggy')), e._pig.anchor.set(0.5, 0.98), (e._pigBeginY = 0.5 * e._pig.height * 0.98), (e._pig.y = e._pigBeginY), (e._coins = []));
                for (var f = 0; f < 1; f++) {
                    var g = new c(0, 0, 'ui0', 'popups/pig/pigCoin');
                    e._coins.push(g);
                }
                ((e._coinMask = new PIXI.Graphics()), e._coinMask.beginFill(16711680, 0.5), e._coinMask.drawRect(-350, -455, 800, 355), e._coinMask.endFill(), (e._coinContainer.mask = e._coinMask));
                var h = a.Locales.get('ui0', 'popups/pig/pigFull');
                return ((e._full = new c(25, -170, h[0], h[1])), (e._full.alpha = 0), (e._full.rotation = -13 * PIXI.DEG_TO_RAD), (e._text = new PIXI.Text('+1', { fontFamily: 'Pony', fontSize: 70, fill: 16566544, align: 'center', lineJoin: 'round', stroke: '#fce698', strokeThickness: 15, padding: 6, lineHeight: 70 })), e._text.anchor.set(0.5), (e._text.alpha = 0), e.addChild(e._pigContainer), e._pigContainer.addChild(e._pigBg), e._pigContainer.addChild(e._pig), e._pig.addChild(e._full), e.addChild(e._coinContainer), e.addChild(e._coinMask), e.addChild(e._text), e);
            }
            return (
                __extends(e, d),
                (e.prototype.full = function () {
                    var a = 0.5;
                    (this._full.scale.set(1.5, 1.5), TweenLite.to(this._full.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut, delay: 0.1 + a }), TweenLite.to(this._full, 0.1, { alpha: 1, delay: 0.1 + a }));
                }),
                (e.prototype.show = function () {
                    var a = this;
                    ((this._idleAnim = !1),
                        (this._arg = 0),
                        (this._arg2 = 0),
                        (this._pig.alpha = 0),
                        this._pig.scale.set(0.01),
                        (this._pigBg.alpha = 0),
                        this._pigBg.scale.set(0.01),
                        (this._full.alpha = 0),
                        (this._full.rotation = -13 * PIXI.DEG_TO_RAD),
                        (this._text.alpha = 0),
                        TweenLite.to(this._pig, 0.2, { alpha: 1 }),
                        TweenLite.to(this._pig.scale, 0.3, { x: 1, y: 1, ease: Back.easeOut }),
                        TweenLite.to(this._pigBg, 0.2, { alpha: 1 }),
                        TweenLite.to(this._pigBg.scale, 0.3, {
                            x: 2,
                            y: 2,
                            ease: Back.easeOut,
                            onComplete: function () {
                                a._idleAnim = !0;
                            },
                        }));
                }),
                (e.prototype.update = function (a) {
                    if (null != this.parent && 0 != this.alpha && this.visible && this._idleAnim) {
                        var b = 10 * Math.sin((this._arg += 0.1 * a) / 3);
                        ((this._pig.y = this._pigBeginY + b), (this._coinMask.y = b), (this._pigBg.alpha = 0.6 + Math.abs(0.4 * Math.sin(this._arg2 / 5))), (this._arg2 += 0.1 * a));
                    }
                }),
                (e.prototype.one = function () {
                    var b = this,
                        c = this._coins[0];
                    (this._coinContainer.addChild(c),
                        (c.x = -200),
                        (c.y = -272),
                        (c.alpha = 0),
                        c.scale.set(0.5),
                        TweenLite.to(c, 0.1, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(c, 0.1, { y: -310, delay: 0.1, overwrite: 'auto' }),
                        TweenLite.to(c.scale, 0.2, { x: 1.1, y: 1.1, overwrite: 'auto' }),
                        TweenLite.to(c, 0.2, { y: -272, ease: Back.easeOut, delay: 0.2, overwrite: 'auto' }),
                        TweenLite.to(c.scale, 0.2, {
                            x: 1.1,
                            y: 1.1,
                            ease: Back.easeOut,
                            delay: 0.2,
                            overwrite: 'auto',
                            onStart: function () {
                                a.SoundsManager.showCoinInWinPopup();
                            },
                        }));
                    var d = 0.4;
                    (TweenLite.to(c, d, {
                        bezier: {
                            curviness: 2.25,
                            type: 'soft',
                            values: [
                                { x: c.x, y: -272 },
                                { x: 90, y: -150 },
                                { x: 0, y: -40 },
                            ],
                        },
                        delay: 0.6,
                        onComplete: function () {
                            b.jump(a.UserGameData.STAR_TO_COIN);
                        },
                    }),
                        TweenLite.to(c.scale, 0.3, { x: 0.75, y: 0.75, delay: 0.6 + (d - 0.3) / 2 }));
                }),
                (e.prototype.two = function () {
                    var b = this,
                        c = this._coins[0];
                    (this._coinContainer.addChild(c),
                        (c.x = 0),
                        (c.y = -295),
                        (c.alpha = 0),
                        c.scale.set(0.5),
                        TweenLite.to(c, 0.1, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(c, 0.1, { y: -330, delay: 0.1, overwrite: 'auto' }),
                        TweenLite.to(c.scale, 0.2, { x: 1.1, y: 1.1, overwrite: 'auto' }),
                        TweenLite.to(c, 0.2, { y: -295, ease: Back.easeOut, delay: 0.2, overwrite: 'auto' }),
                        TweenLite.to(c.scale, 0.2, {
                            x: 1.1,
                            y: 1.1,
                            ease: Back.easeOut,
                            delay: 0.2,
                            overwrite: 'auto',
                            onStart: function () {
                                a.SoundsManager.showCoinInWinPopup();
                            },
                        }));
                    var d = 0.4;
                    (TweenLite.to(c, d, {
                        bezier: {
                            curviness: 2.25,
                            type: 'soft',
                            values: [
                                { x: 30, y: -295 },
                                { x: 40, y: -40 },
                            ],
                        },
                        delay: 0.6,
                        onComplete: function () {
                            b.jump(a.UserGameData.STAR_TO_COIN);
                        },
                    }),
                        TweenLite.to(c.scale, 0.3, { x: 0.75, y: 0.75, delay: 0.6 + (d - 0.3) / 2 }));
                }),
                (e.prototype.three = function () {
                    var b = this,
                        c = this._coins[0];
                    (this._coinContainer.addChild(c),
                        (c.x = 200),
                        (c.y = -272),
                        (c.alpha = 0),
                        c.scale.set(0.5),
                        TweenLite.to(c, 0.1, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(c, 0.1, { y: -310, delay: 0.1, overwrite: 'auto' }),
                        TweenLite.to(c.scale, 0.2, { x: 1.1, y: 1.1, overwrite: 'auto' }),
                        TweenLite.to(c, 0.2, { x: 200, y: -272, ease: Back.easeOut, delay: 0.2, overwrite: 'auto' }),
                        TweenLite.to(c.scale, 0.2, {
                            x: 1.1,
                            y: 1.1,
                            ease: Back.easeOut,
                            delay: 0.2,
                            overwrite: 'auto',
                            onStart: function () {
                                a.SoundsManager.showCoinInWinPopup();
                            },
                        }));
                    var d = 0.4;
                    (TweenLite.to(c, d, {
                        bezier: {
                            curviness: 2.25,
                            type: 'soft',
                            values: [
                                { x: c.x, y: -272 },
                                { x: 45, y: -150 },
                                { x: 0, y: -40 },
                            ],
                        },
                        delay: 0.6,
                    }),
                        TweenLite.to(c.scale, 0.3, {
                            x: 0.75,
                            y: 0.75,
                            delay: 0.6 + (d - 0.3) / 2,
                            onComplete: function () {
                                b.jump(a.UserGameData.STAR_TO_COIN);
                            },
                        }));
                }),
                (e.prototype.jump = function (b) {
                    var c = this;
                    (void 0 === b && (b = -1), (this._idleAnim = !1), a.SoundsManager.insertCoinInWinPopupPig());
                    var d = this._pig.y;
                    (TweenLite.to(this._pig, 0.1, { y: d - 20, overwrite: 'auto' }),
                        TweenLite.to(this._pig.scale, 0.1, { x: 0.95, y: 1.12, overwrite: 'auto' }),
                        TweenLite.to(this._pig, 0.3, { y: this._pigBeginY, delay: 0.1, ease: Back.easeOut }),
                        TweenLite.to(this._pig.scale, 0.3, {
                            x: 1,
                            y: 1,
                            delay: 0.1,
                            ease: Back.easeOut,
                            onComplete: function () {
                                ((c._idleAnim = !0), (c._arg = 0));
                            },
                        }),
                        b != -1 && ((this._text.alpha = 0), (this._text.text = '+' + b), this._text.scale.set(0.1), TweenLite.to(this._text, 0.1, { alpha: 1, overwrite: 'auto' }), TweenLite.to(this._text.scale, 0.2, { x: 1, y: 1, ease: Back.easeOut }), TweenLite.to(this._text, 0.2, { alpha: 0, delay: 0.4, overwrite: 'auto' })));
                }),
                (e.prototype.stopAnim = function () {
                    ((this._idleAnim = !1), TweenMax.killTweensOf(this), TweenMax.killTweensOf(this._pig), TweenMax.killTweensOf(this._pigBg), TweenMax.killTweensOf(this._pig.scale), TweenMax.killTweensOf(this._pigBg.scale), TweenMax.killTweensOf(this._coins[0]), TweenMax.killTweensOf(this._coins[0].scale), TweenMax.killTweensOf(this._full), TweenMax.killTweensOf(this._full.scale), TweenMax.killTweensOf(this._text), TweenMax.killTweensOf(this._text.scale), this._coinContainer.removeChild(this._coins[0]));
                }),
                e
            );
        })(PIXI.Container);
    a.PigOverlay = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (b) {
            function c() {
                var a = b.call(this) || this;
                return (c.initFonts(), (a._text = new PIXI.BitmapText('x0', { fontName: c.FONT_60.name, fontSize: c.FONT_60.size, align: 'center' })), (a._text.anchor = 0.5), a.addChild(a._text), a);
            }
            return (
                __extends(c, b),
                (c.prototype.init = function (b) {
                    this._text.text = a.StringManager.get('COMBO') + '\nx' + b;
                }),
                (c.getPopup = function (a, b, d) {
                    var e,
                        f = this,
                        g = 0.15;
                    return (
                        (e = this.FREE_POPUS.length ? this.FREE_POPUS.pop() : new c()),
                        e.init(a),
                        (d -= 40),
                        (e.x = b),
                        (e.y = d),
                        (e.alpha = 0),
                        e.scale.set(0.01, 0.01),
                        (e.rotation = 0.4 * (Math.random() > 0.5 ? 1 : -1) * Math.random()),
                        b + 0.6 * e._text.width > 0.5 * Stage.screenWidth ? (b = 0.5 * Stage.screenWidth - 0.6 * e._text.width) : b - 0.6 * e._text.width < 0.5 * -Stage.screenWidth && (b = 0.5 * -Stage.screenWidth + 0.6 * e._text.width),
                        TweenLite.to(e.scale, 0.3, { x: 1, y: 1, delay: g, ease: Back.easeOut }),
                        TweenLite.to(e, 0.8, { rotation: 0, delay: g, ease: Elastic.easeOut }),
                        TweenLite.to(e, 0.15, {
                            alpha: 1,
                            delay: g,
                            onComplete: function () {
                                TweenLite.to(e, 0.3 + 0.15 * Math.random(), {
                                    y: d - (15 + 5 * Math.random()),
                                    onComplete: function () {
                                        TweenLite.to(e, 0.2, {
                                            alpha: 0,
                                            delay: 0.1,
                                            onComplete: function () {
                                                e.parent.removeChild(f);
                                                var a = f.ACTIVE_POPUS.indexOf(e);
                                                (a != -1 && f.ACTIVE_POPUS.splice(a, 1), f.FREE_POPUS.push(e));
                                            },
                                        });
                                    },
                                });
                            },
                        }),
                        this.ACTIVE_POPUS.push(e),
                        e
                    );
                }),
                (c.free = function () {
                    for (; this.ACTIVE_POPUS.length; ) this.FREE_POPUS.push(this.ACTIVE_POPUS.pop());
                    for (var a = 0; a < this.FREE_POPUS.length; a++) this.FREE_POPUS[a].parent && this.FREE_POPUS[a].parent.removeChild(this.FREE_POPUS[a]);
                }),
                (c.initFonts = function () {
                    this.FONT_60 || (this.FONT_60 = { name: 'Pony-60-Combo', size: 60 });
                }),
                (c.ACTIVE_POPUS = []),
                (c.FREE_POPUS = []),
                c
            );
        })(b);
    a.PopCombo = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function b(b, d, e) {
                var f = a.call(this) || this;
                return ((f._manager = b), (f.popitName = d), (f._bg = new c(0, 0, 'lobby', e ? e : 'popitBg')), f.on('pointerdown', f.onDown, f), f.on('pointerup', f.onUp, f), f.on('pointerupoutside', f.onUpOutside, f), f.addChild(f._bg), f);
            }
            return (
                __extends(b, a),
                (b.prototype.onDown = function () {
                    (this.scale.set(0.9), (this._down = !0), b.DOWN_COUNTER++);
                }),
                (b.prototype.onUp = function () {
                    (this.scale.set(1), this._down && (this.onClick(), b.DOWN_COUNTER--), (this._down = !1));
                }),
                (b.prototype.onUpOutside = function () {
                    (this.scale.set(1), this._down && b.DOWN_COUNTER--, (this._down = !1));
                }),
                (b.prototype.hide = function () {
                    ((this.interactive = !1), (this.interactiveChildren = !1), this._manager.deletePopit(this));
                }),
                (b.prototype.onClick = function () {}),
                (b.prototype.set = function () {}),
                (b.prototype.update = function (a) {}),
                Object.defineProperty(b, 'isDown', {
                    get: function () {
                        return this.DOWN_COUNTER > 0;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(b.prototype, 'px', {
                    get: function () {
                        return this.parent && this._manager ? this.parent.x + this._manager.x + this.x : this.x;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(b.prototype, 'py', {
                    get: function () {
                        return this.parent && this._manager ? this.parent.y + this._manager.y + this.y : this.y;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (b.DOWN_COUNTER = 0),
                b
            );
        })(b);
    a.Popit = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(a) {
                var d = c.call(this, a, 'blackFriday_191122') || this;
                ((d._arg = 0), (d._visual = new b(0, -10, 'lobby', 'blackFriday_191122/bfPopitIcon')), (d._caption = new b(0, 0.5 * d._bg.height - 10, 'lobby', 'dailyBonus/alert/dbaCaptionBg')));
                var e = new PIXI.TextStyle({ fontFamily: Stage.FONT_BOLD, fill: 15859711, fontSize: 30, align: 'center' });
                return ((d._capTxt = new PIXI.Text('0:01', e)), d._capTxt.anchor.set(0.5), (d._capTxt.y = 70), d.addChild(d._visual), d.addChild(d._caption), d.addChild(d._capTxt), d);
            }
            return (
                __extends(d, c),
                (d.prototype.onClick = function () {
                    a.MI.get().popupManager.show(a.AllPopups.BLACK_FRIDAY_191122);
                }),
                (d.prototype.set = function () {
                    this._arg = 0;
                }),
                (d.prototype.update = function (b) {
                    var c = a.UserGameData.getEventTime('blackFriday_191122') - a.MI.get().time;
                    c > 0 ? ((this._capTxt.text = a.Utils.formatTime(c, a.TIME_FORMAT.DAYS_HOURS)), (this._visual.rotation = -0.3 + 0.1 * Math.sin((this._arg += 0.05 * b)))) : (a.UserGameData.stopEvent('blackFriday_191122'), this.hide());
                }),
                (d.prototype.destroy = function () {
                    c.prototype.destroy.call(this);
                }),
                d
            );
        })(a.Popit);
    a.BlackFriday191122Popit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(a) {
                var d = c.call(this, a, 'DailyPopit') || this;
                ((d._arg = 0), (d._visual = new b(5, -10, 'lobby', 'dailyBonus/alert/dbaCalendar')), (d._caption = new b(0, 0.5 * d._bg.height - 10, 'lobby', 'dailyBonus/alert/dbaCaptionBg')));
                var e = new PIXI.TextStyle({ fontFamily: Stage.FONT_BOLD, fill: 15859711, fontSize: 30, align: 'center' });
                return ((d._capTxt = new PIXI.Text('0:01', e)), d._capTxt.anchor.set(0.5), (d._capTxt.y = 70), d.addChild(d._visual), d.addChild(d._caption), d.addChild(d._capTxt), d);
            }
            return (
                __extends(d, c),
                (d.prototype.onClick = function () {
                    a.MI.get().popupManager.show(a.AllPopups.DAILY_REWARD);
                }),
                (d.prototype.set = function () {
                    this._arg = 0;
                }),
                (d.prototype.update = function (b) {
                    var c = a.UserGameData.HOUR_24 - a.UserGameData.currentTimeDailyReward();
                    c > 0 ? ((this._capTxt.text = a.Utils.formatTime(c)), (this._visual.y = -6)) : ((this._capTxt.text = a.StringManager.get('POPIT_DAILY_DONE')), (this._visual.y = -6 + 4 * Math.sin((this._arg += 0.05 * b))));
                }),
                (d.prototype.destroy = function () {
                    c.prototype.destroy.call(this);
                }),
                d
            );
        })(a.Popit);
    a.DailyPopit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(d) {
                var e = c.call(this, d, 'GardenGoldPopit') || this;
                ((e._arg = 0), (e._visual = new b(0, 0, 'lobby', 'lbGold')), (e._caption = new b(0, 0.5 * e._bg.height - 10, 'lobby', 'dailyBonus/alert/dbaCaptionBg')));
                var f = new PIXI.TextStyle({ fontFamily: Stage.FONT_BOLD, fill: 15859711, fontSize: 30, align: 'center' });
                return ((e._capTxt = new PIXI.Text(a.UserGameData.getProperty(a.USER_PROPERTY.GOLD) + '/' + a.UserGameData.NEED_GOLD_TO_SHOW_GARDEN, f)), e._capTxt.anchor.set(0.5), (e._capTxt.y = 70), e.addChild(e._visual), e.addChild(e._caption), e.addChild(e._capTxt), e);
            }
            return (
                __extends(d, c),
                (d.prototype.onClick = function () {
                    var b = a.UserGameData.NEED_GOLD_TO_SHOW_GARDEN - a.UserGameData.getProperty(a.USER_PROPERTY.GOLD);
                    a.MI.get().popupManager.add(a.AllPopups.ERROR, a.StringManager.get('TUT_GOLD_BUTTON_3', b, a.Utils.declension(b, a.StringManager.array('PETAL'))));
                }),
                (d.prototype.destroy = function () {
                    c.prototype.destroy.call(this);
                }),
                d
            );
        })(a.Popit);
    a.GardenGoldPopit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(d) {
                var e = c.call(this, d, 'GardenPopit', 'garden/lobbyGardenBtn') || this;
                ((e._arg = 0), (e._caption = new b(0, 0.5 * e._bg.height - 10, 'lobby', 'dailyBonus/alert/dbaCaptionBg')));
                var f = new PIXI.TextStyle({ fontFamily: Stage.FONT_BOLD, fill: 15859711, fontSize: 30, align: 'center' });
                return ((e._capTxt = new PIXI.Text(a.StringManager.get('GRADEN_CAPTION'), f)), e._capTxt.anchor.set(0.5), (e._capTxt.y = 74), (e._markEmotions = new b(72, -80, 'lobby', 'garden/lbEmotionBg')), (e._markEmotionsIcon = new b(0, 0, 'lobby', 'garden/lbEmotionIcon0001')), e.addChild(e._caption), e.addChild(e._capTxt), e.addChild(e._markEmotions), e._markEmotions.addChild(e._markEmotionsIcon), e);
            }
            return (
                __extends(d, c),
                (d.prototype.checkEmotion = function () {
                    var b = a.PLANT_EMOTION.NONE,
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_BUG_TIME),
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        e = a.UserGameData.getProperty(a.USER_PROPERTY.GOLD);
                    (a.Garden.plantDone() ? (b = a.PLANT_EMOTION.DONE) : d == -1 ? e >= a.UserGameData.GARDEN_BUY_PLANT_GOLD && (b = a.PLANT_EMOTION.NEED_PLANTED) : 0 == d ? (b = a.PLANT_EMOTION.SLEEP) : 0 != c ? (b = a.PLANT_EMOTION.BUG) : 0 != a.Garden.waterOffset() && (b = a.PLANT_EMOTION.WATER), this.showEmotion(b));
                }),
                (d.prototype.showEmotion = function (b) {
                    switch (b) {
                        case a.PLANT_EMOTION.NONE:
                            this._markEmotions.visible = !1;
                            break;
                        default:
                            ((this._markEmotions.visible = !0), (this._markEmotionsIcon.frameName = 'garden/lbEmotionIcon000' + b));
                    }
                }),
                (d.prototype.onClick = function () {
                    a.Lobby.instance.gotoGarden();
                }),
                (d.prototype.set = function () {
                    ((this._arg = 0), this.checkEmotion());
                }),
                (d.prototype.update = function (a) {
                    this._markEmotions.y = -80 + 8 * Math.sin((this._arg += 0.04 * a));
                }),
                (d.prototype.destroy = function () {
                    c.prototype.destroy.call(this);
                }),
                d
            );
        })(a.Popit);
    a.GardenPopit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(a) {
                var d = c.call(this, a, 'newYear22') || this;
                ((d._arg = 0), (d._visual = new b(0, 0, 'lobby', 'newYear22/ny22PopitIcon')), (d._caption = new b(0, 0.5 * d._bg.height - 10, 'lobby', 'dailyBonus/alert/dbaCaptionBg')));
                var e = new PIXI.TextStyle({ fontFamily: Stage.FONT_BOLD, fill: 15859711, fontSize: 30, align: 'center' });
                return ((d._capTxt = new PIXI.Text('0:01', e)), d._capTxt.anchor.set(0.5), (d._capTxt.y = 70), d.addChild(d._visual), d.addChild(d._caption), d.addChild(d._capTxt), d);
            }
            return (
                __extends(d, c),
                (d.prototype.onClick = function () {
                    (a.LoaderScreen.show(), a.MI.get().popupManager.clearQueue(), KY.Game.instance.states.start('NewYear22', !1, !1, !0));
                }),
                (d.prototype.set = function () {
                    this._arg = 0;
                }),
                (d.prototype.update = function (b) {
                    var c = a.UserGameData.getEventTime('newYear22') - a.MI.get().time;
                    c > 0 ? (this._capTxt.text = a.Utils.formatTime(c, a.TIME_FORMAT.DAYS_HOURS)) : (a.UserGameData.stopEvent('newYear22'), this.hide());
                }),
                (d.prototype.destroy = function () {
                    c.prototype.destroy.call(this);
                }),
                d
            );
        })(a.Popit);
    a.NewYear22Popit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(d) {
                var e = c.call(this, d, 'PigPopit') || this;
                ((e._arg = 0), (e._pig = new b(0, 0, 'lobby', 'moneyBox/alert/mbaMiniPig')));
                var f = a.Locales.get('lobby', 'moneyBox/alert/mbaCaption');
                ((e._caption = new b(0, 0.5 * e._bg.height - 10, f[0], f[1])), (e._alert = new b(0, 0.5 * -e._bg.height + 10, 'lobby', 'moneyBox/alert/mbaAlert0001')), (e._alert.anchor.y = 1));
                var g = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 15837192, fontSize: 34, align: 'center' });
                return ((e._capTxt = new PIXI.Text('0', g)), e._capTxt.anchor.set(0.5), (e._capTxt.x = 9), (e._capTxt.y = -40), e.addChild(e._pig), e.addChild(e._caption), e.addChild(e._alert), e._alert.addChild(e._capTxt), e);
            }
            return (
                __extends(d, c),
                (d.prototype.hideAlert = function () {
                    TweenLite.to(this._alert, 0.2, { alpha: 0 });
                }),
                (d.prototype.onClick = function () {
                    a.MI.get().popupManager.show(a.AllPopups.PIG_MONEYBOX);
                }),
                (d.prototype.set = function () {
                    if ((a.MI.get().popupManager.get(a.AllPopups.PIG_MONEYBOX).once(a.PigPopup.EVENT_DEVASTATION, this.hideAlert, this), a.UserGameData.isFullPigBank())) {
                        var b = a.Locales.get('lobby', 'moneyBox/alert/mbaAlert0002');
                        (this._alert.changeKey(b[0]), (this._alert.frameName = b[1]), (this._capTxt.alpha = 0));
                    } else (this._alert.changeKey('lobby'), (this._alert.frameName = 'moneyBox/alert/mbaAlert0001'), (this._capTxt.alpha = 1), (this._capTxt.text = String(a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK))));
                    0 == a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK) ? (this._alert.alpha = 0) : (this._alert.alpha = 1);
                }),
                (d.prototype.update = function (a) {
                    this._alert.y = 0.5 * -this._bg.height + 10 + 10 * Math.sin((this._arg += 0.05 * a));
                }),
                (d.prototype.destroy = function () {
                    (a.MI.get().popupManager.get(a.AllPopups.PIG_MONEYBOX).off(a.PigPopup.EVENT_DEVASTATION, this.hideAlert, this), c.prototype.destroy.call(this));
                }),
                d
            );
        })(a.Popit);
    a.PigPopit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (a) {
            function c(c) {
                var d = a.call(this, c == e.RIGHT ? 2 * Stage.centerX : 0, 0.5 * Stage.centerY + 50) || this;
                return ((d._type = c), (d._container = new b()), (d._popits = []), d.hide(!0), d.addChild(d._container), d);
            }
            return (
                __extends(c, a),
                (c.prototype.addPopit = function (a) {
                    ((a.x = (this._type == e.RIGHT ? -1 : 1) * c.X_OFFSET), (a.y = this._popits.length * c.SLOT_SIZE), 0 == this._popits.length && this.activateRelativeMode(), (a.interactive = !0), a.set(), this._popits.push(a), this._container.addChild(a));
                }),
                (c.prototype.deletePopit = function (a) {
                    var b = this._popits.indexOf(a);
                    if (b != -1) {
                        var d = this._popits.splice(b, 1)[0];
                        d.destroy();
                    }
                    for (var e = b; e < this._popits.length; e++) this._popits[e].y -= c.SLOT_SIZE;
                }),
                (c.prototype.hideByName = function (a) {
                    for (var b = 0; b < this._popits.length; b++) if (this._popits[b].popitName == a) return (this._popits[b].hide(), !0);
                    return !1;
                }),
                (c.prototype.getPopitByName = function (a) {
                    for (var b = 0; b < this._popits.length; b++) if (this._popits[b].popitName == a) return this._popits[b];
                    return null;
                }),
                (c.prototype.show = function (a) {
                    (void 0 === a && (a = !1), this._showed || ((this._showed = !0), a ? (this._container.x = 0) : TweenLite.to(this._container, 0.3, { x: 0, ease: Sine.easeOut })));
                }),
                (c.prototype.hide = function (a) {
                    if ((void 0 === a && (a = !1), this._showed)) {
                        this._showed = !1;
                        var b = 250 * (this._type != e.RIGHT ? -1 : 1);
                        a ? (this._container.x = b) : TweenLite.to(this._container, 0.3, { x: b, ease: Sine.easeOut });
                    }
                }),
                (c.prototype.update = function (a) {
                    for (var b = 0; b < this._popits.length; b++) this._popits[b].update(a);
                }),
                Object.defineProperty(c.prototype, 'count', {
                    get: function () {
                        return this._popits.length;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (c.SLOT_SIZE = 200),
                (c.X_OFFSET = 120),
                c
            );
        })(c);
    a.PopitManager = d;
    var e;
    !(function (a) {
        ((a[(a.LEFT = 0)] = 'LEFT'), (a[(a.RIGHT = 1)] = 'RIGHT'));
    })((e = a.POPIT_TYPE || (a.POPIT_TYPE = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (b) {
            function c() {
                var c = b.call(this) || this;
                return ((c._rightPopit = new a.PopitManager(a.POPIT_TYPE.RIGHT)), (c._leftPopit = new a.PopitManager(a.POPIT_TYPE.LEFT)), c.addChild(c._rightPopit), c.addChild(c._leftPopit), c);
            }
            return (
                __extends(c, b),
                (c.prototype.show = function () {
                    (this._rightPopit.show(), this._leftPopit.show());
                }),
                (c.prototype.hide = function () {
                    (this._rightPopit.hide(), this._leftPopit.hide());
                }),
                (c.prototype.update = function (a) {
                    (this._rightPopit.update(a), this._leftPopit.update(a));
                }),
                (c.prototype.getNextPopit = function (a) {
                    switch (a) {
                        case d.LEFT:
                            return this._leftPopit;
                        case d.RIGHT:
                            return this._rightPopit;
                        case d.AUTO:
                            var b = this._leftPopit.count,
                                c = this._rightPopit.count;
                            return b == c ? this._leftPopit : b > c ? this._rightPopit : this._leftPopit;
                    }
                }),
                (c.prototype.hidePopit = function (a) {
                    this._leftPopit.hideByName(a) || this._rightPopit.hideByName(a);
                }),
                (c.prototype.getPopit = function (a) {
                    var b = this._leftPopit.getPopitByName(a);
                    return b ? b : this._rightPopit.getPopitByName(a);
                }),
                (c.prototype.addPig = function (b) {
                    void 0 === b && (b = d.AUTO);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.PigPopit(c));
                }),
                (c.prototype.addDaily = function (b) {
                    void 0 === b && (b = d.AUTO);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.DailyPopit(c));
                }),
                (c.prototype.addShop = function (b) {
                    void 0 === b && (b = d.LEFT);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.ShopPopit(c));
                }),
                (c.prototype.addBlackFriday191122 = function (b) {
                    void 0 === b && (b = d.AUTO);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.BlackFriday191122Popit(c));
                }),
                (c.prototype.addNewYear22 = function (b) {
                    void 0 === b && (b = d.AUTO);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.NewYear22Popit(c));
                }),
                (c.prototype.addGarden = function (b) {
                    void 0 === b && (b = d.RIGHT);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.GardenPopit(c));
                }),
                (c.prototype.addGardenGold = function (b) {
                    void 0 === b && (b = d.RIGHT);
                    var c = this.getNextPopit(b);
                    c.addPopit(new a.GardenGoldPopit(c));
                }),
                c
            );
        })(b);
    a.PopitManagerMain = c;
    var d;
    !(function (a) {
        ((a[(a.AUTO = 1)] = 'AUTO'), (a[(a.LEFT = 2)] = 'LEFT'), (a[(a.RIGHT = 3)] = 'RIGHT'));
    })((d = a.POPIT_ALIGN || (a.POPIT_ALIGN = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(d) {
                var e = c.call(this, d, 'DailyPopit') || this;
                ((e._arg = 0), (e._visual = new b(0, -6, 'lobby', 'shop/shopIcon')), (e._caption = new b(0, 0.5 * e._bg.height - 10, 'lobby', 'dailyBonus/alert/dbaCaptionBg')));
                var f = new PIXI.TextStyle({ fontFamily: Stage.FONT_BOLD, fill: 15859711, fontSize: 26, align: 'center' });
                return ((e._capTxt = new PIXI.Text(a.StringManager.get('POPIT_SHOP_CAPTION'), f)), e._capTxt.anchor.set(0.5), (e._capTxt.y = 68), e.addChild(e._visual), e.addChild(e._caption), e.addChild(e._capTxt), e);
            }
            return (
                __extends(d, c),
                (d.prototype.onClick = function () {
                    a.EconomyOptions.showShop(!0);
                }),
                (d.prototype.set = function () {}),
                (d.prototype.update = function (a) {}),
                (d.prototype.destroy = function () {
                    c.prototype.destroy.call(this);
                }),
                d
            );
        })(a.Popit);
    a.ShopPopit = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (b) {
            function c() {
                var a = b.call(this) || this;
                return (c.initFonts(), (a._text = new PIXI.BitmapText('+10', { fontName: c.FONT_50.name, fontSize: c.FONT_50.size, align: 'center', tint: 28905 })), (a._text.anchor = 0.5), (a._text.letterSpacing = -15), a.addChild(a._text), a);
            }
            return (
                __extends(c, b),
                (c.prototype.init = function (a, b, d) {
                    ((this._text.text = a), (this._text.tint = b), d ? ((this._text.fontName = c.FONT_60.name), (this._text.fontSize = c.FONT_60.size)) : ((this._text.fontName = c.FONT_50.name), (this._text.fontSize = c.FONT_50.size)));
                }),
                (c.getPopup = function (b, d, e, f) {
                    var g,
                        h = this,
                        i = 0.15;
                    g = this.FREE_POPUS.length ? this.FREE_POPUS.pop() : new c();
                    var j = Number(b),
                        k = 0.8;
                    return (
                        g.init(b, d, j > a.UserGameData.SCORE_MODIF_BOOST),
                        (f -= 40),
                        (g.x = e),
                        (g.y = f),
                        (g.alpha = 0),
                        g.scale.set(0.01, 0.01),
                        (g.rotation = 0.4 * (Math.random() > 0.5 ? 1 : -1) * Math.random()),
                        e + 0.6 * g._text.width > 0.5 * Stage.screenWidth ? (e = 0.5 * Stage.screenWidth - 0.6 * g._text.width) : e - 0.6 * g._text.width < 0.5 * -Stage.screenWidth && (e = 0.5 * -Stage.screenWidth + 0.6 * g._text.width),
                        TweenLite.to(g.scale, 0.3, { x: k, y: k, delay: i, ease: Back.easeOut }),
                        TweenLite.to(g, 0.8, { rotation: 0, delay: i, ease: Elastic.easeOut }),
                        TweenLite.to(g, 0.15, {
                            alpha: 1,
                            delay: i,
                            onComplete: function () {
                                TweenLite.to(g, 0.3 + 0.15 * Math.random(), {
                                    y: f - (15 + 5 * Math.random()),
                                    onComplete: function () {
                                        TweenLite.to(g, 0.2, {
                                            alpha: 0,
                                            delay: 0.1,
                                            onComplete: function () {
                                                g.parent.removeChild(h);
                                                var a = h.ACTIVE_POPUS.indexOf(g);
                                                (a != -1 && h.ACTIVE_POPUS.splice(a, 1), h.FREE_POPUS.push(g));
                                            },
                                        });
                                    },
                                });
                            },
                        }),
                        this.ACTIVE_POPUS.push(g),
                        g
                    );
                }),
                (c.free = function () {
                    for (; this.ACTIVE_POPUS.length; ) this.FREE_POPUS.push(this.ACTIVE_POPUS.pop());
                    for (var a = 0; a < this.FREE_POPUS.length; a++) this.FREE_POPUS[a].parent && this.FREE_POPUS[a].parent.removeChild(this.FREE_POPUS[a]);
                }),
                (c.initFonts = function () {
                    null == this.FONT_50 && ((this.FONT_50 = { name: 'Montserrat-ExtraBold-50-PopScore', size: 50 }), (this.FONT_60 = { name: 'Montserrat-ExtraBold-70-PopScore', size: 70 }));
                }),
                (c.ACTIVE_POPUS = []),
                (c.FREE_POPUS = []),
                c
            );
        })(b);
    a.PopScore = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (b) {
            function c(a) {
                void 0 === a && (a = 0.8);
                var c = b.call(this) || this;
                return ((c.playDefaultOpenSFX = !0), (c.id = ''), (c._atlasId = null), (c.disposable = !1), (c._opacity = a), c);
            }
            return (
                __extends(c, b),
                (c.prototype.update = function (a, b) {
                    return !!this._isShowed && void (this._miniLoader && this._miniLoader.update(a));
                }),
                (c.prototype.move = function (a, b) {}),
                (c.prototype.up = function (a, b) {}),
                (c.prototype.tap = function (a, b, c) {}),
                (c.prototype.onResize = function (a) {}),
                (c.prototype.wheel = function (a) {}),
                (c.prototype.show = function () {
                    for (var b = [], c = 0; c < arguments.length; c++) b[c] = arguments[c];
                    return (this.disable(), a.SoundsManager.gameMusicFade(), (this._isFree = !1), (this._isShowed = !0), this._loader || this.isLoaded ? void this.startLoad() : void (this.playDefaultOpenSFX && a.SoundsManager.openPopup()));
                }),
                (c.prototype.showAfterLoading = function () {
                    this.playDefaultOpenSFX && a.SoundsManager.openPopup();
                }),
                (c.prototype.setInteractive = function (a) {}),
                (c.prototype.disable = function () {
                    this.setInteractive(!1);
                }),
                (c.prototype.enable = function () {
                    this.setInteractive(!0);
                }),
                (c.prototype.hide = function () {
                    (this.disable(), a.SoundsManager.gameMusicFadeBack(), (this._isShowed = !1), this.playDefaultOpenSFX && a.SoundsManager.closePopup());
                }),
                (c.prototype.createLoader = function () {
                    ((this._loaded = !1), (this._loader = new PIXI.Loader()));
                }),
                (c.prototype.loadAtlas = function (b, c) {
                    if (!this._loaded) {
                        (this._loader || this.createLoader(), this._miniLoader || (this._miniLoader = new a.MiniLoading()), (this._atlasId = b));
                        var d = KY.Game.instance.getAssetsPath(KY.ASSETS_PATH.IMAGES);
                        this._loader.add(this._atlasId, d + c + '.json' + this.cacheName);
                    }
                }),
                (c.prototype.getTexture = function (a) {
                    return a ? this._loader.resources[this._atlasId].textures[a] : this._loader.resources[this._atlasId].texture;
                }),
                (c.prototype.startLoad = function () {
                    var a = this;
                    return !this._loader || this._loaded
                        ? (this.removeMiniloader(), void this.showAfterLoading())
                        : void this._loader.load(function () {
                              (a.removeMiniloader(), a.onload(), a.showAfterLoading(), (a._loaded = !0));
                          });
                }),
                (c.prototype.removeMiniloader = function () {
                    this._miniLoader && (this._miniLoader.destroy(), (this._miniLoader = null));
                }),
                (c.prototype.addChildMiniLoader = function () {
                    this._miniLoader && this.addChild(this._miniLoader);
                }),
                (c.prototype.onload = function () {}),
                (c.prototype.free = function () {
                    this._isFree = !0;
                }),
                Object.defineProperty(c.prototype, 'isFree', {
                    get: function () {
                        return this._isFree;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'isShowed', {
                    get: function () {
                        return this._isShowed;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'opacity', {
                    get: function () {
                        return this._opacity;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'cacheName', {
                    get: function () {
                        return null == KY.Game.instance.browserCacheLabel ? '' : '?' + KY.Game.instance.browserCacheLabel;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(c.prototype, 'isLoaded', {
                    get: function () {
                        return 0 != this._loaded;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                c
            );
        })(b);
    a.GamePopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                ((d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._body = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'miPopupBg'), 50, 150, 50, 50)));
                var e = 810;
                ((d._body.width = a.Utils.int(e)), (d._body.height = a.Utils.int(1.2 * d._body.width)), d._body.position.set(0.5 * -d._body.width, 0.5 * -d._body.height));
                var f = new KY.Sprite(-d._body.x, 70, 'ui0', 'miLogo');
                return (
                    d._body.addChild(f),
                    (d._text = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'center', wordWrap: !0, wordWrapWidth: a.Utils.int(0.9 * e), lineHeight: 70 })),
                    d._text.anchor.set(0.5, 0),
                    (d._text.x = -d._body.x),
                    (d._text.y = -d._body.y - 250),
                    (d._text.alpha = 0.9),
                    d._text.scale.set(0.95),
                    (d._btn = new a.PXButton('ui0', ['popups/greenLongBtn'])),
                    (d._btn.x = 0.5 * d._body.width),
                    (d._btn.y = d._body.height - 150),
                    d._btn.addOnClick(d.action, d),
                    (d._btnCaption = new PIXI.Text(a.StringManager.get('ADD_HOME_SCREEN_BTN_CAP_1'), { fontFamily: 'Pony', fontSize: 60, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 6 })),
                    d._btnCaption.anchor.set(0.5),
                    (d._btnCaption.y = 0),
                    (d._ico = new b(0.5 * d._body.width, 0.5 * d._body.height + 110, 'lobby', 'icoHS')),
                    d.addChild(d._body),
                    d._body.addChild(d._text),
                    d._body.addChild(d._btn),
                    d._body.addChild(d._ico),
                    d._btn.addChild(d._btnCaption),
                    d.addChild(d._closeBtnContainer),
                    d._closeBtnContainer.addChild(d._closeBtn),
                    d
                );
            }
            return (
                __extends(d, c),
                (d.prototype.show = function () {
                    var b = this;
                    (c.prototype.show.call(this),
                        (this._text.text = a.StringManager.get('ADD_TO_HOME_SCREEN')),
                        (this._btnCaption.text = a.StringManager.get('ADD_HOME_SCREEN_BTN_CAP_2')),
                        (this._closeBtn.alpha = 1),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        TweenLite.to(this._body, 0.2, {
                            y: 0.5 * -this._body.height,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                b.enable();
                            },
                        }));
                }),
                (d.prototype.action = function () {
                    (this.disable(),
                        a.MI.get()
                            .social.addToHomeScreen()
                            .then(function () {
                                a.Statistics.event_addToHomeScreen();
                            }),
                        this.hide());
                }),
                (d.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._btn.enabled = a));
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (d.prototype.update = function (a) {
                    0 == c.prototype.update.call(this, a);
                }),
                d
            );
        })(a.GamePopup);
    a.AddHomeScreenPopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var f = d.call(this) || this;
                ((f._body = new b()),
                    (f._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)),
                    (f._bodyBg.width = 830),
                    (f._bodyBg.height = 1027),
                    (f._bodyBg.x -= 0.5 * f._bodyBg.width),
                    (f._bodyBg.y -= 0.5 * f._bodyBg.height),
                    f._body.addChild(f._bodyBg),
                    (f._body.interactive = !0),
                    (f._closeBtnBg = new KY.Sprite(0.5 * f._body.width - 34, 0.5 * -f._body.height + 30, 'ui0', 'popups/closeBtnBg0001')),
                    (f._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])),
                    (f._closeBtn.x = f._closeBtnBg.x + 2),
                    (f._closeBtn.y = f._closeBtnBg.y - 2),
                    f._closeBtn.addOnClick(f.hide, f),
                    (f._caption = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 60, fill: 2055834, align: 'center' })),
                    f._caption.anchor.set(0.5),
                    (f._caption.y = 0.5 * -f._body.height + 110),
                    (f._caption.alpha = 0.9),
                    (f._description = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 2055834, align: 'center', wordWrap: !0, wordWrapWidth: 580, dropShadowAlpha: 0.4, dropShadowAngle: 2, dropShadowBlur: 2, dropShadowDistance: 4 })),
                    f._description.anchor.set(0.5));
                var g = new c(0, 0, 'ui', 'popups/buyBoost/buyIcoBg');
                ((g.y = f._caption.y + 180), (f._sunRay = new c(0, g.y, 'ui', 'popups/buyBoost/buyBoostSunray')), (f._icon = new c(0, g.y, 'ui', 'boostIco0001')));
                var h = new c(120, g.y + 30, 'ui0', 'popups/buyBoost/capx1');
                ((f._description.y = g.y + 170), (f._lots = []));
                for (var i = 0; i < 3; i++) {
                    var j = 2 == i ? 142 : 140;
                    (f._lots.push(new e(i)), (f._lots[i].y = f._description.y + 140 + j * i), f._lots[i].btn.addOnClick(f.buyBoost, f));
                }
                (f._body.addChild(f._closeBtnBg), f._body.addChild(f._closeBtn), f._body.addChild(f._caption), f._body.addChild(g), f._body.addChild(f._sunRay), f._body.addChild(f._icon), f._body.addChild(h), f._body.addChild(f._description));
                for (var i = 0; i < 3; i++) f._body.addChild(f._lots[i]);
                return (f.addChild(f._body), f);
            }
            return (
                __extends(f, d),
                (f.prototype.show = function (b, c, e) {
                    var f = this;
                    (d.prototype.show.call(this), (this._id = b), (this._icon.frameName = 'boostIco000' + (b + 1)), (this._callback = c), (this._context = e));
                    var g = 0;
                    switch (b) {
                        case 0:
                            g = a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT);
                            break;
                        case 1:
                            g = a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT);
                            break;
                        case 2:
                            g = a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT);
                            break;
                        case 3:
                            g = a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT);
                    }
                    if (0 != g) return void (this._callback && (this._callback.call(this._context, this._id), this.hide(!0)));
                    var h;
                    switch (b) {
                        case 0:
                            ((this._caption.text = a.StringManager.get('LIGHTNING_BOOST_NAME')), (this._description.text = a.StringManager.get('LIGHTNING_BOOST_INFO')), (h = a.EconomyOptions.LIGHTNING_X1_COST));
                            break;
                        case 1:
                            ((this._caption.text = a.StringManager.get('RAINBOW_BOOST_NAME')), (this._description.text = a.StringManager.get('RAINBOW_BOOST_INFO')), (h = a.EconomyOptions.RAINBOW_X1_COST));
                            break;
                        case 2:
                            ((this._caption.text = a.StringManager.get('FIREBALL_BOOST_NAME')), (this._description.text = a.StringManager.get('FIREBALL_BOOST_INFO')), (h = a.EconomyOptions.FIREBALL_X1_COST));
                            break;
                        case 3:
                            ((this._caption.text = a.StringManager.get('BOMB_BOOST_NAME')), (this._description.text = a.StringManager.get('BOMB_BOOST_INFO')), (h = a.EconomyOptions.BOMB_X1_COST));
                    }
                    for (var i = 0, j = 1, k = 0; k < 3; k++) (1 == k ? ((i = (0.5 * h) >> 0), (j = 3)) : 2 == k && ((i = h), (j = 9)), this._lots[k].setValue(b, j, h * j - i));
                    ((this.visible = !0),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                f.enable();
                            },
                        }));
                }),
                (f.prototype.tap = function (a, b) {
                    this.hide();
                }),
                (f.prototype.setInteractive = function (a) {
                    this._closeBtn.enabled = a;
                    for (var b = 0; b < 3; b++) this._lots[b].enabled = a;
                }),
                (f.prototype.hide = function (a) {
                    var b = this;
                    return (
                        void 0 === a && (a = !1),
                        d.prototype.hide.call(this),
                        new Promise(function (c) {
                            1 == a
                                ? (b.free(), c())
                                : (TweenLite.to(b, 0.1, {
                                      alpha: 0,
                                      delay: 0.2,
                                      onComplete: function () {
                                          (b.free(), c());
                                      },
                                  }),
                                  TweenLite.to(b._body, 0.2, { y: b._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (f.prototype.update = function (a) {
                    0 != d.prototype.update.call(this, a) && ((this._sunRay.rotation += a / 40), (this._sunRay.scale.x = this._sunRay.scale.y = 0.95 + 0.05 * Math.sin(2 * this._sunRay.rotation)));
                }),
                (f.prototype.buyBoost = function (b) {
                    var c = b.parent,
                        d = c.id,
                        e = c.countValue,
                        f = c.priceValue;
                    if (a.EconomyOptions.buyForCoins(f, !1, a.STATS_GAME_RESOURCE_PLACEMENT.BOOSTERS, String(d))) {
                        switch (d) {
                            case 0:
                                (a.UserGameData.addProperty(a.USER_PROPERTY.LIGHTNING_COUNT, e), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.LIGHTNING, e, a.STATS_GAME_RESOURCE_PLACEMENT.BOOSTERS));
                                break;
                            case 1:
                                (a.UserGameData.addProperty(a.USER_PROPERTY.RAINBOW_COUNT, e), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.RAINBOW, e, a.STATS_GAME_RESOURCE_PLACEMENT.BOOSTERS));
                                break;
                            case 2:
                                (a.UserGameData.addProperty(a.USER_PROPERTY.FIREBALL_COUNT, e), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.FIREBALL, e, a.STATS_GAME_RESOURCE_PLACEMENT.BOOSTERS));
                                break;
                            case 3:
                                (a.UserGameData.addProperty(a.USER_PROPERTY.BOMB_COUNT, e), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.BOMB, e, a.STATS_GAME_RESOURCE_PLACEMENT.BOOSTERS));
                        }
                        (a.UserGameData.save('BoostBuyPopup-buyBoost'), this.hide(), this._callback && this._callback.call(this._context, this._id));
                    }
                }),
                (f.BUY_BOOST_EVENT = 'BUY_BOOST_EVENT'),
                f
            );
        })(a.GamePopup);
    a.BoostBuyPopup = d;
    var e = (function (b) {
        function d(d) {
            var e = b.call(this) || this,
                f = 56,
                g = 15921906,
                h = 2055834,
                i = 'popups/greenSmallBtn',
                j = 0.84,
                k = 128;
            if (2 == d) {
                ((f = 70), (g = 16777215), (h = 13987332), (i = 'redMiniBtn'), (j = 0.9), (k = 136));
                var l = a.Locales.get('ui', 'profitLabel');
                ((e._profit = new c(0, 0, l[0], l[1])), (e._profit.anchor.x = 0), (e._hackIcon = new c(0, 0, 'ui', 'boostIco0004_hack')));
            }
            return (
                (e._bg = new PIXI.NineSlicePlane(Stage.getImage('ui', 'popups/buyBoost/bgBuyBoost'), 50, 50, 50, 50)),
                (e._bg.width = 692),
                (e._bg.height = k),
                (e._bg.x -= 0.5 * e._bg.width),
                (e._bg.y -= 0.5 * e._bg.height),
                (e._icon = new c(e._bg.x + 80, 0, 'ui', 'boostIco0001')),
                e._icon.scale.set(0.65),
                (e._text = new PIXI.Text('x1', { fontFamily: 'Pony', fontSize: a.Utils.int(f), fill: g, align: 'left', stroke: h, strokeThickness: 10, padding: 6 })),
                e._text.anchor.set(0, 0.5),
                (e._text.x = e._icon.x + 80),
                (e._btn = new a.PXButton('ui', [i])),
                (e._btn.x = 0.5 * e._bg.width - 130),
                e._btn.setAnimationScale(0.06, j),
                (e._price = new a.CoinText(2e3, null, a.CoinTextAnchor.LEFT, 100)),
                (e._price.x = -100),
                (e._price.y = -2),
                e.addChild(e._bg),
                e.addChild(e._icon),
                e.addChild(e._text),
                e.addChild(e._btn),
                e._profit && ((e._profit.x = e._bg.x), (e._profit.y = -15), e.addChild(e._profit), (e._hackIcon.x = e._icon.x), (e._hackIcon.y = e._icon.y), e._hackIcon.scale.set(e._icon.scale.x), e.addChild(e._hackIcon)),
                e._btn.addChild(e._price),
                e
            );
        }
        return (
            __extends(d, b),
            (d.prototype.setValue = function (a, b, c) {
                ((this._price.text = c), (this._text.text = 'x' + b), (this._icon.frameName = 'boostIco000' + (a + 1)), (this.id = a), (this.countValue = b), (this.priceValue = c), this._hackIcon && ((this._hackIcon.visible = !1), 3 == a && (this._hackIcon.visible = !0)));
            }),
            Object.defineProperty(d.prototype, 'enabled', {
                set: function (a) {
                    this._btn.enabled = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'btn', {
                get: function () {
                    return this._btn;
                },
                enumerable: !1,
                configurable: !0,
            }),
            d
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                ((d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._body = new b()), (d._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (d._bodyBg.width = 830), (d._bodyBg.height = 1027), (d._bodyBg.x -= 0.5 * d._bodyBg.width), (d._bodyBg.y -= 0.5 * d._bodyBg.height), d._body.addChild(d._bodyBg));
                var e = new PIXI.Text(a.StringManager.get('BOOSTER_INFO_CAPTION'), { fontFamily: 'Pony', fontSize: 60, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#2771b6', strokeThickness: 15, padding: 6 });
                (e.anchor.set(0.5), (e.y = -370));
                var f = -140;
                return (
                    (d._bg1 = new KY.Sprite(0, f, 'ui', 'popups/boosterInfo/bgInfo')),
                    (d._bg2 = new KY.Sprite(0, f + 230, 'ui', 'popups/boosterInfo/bgInfo')),
                    (d._bg3 = new KY.Sprite(0, f + 460, 'ui', 'popups/boosterInfo/bgInfo')),
                    d._bg1.scale.set(2),
                    d._bg2.scale.set(2),
                    d._bg3.scale.set(2),
                    (d._ico1 = new KY.Sprite(-250, d._bg1.y, 'ui', 'modifIcon0003')),
                    (d._ico2 = new KY.Sprite(-250, d._bg2.y, 'ui', 'modifIcon0002')),
                    (d._ico3 = new KY.Sprite(-250, d._bg3.y, 'ui', 'modifIcon0004')),
                    (d._cap1 = new PIXI.Text(a.StringManager.get('GUIDELINE_BOOST_CAP'), { fontFamily: 'Pony', fontSize: 40, fill: 2585014, align: 'left' })),
                    d._cap1.anchor.set(0, 0.5),
                    (d._cap1.x = -120),
                    (d._cap1.y = d._bg1.y - 55),
                    (d._cap2 = new PIXI.Text(a.StringManager.get('THREE_NEXT_BOOST_CAP'), { fontFamily: 'Pony', fontSize: 40, fill: 2585014, align: 'left' })),
                    d._cap2.anchor.set(0, 0.5),
                    (d._cap2.x = -120),
                    (d._cap2.y = d._bg2.y - 55),
                    (d._cap3 = new PIXI.Text(a.StringManager.get('ADD_FIVE_BOOST_CAP'), { fontFamily: 'Pony', fontSize: 40, fill: 2585014, align: 'left' })),
                    d._cap3.anchor.set(0, 0.5),
                    (d._cap3.x = -120),
                    (d._cap3.y = d._bg3.y - 55),
                    (d._desc1 = new PIXI.Text(a.StringManager.get('GUIDELINE_BOOST_INFO'), { fontFamily: Stage.FONT_BOLD, fontSize: 30, fill: 16777215, align: 'left', wordWrap: !0, wordWrapWidth: 416 })),
                    d._desc1.anchor.set(0),
                    (d._desc1.x = d._cap1.x),
                    (d._desc1.y = d._cap1.y + 30),
                    (d._desc2 = new PIXI.Text(a.StringManager.get('THREE_NEXT_BOOST_INFO'), { fontFamily: Stage.FONT_BOLD, fontSize: 30, fill: 16777215, align: 'left', wordWrap: !0, wordWrapWidth: 416 })),
                    d._desc2.anchor.set(0),
                    (d._desc2.x = d._cap2.x),
                    (d._desc2.y = d._cap2.y + 30),
                    (d._desc3 = new PIXI.Text(a.StringManager.get('ADD_FIVE_BOOST_INFO'), { fontFamily: Stage.FONT_BOLD, fontSize: 30, fill: 16777215, align: 'left', wordWrap: !0, wordWrapWidth: 416 })),
                    d._desc3.anchor.set(0),
                    (d._desc3.x = d._cap3.x),
                    (d._desc3.y = d._cap3.y + 30),
                    d.addChild(d._body),
                    d._body.addChild(d._bg1),
                    d._body.addChild(d._bg2),
                    d._body.addChild(d._bg3),
                    d._body.addChild(d._ico1),
                    d._body.addChild(d._ico2),
                    d._body.addChild(d._ico3),
                    d._body.addChild(d._cap1),
                    d._body.addChild(d._cap2),
                    d._body.addChild(d._cap3),
                    d._body.addChild(d._desc1),
                    d._body.addChild(d._desc2),
                    d._body.addChild(d._desc3),
                    d._body.addChild(e),
                    d.addChild(d._closeBtnContainer),
                    d._closeBtnContainer.addChild(d._closeBtn),
                    d
                );
            }
            return (
                __extends(d, c),
                (d.prototype.show = function () {
                    var a = this;
                    (c.prototype.show.call(this),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.1, { alpha: 1 }),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.1, {
                            alpha: 1,
                            onComplete: function () {
                                a.enable();
                            },
                        }));
                }),
                (d.prototype.setInteractive = function (a) {
                    this._closeBtn.enabled = a;
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.1, { alpha: 0 }));
                        })
                    );
                }),
                (d.prototype.update = function (a) {
                    0 == c.prototype.update.call(this, a);
                }),
                d
            );
        })(a.GamePopup);
    a.BoosterInfo = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d(e) {
                var f = c.call(this, 'ui', ['popups/gameover/lvlBoostBtnBg0001']) || this;
                return ((f._type = e), (f._icon = new b(0, 5, 'ui', 'modifIcon000' + (f._type + 1))), (f._bgCounter = new b(75, 75, 'ui0', 'uiBoostCounter')), (f._counter = new PIXI.Text('+', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 50 })), f._counter.anchor.set(0.5), f._bgCounter.addChild(f._counter), (f._checkIcon = new b(0, 0, 'ui', 'popups/gameover/check')), f._bgCounter.addChild(f._checkIcon), (f._checkIcon.visible = !1), (f._lvl = new PIXI.Text(a.StringManager.get('TXT_BOOSTER_LVL') + ' ' + (d.requiredLevel(f._type) + 1), { fontFamily: Stage.FONT_BOLD, fill: 1327209, align: 'center', fontSize: 30 })), (f._lvl.y = 65), f._lvl.anchor.set(0.5), (f._lvl.visible = !1), (f._hardMark = new b('ui', 'hardAlert')), (f._hardMark.x = -75), (f._hardMark.y = -75), f.addOnClick(f.__down, f), (f._checked = !1), f.setAnimationScale(0.05), f.addChild(f._icon), f.addChild(f._bgCounter), f.addChild(f._lvl), f.addChild(f._hardMark), f);
            }
            return (
                __extends(d, c),
                (d.prototype.update = function (a, b) {
                    if (this._hardMark.visible) {
                        this._hardMark.rotation = 0.4 * Math.sin(b / 15);
                        var c = 0.93 + 0.07 * Math.sin(b / 25);
                        this._hardMark.scale.set(c);
                    }
                }),
                (d.prototype.__down = function () {
                    (1 == this._checked && a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) == d.requiredLevel(this._type)) || (this._type == a.StartLevelPopup.TUTOR_MARK && ((a.StartLevelPopup.TUTOR_MARK = null), a.MI.get().popupManager.get(a.AllPopups.START_LEVEL).emit(a.StartLevelPopup.CLOSE_TUTOR)), this._value > 0 ? ((this._checked = !this._checked), this.check(this._checked)) : a.EconomyOptions.showShop());
                }),
                (d.prototype.show = function (a) {
                    this.isOpened ? ((this.enabled = !0), (this._bgCounter.visible = !0), (this._icon.frameName = 'modifIcon000' + (this._type + 1)), (this._icon.y = 5), (this._lvl.visible = !1), (this._isHardLevel = a), (this._hardMark.visible = this._isHardLevel)) : ((this.enabled = !1), (this._bgCounter.visible = !1), (this._icon.frameName = 'popups/gameover/lvlBoostLock'), (this._icon.y = -6), (this._lvl.visible = !0), (this._isHardLevel = !1), (this._hardMark.visible = !1));
                }),
                (d.prototype.check = function (a) {
                    0 != this.isOpened && ((this._checked = a), this._checked ? ((this._counter.visible = !1), this.replaceFrames(['popups/gameover/lvlBoostBtnBg0002']), (this._checkIcon.visible = !0), (this._hardMark.visible = !1)) : ((this._counter.visible = !0), this.replaceFrames(['popups/gameover/lvlBoostBtnBg0001']), (this._checkIcon.visible = !1), (this._hardMark.visible = this._isHardLevel)));
                }),
                (d.prototype.setCount = function (b) {
                    if (0 != this.isOpened) {
                        if (((this._value = b), this.isInfinity)) return ((this._counter.text = a.Utils.INIFINITY_CHAR), (this._counter.style.fontSize = 40), void this._counter.scale.set(1));
                        if (this._value <= 0) ((this._counter.text = '+'), (this._counter.style.fontSize = 50), this._counter.scale.set(1));
                        else {
                            ((this._counter.text = '' + this._value), (this._counter.style.fontSize = 36));
                            var c = this._counter.width,
                                d = 40 / c;
                            (d > 1 && (d = 1), this._counter.scale.set(d));
                        }
                    }
                }),
                (d.prototype.setEnabled = function (a) {
                    0 != this.isOpened && (this.enabled = a);
                }),
                Object.defineProperty(d.prototype, 'isInfinity', {
                    get: function () {
                        return this._value == a.UserGameData.INFINITY;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'value', {
                    get: function () {
                        return this._value;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'isCheck', {
                    get: function () {
                        return this._checked;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'isOpened', {
                    get: function () {
                        return 0 != a.UserGameData.isLoaded && a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) >= d.requiredLevel(this._type);
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (d.requiredLevel = function (b) {
                    switch (b) {
                        case 1:
                            return a.UserGameData.REQ_BOOST_LEVEL_THREENEXT;
                        case 2:
                            return a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE;
                        case 3:
                            return a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE;
                    }
                }),
                d
            );
        })(a.PXButton);
    a.BoosterPopupButton = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                ((c.ATLAS_KEY = 'lobby'), (d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._topContainer = new KY.Sprite(0, -Stage.centerY)), d._topContainer.activateRelativeMode(), (d._bottomContainer = new KY.Sprite(0, Stage.centerY)), d._bottomContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._closeBtn.alpha = 0));
                var f = a.Locales.get('lobby', 'dailyBonus/dbDailyBonusCap');
                ((d._caption = new c(0, 400, f[0], f[1])), (d._slots = []));
                for (var g = 320, h = 340, i = 295, j = 0; j < 7; j++) {
                    var k = new e(d, j + 1);
                    ((k.x = (j % 3) * g - 1 * g), (k.y = a.Utils.int(j / 3) * h + 0.5 * i + d._caption.y + 0.5 * d._caption.height + 100), 6 == j && (k.x = 0), d._slots.push(k));
                }
                ((d._getBtn = new a.PXButton('lobby', ['greenMidBtn'])), (d._getBtn.soundFileDown = ''), (d._getBtn.y = -200));
                var l = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16774131, fontSize: 43, align: 'center' }),
                    m = new PIXI.Text(a.StringManager.get('DAILY_POPUP_BUTTON_CAPTION'), l);
                m.anchor.set(0.5);
                var n = a.UserGameData.HOUR_24 - a.UserGameData.currentTimeDailyReward();
                (n < 0 && (n = 0), (d._timeText = new PIXI.Text(a.Utils.formatTime(n), { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'center' })), d._timeText.anchor.set(0.5), (d._timeText.y = d._getBtn.y), (d._timeText.visible = !1), d._getBtn.addChild(m), d._getBtn.addOnUp(d.take, d), d.addChild(d._closeBtnContainer), d.addChild(d._topContainer), d.addChild(d._bottomContainer));
                for (var j = 0; j < d._slots.length; j++) d._topContainer.addChild(d._slots[j]);
                return (d._closeBtnContainer.addChild(d._closeBtn), d._topContainer.addChild(d._caption), d._bottomContainer.addChild(d._getBtn), d._bottomContainer.addChild(d._timeText), d);
            }
            return (
                __extends(d, b),
                (d.prototype.take = function () {
                    (this.disable(), a.SoundsManager.getDailyReward(), (this._getBtn.alpha = 0.5), (this._closeBtn.alpha = 0));
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.DAILY_REWARD_DAY);
                    (this._slots[b - 1].complete(!0), 7 != b && this._slots[b].open(), a.UserGameData.getDailyReward(d.DATA), this._slots[b - 1].haveBoosters && a.BoostCounter.get().show(), this.once(d.EVENT_GET_REWARD, this.hide, this));
                }),
                (d.prototype.show = function () {
                    ((c.ATLAS_KEY = 'lobby'), (this._canGetGift = 0 != a.UserGameData.haveDailyReward()), b.prototype.show.call(this));
                    for (var d = a.UserGameData.getProperty(a.USER_PROPERTY.DAILY_REWARD_DAY), e = 0; e < this._slots.length; e++) this._slots[e].set(d == e + 1, d > e + 1);
                    (this._canGetGift ? ((this._getBtn.alpha = 1), (this._timeText.visible = !1)) : ((this._getBtn.alpha = 0), (this._timeText.visible = !0)), (this._closeBtn.alpha = 0), TweenLite.to(this._closeBtn, 0.2, { alpha: 1, delay: this._canGetGift ? 1 : 0 }), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }), this.enable());
                }),
                (d.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._getBtn.enabled = !!this._canGetGift && a));
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        b.prototype.hide.call(this),
                        TweenMax.killTweensOf(this._closeBtn),
                        TweenMax.killTweensOf(this),
                        new Promise(function (b) {
                            TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            });
                        })
                    );
                }),
                (d.prototype.update = function (c) {
                    if (0 != b.prototype.update.call(this, c)) {
                        for (var d = 0; d < this._slots.length; d++) this._slots[d].update(c);
                        if (0 == this._canGetGift) {
                            var e = a.UserGameData.HOUR_24 - a.UserGameData.currentTimeDailyReward();
                            (e < 0 && (e = 0), (this._timeText.text = a.Utils.formatTime(e)), 0 == e && ((this._canGetGift = !0), (this._timeText.visible = !1), (this._getBtn.alpha = 1), (this._getBtn.enabled = !0)));
                        }
                    }
                }),
                (d.init = function (a) {
                    d.DATA = a;
                }),
                (d.getCurrentDayData = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.DAILY_REWARD_DAY);
                    return this.getDayData(b);
                }),
                (d.getDayData = function (b) {
                    var c = a.UserGameData.getProperty(a.USER_PROPERTY.DAILY_REWARD_WEEK);
                    return d.DATA.weeks[c][b];
                }),
                (d.EVENT_GET_REWARD = 'EVENT_GET_REWARD_DR'),
                d
            );
        })(a.GamePopup);
    a.DailyPopup = d;
    var e = (function (b) {
            function e(d, e) {
                var g = b.call(this) || this;
                ((g._popup = d), (g._visual = new PIXI.NineSlicePlane(Stage.getImage('lobby', 'dailyBonus/dbDailySlot0001'), 50, 85, 50, 70)), (g._visual.width = 7 == e ? 893 : 253), (g._visual.height = 295), (g._visual.x -= 0.5 * g._visual.width), (g._visual.y -= 0.5 * g._visual.height));
                var h = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16774131, fontSize: 43, align: 'center' });
                ((g._caption = new PIXI.Text(a.StringManager.get('DAILY_POPUP_DAY') + ' ' + e, h)), g._caption.anchor.set(0.5), (g._caption.y = -105), (g._icon = []), (g._getIcon = []));
                for (var i = 7 == e ? 2 : 1, j = 0; j < i; j++) (g._icon.push(new f()), g._getIcon.push(new c('ui', 'shop/icons/lbLotIcon0001')), 2 == i && (g._icon[j].x = 100 * (0 == j ? -1 : 1)), (g._getIcon[j].x = g._icon[j].x), (g._getIcon[j].alpha = 0));
                ((g._day = e), (g._mark = new c('dailyBonus/dbRewardComplete')), (g._mark.y = 38), (g._mark.alpha = 0), g.addChild(g._visual), g.addChild(g._caption));
                for (var j = 0; j < g._icon.length; j++) (g.addChild(g._icon[j]), g.addChild(g._getIcon[j]));
                return (g.addChild(g._mark), g);
            }
            return (
                __extends(e, b),
                (e.prototype.set = function (a, b) {
                    ((this._mark.y = 38), (this._mark.alpha = 0), (this._visual.texture = Stage.getImage('lobby', 'dailyBonus/dbDailySlot000' + (a ? 2 : 1))));
                    for (var e = 0; e < this._icon.length; e++) {
                        var f = d.getDayData(this._day)[e];
                        (this._icon[e].set(f.id, f.count), this._icon[e].needSunray(a), this._icon[e].needClose(0 == a && 0 == b), (this._icon[e].alpha = 1), (this._getIcon[e].frameName = 'shop/icons/lbLotIcon' + c.zeroPad(f.id + 1, 4)), (this._getIcon[e].x = this._icon[e].x), (this._getIcon[e].alpha = 0));
                    }
                    b && this.complete(!1);
                }),
                (e.prototype.update = function (a) {
                    for (var b = 0; b < this._icon.length; b++) this._icon[b].update(a);
                }),
                (e.prototype.complete = function (a) {
                    var b = this;
                    this._visual.texture = Stage.getImage('lobby', 'dailyBonus/dbDailySlot0001');
                    for (var c = 0; c < this._icon.length; c++) (TweenLite.to(this._icon[c], 0.1, { alpha: 0.4 }), this._icon[c].needSunray(!1));
                    if (a) {
                        for (var c = 0; c < this._getIcon.length; c++) (this._getIcon[c].scale.set(0.5), (this._getIcon[c].y = 0), TweenLite.to(this._getIcon[c], 0.4, { alpha: 1, y: -100, delay: 0.1, overwite: 'auto' }), TweenLite.to(this._getIcon[c].scale, 0.5, { x: 1.5, y: 1.5, ease: Back.easeOut, delay: 0.1, overwite: 'auto' }), TweenLite.to(this._getIcon[c], 0.2, { alpha: 0, delay: 0.8, overwite: 'auto' }));
                        setTimeout(function () {
                            b._popup && b._popup.emit(d.EVENT_GET_REWARD);
                        }, 1e3);
                    }
                    ((this._mark.alpha = 0), this._mark.scale.set(1.5), TweenLite.to(this._mark, 0.2, { alpha: 1 }), TweenLite.to(this._mark.scale, 0.3, { x: 1, y: 1, ease: Back.easeOut }));
                }),
                (e.prototype.open = function () {
                    for (var a = 0; a < this._icon.length; a++) this._icon[a].open();
                }),
                Object.defineProperty(e.prototype, 'haveBoosters', {
                    get: function () {
                        for (var b = 0; b < this._icon.length; b++) {
                            var c = this._icon[b].id;
                            if (c > a.ShopLotItemType.MONEY && c < a.ShopLotItemType.ENDLESS_LIVES) return !0;
                        }
                        return !1;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                e
            );
        })(b),
        f = (function (b) {
            function d() {
                var a = b.call(this) || this,
                    d = 8;
                a._visual = new c(0, d, 'ui', 'shop/icons/lbLotIcon0001');
                var e = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16111196, fontSize: 43, align: 'center', lineJoin: 'round', stroke: 9000450, strokeThickness: 6, padding: 6 });
                return ((a._caption = new PIXI.Text('x10', e)), a._caption.anchor.set(0.5), (a._caption.y = 88 + d), (a._sunray = new c(0, a._visual.y, 'dailyBonus/dbSunRay')), (a._sunray.alpha = 0), (a._arg = 0), (a._container = new PIXI.Container()), (a._hideMark = new c(0, d + 20, 'dailyBonus/dbHideMark')), a._container.addChild(a._sunray), a._container.addChild(a._visual), a._container.addChild(a._caption), a.addChild(a._container), a.addChild(a._hideMark), a);
            }
            return (
                __extends(d, b),
                (d.prototype.set = function (b, d) {
                    ((this._id = b), (this._visual.frameName = 'shop/icons/lbLotIcon' + c.zeroPad(b + 1, 4)));
                    var e = 'x' + d;
                    (b == a.ShopLotItemType.ENDLESS_LIVES && (e = d <= 120 ? d + ' ' + a.StringManager.get('TXT_MINUTE') : Math.floor(d / 60) + ' ' + a.StringManager.get('TXT_HOUR')), (this._caption.text = e));
                }),
                (d.prototype.needClose = function (a) {
                    ((this._hideMark.angle = (7 - 20 * Math.random()) >> 0), (this._hideMark.visible = a), (this._container.visible = !a));
                }),
                (d.prototype.open = function () {
                    ((this._hideMark.visible = !1), (this._container.visible = !0));
                }),
                (d.prototype.needSunray = function (a) {
                    ((this._sunray.alpha = a ? 1 : 0), (this._arg = 0));
                }),
                (d.prototype.update = function (a) {
                    (this._hideMark.visible && (this._hideMark.rotation += 0.01 * Math.sin((this._arg += 0.1 * a))), this._sunray.alpha && ((this._sunray.rotation += 0.02 * a), (this._sunray.scale.x = this._sunray.scale.y = 1 + 0.1 * Math.sin((this._arg += 0.1 * a)))));
                }),
                Object.defineProperty(d.prototype, 'id', {
                    get: function () {
                        return this._id;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                return ((d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._body = new b()), (d._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (d._bodyBg.width = 830), (d._bodyBg.height = 1027), (d._bodyBg.x -= 0.5 * d._bodyBg.width), (d._bodyBg.y -= 0.5 * d._bodyBg.height), d._body.addChild(d._bodyBg), d.addChild(d._body), d.addChild(d._closeBtnContainer), d._closeBtnContainer.addChild(d._closeBtn), d);
            }
            return (
                __extends(d, c),
                (d.prototype.onload = function () {}),
                (d.prototype.show = function () {
                    var a = this;
                    (c.prototype.show.call(this),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                a.enable();
                            },
                        }));
                }),
                (d.prototype.showAfterLoading = function () {}),
                (d.prototype.setInteractive = function (a) {
                    this._closeBtn.enabled = a;
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (d.prototype.update = function (a) {
                    0 == c.prototype.update.call(this, a);
                }),
                d
            );
        })(a.GamePopup);
    a.EmptyPopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            ((c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), c._closeBtnContainer.activateRelativeMode(), (c._closeBtn = new a.PXButton('preloader', ['closeWhiteBtn'])), c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50), c._closeBtn.addOnClick(c.hide, c), (c._closeBtn.enabled = !1), (c._body = new PIXI.NineSlicePlane(Stage.getImage('preloader', 'miPopupBg'), 50, 150, 50, 50)));
            var d = 810;
            ((c._body.width = a.Utils.int(d)), (c._body.height = a.Utils.int(1.2 * c._body.width)), c._body.position.set(0.5 * -c._body.width, 0.5 * -c._body.height));
            var e = new KY.Sprite(-c._body.x, 70, 'preloader', 'miLogo');
            return (c._body.addChild(e), (c._text = new PIXI.Text('?', { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'center', wordWrap: !0, wordWrapWidth: a.Utils.int(0.9 * d), lineHeight: 70 })), c._text.anchor.set(0.5, 0), (c._text.x = -c._body.x), (c._text.y = -c._body.y - 250), (c._text.alpha = 0.9), c._text.scale.set(0.95), c.addChild(c._body), c._body.addChild(c._text), c.addChild(c._closeBtnContainer), c._closeBtnContainer.addChild(c._closeBtn), c);
        }
        return (
            __extends(c, b),
            (c.prototype.show = function (a, c) {
                var d = this;
                (void 0 === c && (c = !1),
                    b.prototype.show.call(this),
                    (this._text.text = a),
                    (this._needReload = c),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, { alpha: 1 }),
                    (this._body.y = this._body.height + 20),
                    TweenLite.to(this._body, 0.2, {
                        y: 0.5 * -this._body.height,
                        delay: 0.15,
                        ease: Circ.easeOut,
                        onComplete: function () {
                            d.enable();
                        },
                    }));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = a;
            }),
            (c.prototype.hide = function () {
                var a = this;
                return (
                    b.prototype.hide.call(this),
                    new Promise(function (b) {
                        (TweenLite.to(a, 0.1, {
                            alpha: 0,
                            delay: 0.2,
                            onComplete: function () {
                                (a.free(), a._needReload && location.reload(), b(), a.emit('END'));
                            },
                        }),
                            TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                    })
                );
            }),
            (c.prototype.update = function (a) {
                0 == b.prototype.update.call(this, a);
            }),
            c
        );
    })(a.GamePopup);
    a.ErrorPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._body = new b()), (e._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (e._bodyBg.width = 830), (e._bodyBg.height = 700), (e._bodyBg.x -= 0.5 * e._bodyBg.width), (e._bodyBg.y -= 0.5 * e._bodyBg.height), e._body.addChild(e._bodyBg));
                var f = new c(0, 0.5 * -e._body.height, 'ui0', 'popups/popupHead'),
                    g = new PIXI.Text(a.StringManager.get('EXIT_CONFIRMATION_CAPTION'), { fontFamily: 'Pony', fontSize: 70, fill: 14019327, align: 'center' });
                ((g.y = -6), g.anchor.set(0.5), f.addChild(g));
                var h = new c(0, -150, 'ui', 'popups/gameover/goHeart'),
                    i = new c(0, -140, 'ui', 'popups/gameover/goHeartMinus');
                ((e._heartContainer = new PIXI.Container()), (e._alertDesc = new PIXI.Text(a.StringManager.get('EXIT_CONFIRMATION_ALERT'), { fontFamily: 'Pony', fontSize: 50, fill: 2585014, align: 'center' })), e._alertDesc.anchor.set(0.5), (e._yesBtn = new a.PXButton('ui', ['redMiniBtn'])), e._yesBtn.addOnClick(e.yesExit, e), (e._noBtn = new a.PXButton('ui', ['popups/greenSmallBtn'])), e._noBtn.addOnClick(e.hide, e));
                var j = new PIXI.Text(a.StringManager.get('TXT_YES'), { fontFamily: 'Pony', fontSize: 50, fill: 16777215, align: 'center' });
                (j.anchor.set(0.5), e._yesBtn.addChild(j));
                var k = new PIXI.Text(a.StringManager.get('TXT_NO'), { fontFamily: 'Pony', fontSize: 50, fill: 16777215, align: 'center' });
                return (k.anchor.set(0.5), e._noBtn.addChild(k), (e._yesBtn.x = -150), (e._yesBtn.y = 180), (e._noBtn.x = -e._yesBtn.x), (e._noBtn.y = e._yesBtn.y), e.addChild(e._body), e._body.addChild(f), e._heartContainer.addChild(h), e._heartContainer.addChild(i), e._body.addChild(e._heartContainer), e._body.addChild(e._alertDesc), e._body.addChild(e._yesBtn), e._body.addChild(e._noBtn), e);
            }
            return (
                __extends(e, d),
                (e.prototype.yesExit = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b = this;
                        return __generator(this, function (c) {
                            return (
                                a.Statistics.event_leave(a.GameStage.instance.currentLevel),
                                a.UserGameData.levelsPlayed++,
                                this.hide().then(function () {
                                    switch (b._mode) {
                                        case a.GAME_MODE.NEW_YEAR22:
                                            (a.UserGameData.setProperty(a.USER_PROPERTY.NY_LEVEL, 0), a.GameStage.instance.game.states.start('NewYear22', !1, !1));
                                            break;
                                        default:
                                            (a.UserGameData.subProperty(a.USER_PROPERTY.HP), a.GameStage.instance.game.states.start('Lobby', !1, !0));
                                    }
                                }),
                                [2]
                            );
                        });
                    });
                }),
                (e.prototype.show = function (b) {
                    var c = this;
                    switch ((d.prototype.show.call(this), (this._mode = b), a.SoundsManager.exitConfirmationPopup(), b)) {
                        case a.GAME_MODE.NEW_YEAR22:
                            ((this._alertDesc.text = a.StringManager.get('EXIT_CONFIRMATION_ALERT_NY22')), (this._alertDesc.y = -110), (this._heartContainer.visible = !1));
                            break;
                        default:
                            ((this._alertDesc.text = a.StringManager.get('EXIT_CONFIRMATION_ALERT')), (this._alertDesc.y = 0), (this._heartContainer.visible = !0));
                    }
                    ((this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                c.enable();
                            },
                        }));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._yesBtn.enabled = a), (this._noBtn.enabled = a));
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (a) {
                    0 == d.prototype.update.call(this, a);
                }),
                e
            );
        })(a.GamePopup);
    a.ExitConfirmationPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._scrollContainer = new b()),
                    (e._closeBtnContainer = new KY.Sprite(Stage.centerX, 0)),
                    e._closeBtnContainer.activateRelativeMode(),
                    (e._closeBtnBg = new c(0, 0, 'ui0', 'popups/closeBtnBg0002')),
                    (e._closeBtnBg.x = -102),
                    (e._closeBtnBg.y = -165),
                    (e._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])),
                    e._closeBtn.position.set(e._closeBtnBg.x + 2, e._closeBtnBg.y - 2),
                    (e._arg = 0),
                    e._closeBtn.addOnClick(e.gotoGameOver, e),
                    (e._closeBtn.enabled = !1),
                    (e._body = new c(0, 0, 'ui0', 'popups/fail/failTargetBg')),
                    (e._body.width = Stage.screenWidth + 2),
                    (e._iconContainer = new c(-Stage.centerX, 0)),
                    e._iconContainer.activateRelativeMode(),
                    (e._icon = new c(150, 0, 'ui0', 'popups/fail/failIcon')),
                    e._iconContainer.addChild(e._icon),
                    (e._mainText = new PIXI.Text(a.StringManager.get('FAIL_DESCRIPTION'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 50, lineJoin: 'round', stroke: '#15528c', strokeThickness: 10, wordWrap: !0, wordWrapWidth: 560, padding: 6 })),
                    e._mainText.anchor.set(0.5),
                    (e._retry = new a.PXButton('ui0', ['popups/greenLongBtn'])),
                    (e._retry.y = 300),
                    e._retry.addOnDown(e.replay, e),
                    (e._adsBtnIcon = new c(0, 0, 'ui0', 'popups/fail/failBigAds')),
                    (e._adsBtnIcon.x = -200),
                    (e._adsBtnIcon.alpha = 0.6),
                    (e._failRetryCap = new PIXI.Text(a.StringManager.get('FAIL_CAPTION'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 45 })),
                    e._failRetryCap.anchor.set(0.5),
                    (e._failRetryCap.x = 60),
                    (e._coinBtnIcon = new a.CoinText(0, void 0, a.CoinTextAnchor.LEFT, 100)),
                    (e._coinBtnIcon.x = -267));
                var f = new c(200, 0, 'ui0', 'popups/fail/failBtnThreshold');
                e._coinBtnIcon.addChild(f);
                var g = new PIXI.Text(a.StringManager.get('FAIL_CAPTION'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 45 });
                return (g.anchor.set(0, 0.5), (g.x = 240), g.scale.set(0.8), e._coinBtnIcon.addChild(g), (e._5plusIcon = new c(0.5 * e._retry.width - 10, 0.5 * -e._retry.height + 4, 'ui0', 'popups/levelTarget/levelTarget5plusIcon')), e.addChild(e._body), e.addChild(e._scrollContainer), e._scrollContainer.addChild(e._iconContainer), e._scrollContainer.addChild(e._mainText), e._scrollContainer.addChild(e._retry), e._scrollContainer.addChild(e._closeBtnContainer), e._closeBtnContainer.addChild(e._closeBtnBg), e._closeBtnContainer.addChild(e._closeBtn), e);
            }
            return (
                __extends(e, d),
                (e.prototype.createSkipBtn = function () {
                    if (!this._skip) {
                        ((this._skip = new a.PXButton('ui', ['redLongBtn'])), (this._skip.y = 0.5 * Stage.screenHeight - 150));
                        var b = new c(0, 0, 'ui0', 'popups/fail/failBigAds');
                        ((b.x = -200), (b.alpha = 0.6), (this._skipCaption = new PIXI.Text(a.StringManager.get('BTN_SKIP_CAPTION'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 45 })), this._skipCaption.anchor.set(0.5), (this._skipCaption.alpha = 0.8), (this._skipCaption.x = 60), this._skip.addOnDown(this.skip, this), this._skip.setAnimationScale(0.05, 0.8), this._skip.addChild(b), this._skip.addChild(this._skipCaption), this._scrollContainer.addChild(this._skip));
                    }
                }),
                (e.prototype.gotoGameOver = function () {
                    (this.hide(), a.UserGameData.subProperty(a.USER_PROPERTY.HP), a.MI.get().popupManager.add(a.AllPopups.GAME_OVER, a.GameStage.instance.currentLevel, this._mode));
                }),
                (e.prototype.skip = function () {
                    var b = this,
                        c = a.MI.get().time - a.UserGameData.getProperty(a.USER_PROPERTY.SKIP_TIME);
                    c < a.UserGameData.SKIP_TIME_INTERVAL ||
                        ((this._retry.enabled = !1),
                        (this._skip.enabled = !1),
                        a.LoaderScreen.show(!0),
                        a.MI.get()
                            .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.LEVEL_END)
                            .then(function () {
                                (a.LoaderScreen.hide(), b.skipLevel());
                            })
                            .catch(function (c) {
                                (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), (b._retry.enabled = !0), (b._skip.enabled = !0));
                            }));
                }),
                (e.prototype.skipLevel = function () {
                    (a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) < this._currentLvl + 1 && a.UserGameData.setProperty(a.USER_PROPERTY.CURRENT_LEVEL, this._currentLvl + 1),
                        a.UserGameData.levelComplete(this._currentLvl, 0, 0, !0),
                        a.UserGameData.levelsPlayed++,
                        a.UserGameData.save('FailPopup-skipLevel'),
                        this.hide().then(function () {
                            a.GameStage.instance.game.states.start('Lobby', !1, !1);
                        }));
                }),
                (e.prototype.replay = function () {
                    var b = this;
                    return (
                        (this._retry.enabled = !1),
                        this._skip && (this._skip.enabled = !1),
                        this._isFirstLaunch
                            ? void this.continue()
                            : void (this._adsReplay
                                  ? (a.LoaderScreen.show(!0),
                                    a.MI.get()
                                        .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.LEVEL_END)
                                        .then(function () {
                                            (a.LoaderScreen.hide(), b.continue());
                                        })
                                        .catch(function (c) {
                                            (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), (b._retry.enabled = !0));
                                        }))
                                  : a.EconomyOptions.buyForCoins(this._curPrice, !1, a.STATS_GAME_RESOURCE_PLACEMENT.LEVEL_FAIL)
                                    ? this.continue()
                                    : (this._retry.enabled = !0))
                    );
                }),
                (e.prototype.continue = function () {
                    (this.hide(), a.GameStage.instance.addExtraBubble(5), a.GameStage.instance.grid.continue());
                }),
                (e.prototype.show = function (b, c, e) {
                    var f = this;
                    (d.prototype.show.call(this), (this._mode = e), (this._currentLvl = c), (this._scrollContainer.visible = !1), (this._closeBtnContainer.visible = !1), (this._body.visible = !1), this._skip && ((this._skip.visible = !1), (this._skip.enabled = !1)), (this._isFirstLaunch = c < a.UserGameData.IS_FIRST_LAUNCH_LEVEL), a.SoundsManager.showAlmostFailPopup(), a.Statistics.progress(a.STATS_PROGRESSION_STATUS.FAIL, String(a.GameStage.instance.currentLevel)), (this._curPrice = this.getPrice(b)), this._retry.removeChildren(), (this._arg = 0));
                    var g = a.UserGameData.getProperty(a.USER_PROPERTY.MONEY);
                    if (this._isFirstLaunch) (this._failRetryCapFirst || ((this._failRetryCapFirst = new PIXI.Text(a.StringManager.get('FAIL_CAPTION_FISRT'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 45 })), this._failRetryCapFirst.anchor.set(0.5)), this._retry.addChild(this._failRetryCapFirst));
                    else if (this._curPrice <= g) ((this._coinBtnIcon.text = this._curPrice), this._retry.addChild(this._coinBtnIcon), (this._adsReplay = !1));
                    else {
                        (this._retry.addChild(this._adsBtnIcon), this._retry.addChild(this._failRetryCap), (this._adsReplay = !0));
                        var h = 0.5;
                        if (((h = this._currentLvl < 10 ? 0.7 : this._currentLvl < 30 ? 0.5 : this._currentLvl < 50 ? 0.4 : 0.2), Math.random() <= h || b > 1)) return void this.gotoGameOver();
                    }
                    ((this._scrollContainer.visible = !0),
                        (this._closeBtnContainer.visible = !0),
                        (this._body.visible = !0),
                        this._retry.addChild(this._5plusIcon),
                        (this._scrollContainer.x = 0),
                        (this._scrollContainer.y = 0),
                        (this._scrollContainer.alpha = 0),
                        (this._body.y = 0),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                f.enable();
                            },
                        }),
                        TweenLite.to(this._scrollContainer, 0.2, {
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                f.enable();
                            },
                        }),
                        this._isFirstLaunch ? ((this._closeBtn.visible = !1), (this._closeBtnBg.visible = !1)) : ((this._closeBtn.visible = !0), (this._closeBtnBg.visible = !0)));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = !this._isFirstLaunch && a), (this._retry.enabled = a), this._skip && (this._skip.enabled = !!this._skip.visible && a));
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }),
                                TweenLite.to(a._scrollContainer, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (b) {
                    if (0 != d.prototype.update.call(this, b) && ((this._retry.x = this._mainText.x = 0.5 * (this._closeBtnContainer.x + this._closeBtnBg.x + this._iconContainer.x + this._icon.x)), this._skip && (this._skip.x = this._retry.x), (this._5plusIcon.rotation = 0.1 * Math.sin(2.5 * this._arg)), (this._arg += 0.015), this._skip && this._skip.visible)) {
                        var c = a.MI.get().time - a.UserGameData.getProperty(a.USER_PROPERTY.SKIP_TIME);
                        c < a.UserGameData.SKIP_TIME_INTERVAL ? (this._skipCaption.text = a.Utils.formatTime(a.UserGameData.SKIP_TIME_INTERVAL - c)) : (this._skipCaption.text = a.StringManager.get('BTN_SKIP_CAPTION'));
                    }
                }),
                (e.prototype.getPrice = function (b) {
                    switch (b) {
                        case 0:
                            return a.EconomyOptions.RETRY_1_COST;
                        case 1:
                            return a.EconomyOptions.RETRY_2_COST;
                        default:
                            return a.EconomyOptions.RETRY_3_COST;
                    }
                }),
                e
            );
        })(a.GamePopup);
    a.FailPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._body = new b()), (e._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (e._bodyBg.width = 830), (e._bodyBg.height = 1027), (e._bodyBg.x -= 0.5 * e._bodyBg.width), (e._bodyBg.y -= 0.5 * e._bodyBg.height), e._body.addChild(e._bodyBg), (e._modifBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'bgModifSlice9'), 40, 40, 40, 40)), (e._modifBg.width = 676), (e._modifBg.height = 330), (e._modifBg.x = 0.5 * -e._modifBg.width), (e._modifBg.y = 0.5 * -e._modifBg.height + 120), e._body.addChild(e._modifBg));
                var f = new c(0, 0.5 * -e._body.height, 'ui0', 'popups/popupHead'),
                    g = a.Locales.get('ui0', 'popups/win/winCapLevelText');
                ((e._topLvlCap = new c(0, 0, g[0], g[1])), f.addChild(e._topLvlCap), (e._caption = new PIXI.Text(a.StringManager.get('GAME_OVER_CAPTION_1'), { fontFamily: 'Pony', fontSize: 56, fill: 2585014, align: 'center', padding: 6 })), e._caption.anchor.set(0.5), (e._caption.y = -360));
                var h = new PIXI.Text(a.StringManager.get('CHOOSE_BOOSTER') + ':', { fontFamily: 'Pony', fontSize: 50, fill: 6260683, align: 'center', padding: 6 });
                (h.anchor.set(0.5),
                    (h.y = 0),
                    (h.x = -10),
                    (e._heartIcon = new c(0, -200, 'ui', 'popups/gameover/goHeart')),
                    (e._heartIconAdd = new c(0, -190, 'ui', 'popups/gameover/goHeartMinus')),
                    (e._nextBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])),
                    (e._nextBtn.y = 380),
                    e._nextBtn.addOnClick(e.next, e),
                    (e._nextBtnCaption = new PIXI.Text(a.StringManager.get('GAME_OVER_REPLAY'), { fontFamily: 'Pony', fontSize: 45, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 6 })),
                    e._nextBtnCaption.anchor.set(0.5),
                    e._nextBtn.addChild(e._nextBtnCaption),
                    (e._nextBtnCaption.y = 0),
                    (e._lvl = new PIXI.Text('1', { fontFamily: 'Pony', fontSize: 70, fill: 14019327, align: 'center' })),
                    e._lvl.anchor.set(0.5),
                    (e._lvl.y = 0.5 * -e._body.height + 10),
                    (e._guidelineBtn = new a.BoosterPopupButton(2)),
                    (e._threeNextBubbleBtn = new a.BoosterPopupButton(1)),
                    (e._plusFiveBubbleBtn = new a.BoosterPopupButton(3)),
                    (e._guidelineBtn.x = -220),
                    (e._plusFiveBubbleBtn.x = -e._guidelineBtn.x),
                    (e._guidelineBtn.y = 154),
                    (e._threeNextBubbleBtn.y = e._guidelineBtn.y),
                    (e._plusFiveBubbleBtn.y = e._guidelineBtn.y),
                    (e._infoBtn = new a.PXButton('ui', ['popups/gameover/boostInfoBtn'])),
                    (e._infoBtn.x = h.x + 0.5 * h.width + 40 + 10),
                    (e._infoBtn.y = h.y),
                    e._infoBtn.addOnClick(e.showBoostInfo, e));
                var i = a.Locales.get('ui', 'hardMark');
                return ((e._hardMark = new c(i[0], i[1])), (e._hardMark.y = 0.5 * e._body.height + 120), (e._hardMark.alpha = 0), (e._ny22_splashContainer = new b()), e.disable(), e._body.addChild(e._ny22_splashContainer), e._body.addChild(f), e._body.addChild(e._nextBtn), e._body.addChild(e._lvl), e._body.addChild(e._hardMark), e.addChild(e._body), e._body.addChild(e._caption), e._body.addChild(e._heartIcon), e._body.addChild(e._heartIconAdd), e._body.addChild(h), e._body.addChild(e._guidelineBtn), e._body.addChild(e._threeNextBubbleBtn), e._body.addChild(e._plusFiveBubbleBtn), e._body.addChild(e._infoBtn), e);
            }
            return (
                __extends(e, d),
                (e.prototype.update = function (a, b) {
                    if (0 != d.prototype.update.call(this, a)) {
                        if (((this._heartIcon.x = 15 * Math.cos(0.1 * b)), (this._heartIconAdd.x = this._heartIcon.x), this._hardMark.visible)) {
                            var c = 0.95 + 0.05 * Math.sin(b / 15);
                            this._hardMark.scale.set(c);
                        }
                        (this._guidelineBtn.update(a, b), this._threeNextBubbleBtn.update(a, b), this._plusFiveBubbleBtn.update(a, b));
                    }
                }),
                (e.prototype.show = function (b, d) {
                    switch (((this._mode = d), d)) {
                        case a.GAME_MODE.NEW_YEAR22:
                            (this._ny22_hat ? ((this._ny22_hat.visible = !0), (this._ny22_splash.visible = !0)) : ((this._ny22_hat = new c(-260, -580, 'newYear', 'hat')), (this._ny22_splash = new c(0, -280, 'newYear', 'popup_christmas')), this._body.addChild(this._ny22_hat), this._ny22_splashContainer.addChild(this._ny22_splash)), this.showNewYers22(b));
                            break;
                        default:
                            (this._ny22_hat && ((this._ny22_hat.visible = !1), (this._ny22_splash.visible = !1)), this.showDefault(b));
                    }
                }),
                (e.prototype.showNewYers22 = function (b) {
                    var c = this;
                    (d.prototype.show.call(this),
                        (this._gameOverJingleNumber = a.SoundsManager.showGameOverPopup()),
                        (this.visible = !0),
                        (this._noLives = !1),
                        (this._hardMark.visible = !1),
                        a.UserGameData.setProperty(a.USER_PROPERTY.NY_LEVEL, 0),
                        (this._lvl.text = String(b + 1)),
                        (this._lvl.style.fontSize = 70),
                        (this._topLvlCap.alpha = 1),
                        (this._lvl.y = 0.5 * -this._bodyBg.height + 10),
                        (this._heartIcon.visible = !1),
                        (this._heartIconAdd.visible = !1),
                        (this._caption.visible = !1),
                        (this._nextBtnCaption.text = a.StringManager.get('GAME_OVER_REPLAY_NY22')),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                c.enable();
                            },
                        }),
                        this._guidelineBtn.show(!1),
                        this._threeNextBubbleBtn.show(!1),
                        this._plusFiveBubbleBtn.show(!1),
                        this._guidelineBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_COUNT)),
                        this._threeNextBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_COUNT)),
                        this._plusFiveBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_COUNT)),
                        a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_SELECTED) && this._guidelineBtn.value ? this._guidelineBtn.check(!0) : this._guidelineBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_SELECTED) && this._threeNextBubbleBtn.value ? this._threeNextBubbleBtn.check(!0) : this._threeNextBubbleBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED) && this._plusFiveBubbleBtn.value ? this._plusFiveBubbleBtn.check(!0) : this._plusFiveBubbleBtn.check(!1));
                }),
                (e.prototype.showDefault = function (b) {
                    var c = this;
                    (d.prototype.show.call(this), (this._gameOverJingleNumber = a.SoundsManager.showGameOverPopup()), (this.visible = !0), (this._heartIcon.visible = !0), (this._heartIconAdd.visible = !0), (this._caption.visible = !0), (this._nextBtnCaption.text = a.StringManager.get('GAME_OVER_REPLAY')));
                    var e = a.Lobby.HARD_LEVELS.indexOf(b + 1) != -1;
                    ((this._hardMark.visible = !1), e && ((this._hardMark.visible = !0), (this._hardMark.alpha = 0), TweenLite.to(this._hardMark, 0.2, { alpha: 1, delay: 0.4 })), (this._noLives = !a.UserGameData.isInfinityHP && a.UserGameData.getProperty(a.USER_PROPERTY.HP) < 1), a.UserGameData.levelComplete(b, 0, 0), this._noLives ? (this._caption.text = a.StringManager.get('GAME_OVER_CAPTION_2')) : (this._caption.text = a.StringManager.get('GAME_OVER_CAPTION_1')));
                    var f = b == -1;
                    ((this._lvl.text = f ? a.StringManager.get('INFINITY_MODE_CAPTION') : '' + (b + 1)),
                        f ? ((this._lvl.style.fontSize = 50), (this._topLvlCap.alpha = 0), (this._lvl.y = 0.5 * -this._bodyBg.height - 8)) : ((this._lvl.style.fontSize = 70), (this._topLvlCap.alpha = 1), (this._lvl.y = 0.5 * -this._bodyBg.height + 10)),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                c.enable();
                            },
                        }),
                        this._guidelineBtn.show(e),
                        this._threeNextBubbleBtn.show(e),
                        this._plusFiveBubbleBtn.show(e),
                        this._guidelineBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_COUNT)),
                        this._threeNextBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_COUNT)),
                        this._plusFiveBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_COUNT)),
                        a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_SELECTED) && this._guidelineBtn.value ? this._guidelineBtn.check(!0) : this._guidelineBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_SELECTED) && this._threeNextBubbleBtn.value ? this._threeNextBubbleBtn.check(!0) : this._threeNextBubbleBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED) && this._plusFiveBubbleBtn.value ? this._plusFiveBubbleBtn.check(!0) : this._plusFiveBubbleBtn.check(!1));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._nextBtn.enabled = a), this._guidelineBtn.setEnabled(a), this._threeNextBubbleBtn.setEnabled(a), this._plusFiveBubbleBtn.setEnabled(a), (this._infoBtn.enabled = a));
                }),
                (e.prototype.showBoostInfo = function () {
                    a.MI.get().popupManager.show(a.AllPopups.BOOSTER_INFO);
                }),
                (e.prototype.hide = function () {
                    var b = this;
                    return (
                        d.prototype.hide.call(this),
                        this._hardMark.visible && TweenLite.to(this._hardMark, 0.2, { alpha: 0 }),
                        new Promise(function (c) {
                            (TweenLite.to(b, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (b.free(), a.SoundsManager.stopGameOverPopupJungle(b._gameOverJingleNumber), (b._gameOverJingleNumber = null), c());
                                },
                            }),
                                TweenLite.to(b._body, 0.2, { y: b._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.close = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b,
                            c,
                            d,
                            e = this;
                        return __generator(this, function (f) {
                            switch (f.label) {
                                case 0:
                                    if ((this.disable(), (b = !1), (c = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL)), !(c > 4))) return [3, 5];
                                    (a.LoaderScreen.show(!0), (f.label = 1));
                                case 1:
                                    return (f.trys.push([1, 3, , 4]), [4, a.MI.get().showAds(a.ADS_TYPE.INTERSTITIAL, a.STATS_AD_PLACEMENT.LEVEL_END)]);
                                case 2:
                                    return (f.sent(), (b = !0), [3, 4]);
                                case 3:
                                    return ((d = f.sent()), [3, 4]);
                                case 4:
                                    (a.LoaderScreen.hide(), (f.label = 5));
                                case 5:
                                    return (
                                        a.UserGameData.adsCounterFinishedLevel(b),
                                        a.UserGameData.levelsPlayed++,
                                        this.hide().then(function () {
                                            switch (e._mode) {
                                                case a.GAME_MODE.NEW_YEAR22:
                                                    a.GameStage.instance.game.states.start('NewYear22', !1, !1);
                                                    break;
                                                default:
                                                    a.GameStage.instance.game.states.start('Lobby', !1, !1);
                                            }
                                        }),
                                        [2]
                                    );
                            }
                        });
                    });
                }),
                (e.prototype.staticNext = function () {
                    (this._guidelineBtn.isCheck ? (a.UserGameData.setProperty(a.USER_PROPERTY.GUIDELINE_SELECTED, 1), a.UserGameData.subProperty(a.USER_PROPERTY.GUIDELINE_COUNT), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.GUIDELINE, 1, a.STATS_GAME_RESOURCE_PLACEMENT.LEVEL_FAIL)) : a.UserGameData.setProperty(a.USER_PROPERTY.GUIDELINE_SELECTED, 0),
                        this._threeNextBubbleBtn.isCheck ? (a.UserGameData.setProperty(a.USER_PROPERTY.THREENEXT_SELECTED, 1), a.UserGameData.subProperty(a.USER_PROPERTY.THREENEXT_COUNT), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.THREENEXT, 1, a.STATS_GAME_RESOURCE_PLACEMENT.LEVEL_FAIL)) : a.UserGameData.setProperty(a.USER_PROPERTY.THREENEXT_SELECTED, 0),
                        this._plusFiveBubbleBtn.isCheck ? (a.UserGameData.setProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED, 1), a.UserGameData.subProperty(a.USER_PROPERTY.PLUSFIVE_COUNT), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.PLUSFIVE, 1, a.STATS_GAME_RESOURCE_PLACEMENT.LEVEL_FAIL)) : a.UserGameData.setProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED, 0),
                        a.UserGameData.save('GameOverPopup-next'),
                        a.GameStage.instance.replay(this._guidelineBtn.isCheck, this._threeNextBubbleBtn.isCheck, this._plusFiveBubbleBtn.isCheck));
                }),
                (e.prototype.next = function () {
                    var b = this;
                    switch (this._mode) {
                        case a.GAME_MODE.NEW_YEAR22:
                            this.hide().then(function () {
                                a.GameStage.instance.game.states.start('NewYear22', !1, !1);
                            });
                            break;
                        default:
                            this._noLives
                                ? a.MI.get().popupManager.show(a.AllPopups.NO_LIVE, 'go')
                                : this.hide().then(function () {
                                      b.staticNext();
                                  });
                    }
                }),
                e
            );
        })(a.GamePopup);
    a.GameOverPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var f = d.call(this) || this;
                ((f._body = new b()),
                    (f._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)),
                    (f._bodyBg.width = 830),
                    (f._bodyBg.height = 1027),
                    (f._bodyBg.x -= 0.5 * f._bodyBg.width),
                    (f._bodyBg.y -= 0.5 * f._bodyBg.height),
                    f._body.addChild(f._bodyBg),
                    (f._body.interactive = !0),
                    (f._closeBtnBg = new KY.Sprite(0.5 * f._body.width - 34, 0.5 * -f._body.height + 30, 'ui0', 'popups/closeBtnBg0001')),
                    (f._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])),
                    (f._closeBtn.x = f._closeBtnBg.x + 2),
                    (f._closeBtn.y = f._closeBtnBg.y - 2),
                    f._closeBtn.addOnClick(f.hide, f),
                    (f._caption = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 2055834, align: 'center' })),
                    f._caption.anchor.set(0.5),
                    (f._caption.y = 0.5 * -f._body.height + 110),
                    (f._caption.alpha = 0.9),
                    (f._description = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 2055834, align: 'center', wordWrap: !0, wordWrapWidth: 580, dropShadowAlpha: 0.4, dropShadowAngle: 2, dropShadowBlur: 2, dropShadowDistance: 4 })),
                    f._description.anchor.set(0.5));
                var g = new c(0, 0, 'ui', 'popups/buyBoost/buyIcoBg');
                ((g.y = f._caption.y + 180), (f._icon = new c(0, g.y, 'garden', 'ui/actionIcon0002')), f._icon.scale.set(0.8));
                var h = new c(120, g.y + 30, 'ui0', 'popups/buyBoost/capx1');
                ((f._description.y = g.y + 170), (f._lots = []));
                for (var i = 0; i < 3; i++) (f._lots.push(new e(i, f)), (f._lots[i].y = g.y + 315 + 140 * i));
                (f._body.addChild(f._closeBtnBg), f._body.addChild(f._closeBtn), f._body.addChild(f._caption), f._body.addChild(g), f._body.addChild(f._icon), f._body.addChild(h));
                for (var i = 0; i < 3; i++) f._body.addChild(f._lots[i]);
                return (f.addChild(f._body), f._body.addChild(f._description), f);
            }
            return (
                __extends(f, d),
                (f.prototype.show = function (b, c, e) {
                    var f = this;
                    if ((d.prototype.show.call(this), (this._id = b), (this._callback = c), (this._context = e), 1 == b)) {
                        ((this._caption.text = a.StringManager.get('GRADEN_FERTILIZER_CAPTION')), (this._icon.frameName = 'actions/fertilizerBag'));
                        var g = (((a.UserGameData.GADEN_FERTILIZER_BOOST / a.UserGameData.HOUR) * 10) >> 0) / 10;
                        this._description.text = a.StringManager.get('GRADEN_FERTILIZER_INFO', g + ' ' + a.Utils.declension(g >> 0, a.StringManager.array('HOUR')));
                    } else ((this._caption.text = a.StringManager.get('GRADEN_PESTICIDES_CAPTION')), (this._icon.frameName = 'actions/pesticidesCap'), (this._description.text = a.StringManager.get('GRADEN_PESTICIDES_INFO')));
                    for (var h = 0; h < 3; h++) this._lots[h].show(b);
                    ((this.visible = !0),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                f.enable();
                            },
                        }));
                }),
                (f.prototype.tap = function (a, b) {
                    this.hide();
                }),
                (f.prototype.setInteractive = function (a) {
                    this._closeBtn.enabled = a;
                    for (var b = 0; b < 3; b++) this._lots[b].enabled = a;
                }),
                (f.prototype.hide = function (a) {
                    var b = this;
                    return (
                        void 0 === a && (a = !1),
                        d.prototype.hide.call(this),
                        this._callback && this._callback.call(this._context, this._id),
                        new Promise(function (c) {
                            1 == a
                                ? (b.free(), c())
                                : (TweenLite.to(b, 0.1, {
                                      alpha: 0,
                                      delay: 0.2,
                                      onComplete: function () {
                                          (b.free(), c());
                                      },
                                  }),
                                  TweenLite.to(b._body, 0.2, { y: b._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (f.prototype.update = function (a) {
                    0 != d.prototype.update.call(this, a) && this._lots && this._lots.length && this._lots[0].update(a);
                }),
                (f.BUY_BOOST_EVENT = 'BUY_BOOST_EVENT'),
                f
            );
        })(a.GamePopup);
    a.GardenBuyPopup = d;
    var e = (function (b) {
        function d(d, e) {
            var f = b.call(this) || this;
            ((f._id = d), (f._popupParent = e), (f._canPress = !0));
            var g = 56,
                h = 15921906,
                i = 2055834,
                j = 'popups/greenSmallBtn',
                k = 0.84,
                l = 128;
            return (
                (f._bg = new PIXI.NineSlicePlane(Stage.getImage('ui', 'popups/buyBoost/bgBuyBoost'), 50, 50, 50, 50)),
                (f._bg.width = 692),
                (f._bg.height = l),
                (f._bg.x -= 0.5 * f._bg.width),
                (f._bg.y -= 0.5 * f._bg.height),
                (f._icon = new c(f._bg.x + 80, 0, 'garden', 'ui/actionIcon0002')),
                f._icon.scale.set(0.75),
                (f._text = new PIXI.Text('x' + (2 == d ? '5' : '1'), { fontFamily: 'Pony', fontSize: a.Utils.int(g), fill: h, align: 'left', stroke: i, strokeThickness: 10, padding: 6 })),
                f._text.anchor.set(0, 0.5),
                (f._text.x = f._icon.x + 80),
                (f._btn = new a.PXButton('ui', [j])),
                (f._btn.x = 0.5 * f._bg.width - 130),
                f._btn.setAnimationScale(0.06, k),
                f._btn.addOnClick(f.action, f),
                (f._btnText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center' })),
                f._btnText.anchor.set(0.5),
                (f._btnText.alpha = 0.9),
                (f._btnText.y = 1),
                (f._priceValue = 0),
                0 != d ? ((f._price = new a.CoinText(2e3, null, a.CoinTextAnchor.LEFT, 100)), (f._price.x = -100), (f._price.y = -2)) : ((f._adsIcon = new c('ui0', 'adsIco')), (f._adsIcon.y = -3), f._adsIcon.scale.set(0.8), (f._adsIcon.alpha = 0.8), f._btn.addChild(f._adsIcon), f._btn.addChild(f._btnText)),
                f.addChild(f._bg),
                f.addChild(f._icon),
                f.addChild(f._text),
                f.addChild(f._btn),
                f._price && f._btn.addChild(f._price),
                f
            );
        }
        return (
            __extends(d, b),
            (d.prototype.show = function (b) {
                if (((this._canPress = !0), (this._bid = b), (this._icon.frameName = 1 == b ? 'ui/actionIcon0002' : 'ui/actionIcon0003'), 1 == b ? (1 == this._id ? ((this._priceValue = a.EconomyOptions.FERTILIZER_COST), (this._price.text = this._priceValue)) : 2 == this._id && ((this._priceValue = 4 * a.EconomyOptions.FERTILIZER_COST), (this._price.text = this._priceValue))) : 1 == this._id ? ((this._priceValue = a.EconomyOptions.PESTICIDES_COST), (this._price.text = this._priceValue)) : 2 == this._id && ((this._priceValue = 4 * a.EconomyOptions.PESTICIDES_COST), (this._price.text = this._priceValue)), 0 == this._id)) {
                    var c = a.MI.get().time - d.ADS_TIME;
                    c < d.ADS_TIME_DELAY ? ((this._canPress = !1), this._btn.replaceFrames(['grayMiniBtn']), (this._btnText.visible = !0), (this._adsIcon.visible = !1)) : ((this._canPress = !0), this._btn.replaceFrames(['popups/greenSmallBtn']), (this._btnText.visible = !1), (this._adsIcon.visible = !0));
                }
            }),
            (d.prototype.update = function (b) {
                if (this._btnText && this._btnText.visible) {
                    var c = a.MI.get().time,
                        e = c - d.ADS_TIME;
                    e < d.ADS_TIME_DELAY ? (this._btnText.text = String(a.Utils.formatTime(d.ADS_TIME_DELAY - e))) : ((this._btnText.visible = !1), (this._adsIcon.visible = !0), (this._canPress = !0), this._btn.replaceFrames(['popups/greenSmallBtn']), (this._btn.enabled = !0));
                }
            }),
            (d.prototype.addBids = function (b) {
                1 == this._bid ? a.UserGameData.addProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT, b) : a.UserGameData.addProperty(a.USER_PROPERTY.GARDEN_PESTICIDES_COUNT, b);
            }),
            (d.prototype.action = function () {
                var b = this;
                if (0 == this._priceValue) {
                    if (!this._canPress) return;
                    (a.LoaderScreen.show(!0),
                        a.MI.get()
                            .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.GARDEN)
                            .then(function () {
                                (a.LoaderScreen.hide(), b.addBids(1), (d.ADS_TIME = a.MI.get().time), b._popupParent.hide());
                            })
                            .catch(function (c) {
                                (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), b._popupParent.enable());
                            }));
                } else a.EconomyOptions.buyForCoins(this._priceValue, !1, a.STATS_GAME_RESOURCE_PLACEMENT.GARDEN) && (1 == this._id ? this.addBids(1) : this.addBids(5), a.UserGameData.save('GardenBuyPopup'), this._popupParent.hide());
            }),
            Object.defineProperty(d.prototype, 'enabled', {
                set: function (a) {
                    return this._canPress ? void (this._btn.enabled = a) : void (this._btn.enabled = !1);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'btn', {
                get: function () {
                    return this._btn;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (d.ADS_TIME_DELAY = 3e5),
            (d.ADS_TIME = 0),
            d
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                ((d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._body = new b()), (d._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (d._bodyBg.width = 830), (d._bodyBg.height = 1027), (d._bodyBg.x -= 0.5 * d._bodyBg.width), (d._bodyBg.y -= 0.5 * d._bodyBg.height), d._body.addChild(d._bodyBg));
                var e = new PIXI.Text(a.StringManager.get('GRADEN_WAKEUP_PLANT'), { fontFamily: 'Pony', fontSize: 60, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#2771b6', strokeThickness: 15, padding: 6 });
                return (e.anchor.set(0.5), (e.y = -370), (d._btn = new a.PXButton('ui0', ['popups/greenLongBtn'])), (d._btn.x = 0), (d._btn.y = 0.5 * d._bodyBg.height - 200), d._btn.addOnClick(d.action, d), (d._text = new PIXI.Text(a.StringManager.get('GARDEN_PLANT_MONEY_WAKEUP'), { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 2585014, align: 'center', wordWrap: !0, wordWrapWidth: a.Utils.int(0.9 * d._bodyBg.width), lineHeight: 70 })), d._text.anchor.set(0.5, 0), (d._text.x = -d._body.x), (d._text.y = -d._body.y - 200), (d._text.alpha = 0.9), d._text.scale.set(0.95), (d._price = new a.CoinText(2e3, null, a.CoinTextAnchor.CENTER)), (d._price.y = -2), d.addChild(d._body), d._body.addChild(d._text), d._body.addChild(e), d._body.addChild(d._btn), d._btn.addChild(d._price), d.addChild(d._closeBtnContainer), d._closeBtnContainer.addChild(d._closeBtn), d);
            }
            return (
                __extends(d, c),
                (d.prototype.action = function () {
                    a.EconomyOptions.buyForCoins(a.EconomyOptions.GARDEN_WAKEUP_COST, !1, a.STATS_GAME_RESOURCE_PLACEMENT.GARDEN) && (this._callback.call(this._context), this.hide());
                }),
                (d.prototype.show = function (b, d) {
                    var e = this;
                    (c.prototype.show.call(this),
                        (this._callback = b),
                        (this._context = d),
                        (this._price.text = a.EconomyOptions.GARDEN_WAKEUP_COST),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                e.enable();
                            },
                        }));
                }),
                (d.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._btn.enabled = a));
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (d.prototype.update = function (a) {
                    0 == c.prototype.update.call(this, a);
                }),
                d
            );
        })(a.GamePopup);
    a.GardenWakeupPopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                ((d._topContainer = new b(0, 0.5 * -Stage.centerY)), d._topContainer.activateRelativeMode(), (d._bottomContainer = new b(0, 0.5 * Stage.centerY)), d._bottomContainer.activateRelativeMode());
                var e = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 15853045, fontSize: 75, align: 'center', dropShadow: !0, dropShadowAlpha: 0.7, dropShadowAngle: Math.PI / 4, dropShadowBlur: 6, dropShadowDistance: 8 }),
                    f = new PIXI.Text(a.StringManager.get('GET_REWARD_POPUP_CAPTION'), e);
                f.anchor.set(0.5);
                var g = new b(0, 0, 'lobby', 'lbCoin');
                ((d._sunray = new b(0, g.y, 'lobby', 'dailyBonus/dbSunRay')), d._sunray.scale.set(2.34), (d._rewardCount = 0), (d._count = new PIXI.Text('x' + d._rewardCount, { fontFamily: 'Pony', fill: 16777215, fontSize: 70, align: 'center' })), d._count.anchor.set(0.5), (d._count.y = g.y + 130), (d._getReward = new a.PXButton('lobby', ['greenMidBtn'])), d._getReward.addOnUp(d.getReward, d), d._getReward.setAnimationScale(0.05, 0.9));
                var h = new PIXI.Text(a.StringManager.get('GET_REWARD_POPUP_GET_1'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: 40, align: 'center' });
                return (h.anchor.set(0.5), (h.y = -3), d._getReward.addChild(h), (d._moneyExp = new a.MoneyExplosion()), d.addChild(d._bottomContainer), d.addChild(d._topContainer), d.addChild(d._sunray), d.addChild(g), d.addChild(d._count), d._topContainer.addChild(f), d._bottomContainer.addChild(d._getReward), d.addChild(d._moneyExp), d);
            }
            return (
                __extends(d, c),
                (d.prototype.getReward = function () {
                    var b = this;
                    (this.disable(),
                        a.SoundsManager.getAdsReward(),
                        (this._moneyExp.x = this._getReward.x),
                        (this._moneyExp.y = this._getReward.y + 0.25 * Stage.screenHeight),
                        (a.Lobby.instance.coinCounter.pause = !0),
                        a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, this._rewardCount),
                        a.UserGameData.immediatelySave(),
                        a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.COIN, this._rewardCount, a.STATS_GAME_RESOURCE_PLACEMENT.ADS_REWARD, this._gox3 ? 'x3' : 'x1'),
                        this._moneyExp.start(this._gox3 ? 8 : 3, 0.5 * Stage.screenWidth - 394, -this._getReward.y - 0.5 * Stage.screenHeight + 110),
                        this._moneyExp.once(a.MoneyExplosion.EVENT_COMPLETE, function () {
                            ((a.Lobby.instance.coinCounter.pause = !1), b.hide());
                        }));
                }),
                (d.prototype.getRewardX3 = function () {
                    var b = this;
                    (this.disable(),
                        a.LoaderScreen.show(!0),
                        a.MI.get()
                            .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.SHOP_X3, !1)
                            .then(function () {
                                (a.LoaderScreen.hide(), a.SoundsManager.getAdsReward(), (b._rewardCount *= 3), (b._gox3 = !0), (b._count.text = 'x' + b._rewardCount), b._count.scale.set(1.1), TweenLite.to(b._count.scale, 0.2, { x: 1, y: 1 }), TweenLite.to(b._getReward, 0.2, { x: 0 }), b.enable());
                            })
                            .catch(function (c) {
                                (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), b.enable());
                            }));
                }),
                (d.prototype.show = function () {
                    var b = this;
                    (c.prototype.show.call(this),
                        a.SoundsManager.showAdsRewardPopup(),
                        (this._gox3 = !1),
                        (this._arg = 0),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                b.enable();
                            },
                        }),
                        (this._rewardCount = a.EconomyOptions.ADS_REWARD_COIN),
                        (this._count.text = 'x' + this._rewardCount));
                }),
                (d.prototype.setInteractive = function (a) {
                    this._getReward.enabled = a;
                }),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        new Promise(function (b) {
                            TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            });
                        })
                    );
                }),
                (d.prototype.update = function (a) {
                    0 != c.prototype.update.call(this, a) && (this._sunray.rotation += 0.01 * a);
                }),
                d
            );
        })(a.GamePopup);
    a.GetRewardCoinPopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var f = d.call(this) || this;
                ((f._body = new b()), (f._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (f._bodyBg.width = 830), (f._bodyBg.height = 1027), (f._bodyBg.x -= 0.5 * f._bodyBg.width), (f._bodyBg.y -= 0.5 * f._bodyBg.height), f._body.addChild(f._bodyBg), (f._body.interactive = !0), (f._closeBtnBg = new KY.Sprite(0.5 * f._body.width - 34, 0.5 * -f._body.height + 30, 'ui0', 'popups/closeBtnBg0001')), (f._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])), (f._closeBtn.x = f._closeBtnBg.x + 2), (f._closeBtn.y = f._closeBtnBg.y - 2), f._closeBtn.addOnClick(f.hide, f), (f._caption = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 2055834, align: 'center' })), f._caption.anchor.set(0.5), (f._caption.y = 0.5 * -f._body.height + 110), (f._caption.alpha = 0.9));
                var g = new c(0, 0, 'ui', 'popups/buyBoost/buyIcoBg');
                ((g.y = f._caption.y + 180), (f._sunRay = new c(0, g.y, 'ui', 'popups/buyBoost/buyBoostSunray')), (f._icon = new c(0, g.y, 'ui', 'popups/gameover/goHeart')));
                var h = new c(120, g.y + 30, 'ui0', 'popups/buyBoost/capx1');
                f._lots = [];
                for (var i = 0; i < 2; i++) (f._lots.push(new e(i + 1, f)), (f._lots[i].y = g.y + 300 + 190 * i));
                (f._body.addChild(f._closeBtnBg), f._body.addChild(f._closeBtn), f._body.addChild(f._caption), f._body.addChild(g), f._body.addChild(f._sunRay), f._body.addChild(f._icon), f._body.addChild(h));
                for (var i = 0; i < 2; i++) f._body.addChild(f._lots[i]);
                return (f.addChild(f._body), f);
            }
            return (
                __extends(f, d),
                (f.prototype.show = function () {
                    var b = this;
                    (d.prototype.show.call(this), (this._caption.text = a.StringManager.get('HEART_BUY_CAPTION')));
                    for (var c = 0; c < 2; c++) this._lots[c].show();
                    ((this.visible = !0),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                b.enable();
                            },
                        }));
                }),
                (f.prototype.tap = function (a, b) {
                    this.hide();
                }),
                (f.prototype.setInteractive = function (a) {
                    this._closeBtn.enabled = a;
                    for (var b = 0; b < 2; b++) this._lots[b].enabled = a;
                }),
                (f.prototype.hide = function (a) {
                    var b = this;
                    return (
                        void 0 === a && (a = !1),
                        d.prototype.hide.call(this),
                        new Promise(function (c) {
                            1 == a
                                ? (b.free(), c())
                                : (TweenLite.to(b, 0.1, {
                                      alpha: 0,
                                      delay: 0.2,
                                      onComplete: function () {
                                          (b.free(), c());
                                      },
                                  }),
                                  TweenLite.to(b._body, 0.2, { y: b._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (f.prototype.update = function (a) {
                    0 != d.prototype.update.call(this, a) && ((this._sunRay.rotation += a / 40), (this._sunRay.scale.x = this._sunRay.scale.y = 0.95 + 0.05 * Math.sin(2 * this._sunRay.rotation)));
                }),
                (f.BUY_BOOST_EVENT = 'BUY_BOOST_EVENT'),
                f
            );
        })(a.GamePopup);
    a.HeartBuyPopup = d;
    var e = (function (b) {
        function d(d, e) {
            var f = b.call(this) || this;
            ((f._id = d), (f._popupParent = e));
            var g = 56,
                h = 15921906,
                i = 2055834,
                j = 'popups/greenSmallBtn',
                k = 0.84,
                l = 128;
            if (((f._bg = new PIXI.NineSlicePlane(Stage.getImage('ui', 'popups/buyBoost/bgBuyBoost'), 50, 50, 50, 50)), (f._bg.width = 692), (f._bg.height = l), (f._bg.x -= 0.5 * f._bg.width), (f._bg.y -= 0.5 * f._bg.height), (f._icon = new c(f._bg.x + 80, 0, 'ui', 'shop/icons/lbLotIcon' + c.zeroPad(2 == d ? 9 : 10))), f._icon.scale.set(1), (f._text = new PIXI.Text(2 == d ? '+2 ' + a.StringManager.get('TXT_HOUR') : '+1', { fontFamily: 'Pony', fontSize: a.Utils.int(g), fill: h, align: 'left', stroke: i, strokeThickness: 10, padding: 6 })), f._text.anchor.set(0, 0.5), (f._text.x = f._icon.x + 80), (f._btn = new a.PXButton('ui', [j])), (f._btn.x = 0.5 * f._bg.width - 130), f._btn.setAnimationScale(0.06, k), f._btn.addOnClick(f.action, f), (f._priceValue = 0), 0 != d)) ((f._price = new a.CoinText(2e3, null, a.CoinTextAnchor.LEFT, 100)), (f._price.x = -100), (f._price.y = -2));
            else {
                var m = new c('ui0', 'adsIco');
                ((m.y = -3), m.scale.set(0.8), (m.alpha = 0.8), f._btn.addChild(m));
            }
            return (1 == d ? ((f._priceValue = a.EconomyOptions.ONE_LIVE_COST), (f._price.text = f._priceValue)) : 2 == d && ((f._priceValue = 2 * a.EconomyOptions.ONE_HOUR_LIVE_COST), (f._price.text = f._priceValue)), f.addChild(f._bg), f.addChild(f._icon), f.addChild(f._text), f.addChild(f._btn), f._price && f._btn.addChild(f._price), f);
        }
        return (
            __extends(d, b),
            (d.prototype.show = function () {
                var b = a.UserGameData.getProperty(a.USER_PROPERTY.HP),
                    c = a.UserGameData.isInfinityHP;
                ((this._canPress = !0), 0 == this._id && (c || b >= a.UserGameData.MAX_HP ? ((this._canPress = !1), this._btn.replaceFrames(['grayMiniBtn'])) : ((this._canPress = !0), this._btn.replaceFrames(['popups/greenSmallBtn']))));
            }),
            (d.prototype.action = function () {
                var b = this;
                0 == this._priceValue
                    ? (a.LoaderScreen.show(!0),
                      a.MI.get()
                          .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.NO_LIVE)
                          .then(function () {
                              (a.LoaderScreen.hide(), a.UserGameData.addProperty(a.USER_PROPERTY.HP, 1), b._popupParent.hide());
                          })
                          .catch(function (c) {
                              (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), b._popupParent.enable());
                          }))
                    : a.EconomyOptions.buyForCoins(this._priceValue, !1, a.STATS_GAME_RESOURCE_PLACEMENT.ADD_LIVE) && (1 == this._id ? a.UserGameData.addHP(1) : a.UserGameData.addInfinityHP(120), a.UserGameData.save('HearBuyPopup'), this._popupParent.hide());
            }),
            Object.defineProperty(d.prototype, 'enabled', {
                set: function (a) {
                    return this._canPress ? void (this._btn.enabled = a) : void (this._btn.enabled = !1);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'btn', {
                get: function () {
                    return this._btn;
                },
                enumerable: !1,
                configurable: !0,
            }),
            d
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._duration = 0), (e.playDefaultOpenSFX = !1), (e._scrollContainer = new b()), (e._body = new c(0, 0, 'ui0', 'popups/levelTarget/levelTargetBg')), (e._body.width = Stage.screenWidth + 2), (e._iconContainer = new c(-Stage.centerX, 0)), e._iconContainer.activateRelativeMode(), (e._sunRay = new c(220, 0, 'ui0', 'popups/levelTarget/levelTargetSunray')), (e._icon = new c(220, 0, 'ui0', 'popups/levelTarget/levelTargetIcon0001')), (e._text = new PIXI.Text(a.StringManager.get('LT_DEFAULT'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 50, lineJoin: 'round', stroke: '#15528c', strokeThickness: 10, wordWrap: !0, wordWrapWidth: 560, padding: 6 })), e._text.anchor.set(0.5), (e._text.x = 130), (e._buyBtnContainer = new c(0, 230, 'ui0', 'popups/levelTarget/levelTarget5plusBg')));
                var f = new PIXI.Text(a.StringManager.get('LEVEL_TARGET_CAPTION'), { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 46 });
                return (f.anchor.set(0.5), (f.x = 56), (e._buyBtn = new a.PXButton('ui0', ['popups/levelTarget/levelTarget5plusBtn'])), (e._buyBtn.y = -10), (e._buyBtn.enabled = !1), e._buyBtn.addOnDown(e.showAds, e), (e._5plusIcon = new c(0.5 * e._buyBtn.width - 10, 0.5 * -e._buyBtn.height + 4, 'ui0', 'popups/levelTarget/levelTarget5plusIcon')), e.addChild(e._body), e.addChild(e._scrollContainer), e._scrollContainer.addChild(e._iconContainer), e._iconContainer.addChild(e._sunRay), e._iconContainer.addChild(e._icon), e._scrollContainer.addChild(e._text), e._scrollContainer.addChild(e._buyBtnContainer), e._buyBtnContainer.addChild(e._buyBtn), e._buyBtn.addChild(f), e._buyBtn.addChild(e._5plusIcon), e);
            }
            return (
                __extends(e, d),
                (e.prototype.showAds = function () {
                    var b = this;
                    ((this._pauseTimer = !0),
                        (this._buyBtn.enabled = !1),
                        (this._buyBtn.alpha = 0.5),
                        a.LoaderScreen.show(!0),
                        a.MI.get()
                            .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.LEVEL_BEGIN)
                            .then(function () {
                                (a.LoaderScreen.hide(), b.hide(), (b._buyBtn.alpha = 1), a.GameStage.instance.addGameModification({ type: a.MODIFICATION_TYPE.PLUS_N_BUBLES, value: 5 }));
                            })
                            .catch(function (c) {
                                (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), (b._buyBtn.alpha = 1), b.hide());
                            }));
                }),
                (e.prototype.tap = function () {
                    this._showedUp && this.hide();
                }),
                (e.prototype.show = function (b, c) {
                    var e = this;
                    switch ((void 0 === c && (c = !1), d.prototype.show.call(this), (this._showedUp = !1), (this._duration = 2 + (c ? 1.4 : 0)), (this._icon.frameName = 'popups/levelTarget/levelTargetIcon000' + b.type), (c = !1), b.type)) {
                        case a.WorldType.DEFAULT:
                            this._text.text = a.StringManager.get('LT_DEFAULT');
                            break;
                        case a.WorldType.CROWN:
                            var f = b.needCrownCount;
                            this._text.text = a.StringManager.get('LT_CROWN', f, a.Utils.declension(f, a.StringManager.array('CROWN')));
                            break;
                        case a.WorldType.CIRCLE:
                            this._text.text = a.StringManager.get('LT_CIRCLE');
                    }
                    ((this._arg = 0),
                        (this._scrollContainer.x = 0),
                        (this._buyBtn.alpha = 1),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.x = -this._body.width),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            x: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onStart: function () {
                                a.SoundsManager.playLevelStartSwipeIn();
                            },
                            onComplete: function () {
                                (e.enable(), (e._showedUp = !0));
                            },
                        }),
                        (this._sunRay.alpha = 0),
                        this._sunRay.scale.set(0.2),
                        TweenLite.to(this._sunRay, 0.2, { delay: 0.35 + 0.1, alpha: 1, ease: Circ.easeOut }),
                        TweenLite.to(this._sunRay.scale, 0.2, { delay: 0.35 + 0.1, x: 1, y: 1, ease: Back.easeOut }),
                        (this._icon.alpha = 0),
                        this._icon.scale.set(0.2),
                        TweenLite.to(this._icon, 0.2, { delay: 0.5, alpha: 1, ease: Circ.easeOut }),
                        TweenLite.to(this._icon.scale, 0.2, { delay: 0.5, x: 1, y: 1, ease: Back.easeOut }),
                        (this._text.alpha = 0),
                        TweenLite.to(this._text, 0.2, { delay: 0.6, alpha: 1, ease: Circ.easeOut }),
                        (this._buyBtnContainer.alpha = 0),
                        (this._buyBtn.enabled = !1));
                }),
                (e.prototype.setInteractive = function (a) {
                    this._buyBtn.enabled = !(!this._buyBtnContainer || !this._buyBtnContainer.alpha) && a;
                }),
                (e.prototype.hide = function () {
                    var b = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (c) {
                            (TweenLite.to(b, 0.1, {
                                alpha: 0,
                                delay: 0.3,
                                onComplete: function () {
                                    (b.free(), c(), a.GameStage.instance.emit(e.EVENT_LEVEL_TARGET_END));
                                },
                            }),
                                (b._body.x = 0.5 * b._body.width - 0.5 * Stage.screenWidth),
                                a.SoundsManager.playLevelStartSwipeOut(),
                                TweenLite.to(b._body, 0.3, { x: b._body.width, ease: Back.easeIn }),
                                TweenLite.to(b._scrollContainer, 0.3, { x: b._body.width, ease: Back.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (a) {
                    0 != d.prototype.update.call(this, a) && ((this._sunRay.rotation += 0.01), (this._icon.rotation = 0.1 * -Math.sin((this._arg += 0.015))), (this._icon.y = 8 * -Math.sin(this._arg)), (this._5plusIcon.rotation = 0.1 * Math.sin(2.5 * this._arg)), this._pauseTimer || (this._duration -= 0.016 * a), this._duration <= 0 && this.hide());
                }),
                (e.EVENT_LEVEL_TARGET_END = 'EVENT_LEVEL_TARGET_END'),
                e
            );
        })(a.GamePopup);
    a.LevelTargetPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), e._closeBtnContainer.activateRelativeMode(), (e._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), e._closeBtn.position.set(0.5 * -e._closeBtn.width - 50, 0.5 * e._closeBtn.height + 50), e._closeBtn.addOnClick(e.hide, e), (e._closeBtn.enabled = !1), (e._body = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'miPopupBg'), 50, 150, 50, 50)));
                var f = 810;
                ((e._body.width = a.Utils.int(f)), (e._body.height = a.Utils.int(1.2 * e._body.width)), e._body.position.set(0.5 * -e._body.width, 0.5 * -e._body.height));
                var g = new KY.Sprite(-e._body.x, 70, 'ui0', 'miLogo');
                return (
                    e._body.addChild(g),
                    (e._text = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'center', wordWrap: !0, wordWrapWidth: a.Utils.int(0.9 * f), lineHeight: 70 })),
                    e._text.anchor.set(0.5, 0),
                    (e._text.x = -e._body.x),
                    (e._text.y = -e._body.y - 250),
                    (e._text.alpha = 0.9),
                    e._text.scale.set(0.95),
                    (e._coinContainer = new b()),
                    (e._coinContainer.x = 0.5 * e._body.width),
                    (e._coinContainer.y = 0.5 * e._body.height + 100),
                    (e._coinIcon = new c(0, 0, 'lobby', 'lbCoin')),
                    (e._coinIcon.anchor.x = 0),
                    (e._coinText = new PIXI.Text('x 200', { fontFamily: Stage.FONT_BOLD, fontSize: a.Utils.int(65), fill: 16634676, align: 'left', dropShadow: !0, dropShadowColor: '#000000', dropShadowAlpha: 0.2 })),
                    e._coinText.anchor.set(0, 0.5),
                    (e._coinText.x = e._coinIcon.width + 4),
                    (e._coinText.y = 6),
                    (e._btn = new a.PXButton('ui0', ['popups/greenLongBtn'])),
                    (e._btn.x = 0.5 * e._body.width),
                    (e._btn.y = e._body.height - 150),
                    e._btn.addOnClick(e.action, e),
                    (e._btnCaption = new PIXI.Text(a.StringManager.get('MNOGOIGROVKA_CAPTION_1'), { fontFamily: 'Pony', fontSize: 60, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 6 })),
                    e._btnCaption.anchor.set(0.5),
                    (e._btnCaption.y = 0),
                    (e._moneyExp = new a.MoneyExplosion()),
                    (e._moneyExp.x = e._btn.x),
                    (e._moneyExp.y = e._btn.y),
                    e.addChild(e._body),
                    e._body.addChild(e._text),
                    e._body.addChild(e._coinContainer),
                    e._body.addChild(e._btn),
                    e._body.addChild(e._moneyExp),
                    e._coinContainer.addChild(e._coinIcon),
                    e._coinContainer.addChild(e._coinText),
                    e._btn.addChild(e._btnCaption),
                    e.addChild(e._closeBtnContainer),
                    e._closeBtnContainer.addChild(e._closeBtn),
                    e
                );
            }
            return (
                __extends(e, d),
                (e.prototype.show = function (b) {
                    var c = this;
                    (d.prototype.show.call(this),
                        (this._newUser = b),
                        this._newUser ? ((this._text.text = a.StringManager.get('MNOGOIGROVKA_NEW_MEMBER', a.EconomyOptions.MEMBERSHIP_COIN)), (this._btnCaption.text = a.StringManager.get('MNOGOIGROVKA_CAPTION_1'))) : ((this._text.text = a.StringManager.get('MNOGOIGROVKA_OLD_MEMBER', a.EconomyOptions.MEMBERSHIP_COIN)), (this._btnCaption.text = a.StringManager.get('MNOGOIGROVKA_CAPTION_2'))),
                        (this._coinText.text = 'x ' + a.EconomyOptions.MEMBERSHIP_COIN),
                        (this._coinContainer.x = 0.5 * this._body.width - 0.5 * (this._coinText.x + this._coinText.width)),
                        (this._coinContainer.y = this._text.y + this._text.height + 100),
                        (this._closeBtn.alpha = 1),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        TweenLite.to(this._body, 0.2, {
                            y: 0.5 * -this._body.height,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                c.enable();
                            },
                        }));
                }),
                (e.prototype.action = function () {
                    var b = this;
                    (this.disable(),
                        0 == this._newUser
                            ? this.success()
                            : a.MI.get()
                                  .social.joinGroup()
                                  .then(function () {
                                      b.success();
                                  })
                                  .catch(function () {
                                      b.enable();
                                  }));
                }),
                (e.prototype.success = function () {
                    var b = this;
                    ((a.Lobby.instance.coinCounter.pause = !0),
                        (this._closeBtn.alpha = 0),
                        a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, a.EconomyOptions.MEMBERSHIP_COIN),
                        a.UserGameData.addProperty(a.USER_PROPERTY.MEMBER_GIFT_SHOWED, 1),
                        a.UserGameData.immediatelySave(),
                        a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.COIN, a.EconomyOptions.MEMBERSHIP_COIN, a.STATS_GAME_RESOURCE_PLACEMENT.MNOGOIGROVKA),
                        this._moneyExp.start(10, 0.5 * this._body.width + 0.5 * Stage.screenWidth - 394, 0.5 * this._body.height - 0.5 * Stage.screenHeight + 110),
                        this._moneyExp.once(a.MoneyExplosion.EVENT_COMPLETE, function () {
                            ((a.Lobby.instance.coinCounter.pause = !1), b.hide());
                        }));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._btn.enabled = a));
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (a) {
                    0 == d.prototype.update.call(this, a);
                }),
                e
            );
        })(a.GamePopup);
    a.MnogoigrovkaPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (c) {
            function d() {
                var a = c.call(this) || this;
                return ((a._popupContainer = new b()), a.loadAtlas('newRank', 'additionalPopup/newRank'), a.addChild(a._popupContainer), a.addChildMiniLoader(), a);
            }
            return (
                __extends(d, c),
                (d.prototype.show = function () {
                    (c.prototype.show.call(this), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }), this.enable());
                }),
                (d.prototype.showAfterLoading = function () {
                    (c.prototype.showAfterLoading.call(this), this.startAnimation());
                }),
                (d.prototype.setInteractive = function (a) {}),
                (d.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        this.removeEmojiTweens(),
                        new Promise(function (b) {
                            TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            });
                        })
                    );
                }),
                (d.prototype.update = function (a) {
                    0 != c.prototype.update.call(this, a) && this.isLoaded && (this._starEmitter && this.visible && this._starEmitter.emit && this._starEmitter.update(0.017 * a), this._screenShake.updateShake());
                }),
                (d.init = function (a) {
                    d.DATA = a;
                }),
                (d.prototype.getRankReward = function (a) {
                    var b = d.DATA.length;
                    return b <= a ? d.DATA[(a % b) + 3] : d.DATA[a];
                }),
                (d.prototype.onload = function () {
                    ((this._starParticleSystemTextures = []),
                        (this._starParticleSystemOptions = { alpha: { start: 1, end: 0 }, scale: { start: 0.25, end: 0.75, minimumScaleMultiplier: 1 }, color: { start: '#ffffff', end: '#ffffff' }, speed: { start: 200, end: 50, minimumSpeedMultiplier: 1 }, acceleration: { x: 0, y: 10 }, maxSpeed: 0, startRotation: { min: 85, max: 95 }, noRotation: !1, rotationSpeed: { min: 0, max: 0 }, lifetime: { min: 0.6, max: 1.6 }, blendMode: 'normal', frequency: 0.15, emitterLifetime: -1, maxParticles: 50, pos: { x: 0, y: 0 }, addAtBack: !1, spawnType: 'circle', spawnCircle: { x: 0, y: 0, r: 220 } }),
                        (this._screenShake = new a.ScreenShake(0, 0)),
                        (this._emitterContainer = new PIXI.Container()),
                        this._starParticleSystemTextures.push(this.getTexture('particleSmile')),
                        (this._starEmitter = new PIXI.particles.Emitter(this._emitterContainer, this._starParticleSystemTextures, this._starParticleSystemOptions)),
                        (this._starEmitter.emit = !1),
                        (this._centerOffcet = 50),
                        (this._titleTxt = new PIXI.Text(a.StringManager.get('NEW_RANK_CAPTION'), { fontFamily: Stage.FONT_BOLD, fontSize: 70, fill: 16777215, align: 'center' })),
                        (this._titleTxt.position.y = -620),
                        this._titleTxt.anchor.set(0.5),
                        (this._titleTxt.alpha = 0.7),
                        (this._rankTxtPrev = new PIXI.Text('*', { fontFamily: Stage.FONT_BOLD, fontSize: 85, fill: 16777215, align: 'center' })),
                        (this._rankTxtPrev.position.y = 90),
                        this._rankTxtPrev.anchor.set(0.5),
                        (this._rankTxt = new PIXI.Text('*', { fontFamily: Stage.FONT_BOLD, fontSize: 85, fill: 16777215, align: 'center' })),
                        (this._rankTxt.position.y = 90),
                        this._rankTxt.anchor.set(0.5),
                        (this._rewardContainer = new PIXI.Container()),
                        this._rewardContainer.position.set(0, 300),
                        (this._slot = new e(this)),
                        this._rewardContainer.addChild(this._slot),
                        (this._smileSpr = new PIXI.Sprite(this.getTexture('smiles_happy_0000'))),
                        (this._smileSpr.position.y = 80 - this._centerOffcet),
                        (this._getRewardBtn = new a.PXButton('lobby', ['greenMidBtn'])),
                        (this._getRewardBtn.y = 630),
                        this._getRewardBtn.addOnUp(this.getReward, this),
                        this._getRewardBtn.setAnimationScale(0.05, 0.9));
                    var b = new PIXI.Text(a.StringManager.get('NEW_RANK_BTN_CAPTION'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: 40, align: 'center' });
                    (b.anchor.set(0.5), (b.y = -3), this._getRewardBtn.addChild(b), (this._getRewardBtn.enabled = !1), this._popupContainer.addChild(this._titleTxt), this._popupContainer.addChild(this._rankTxtPrev), this._popupContainer.addChild(this._rankTxt), this._popupContainer.addChild(this._emitterContainer), this._popupContainer.addChild(this._smileSpr), this._popupContainer.addChild(this._rewardContainer), this._popupContainer.addChild(this._getRewardBtn));
                }),
                (d.prototype.getReward = function () {
                    var b = this.getRank() - 1;
                    ((this._getRewardBtn.enabled = !1), (this._getRewardBtn.alpha = 0.5), this.once(d.EVENT_GET_REWARD, this.getRewardComplete, this), (a.Lobby.instance.coinCounter.pause = !0));
                    for (var c = this.getRankReward(b), e = 0; e < c.length; e++) a.Shop.addItemToUser(c[e][0], c[e][1], a.STATS_GAME_RESOURCE_PLACEMENT.RANK);
                    (a.UserGameData.save('getRankReward'), this._slot.haveBoosters && a.BoostCounter.get().show(), this._slot.complete());
                }),
                (d.prototype.getRewardComplete = function () {
                    ((a.Lobby.instance.coinCounter.pause = !1), this.hide());
                }),
                (d.prototype.getRank = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_RANK);
                    return (0 == b && (b = 1), b);
                }),
                (d.prototype.startAnimation = function () {
                    var b = this,
                        c = this.getRank(),
                        d = this.getRankReward(c - 1);
                    if (1 == c) {
                        var e = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL);
                        e >= 30 &&
                            (d = [
                                [2, 1],
                                [6, 2],
                            ]);
                    }
                    this._slot.reset(d.length);
                    for (var f = 0; f < d.length; f++) this._slot.set(f, d[f][0], d[f][1]);
                    ((this._titleTxt.alpha = 0.8), this._starEmitter.cleanup(), (this._smileSpr.frameName = 'smiles_happy_000' + Math.floor(5 * KY.Game.instance.rnd.js)), (this._smileSpr.texture = this.getTexture(this._smileSpr.frameName)), 'smiles_happy_0004' == this._smileSpr.frameName ? (this._smileSpr.angle = -15) : 'smiles_happy_0002' == this._smileSpr.frameName ? (this._smileSpr.angle = -13.5) : 'smiles_happy_0000' == this._smileSpr.frameName ? (this._smileSpr.angle = 180) : (this._smileSpr.angle = 0), (this._rankTxtPrev.text = a.StringManager.getRank(c - 1)), (this._rankTxt.text = a.StringManager.getRank(c)), this._rankTxt.scale.set(1), this._rankTxtPrev.scale.set(1), (this._rankTxt.beginScale = 1));
                    var g = (0.8 * Stage.width) / this._rankTxtPrev.width;
                    (g < 1 && this._rankTxtPrev.scale.set(g), (g = (0.7 * Stage.width) / this._rankTxt.width), g < 1 && (this._rankTxt.beginScale = g), (this._rankTxtPrev.alpha = 1), (this._rankTxt.alpha = 1), (this._getRewardBtn.visible = !1), (this._getRewardBtn.alpha = 0));
                    var h = 0.5;
                    (this._smileSpr.anchor.set(0.5, 0.5),
                        (this._smileSpr.alpha = 0),
                        (this._smileSpr.scale.x = 0.5),
                        (this._smileSpr.scale.y = 0.5),
                        (this._smileSpr.x = 0),
                        (this._smileSpr.y = 20 - this._centerOffcet),
                        TweenLite.to(this._smileSpr, 0.15 * h, {
                            alpha: 1,
                            delay: 0.2 * h,
                            onStart: function () {
                                a.SoundsManager.getNewRank();
                            },
                        }),
                        TweenLite.to(this._smileSpr, 0.6 * h, {
                            y: -200 - this._centerOffcet,
                            delay: 0.2 * h,
                            onComplete: function () {
                                b.startEmojiAnimations();
                            },
                        }),
                        TweenLite.to(this._smileSpr.scale, 0.5 * h, { x: 1, y: 1, delay: 0.2 * h }),
                        (this._rankTxt.alpha = 0),
                        (this._rankTxt.visible = !1),
                        (this._rankTxtPrev.alpha = 0),
                        (this._rankTxtPrev.visible = !0),
                        TweenLite.to(this._rankTxtPrev, 0.2, { alpha: 0.5 }),
                        (this._rewardContainer.alpha = 0),
                        TweenLite.delayedCall(0.5, function () {
                            (b._screenShake.startShakeObjectPose(b._rankTxtPrev.x, b._rankTxtPrev.y),
                                b._screenShake.shakeObject(b._rankTxtPrev, 4, 100, 0.5),
                                TweenLite.delayedCall(1.3, function () {
                                    ((b._rankTxt.visible = !0),
                                        b._rankTxt.scale.set(1.3 * b._rankTxt.beginScale, 1.3 * b._rankTxt.beginScale),
                                        TweenLite.to(b._rankTxt, 0.4, {
                                            alpha: 1,
                                            onStart: function () {
                                                b._rankTxt.alpha = 0.3;
                                            },
                                        }),
                                        (b._rankTxt.tint = 16777215),
                                        (b._rankTxt.tintVarForTween = 0),
                                        TweenLite.to(b._rankTxt, 0.8, {
                                            tintVarForTween: 1,
                                            onUpdate: function () {
                                                b._rankTxt.tint = KY.Color.lerp(16777215, 16753920, b._rankTxt.tintVarForTween);
                                            },
                                        }),
                                        TweenLite.to(b._rankTxt.scale, 0.4, {
                                            x: b._rankTxt.beginScale,
                                            y: b._rankTxt.beginScale,
                                            ease: Back.easeIn,
                                            onComplete: function () {
                                                (b._screenShake.startShakeObjectPose(0, 0), b._screenShake.shakeObject(b._popupContainer, 5, 20), (b._rankTxtPrev.visible = !1));
                                                for (
                                                    var a = 0,
                                                        c = 1,
                                                        d = function (d) {
                                                            0 == d ? (a = 0) : d == b._rankTxtPrev.text.length - 1 ? (a = 180) : ((a = 1 == c ? 90 : 270), (c *= -1));
                                                            var e = new PIXI.Text(b._rankTxtPrev.text[d], b._rankTxtPrev.style);
                                                            (e.anchor.set(0.5, 0.5), (e.alpha = 0.5), b._popupContainer.addChild(e), e.position.set((d * b._rankTxtPrev.width) / b._rankTxtPrev.text.length - 0.5 * b._rankTxtPrev.width + 0.5 * e.width, b._rankTxtPrev.y));
                                                            var f = 160 + KY.Game.instance.rnd.range(-40, 40);
                                                            ((a += KY.Game.instance.rnd.range(-35, 35)),
                                                                (b._tween1 = TweenMax.to(e, 0.6, { x: e.x - Math.cos(a * PIXI.DEG_TO_RAD) * f, y: e.y - Math.sin(a * PIXI.DEG_TO_RAD) * f, angle: a / 2, ease: Cubic.easeOut })),
                                                                (b._tween2 = TweenMax.to(e, 1, {
                                                                    alpha: 0,
                                                                    delay: 0.3 + 0.1 * d,
                                                                    onComplete: function () {
                                                                        setTimeout(function () {
                                                                            e.destroy();
                                                                        }, 200);
                                                                    },
                                                                })));
                                                        },
                                                        e = 0;
                                                    e < b._rankTxtPrev.text.length;
                                                    e++
                                                )
                                                    d(e);
                                                (TweenLite.to(b._getRewardBtn, 0.2, {
                                                    alpha: 1,
                                                    delay: 1,
                                                    onStart: function () {
                                                        ((b._getRewardBtn.visible = !0), (b._getRewardBtn.enabled = !0));
                                                    },
                                                }),
                                                    TweenLite.to(b._rewardContainer, 0.2, { alpha: 1, delay: 0.8 }));
                                            },
                                        }));
                                }));
                        }));
                }),
                (d.prototype.startEmojiAnimations = function () {
                    var a = this,
                        b = 0.6;
                    switch (this._smileSpr.frameName) {
                        case 'smiles_happy_0004':
                            var c = 0.3,
                                d = 0.6;
                            ((this._tweenPreAni = TweenMax.to(this._smileSpr, c, { angle: 0, yoyo: !0, repeat: -1, ease: Sine.easeOut, yoyoEase: Cubic.easeOut, repeatDelay: 0.1 })),
                                (this._tweenXAni = TweenMax.to(this._smileSpr, d, {
                                    x: this._smileSpr.x + 90,
                                    ease: Back.easeInOut,
                                    onComplete: function () {
                                        a._tweenXAni = TweenMax.to(a._smileSpr, 2 * d, { x: a._smileSpr.x - 180, yoyo: !0, repeat: -1, ease: Back.easeInOut, delay: 0.3, repeatDelay: 0.3 });
                                    },
                                })));
                            break;
                        case 'smiles_happy_0002':
                            ((this._tweenXAni = TweenMax.to(this._smileSpr, b, {
                                x: this._smileSpr.x - 140,
                                angle: -25,
                                ease: Cubic.easeInOut,
                                onComplete: function () {
                                    a._tweenXAni = TweenMax.to(a._smileSpr, 2 * b, { x: a._smileSpr.x + 280, angle: 25, yoyo: !0, repeat: -1, ease: Cubic.easeInOut });
                                },
                            })),
                                (this._tweenYAni = TweenMax.to(this._smileSpr, 0.5 * b, {
                                    y: this._smileSpr.y - 60,
                                    ease: Cubic.easeInOut,
                                    onComplete: function () {
                                        a._tweenYAni = TweenMax.to(a._smileSpr, b, { y: a._smileSpr.y + 120, yoyo: !0, repeat: -1, ease: Sine.easeInOut });
                                    },
                                })));
                            break;
                        case 'smiles_happy_0001':
                            (this._smileSpr.anchor.set(0.5, 1), (this._smileSpr.y = this._smileSpr.y + 0.5 * this._smileSpr.width), this.jumpSmileAnimation());
                            break;
                        case 'smiles_happy_0000':
                            var e = 0.55;
                            ((this._tweenPreAni = TweenMax.to(this._smileSpr, 2 * e, {
                                angle: 360,
                                ease: Cubic.easeInOut,
                                onComplete: function () {
                                    a._tweenPreAni = TweenMax.to(a._smileSpr, 4 * e, { angle: 0, ease: Cubic.easeInOut, repeat: -1, yoyo: !0 });
                                },
                            })),
                                (this._tweenXAni = TweenMax.to(this._smileSpr, 2 * e, {
                                    x: this._smileSpr.x + 0.5 * Stage.screenWidth - 0.5 * this._smileSpr.width,
                                    ease: Cubic.easeInOut,
                                    onComplete: function () {
                                        a._tweenXAni = TweenMax.to(a._smileSpr, 4 * e, { x: a._smileSpr.x - Stage.screenWidth + a._smileSpr.width, ease: Cubic.easeInOut, repeat: -1, yoyo: !0 });
                                    },
                                })));
                            break;
                        case 'smiles_happy_0003':
                            (this._popupContainer.setChildIndex(this._emitterContainer, this._popupContainer.getChildIndex(this._smileSpr) - 1),
                                this._starEmitter.cleanup(),
                                this._starEmitter.init(this._starParticleSystemTextures, this._starParticleSystemOptions),
                                this._starEmitter.resetPositionTracking(),
                                this._starEmitter.updateOwnerPos(this._smileSpr.x, this._smileSpr.y + 0.2 * this._smileSpr.width),
                                (this._starEmitter.emit = !0),
                                (this._tweenXAni = TweenMax.to(this._smileSpr, 1.25 * b, {
                                    x: this._smileSpr.x - 120,
                                    ease: Sine.easeOut,
                                    overwrite: 'auto',
                                    onComplete: function () {
                                        a._tweenXAni = TweenMax.to(a._smileSpr, 2.5 * b, {
                                            x: a._smileSpr.x + 240,
                                            repeat: -1,
                                            yoyo: !0,
                                            ease: Sine.easeInOut,
                                            onUpdate: function () {
                                                (a._starEmitter.resetPositionTracking(), a._starEmitter.updateOwnerPos(a._smileSpr.x, a._smileSpr.y + 0.2 * a._smileSpr.width));
                                            },
                                        });
                                    },
                                    onUpdate: function () {
                                        (a._starEmitter.resetPositionTracking(), a._starEmitter.updateOwnerPos(a._smileSpr.x, a._smileSpr.y + 0.2 * a._smileSpr.width));
                                    },
                                })),
                                (this._tweenScaleAni = TweenMax.to(this._smileSpr.scale, 0.625 * b, {
                                    x: 1.05,
                                    y: 1.05,
                                    ease: Sine.easeInOut,
                                    onComplete: function () {
                                        a._tweenScaleAni = TweenMax.to(a._smileSpr.scale, 1.25 * b, { x: 1.15, y: 1.15, ease: Sine.easeInOut, yoyo: !0, repeat: -1 });
                                    },
                                })));
                    }
                }),
                (d.prototype.jumpSmileAnimation = function () {
                    var a = this,
                        b = 1.1;
                    ((this._tweenScaleAni = TweenMax.to(this._smileSpr.scale, 0.3 * b, {
                        x: 0.9,
                        y: 1.1,
                        ease: Cubic.easeInOut,
                        onComplete: function () {
                            a._tweenScaleAni = TweenMax.to(a._smileSpr.scale, 0.1, {
                                x: 1.2,
                                y: 0.8,
                                ease: Sine.easeOut,
                                delay: 0.1,
                                onComplete: function () {
                                    a._tweenScaleAni = TweenMax.to(a._smileSpr.scale, 1.2 * b, {
                                        x: 1,
                                        y: 1,
                                        ease: Elastic.easeOut,
                                        onComplete: function () {
                                            a.jumpSmileAnimation();
                                        },
                                    });
                                },
                            });
                        },
                    })),
                        (this._tweenYAni = TweenMax.to(this._smileSpr, 0.4, {
                            y: this._smileSpr.y - 350,
                            ease: Cubic.easeIn,
                            onComplete: function () {
                                a._tweenYAni = TweenMax.to(a._smileSpr, 0.3, { y: a._smileSpr.y + 350, ease: Back.easeOut });
                            },
                        })));
                }),
                (d.prototype.removeEmojiTweens = function () {
                    (this._tweenPreAni && this._tweenPreAni.kill(), this._tweenYAni && this._tweenYAni.kill(), this._tweenXAni && this._tweenXAni.kill(), this._tweenScaleAni && this._tweenScaleAni.kill(), this._tween1 && this._tween1.kill(), this._tween2 && this._tween2.kill(), (this._tweenPreAni = null), (this._tweenYAni = null), (this._tweenXAni = null), (this._tweenScaleAni = null), (this._tween1 = null), (this._tween2 = null), (this._starEmitter.emit = !1), TweenMax.killTweensOf(this._smileSpr), TweenMax.killTweensOf(this._smileSpr.scale), TweenMax.killTweensOf(this._rankTxtPrev), TweenMax.killTweensOf(this._rankTxt), TweenMax.killTweensOf(this._rankTxt.scale), TweenMax.killTweensOf(this._getRewardBtn), TweenMax.killTweensOf(this._rewardContainer));
                }),
                (d.EVENT_GET_REWARD = 'EVENT_GET_REWARD_RANK'),
                d
            );
        })(a.GamePopup);
    a.NewRankPopup = d;
    var e = (function (b) {
            function e(a) {
                var d = b.call(this) || this;
                return ((d._popup = a), (d._icon = []), (d._getIcon = []), (d._iconTmp = [new f(), new f()]), d._getIcon.push(new c('ui', 'shop/icons/lbLotIcon0001'), new c('ui', 'shop/icons/lbLotIcon0001')), d.addChild(d._iconTmp[0]), d.addChild(d._iconTmp[1]), d.addChild(d._getIcon[0]), d.addChild(d._getIcon[1]), d);
            }
            return (
                __extends(e, b),
                (e.prototype.reset = function (a) {
                    (this._iconTmp[0].close(), this._iconTmp[1].close(), (this._getIcon[0].alpha = 0), (this._getIcon[1].alpha = 0), (this._icon.length = 0));
                    for (var b = 0; b < a; b++) (this._icon.push(this._iconTmp[b]), (this._icon[b].x = 0), 2 == a && (this._icon[b].x = 100 * (0 == b ? -1 : 1)), (this._getIcon[b].x = this._icon[b].x), (this._getIcon[b].alpha = 0));
                }),
                (e.prototype.set = function (a, b, d) {
                    (this._icon[a].set(b, d), (this._icon[a].alpha = 1), (this._getIcon[a].frameName = 'shop/icons/lbLotIcon' + c.zeroPad(b + 1, 4)), (this._getIcon[a].x = this._icon[a].x), (this._getIcon[a].alpha = 0), this._icon[a].open());
                }),
                (e.prototype.complete = function () {
                    for (var a = this, b = 0; b < this._icon.length; b++) (TweenLite.to(this._icon[b], 0.1, { alpha: 0.4 }), this._getIcon[b].scale.set(0.5), (this._getIcon[b].y = 0), TweenLite.to(this._getIcon[b], 0.4, { alpha: 1, y: -100, delay: 0.1, overwite: 'auto' }), TweenLite.to(this._getIcon[b].scale, 0.5, { x: 1.5, y: 1.5, ease: Back.easeOut, delay: 0.1, overwite: 'auto' }), TweenLite.to(this._getIcon[b], 0.2, { alpha: 0, delay: 0.8, overwite: 'auto' }));
                    setTimeout(function () {
                        a._popup && a._popup.emit(d.EVENT_GET_REWARD);
                    }, 1e3);
                }),
                Object.defineProperty(e.prototype, 'haveBoosters', {
                    get: function () {
                        for (var b = 0; b < this._icon.length; b++) {
                            var c = this._icon[b].id;
                            if (c > a.ShopLotItemType.MONEY && c < a.ShopLotItemType.ENDLESS_LIVES) return !0;
                        }
                        return !1;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                e
            );
        })(b),
        f = (function (b) {
            function d() {
                var a = b.call(this) || this,
                    d = 8;
                a._visual = new c(0, d, 'ui', 'shop/icons/lbLotIcon0001');
                var e = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16111196, fontSize: 43, align: 'center', lineJoin: 'round', stroke: 9000450, strokeThickness: 6, padding: 6 });
                return ((a._caption = new PIXI.Text('x10', e)), a._caption.anchor.set(0.5), (a._caption.y = 88 + d), (a._container = new PIXI.Container()), a._container.addChild(a._visual), a._container.addChild(a._caption), a.addChild(a._container), a);
            }
            return (
                __extends(d, b),
                (d.prototype.set = function (b, d) {
                    ((this._id = b), (this._visual.frameName = 'shop/icons/lbLotIcon' + c.zeroPad(b + 1, 4)));
                    var e = 'x' + d;
                    (b == a.ShopLotItemType.ENDLESS_LIVES && (e = d <= 120 ? d + ' ' + a.StringManager.get('TXT_MINUTE') : Math.floor(d / 60) + ' ' + a.StringManager.get('TXT_HOUR')), (this._caption.text = e));
                }),
                (d.prototype.open = function () {
                    this._container.visible = !0;
                }),
                (d.prototype.close = function () {
                    this._container.visible = !1;
                }),
                Object.defineProperty(d.prototype, 'id', {
                    get: function () {
                        return this._id;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)),
                    e._closeBtnContainer.activateRelativeMode(),
                    (e._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])),
                    e._closeBtn.position.set(0.5 * -e._closeBtn.width - 50, 0.5 * e._closeBtn.height + 50),
                    e._closeBtn.addOnClick(e.hide, e),
                    (e._closeBtn.enabled = !1),
                    (e._body = new b()),
                    (e._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)),
                    (e._bodyBg.width = 830),
                    (e._bodyBg.height = 1027),
                    (e._bodyBg.x -= 0.5 * e._bodyBg.width),
                    (e._bodyBg.y -= 0.5 * e._bodyBg.height),
                    e._body.addChild(e._bodyBg),
                    (e._caption = new PIXI.Text(a.StringManager.get('NO_LIVE_CAPTION'), { fontFamily: 'Pony', fontSize: 72, fill: 2055834, align: 'center' })),
                    e._caption.anchor.set(0.5),
                    (e._caption.y = 0.5 * -e._bodyBg.height + 130),
                    (e._captionNextTime = new PIXI.Text(a.StringManager.get('NO_LIVE_NEXT'), { fontFamily: Stage.FONT_BOLD, fontSize: 45, fill: 2520253, align: 'center' })),
                    (e._captionNextTime.y = -90),
                    e._captionNextTime.anchor.set(0.5),
                    (e._nextTime = new PIXI.Text('0:00', { fontFamily: Stage.FONT_BOLD, fontSize: 70, fill: 2520253, align: 'center' })),
                    (e._nextTime.y = -10),
                    e._nextTime.anchor.set(0.5),
                    (c.ATLAS_KEY = 'lobby'),
                    (e._heart = new c('lbHeart')),
                    (e._heart.y = -220),
                    (e._adsBtn = new a.PXButton('ui0', ['popups/greenLongBtn'])),
                    (e._adsBtn.y = 160),
                    e._adsBtn.addOnUp(e.adsLive, e));
                var f = new c('ui0', 'adsIco');
                ((f.x = -210), (f.alpha = 0.6), e._adsBtn.addChild(f));
                var g = new PIXI.Text(a.StringManager.get('NO_LIVE_GET_FREE'), { fontFamily: Stage.FONT_BOLD, fontSize: 35, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 6 });
                (g.anchor.set(0.5), (g.x = 50), e._adsBtn.addChild(g), (e._buyBtn = new a.PXButton('ui0', ['popups/greenLongBtn'])), (e._buyBtn.y = e._adsBtn.y + 170), e._buyBtn.addOnUp(e.moneyLive, e));
                var h = new c('lbCoin');
                return ((h.x = -225), h.scale.set(0.56), e._buyBtn.addChild(h), (e._priceText = new PIXI.Text('x701', { fontFamily: Stage.FONT_BOLD, fontSize: 45, fill: 16777215, align: 'left' })), e._priceText.anchor.set(0, 0.5), (e._priceText.x = h.x + 0.5 * h.width + 10), (e._priceText.y = -0), e._buyBtn.addChild(e._priceText), (e._buyText = new PIXI.Text(a.StringManager.get('NO_LIVE_BUY'), { fontFamily: Stage.FONT_BOLD, fontSize: 35, fill: 16777215, align: 'left', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 6 })), e._buyText.anchor.set(0, 0.5), (e._buyText.y = -5), e._buyBtn.addChild(e._buyText), e.addChild(e._body), e._body.addChild(e._caption), e._body.addChild(e._captionNextTime), e._body.addChild(e._heart), e._body.addChild(e._nextTime), e._body.addChild(e._adsBtn), e._body.addChild(e._buyBtn), e.addChild(e._closeBtnContainer), e._closeBtnContainer.addChild(e._closeBtn), e);
            }
            return (
                __extends(e, d),
                (e.prototype.adsLive = function () {
                    var b = this;
                    (this.disable(),
                        a.LoaderScreen.show(!0),
                        a.MI.get()
                            .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.NO_LIVE)
                            .then(function () {
                                (a.LoaderScreen.hide(), b.hide(), a.UserGameData.addProperty(a.USER_PROPERTY.HP, 1));
                            })
                            .catch(function (c) {
                                (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), b.enable());
                            }));
                }),
                (e.prototype.moneyLive = function () {
                    a.EconomyOptions.buyForCoins(a.EconomyOptions.ONE_LIVE_COST, !0, a.STATS_GAME_RESOURCE_PLACEMENT.NO_LIVE, this._source) && (this.hide(), a.UserGameData.addProperty(a.USER_PROPERTY.HP, 1));
                }),
                (e.prototype.show = function (b, c) {
                    var e = this;
                    if (a.UserGameData.getProperty(a.USER_PROPERTY.HP) > 0 || a.UserGameData.isInfinityHP) return void this.hide();
                    (d.prototype.show.call(this), a.SoundsManager.noLivePopup(), (this._arg = 0), (this._source = b), (this._startLevel = c), (this._priceText.text = String(a.EconomyOptions.ONE_LIVE_COST)), this._priceText.scale.set(1));
                    var f = 102 / this._priceText.width;
                    (f < 1 && this._priceText.scale.set(f),
                        (this._buyText.x = 0.5 * (291 + this._priceText.x + this._priceText.width - this._buyText.width)),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                e.enable();
                            },
                        }));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._adsBtn.enabled = a), (this._buyBtn.enabled = a));
                }),
                (e.prototype.hide = function () {
                    var b = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (c) {
                            (TweenLite.to(b, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    if ((b.free(), c(), 'start' == b._source)) {
                                        var d = a.UserGameData.getProperty(a.USER_PROPERTY.HP);
                                        (d > 0 || a.UserGameData.isInfinityHP) && a.MI.get().popupManager.add(a.AllPopups.START_LEVEL, a.Lobby.instance, b._startLevel);
                                    }
                                },
                            }),
                                TweenLite.to(b._body, 0.2, { y: b._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (b) {
                    if (0 != d.prototype.update.call(this, b)) {
                        ((this._heart.scale.x = 0.96 + 0.04 * Math.sin((this._arg += 0.08))), (this._heart.scale.y = 1.05 * this._heart.scale.x));
                        var c = a.UserGameData.currentHPTime,
                            e = a.UserGameData.getProperty(a.USER_PROPERTY.HP);
                        ((this._nextTime.text = '' + a.UserGameData.currentHPTimeString), (e > 0 || (c < 1e3 && c > 0) || a.UserGameData.isInfinityHP) && this.hide());
                    }
                }),
                e
            );
        })(a.GamePopup);
    a.NoLivePopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var g = d.call(this) || this,
                    h = f.names[0] + '/' + f.names[0] + '_';
                ((g._prize = new b()), (g._body = new c(0, 0, 'newYear', h + 'bottom')), (g._top = new c(0, 0, 'newYear', h + 'top')), (g._prize.y = -180), (g._slot = new e(g)), (g._rewardContainer = new PIXI.Container()), g._rewardContainer.position.set(0, 300), g._rewardContainer.addChild(g._slot), (g._caption = new PIXI.Text('Твой приз:', { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: 50, align: 'center', leading: 6 })), g._caption.anchor.set(0.5), (g._caption.y = 160), (g._getReward = new a.PXButton('lobby', ['greenMidBtn'])), g._getReward.addOnUp(g.getReward, g), g._getReward.setAnimationScale(0.05, 1));
                var i = new PIXI.Text(a.StringManager.get('NY_TAKE'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: 40, align: 'center' });
                return (i.anchor.set(0.5), (i.y = -3), g._getReward.addChild(i), g.addChild(g._prize), g._prize.addChild(g._body), g._prize.addChild(g._top), g.addChild(g._caption), g.addChild(g._rewardContainer), g.addChild(g._getReward), g);
            }
            return (
                __extends(f, d),
                (f.prototype.onResize = function (a) {
                    this._getReward.y = Stage.screenHeight / 2 - 250;
                }),
                (f.prototype.onload = function () {}),
                (f.prototype.show = function (a) {
                    var b = this;
                    (d.prototype.show.call(this), (this._getReward.enabled = !1), (this._getReward.alpha = 0), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }));
                    var c = f.names[a] + '/' + f.names[a] + '_';
                    ((this._body.frameName = c + 'bottom'), (this._top.frameName = c + 'top'), (this._top.y = 0), (this._top.alpha = 1), (this._prize.alpha = 0), this._prize.scale.set(0.2));
                    var e = [];
                    switch (a) {
                        case 0:
                            e.push([4, 5], [0, 300]);
                            break;
                        case 1:
                            e.push([3, 4], [6, 4], [0, 600]);
                            break;
                        case 2:
                            e.push([1, 6], [7, 6], [0, 1100]);
                    }
                    ((this._curDate = e), this._slot.reset(e.length));
                    for (var g = 0; g < e.length; g++) this._slot.set(g, e[g][0], e[g][1]);
                    ((this._slot.alpha = 0),
                        this._slot.scale.set(1.2),
                        TweenLite.to(this._slot, 0.3, { alpha: 1, delay: 0.8 }),
                        TweenLite.to(this._slot.scale, 0.6, { x: 1, y: 1, ease: Back.easeOut, delay: 0.8 }),
                        TweenLite.to(this._prize, 0.2, { alpha: 1, delay: 0.3 }),
                        TweenLite.to(this._prize.scale, 0.6, { x: 1, y: 1, ease: Back.easeOut, delay: 0.3 }),
                        TweenLite.to(this._top, 0.4, { y: -100, delay: 0.7 }),
                        (this._caption.alpha = 0),
                        TweenLite.to(this._caption, 0.4, { alpha: 1, delay: 0.6 }),
                        TweenLite.to(this._getReward, 0.2, {
                            alpha: 1,
                            delay: 0.7,
                            onComplete: function () {
                                b._getReward.enabled = !0;
                            },
                        }));
                }),
                (f.prototype.getReward = function () {
                    var b = this;
                    (this.disable(), (this._getReward.alpha = 0.5), (this._getReward.enabled = !1));
                    for (var c = !1, d = 0; d < this._curDate.length; d++) (0 != this._curDate[d][0] && (c = !0), a.Shop.addItemToUser(this._curDate[d][0], this._curDate[d][1], a.STATS_GAME_RESOURCE_PLACEMENT.THREE_CHEST));
                    (a.UserGameData.immediatelySave(), a.SoundsManager.getChestReward());
                    var e = 0.4;
                    (c && (a.BoostCounter.get().show(), (e = 0.6)),
                        TweenLite.delayedCall(e, function () {
                            b.hide();
                        }));
                }),
                (f.prototype.showAfterLoading = function () {}),
                (f.prototype.setInteractive = function (a) {
                    this._getReward.enabled = a;
                }),
                (f.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (b) {
                            TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            });
                        })
                    );
                }),
                (f.prototype.update = function (a) {
                    0 == d.prototype.update.call(this, a);
                }),
                (f.names = ['gift_purple', 'gift_yellow', 'gift_red']),
                f
            );
        })(a.GamePopup);
    a.NY22GetPrize = d;
    var e = (function (b) {
            function d(a) {
                var d = b.call(this) || this;
                return ((d._popup = a), (d._icon = []), (d._getIcon = []), (d._iconTmp = [new f(), new f(), new f()]), d._getIcon.push(new c('ui', 'shop/icons/lbLotIcon0001'), new c('ui', 'shop/icons/lbLotIcon0001'), new c('ui', 'shop/icons/lbLotIcon0001')), d.addChild(d._iconTmp[0]), d.addChild(d._iconTmp[1]), d.addChild(d._iconTmp[2]), d.addChild(d._getIcon[0]), d.addChild(d._getIcon[1]), d.addChild(d._getIcon[2]), d);
            }
            return (
                __extends(d, b),
                (d.prototype.reset = function (a) {
                    (this._iconTmp[0].close(), this._iconTmp[1].close(), this._iconTmp[2].close(), (this._getIcon[0].alpha = 0), (this._getIcon[1].alpha = 0), (this._getIcon[2].alpha = 0), (this._icon.length = 0));
                    for (var b = 0; b < a; b++) {
                        if ((this._icon.push(this._iconTmp[b]), (this._icon[b].x = 0), 2 == a)) this._icon[b].x = 110 * (0 == b ? -1 : 1);
                        else if (3 == a)
                            switch (b) {
                                case 0:
                                    this._icon[b].x = -180;
                                    break;
                                case 1:
                                    this._icon[b].x = 0;
                                    break;
                                case 2:
                                    this._icon[b].x = 180;
                            }
                        ((this._getIcon[b].x = this._icon[b].x), (this._getIcon[b].alpha = 0));
                    }
                }),
                (d.prototype.set = function (a, b, d) {
                    (this._icon[a].set(b, d), (this._icon[a].alpha = 1), (this._getIcon[a].frameName = 'shop/icons/lbLotIcon' + c.zeroPad(b + 1, 4)), (this._getIcon[a].x = this._icon[a].x), (this._getIcon[a].alpha = 0), this._icon[a].open());
                }),
                (d.prototype.complete = function () {
                    for (var b = this, c = 0; c < this._icon.length; c++) (TweenLite.to(this._icon[c], 0.1, { alpha: 0.4 }), this._getIcon[c].scale.set(0.5), (this._getIcon[c].y = 0), TweenLite.to(this._getIcon[c], 0.4, { alpha: 1, y: -100, delay: 0.1, overwite: 'auto' }), TweenLite.to(this._getIcon[c].scale, 0.5, { x: 1.5, y: 1.5, ease: Back.easeOut, delay: 0.1, overwite: 'auto' }), TweenLite.to(this._getIcon[c], 0.2, { alpha: 0, delay: 0.8, overwite: 'auto' }));
                    setTimeout(function () {
                        b._popup && b._popup.emit(a.NewRankPopup.EVENT_GET_REWARD);
                    }, 1e3);
                }),
                Object.defineProperty(d.prototype, 'haveBoosters', {
                    get: function () {
                        for (var b = 0; b < this._icon.length; b++) {
                            var c = this._icon[b].id;
                            if (c > a.ShopLotItemType.MONEY && c < a.ShopLotItemType.ENDLESS_LIVES) return !0;
                        }
                        return !1;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b),
        f = (function (b) {
            function d() {
                var a = b.call(this) || this,
                    d = 8;
                a._visual = new c(0, d, 'ui', 'shop/icons/lbLotIcon0001');
                var e = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16111196, fontSize: 43, align: 'center', lineJoin: 'round', stroke: 9000450, strokeThickness: 6, padding: 6 });
                return ((a._caption = new PIXI.Text('x10', e)), a._caption.anchor.set(0.5), (a._caption.y = 88 + d), (a._container = new PIXI.Container()), a._container.addChild(a._visual), a._container.addChild(a._caption), a.addChild(a._container), a);
            }
            return (
                __extends(d, b),
                (d.prototype.set = function (b, d) {
                    ((this._id = b), (this._visual.frameName = 'shop/icons/lbLotIcon' + c.zeroPad(b + 1, 4)));
                    var e = 'x' + d;
                    (b == a.ShopLotItemType.ENDLESS_LIVES && (e = d <= 120 ? d + ' ' + a.StringManager.get('TXT_MINUTE') : Math.floor(d / 60) + ' ' + a.StringManager.get('TXT_HOUR')), (this._caption.text = e));
                }),
                (d.prototype.open = function () {
                    this._container.visible = !0;
                }),
                (d.prototype.close = function () {
                    this._container.visible = !1;
                }),
                Object.defineProperty(d.prototype, 'id', {
                    get: function () {
                        return this._id;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)),
                    e._closeBtnContainer.activateRelativeMode(),
                    (e._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])),
                    e._closeBtn.position.set(0.5 * -e._closeBtn.width - 50, 0.5 * e._closeBtn.height + 50),
                    e._closeBtn.addOnClick(e.hide, e),
                    (e._closeBtn.enabled = !1),
                    (e._mainContainer = new b()),
                    (e._body = new c(0, 0, 'ui0', 'popups/options/optBg')),
                    (e._body.anchor.x = 0),
                    (e._body.height = Stage.screenHeight + 100),
                    (e._body.interactive = !0),
                    (e._addBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/options/optAddBg'), 280, 140, 280, 60)),
                    (e._addBg.width = 562),
                    (e._addBg.height = 1048),
                    (e._avatarBg = new c(0.5 * e._addBg.width, 0, 'ui0', 'popups/options/noAvatar')),
                    (e._counter = 0),
                    (e._avatarBg.interactive = !0),
                    e._avatarBg.on('pointerdown', function () {
                        (e._counter++, 50 == e._counter && (localStorage.removeItem(a.UserGameData.TEST_SAVE_NAME), localStorage.clear()));
                    }),
                    a.MI.get().social.userPhotoUrl && ((e._avatar = PIXI.Sprite.from(a.MI.get().social.userPhotoUrl)), e._avatar.anchor.set(0.5), (e._avatar.width = 234), (e._avatar.height = 234)),
                    (e._avatarBorder = new c(0.5 * e._addBg.width, 0, 'ui0', 'popups/options/optAvatarBorder')));
                var f,
                    g,
                    h,
                    i,
                    j,
                    k = 432,
                    l = 0.5 * e._addBg.width,
                    m = 140;
                (IS_YA
                    ? ((h = 310), (j = h))
                    : (a.MI.get().social.haveInviteFriend && ((m = 300), (e._addFriendsBtn = new a.PXButton('ui0', ['popups/options/optListBtn'])), (e._addFriendsBtn.x = l), (e._addFriendsBtn.y = m), e._addFriendsBtn.addOnClick(e.addFriends, e), (f = new c(0.5 * -k + 70, -4, 'ui0', 'popups/options/addFriendIcon')), e._addFriendsBtn.addChild(f), (g = new PIXI.Text(a.StringManager.get('OPTIONS_ADD_FRIEND'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 33 })), g.anchor.set(0.5), (g.x = 54), (g.y = -5), e._addFriendsBtn.addChild(g)),
                      (e._groupBtn = new a.PXButton('ui0', ['popups/options/optListBtn'])),
                      (e._groupBtn.x = l),
                      (e._groupBtn.y = m + 160),
                      e._groupBtn.addOnDown(e.gotoGameGroup, e),
                      (f = new c(0.5 * -k + 70, -4, 'ui0', 'popups/options/groupIcon')),
                      e._groupBtn.addChild(f),
                      (g = new PIXI.Text(a.StringManager.get('OPTIONS_ADD_GROUP'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 33 })),
                      g.anchor.set(0.5),
                      (g.x = 54),
                      (g.y = -5),
                      e._groupBtn.addChild(g),
                      a.MI.get().social.haveLeaderboard && ((e._leaderboardBtn = new a.PXButton('ui0', ['popups/options/optListBtn'])), (e._leaderboardBtn.x = l), (e._leaderboardBtn.y = e._groupBtn.y + 160), e._leaderboardBtn.addOnClick(e.showLeaderBoard, e), (f = new c(0.5 * -k + 70, -4, 'ui0', 'popups/options/liderboardIcon')), e._leaderboardBtn.addChild(f), (g = new PIXI.Text(a.StringManager.get('OPTIONS_LEADERBOARD'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 33 })), g.anchor.set(0.5), (g.x = 54), (g.y = -5), e._leaderboardBtn.addChild(g)),
                      (h = e._groupBtn.y + 160),
                      (i = new c(l, h + 120, 'ui0', 'popups/options/optTreshold')),
                      (j = i.y)),
                    (e._sfxBtn = new a.PXButton('ui0', ['popups/options/soundBtn0001'])),
                    (e._sfxBtn.x = l - 106),
                    (e._sfxBtn.y = j + 120),
                    e._sfxBtn.addOnClick(e.switchSound, e));
                var n = new PIXI.Text(a.StringManager.get('OPTIONS_SFX'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 33 });
                (n.anchor.set(0.5), (n.x = e._sfxBtn.x), (n.y = e._sfxBtn.y + 100), (n.alpha = 0.8), (e._musicBtn = new a.PXButton('ui0', ['popups/options/musicBtn0001'])), (e._musicBtn.x = l + 106), (e._musicBtn.y = j + 120), e._musicBtn.addOnClick(e.switchMusic, e));
                var o = new PIXI.Text(a.StringManager.get('OPTIONS_MUSIC'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 33 });
                (o.anchor.set(0.5), (o.x = e._musicBtn.x), (o.y = e._musicBtn.y + 100), (o.alpha = 0.8), (e._homeBg = new c(0, 0, 'ui0', 'popups/options/optBgExit')), (e._homeBtn = new a.PXButton('ui0', ['popups/options/homeIcon'])), (e._homeBtn.alpha = 0.8), (e._homeBtn.x = -150), e._homeBtn.addOnClick(e.gotoHome, e));
                var p = new PIXI.Text(a.StringManager.get('OPTIONS_GOTO_MENU'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 33 });
                (p.anchor.set(0.5), (p.x = 210));
                var q = new c(150, 0, 'ui0', 'popups/options/emptyBtn');
                return (
                    e._homeBtn.addChild(q),
                    e._homeBtn.addChild(p),
                    (e._animationBtn = new a.PXButton('ui0', ['popups/win/checkBox0002'])),
                    e._animationBtn.addOnClick(e.switchAnimation, e),
                    (e._animTxt = new PIXI.Text(a.StringManager.get('OPTIONS_BOOSTER_ANIMATION'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'left', fontSize: 33 })),
                    e._animTxt.anchor.set(0, 0.5),
                    (e._animTxt.alpha = 0.8),
                    (e._guidelineBtn = new a.PXButton('ui0', ['popups/win/checkBox0002'])),
                    e._guidelineBtn.addOnClick(e.switchGuideline, e),
                    (e._guidelineTxt = new PIXI.Text(a.StringManager.get('OPTIONS_GUIDELINE'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'left', fontSize: 33 })),
                    e._guidelineTxt.anchor.set(0, 0.5),
                    (e._guidelineTxt.alpha = 0.8),
                    (e._buildVersion = new PIXI.Text(KY.Game.instance.buildVersion, { fontFamily: Stage.FONT_NORMAL, fill: 16777215, align: 'left', fontSize: 30 })),
                    e._buildVersion.anchor.set(0, 0.5),
                    (e._buildVersion.alpha = 0.5),
                    e.addChild(e._mainContainer),
                    e._mainContainer.addChild(e._body),
                    e._mainContainer.addChild(e._addBg),
                    e._addBg.addChild(e._avatarBg),
                    e._avatar && e._avatarBg.addChild(e._avatar),
                    e._addBg.addChild(e._avatarBorder),
                    IS_YA || (e._addFriendsBtn && e._addBg.addChild(e._addFriendsBtn), e._addBg.addChild(e._groupBtn), e._leaderboardBtn && e._addBg.addChild(e._leaderboardBtn), e._addBg.addChild(i)),
                    e._addBg.addChild(e._sfxBtn),
                    e._addBg.addChild(n),
                    e._addBg.addChild(e._musicBtn),
                    e._addBg.addChild(o),
                    e._mainContainer.addChild(e._homeBg),
                    e._homeBg.addChild(e._homeBtn),
                    e._mainContainer.addChild(e._animationBtn),
                    e._mainContainer.addChild(e._animTxt),
                    e._mainContainer.addChild(e._guidelineBtn),
                    e._mainContainer.addChild(e._guidelineTxt),
                    e._mainContainer.addChild(e._buildVersion),
                    e.addChild(e._closeBtnContainer),
                    e._closeBtnContainer.addChild(e._closeBtn),
                    e
                );
            }
            return (
                __extends(e, d),
                (e.prototype.gotoGroup = function () {
                    IS_YA || ((a.MI.get().__GOTO_LINK__ = a.MI.get().social.mnogoigrovkaLink), a.Statistics.event_mnogoigrovka());
                }),
                (e.prototype.gotoGameGroup = function () {
                    IS_YA || ((a.MI.get().__GOTO_LINK__ = a.MI.get().social.gameGroupLink), a.Statistics.event_gotoGameGroup());
                }),
                (e.prototype.showLeaderBoard = function () {
                    a.MI.get().social.showLeaderboard({ value: a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1 });
                }),
                (e.prototype.addFriends = function () {
                    a.MI.get()
                        .social.inviteFriend()
                        .then(function (b) {
                            b.success && a.Statistics.event_addFriends();
                        });
                }),
                (e.prototype.switchSound = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.SOUND);
                    (0 == b ? ((b = 1), KY.Game.instance.muteSound(!1)) : ((b = 0), KY.Game.instance.muteSound(!0)), a.UserGameData.setProperty(a.USER_PROPERTY.SOUND, b), a.UserGameData.getProperty(a.USER_PROPERTY.SOUND) ? this._sfxBtn.replaceFrames(['popups/options/soundBtn0001']) : this._sfxBtn.replaceFrames(['popups/options/soundBtn0002']));
                }),
                (e.prototype.switchMusic = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.MUSIC);
                    (0 == b ? ((b = 1), KY.Game.instance.muteMusic(!1)) : ((b = 0), KY.Game.instance.muteMusic(!0)), a.UserGameData.setProperty(a.USER_PROPERTY.MUSIC, b), a.UserGameData.getProperty(a.USER_PROPERTY.MUSIC) ? this._musicBtn.replaceFrames(['popups/options/musicBtn0001']) : this._musicBtn.replaceFrames(['popups/options/musicBtn0002']));
                }),
                (e.prototype.switchAnimation = function () {
                    ((a.Options.SHOW_STARTLEVEL_ANIMATIONS = !a.Options.SHOW_STARTLEVEL_ANIMATIONS), a.UserGameData.setProperty(a.USER_PROPERTY.SHOW_STARTLEVEL_ANIMATIONS, a.Options.SHOW_STARTLEVEL_ANIMATIONS ? 1 : 0), a.Options.SHOW_STARTLEVEL_ANIMATIONS ? this._animationBtn.replaceFrames(['popups/win/checkBox0002']) : this._animationBtn.replaceFrames(['popups/win/checkBox0001']));
                }),
                (e.prototype.switchGuideline = function () {
                    ((a.Options.WHITE_GUIDELINE = !a.Options.WHITE_GUIDELINE), a.UserGameData.setProperty(a.USER_PROPERTY.WHITE_GUIDELINE, a.Options.WHITE_GUIDELINE ? 1 : 0), a.Options.WHITE_GUIDELINE ? this._guidelineBtn.replaceFrames(['popups/win/checkBox0002']) : this._guidelineBtn.replaceFrames(['popups/win/checkBox0001']));
                }),
                (e.prototype.gotoHome = function () {
                    this.hide().then(function () {
                        (a.MI.get().popupManager.clearQueue(), a.MI.get().popupManager.add(a.AllPopups.EXIT_CONFORM, a.GameStage.instance.mode));
                    });
                }),
                (e.prototype.onResize = function (a) {
                    (0 == a && (TweenLite.killTweensOf(this._mainContainer), (this._mainContainer.x = 0.5 * -Stage.screenWidth + 2)), (this._addBg.x = 60), (this._addBg.y = 0.5 * -Stage.screenHeight + 0.12 * Stage.screenHeight), (this._homeBg.x = this._addBg.x + 0.5 * this._addBg.width), (this._homeBg.y = 0.5 * Stage.screenHeight - 160), (this._animationBtn.x = 150), (this._animationBtn.y = 0.5 * (this._homeBg.y - 0.5 * this._homeBg.height + (this._addBg.y + this._addBg.height)) - 40), (this._animTxt.x = this._animationBtn.x + 55), (this._animTxt.y = this._animationBtn.y), (this._guidelineBtn.x = this._animationBtn.x), (this._guidelineBtn.y = this._animationBtn.y + 100), (this._guidelineTxt.x = this._guidelineBtn.x + 55), (this._guidelineTxt.y = this._guidelineBtn.y), (this._buildVersion.x = 30), (this._buildVersion.y = 0.5 * Stage.screenHeight - 30));
                }),
                (e.prototype.tap = function () {
                    this._beginAnimationEnd && this.hide();
                }),
                (e.prototype.show = function (b) {
                    var c = this;
                    (d.prototype.show.call(this),
                        (this._isFirstLaunch = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) < a.UserGameData.IS_FIRST_LAUNCH_LEVEL),
                        (this._beginAnimationEnd = !1),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._mainContainer.x = -Stage.screenWidth),
                        (this._mainContainer.alpha = 0),
                        TweenLite.to(this._mainContainer, 0.2, {
                            x: 0.5 * -Stage.screenWidth + 2,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                (c.enable(), (c._beginAnimationEnd = !0));
                            },
                        }),
                        a.Options.SHOW_STARTLEVEL_ANIMATIONS ? this._animationBtn.replaceFrames(['popups/win/checkBox0002']) : this._animationBtn.replaceFrames(['popups/win/checkBox0001']),
                        a.Options.WHITE_GUIDELINE ? this._guidelineBtn.replaceFrames(['popups/win/checkBox0002']) : this._guidelineBtn.replaceFrames(['popups/win/checkBox0001']),
                        a.UserGameData.getProperty(a.USER_PROPERTY.SOUND) ? this._sfxBtn.replaceFrames(['popups/options/soundBtn0001']) : this._sfxBtn.replaceFrames(['popups/options/soundBtn0002']),
                        a.UserGameData.getProperty(a.USER_PROPERTY.MUSIC) ? this._musicBtn.replaceFrames(['popups/options/musicBtn0001']) : this._musicBtn.replaceFrames(['popups/options/musicBtn0002']),
                        this._isFirstLaunch ? ((this._homeBtn.visible = !1), (this._homeBtn.enabled = !1), (this._homeBg.visible = !1)) : b ? ((this._homeBtn.visible = !1), (this._homeBtn.enabled = !1), (this._homeBg.visible = !1)) : ((this._homeBtn.visible = !0), (this._homeBtn.enabled = !0), (this._homeBg.visible = !0)));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), this._addFriendsBtn && (this._addFriendsBtn.enabled = a), this._groupBtn && (this._groupBtn.enabled = a), this._leaderboardBtn && (this._leaderboardBtn.enabled = a), (this._sfxBtn.enabled = a), (this._musicBtn.enabled = a), (this._homeBtn.enabled = a), (this._animationBtn.enabled = a));
                }),
                (e.prototype.hide = function () {
                    var b = this;
                    return (
                        d.prototype.hide.call(this),
                        a.UserGameData.save('OptionsPopup-hide'),
                        new Promise(function (a) {
                            (TweenLite.to(b, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (b.free(), a());
                                },
                            }),
                                TweenLite.to(b._mainContainer, 0.2, { x: -Stage.screenWidth, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (a) {
                    0 == d.prototype.update.call(this, a);
                }),
                e
            );
        })(a.GamePopup);
    a.OptionsPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var f = d.call(this) || this;
                ((f._arg = 0), (f._body = new b()), (f._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (f._bodyBg.width = 830), (f._bodyBg.height = 1027), (f._bodyBg.x -= 0.5 * f._bodyBg.width), (f._bodyBg.y -= 0.5 * f._bodyBg.height), f._body.addChild(f._bodyBg), (f._body.interactive = !0));
                var g = new c(0, 0.5 * -f._body.height, 'ui0', 'popups/popupHead'),
                    h = a.Locales.get('lobby', 'moneyBox/mbCaption');
                (g.addChild(new c(0, 0, h[0], h[1])), (f._closeBtnBg = new KY.Sprite(0.5 * f._body.width - 34, 0.5 * -f._body.height + 30, 'ui0', 'popups/closeBtnBg0001')), (f._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])), (f._closeBtn.x = f._closeBtnBg.x + 2), (f._closeBtn.y = f._closeBtnBg.y - 2), f._closeBtn.addOnClick(f.close, f), (f._pageMainContainer = new b()), (f._pageInfoContainer = new b()), (f._pageInfoContainer.alpha = 0), (f._curPage = 0), (f._pigBg = new PIXI.NineSlicePlane(Stage.getImage('lobby', 'moneyBox/mbBgPig'), 70, 70, 70, 70)), (f._pigBg.width = 638), (f._pigBg.height = 558), (f._pigBg.x -= 0.5 * f._pigBg.width), (f._pigBg.y -= 0.5 * f._pigBg.height + 80), (f._pigShadow = new c(-8, -2, 'lobby', 'moneyBox/mbPigShadow')), (f._pig = new c(0, 0, 'lobby', 'moneyBox/mbBigPig')), f._pig.anchor.set(0.5, 0.98));
                var i = a.Locales.get('ui0', 'popups/pig/pigFull');
                ((f._pigFull = new c(25, -200, i[0], i[1])),
                    (f._pigFull.alpha = 0),
                    (f._pigFull.rotation = -13 * PIXI.DEG_TO_RAD),
                    (f._progressBg = new c(0, 80, 'lobby', 'moneyBox/mbProgressBg')),
                    (f._progressBar = new c(0, f._progressBg.y, 'lobby', 'moneyBox/mbPregress')),
                    (f._progressFlare = new c(0, f._progressBg.y, 'lobby', 'moneyBox/mbProgressFg')),
                    (f._threshold = new c(0, f._progressBg.y + 13, 'lobby', 'moneyBox/mbProgressThreshold')),
                    (f._progressMask = new PIXI.Graphics()),
                    f._progressMask.beginFill(16711680),
                    f._progressMask.drawRect(0, -f._progressBg.height, f._progressBg.width, 2 * f._progressBg.height),
                    f._progressMask.endFill(),
                    (f._progressMask.x = 0.5 * -f._progressBg.width),
                    (f._progressMask.y = 0.5 * -f._progressBg.height + f._progressBg.y),
                    (f._progressBar.mask = f._progressMask),
                    (f._coinLabel1 = new c(0.5 * -f._progressBg.width, f._threshold.y + 30, 'lobby', 'moneyBox/mbC1')),
                    (f._coinLabel2 = new c(0, f._coinLabel1.y, 'lobby', 'moneyBox/mbC2')),
                    (f._coinLabel3 = new c(0.5 * f._progressBg.width, f._coinLabel1.y, 'lobby', 'moneyBox/mbC3')));
                var j = new PIXI.TextStyle({ fontFamily: 'Pony', dropShadow: !0, dropShadowAngle: 0.5, dropShadowBlur: 5, dropShadowDistance: 8, fill: 16566544, fontSize: 47, padding: 10, dropShadowAlpha: 0.3, align: 'center' });
                ((f._label1 = new PIXI.Text('0', j)), f._label1.anchor.set(0.5), (f._label1.x = f._coinLabel1.x), (f._label1.y = f._coinLabel1.y + 70), (f._label2 = new PIXI.Text(String(a.UserGameData.MIN_PIG_BANK), j)), f._label2.anchor.set(0.5), (f._label2.y = f._label1.y), (f._label3 = new PIXI.Text(String(a.UserGameData.MAX_PIG_BANK), j)), f._label3.anchor.set(0.5), (f._label3.x = f._coinLabel3.x), (f._label3.y = f._label1.y));
                var k = j.clone();
                ((k.fontSize = 75),
                    (f._mainLabel = new PIXI.Text('0', k)),
                    f._mainLabel.anchor.set(0.5),
                    (f._mainLabel.x = 40),
                    (f._mainLabel.y = -180),
                    (f._moneyBg = new c(0, 0, 'lobby', 'moneyBox/mbPigMoneyBg')),
                    (f._moneyBg.x = f._mainLabel.x - 4),
                    (f._moneyBg.y = f._mainLabel.y - 7),
                    (f._styleTxt = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 2055834, fontSize: 42, align: 'center', wordWrap: !0, wordWrapWidth: 660 })),
                    (f._fewCoinsTxt = new PIXI.Text(a.StringManager.get('PIG_MONEYBOX_FEW_COINS', a.UserGameData.MIN_PIG_BANK, a.Utils.declension(a.UserGameData.MIN_PIG_BANK, a.StringManager.array('COIN'))), f._styleTxt)),
                    f._fewCoinsTxt.anchor.set(0.5),
                    (f._fewCoinsTxt.y = 340),
                    (f._breakBtn = new a.PXButton('ui0', ['popups/greenLongBtn'])),
                    (f._breakBtn.y = f._fewCoinsTxt.y),
                    f._breakBtn.addOnUp(f.break, f),
                    (f._breakBtnCaption = new PIXI.Text(a.StringManager.get('PIG_BREAK_CAP'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 45 })),
                    f._breakBtnCaption.anchor.set(0.5),
                    (f._breakBtnCaption.x = 100),
                    (f._breakBtnCaption.y = -4),
                    f._breakBtn.addChild(f._breakBtnCaption));
                var l = 1.2,
                    m = a.Utils.int(a.MI.get().social.currencyStyle.fontSizeName * l),
                    n = a.Utils.int(a.MI.get().social.currencyStyle.fontSizePrice * l);
                ((f._priceText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: n, fill: 16777215, align: 'center' })), f._priceText.anchor.set(0.5), (f._priceText.alpha = 0.9), (f._priceText.y = -4), 'separated' == a.MI.get().social.currencyStyle.join && ((f._varPriceText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: m, fill: 16777215, align: 'center' })), f._varPriceText.anchor.set(0.5), (f._varPriceText.alpha = 0.75), (f._priceText.y = 0.5 * -n), (f._varPriceText.y = 0.5 * m)), (f._moneyExp = new a.MoneyExplosion()), (f._moneyExp.y = f._breakBtn.y), (f._infoBtn = new a.PXButton('lobby', ['moneyBox/mbHelpButton'])), (f._infoBtn.x = f._pigBg.x + 20), (f._infoBtn.y = f._pigBg.y + 15), f._infoBtn.addOnClick(f.showPageInfo, f));
                var o = a.Locales.get('lobby', 'moneyBox/mbBack');
                ((f._backBtn = new a.PXButton(o[0], [o[1]])), f._backBtn.addOnClick(f.showPageMain, f), (f._backBtn.y = 370), (f._backBtn.enabled = !1), (f._infoBg = new PIXI.NineSlicePlane(Stage.getImage('lobby', 'moneyBox/mbInfoBg'), 70, 70, 70, 70)), (f._infoBg.width = 650), (f._infoBg.height = 212), (f._infoBg.x -= 0.5 * f._infoBg.width), (f._infoBg.y -= 0.5 * f._infoBg.height + 80));
                var p = new PIXI.Text(a.StringManager.get('PIG_MONEYBOX_INFO'), f._styleTxt);
                (p.anchor.set(0.5), (p.y = -290));
                var q = new c(0, -80, 'lobby', 'moneyBox/mbInfo'),
                    r = f._styleTxt.clone();
                r.align = 'right';
                var s = new PIXI.Text('1 x', r),
                    t = f._styleTxt.clone();
                t.align = 'left';
                var u = new PIXI.Text('= ' + a.UserGameData.STAR_TO_COIN + ' x', t);
                (s.anchor.set(1, 0.5), u.anchor.set(0, 0.5), (s.y = u.y = 160), (u.x = 0));
                var v = new c(0, 0, 'lobby', 'lbCoin');
                (v.scale.set(0.65), (v.x = u.x + u.width + 0.5 * v.width + 8), (v.y = u.y));
                var w = new c(0, 0, 'lobby', 'moneyBox/mbInfoStar');
                return (
                    (w.x = u.x - 0.5 * w.width - 8),
                    (w.y = u.y),
                    (s.x = w.x - 0.5 * w.width - 8),
                    (f._keyPanel = new e()),
                    (f._keyPanel.y = 0.5 * f._body.height + 130),
                    f.disable(),
                    f.addChild(f._body),
                    f._body.addChild(g),
                    f._body.addChild(f._pageMainContainer),
                    f._body.addChild(f._pageInfoContainer),
                    f._body.addChild(f._closeBtnBg),
                    f._body.addChild(f._closeBtn),
                    f._pageMainContainer.addChild(f._pigBg),
                    f._pageMainContainer.addChild(f._pigShadow),
                    f._pageMainContainer.addChild(f._pig),
                    f._pageMainContainer.addChild(f._pigFull),
                    f._pageMainContainer.addChild(f._progressBg),
                    f._pageMainContainer.addChild(f._progressBar),
                    f._pageMainContainer.addChild(f._progressFlare),
                    f._pageMainContainer.addChild(f._threshold),
                    f._pageMainContainer.addChild(f._progressMask),
                    f._pageMainContainer.addChild(f._coinLabel1),
                    f._pageMainContainer.addChild(f._coinLabel2),
                    f._pageMainContainer.addChild(f._coinLabel3),
                    f._pageMainContainer.addChild(f._moneyBg),
                    f._pageMainContainer.addChild(f._mainLabel),
                    f._pageMainContainer.addChild(f._label1),
                    f._pageMainContainer.addChild(f._label2),
                    f._pageMainContainer.addChild(f._label3),
                    f._pageMainContainer.addChild(f._fewCoinsTxt),
                    f._pageMainContainer.addChild(f._breakBtn),
                    f._pageMainContainer.addChild(f._infoBtn),
                    f._pageMainContainer.addChild(f._moneyExp),
                    f._pageInfoContainer.addChild(f._backBtn),
                    f._pageInfoContainer.addChild(f._infoBg),
                    f._pageInfoContainer.addChild(p),
                    f._pageInfoContainer.addChild(q),
                    f._pageInfoContainer.addChild(s),
                    f._pageInfoContainer.addChild(u),
                    f._pageInfoContainer.addChild(v),
                    f._pageInfoContainer.addChild(w),
                    f._body.addChild(f._keyPanel),
                    f
                );
            }
            return (
                __extends(f, d),
                (f.prototype.tap = function (a, b) {
                    this.hide();
                }),
                (f.prototype.break = function () {
                    var b = this;
                    this.disable();
                    var c = 4 == a.UserGameData.getProperty(a.USER_PROPERTY.KEYS);
                    c
                        ? ((this._usedKeys = !0), a.UserGameData.setProperty(a.USER_PROPERTY.KEYS, 0), this.staticPigBreak(), this._keyPanel.hideAllKeys(), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.KEYS, 4, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME), a.UserGameData.save('PigPopup-break'))
                        : ((this._usedKeys = !1),
                          a.EconomyOptions.buy(a.SHOP_ITEM_ID.PIG, a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.PIG], a.STATS_IAP_PLACEMENT.PIG)
                              .then(function () {
                                  b.staticPigBreak();
                              })
                              .catch(function () {
                                  (a.EconomyOptions.showFailBuyMessage(), b.enable());
                              }));
                }),
                (f.prototype.staticPigBreak = function () {
                    var b = this;
                    ((this._devastation = !0),
                        (this._devastationValue = a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK)),
                        this.emit(f.EVENT_DEVASTATION),
                        (a.Lobby.instance.coinCounter.pause = !0),
                        this.moneyToUser(),
                        this._moneyExp.start(10, 0.5 * Stage.screenWidth - 394, 0.5 * -Stage.screenHeight + 110),
                        this._moneyExp.once(a.MoneyExplosion.EVENT_COMPLETE, function () {
                            ((a.Lobby.instance.coinCounter.pause = !1), b.hide());
                        }),
                        (this._breakBtn.rotation = 0),
                        TweenLite.to(this._breakBtn, 0.1, { alpha: 0.4 }));
                }),
                (f.prototype.showPageInfo = function () {
                    var a = this;
                    (this.disable(),
                        (this._curPage = 1),
                        TweenLite.to(this._pageMainContainer, 0.1, { alpha: 0 }),
                        TweenLite.to(this._pageInfoContainer, 0.1, {
                            alpha: 1,
                            delay: 0.1,
                            onComplete: function () {
                                a.enable();
                            },
                        }));
                }),
                (f.prototype.showPageMain = function () {
                    var a = this;
                    (this.disable(),
                        (this._curPage = 0),
                        TweenLite.to(this._pageInfoContainer, 0.1, { alpha: 0 }),
                        TweenLite.to(this._pageMainContainer, 0.1, {
                            alpha: 1,
                            delay: 0.1,
                            onComplete: function () {
                                a.enable();
                            },
                        }));
                }),
                (f.prototype.moneyToUser = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK);
                    b < a.UserGameData.MIN_PIG_BANK || (this._usedKeys ? a.Statistics.event_breakPigPopupWithKeys(b) : a.Statistics.event_breakPigPopup(b), a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, b), a.UserGameData.setProperty(a.USER_PROPERTY.PIG_BANK, 0), a.UserGameData.setProperty(a.USER_PROPERTY.SHOW_FULL_PIG_BANK, 0), a.UserGameData.save('PigPopup-moneyToUser'), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.COIN, b, a.STATS_GAME_RESOURCE_PLACEMENT.PIG_BANK));
                }),
                (f.prototype.close = function () {
                    this.hide();
                }),
                (f.prototype.update = function (b) {
                    0 != d.prototype.update.call(this, b) && this._devastation && ((this._devastationValue *= 0.9), this._devastationValue < 1 && (this._devastationValue = 0), (this._progressMask.scale.x = Math.max(0.001, this._devastationValue / a.UserGameData.MAX_PIG_BANK)), (this._mainLabel.text = String(a.Utils.int(this._devastationValue))), 0 == this._devastationValue && (this._devastation = !1));
                }),
                (f.prototype.show = function () {
                    var b = this;
                    (a.Statistics.event_showPigPopup(), a.SoundsManager.showPigPopup());
                    var c = a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK),
                        e = a.UserGameData.isFullPigBank(),
                        f = c < a.UserGameData.MIN_PIG_BANK,
                        g = 4 == a.UserGameData.getProperty(a.USER_PROPERTY.KEYS);
                    this._price = a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.PIG];
                    var h,
                        i = String(this._price >> 0);
                    if (
                        ('separated' != a.MI.get().social.currencyStyle.join ? (i = ' ' + a.Utils.declension(this._price, a.MI.get().social.currency)) : (h = a.Utils.declension(this._price, a.MI.get().social.currency)),
                        (this._priceText.text = i),
                        this._varPriceText && (this._varPriceText.text = h),
                        (this._devastation = !1),
                        (this._pigFull.alpha = 0),
                        (this._mainLabel.alpha = 1),
                        (this._fewCoinsTxt.alpha = 0),
                        (this._breakBtn.alpha = 0),
                        (this._breakBtn.enabled = !1),
                        (this._moneyBg.alpha = 1),
                        (this._arg = 0),
                        (this._progressMask.scale.x = Math.max(0.001, c / a.UserGameData.MAX_PIG_BANK)),
                        (this._curPage = 0),
                        (this._pageMainContainer.alpha = 1),
                        (this._pageInfoContainer.alpha = 0),
                        (this._threshold.x = 0.5 * -this._progressBg.width + (a.UserGameData.MIN_PIG_BANK / a.UserGameData.MAX_PIG_BANK) * this._progressBg.width),
                        (this._coinLabel2.x = this._threshold.x),
                        (this._label2.x = this._coinLabel2.x),
                        g ? ((this._breakBtnCaption.x = 0), (this._breakBtnCaption.y = 0)) : ((this._breakBtnCaption.x = 100), (this._breakBtnCaption.y = -4)),
                        e)
                    ) {
                        var j = 0.5;
                        ((this._moneyBg.alpha = 0), (this._mainLabel.alpha = 0), this._pigFull.scale.set(1.5, 1.5), TweenLite.to(this._pigFull.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut, delay: 0.1 + j }), TweenLite.to(this._pigFull, 0.1, { alpha: 1, delay: 0.1 + j }));
                    } else this._mainLabel.text = c;
                    if (f) this._fewCoinsTxt.text = a.StringManager.get('PIG_MONEYBOX_FEW_COINS', a.UserGameData.MIN_PIG_BANK, a.Utils.declension(a.UserGameData.MIN_PIG_BANK, a.StringManager.array('COIN')));
                    else {
                        var k = a.UserGameData.getProperty(a.USER_PROPERTY.KEYS),
                            l = '';
                        if (0 == k) l = a.StringManager.get('PIG_KEY_OPEN_EMPTY');
                        else {
                            var m = 4 - k;
                            l = a.StringManager.get('PIG_KEY_OPEN', m, a.Utils.declension(m, a.StringManager.array('KEYS')));
                        }
                        this._fewCoinsTxt.text = l;
                    }
                    (f || !g ? (this._fewCoinsTxt.alpha = 1) : ((this._breakBtn.alpha = 1), (this._breakBtn.enabled = !0)),
                        (this._keyPanel.alpha = 1),
                        this._keyPanel.show(!f),
                        setTimeout(function () {
                            b._keyPanel.setKeyCount(a.UserGameData.getProperty(a.USER_PROPERTY.KEYS));
                        }, 500),
                        d.prototype.show.call(this),
                        (this.visible = !0),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                b.enable();
                            },
                        }));
                }),
                (f.prototype.setInteractive = function (b) {
                    var c = 1 == this._curPage,
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.PIG_BANK),
                        e = d >= a.UserGameData.MIN_PIG_BANK;
                    ((this._closeBtn.enabled = b), (this._breakBtn.enabled = !(c || !e) && b), (this._infoBtn.enabled = !c && b), (this._backBtn.enabled = !!c && b));
                }),
                (f.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        (this._devastation = !1),
                        TweenLite.killTweensOf(this._pageMainContainer),
                        TweenLite.killTweensOf(this._pageInfoContainer),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (f.EVENT_DEVASTATION = 'EVENT_DEVASTATION_PigPopup'),
                f
            );
        })(a.GamePopup);
    a.PigPopup = d;
    var e = (function (a) {
        function b() {
            var b = a.call(this) || this;
            ((b._visual = new c('lobby', 'moneyBox/blueBtn')), (b._keyBgs = []), (b._keys = []));
            for (var d = 0; d < 4; d++) ((b._keyBgs[d] = new c(96 * (d - 1.5), 0, 'lobby', 'moneyBox/uiGoldKey0001')), (b._keys[d] = new c(96 * (d - 1.5), 0, 'lobby', 'moneyBox/uiGoldKey0002')), (b._keys[d].alpha = 0));
            b.addChild(b._visual);
            for (var d = 0; d < 4; d++) (b.addChild(b._keyBgs[d]), b.addChild(b._keys[d]));
            return b;
        }
        return (
            __extends(b, a),
            (b.prototype.show = function (a) {
                for (var b = 0; b < 4; b++) ((this._keyBgs[b].alpha = 1), (this._keys[b].alpha = 0));
            }),
            (b.prototype.setKeyCount = function (a) {
                for (var b = 0; b < a; b++) (TweenLite.to(this._keyBgs[b], 0.2, { alpha: 0 }), this._keys[b].scale.set(1.5), (this._keys[b].alpha = 0), TweenLite.to(this._keys[b], 0.2, { alpha: 1, delay: 0.1 }), TweenLite.to(this._keys[b].scale, 1, { x: 1, y: 1, delay: 0.1 + 0.05 * b, ease: Elastic.easeOut }));
            }),
            (b.prototype.hideAllKeys = function () {
                for (var a = 3; a >= 0; a--) (TweenLite.to(this._keys[a], 0.2, { alpha: 0, delay: 0.1 + 0.05 * (3 - a) }), TweenLite.to(this._keyBgs[a], 0.2, { alpha: 1, delay: 0.1 + 0.05 * (3 - a) }));
            }),
            b
        );
    })(PIXI.Container);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this,
                    e = 110;
                return ((d._coinIcon = new c(10, e, 'lobby', 'lbCoin')), (d._bgCoinText = new a.CoinText(0, void 0, a.CoinTextAnchor.LEFT, 159.72)), d._bgCoinText.refresh(), (d._bgCoinText.y = e + 2), (d._bgCoin = new c(40, e, 'lobby', 'lbTextbg')), (d._bgCoin.anchor.x = 0), d.addChild(d._bgCoin), d.addChild(d._bgCoinText), d.addChild(d._coinIcon), d);
            }
            return (
                __extends(d, b),
                (d.prototype.start = function () {
                    this._bgCoinText.auto = !0;
                }),
                (d.prototype.stop = function () {
                    this._bgCoinText.auto = !1;
                }),
                d
            );
        })(b);
    a.PopupCoinShower = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function d() {
            var a = b.call(this) || this;
            return ((a._queue = []), (a._pool = {}), (a._container = new PIXI.Container()), (a._bg = new PIXI.Graphics()), a.setTransparent(), a.resetBg(), (a._bg.interactive = !0), a._bg.on('pointerdown', a.tap, a), a._bg.on('pointerup', a.up, a), a._bg.on('pointerupoutside', a.up, a), a._bg.on('pointermove', a.move, a), Stage.stage.on('mousewheel', a.wheel, a), Stage.on(KY.GameEvent.RESIZE, a.onResize, a), a.addChild(a._bg), a.addChild(a._container), a);
        }
        return (
            __extends(d, b),
            (d.prototype.resetBg = function () {
                var a = KY.Game.instance.screenWidth,
                    b = KY.Game.instance.screenHeight;
                (this._bg.clear(), this._bg.beginFill(2698289), this._bg.drawRect(-a, -b, 2 * a, 2 * b), this._bg.endFill(), (this._needResetBg = !1));
            }),
            (d.prototype.setCircleHole = function (a, b, c) {
                (this.resetBg(), this._bg.beginHole().drawCircle(a, b, c).endHole(), (this._needResetBg = !0));
            }),
            (d.prototype.setRectleHole = function (a, b, c, d, e) {
                (this.resetBg(), e ? this._bg.beginHole().drawRoundedRect(a, b, c, d, e).endHole() : this._bg.beginHole().drawRect(a, b, c, d).endHole(), (this._needResetBg = !0));
            }),
            (d.prototype.setTransparent = function () {
                this._bg.alpha = 0.001;
            }),
            (d.prototype.restoreOpacity = function (a, b) {
                (void 0 === a && (a = 0), void 0 === b && (b = 0.8), 0 != this._bg.alpha && (a ? TweenLite.to(this._bg, a, { alpha: b }) : (this._bg.alpha = b)));
            }),
            (d.prototype.onResize = function () {
                this._current && !this._current.isFree && this._current.isShowed && this._current.onResize(!1);
            }),
            (d.prototype.up = function (a) {
                this._current && !this._current.isFree && this._current.isShowed && this._current.up(a.data.global.x, a.data.global.y);
            }),
            (d.prototype.move = function (a) {
                this._current && !this._current.isFree && this._current.isShowed && this._current.move(a.data.global.x, a.data.global.y);
            }),
            (d.prototype.tap = function (a) {
                var b;
                if (this._current && !this._current.isFree && this._current.isShowed) {
                    var c = !1;
                    (IS_DESKTOP && (c = 2 == (null === (b = a.data.originalEvent) || void 0 === b ? void 0 : b.button)), this._current.tap(a.data.global.x, a.data.global.y, c));
                }
            }),
            (d.prototype.wheel = function (a) {
                this._current && !this._current.isFree && this._current.isShowed && this._current.wheel(a);
            }),
            (d.prototype.addToPool = function (a, b, c) {
                if ((void 0 === c && (c = !1), null != this._pool[b])) throw 'Повторное добавление попапа';
                ((this._pool[b] = a), (a.id = b), (a.disposable = c));
            }),
            (d.prototype.get = function (a) {
                return (null == this._pool[a] && this.addToPool(new (d.popupClass(a))(), a, a.indexOf('TUTORIAL') != -1), this._pool[a]);
            }),
            (d.prototype.add = function (b) {
                for (var c = [], d = 1; d < arguments.length; d++) c[d - 1] = arguments[d];
                if ((this.parent || a.MI.get().addToCenterContainer(this), this._current && this._current.id == b)) return null;
                var e = this.get(b);
                ((e.manager = this), (e.property = c));
                var f = this._queue.indexOf(e);
                return (f == -1 ? this._queue.push(e) : (this._queue[f].property = c), e);
            }),
            (d.prototype.addNext = function (b, c) {
                for (var d = [], e = 2; e < arguments.length; e++) d[e - 2] = arguments[e];
                if ((this.parent || a.MI.get().addToCenterContainer(this), this._current && this._current.id == b)) return null;
                var f = this.get(b);
                ((f.manager = this), (f.property = d));
                var g = this._queue.indexOf(f);
                return (g == -1 ? (this._queue.length ? this._queue.splice(1 + c, 0, f) : this._queue.push(f)) : (this._queue[g].property = d), f);
            }),
            (d.prototype.show = function (b) {
                for (var c = [], d = 1; d < arguments.length; d++) c[d - 1] = arguments[d];
                this.parent || a.MI.get().addToCenterContainer(this);
                var e = this.get(b);
                ((e.manager = this), (e.property = c));
                var f = this._queue.indexOf(e);
                return (null != this._current && (this._queue.unshift(this._current), this._current.hide()), f != -1 && this._queue.splice(f, 1), this._queue.unshift(e), e);
            }),
            (d.prototype.remove = function (a) {
                var b = this.get(a),
                    c = this._queue.indexOf(b);
                c != -1 && this._queue.splice(c, 1);
            }),
            (d.prototype.clearQueue = function () {
                for (; this._queue.length; ) this._queue.pop();
                this._current && this.clearCurrent();
            }),
            (d.prototype.clearCurrent = function () {
                (this._current.emit(d.CLOSE_POPUP, this._current.id), this._container.removeChild(this._current), this._current.disposable && (this._current.destroy({ children: !0 }), delete this._pool[this._current.id]), (this._current = null), 0 == this._queue.length && this.setTransparent());
            }),
            (d.prototype.update = function (b, c) {
                (this._current ? (this._current.update(b, c), this._current.isFree && this.clearCurrent()) : this._queue.length && (this._needResetBg && this.resetBg(), (this._current = this._queue.shift()), this._current.opacity < 0.05 ? this.setTransparent() : this.restoreOpacity(void 0, this._current.opacity), this._current.show.apply(this._current, this._current.property), this._current.onResize(!0), this._container.addChild(this._current), this.parent || a.MI.get().addToCenterContainer(this)), null == this._current && this.parent && 0 == this._queue.length && a.MI.get().removeFromCenterContainer(this));
            }),
            Object.defineProperty(d.prototype, 'bg', {
                get: function () {
                    return this._bg;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'isOverlay', {
                get: function () {
                    return null != this._current;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d.prototype, 'haveQueue', {
                get: function () {
                    return this._queue.length > 0;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (d.popupClass = function (b) {
                switch (b) {
                    case c.BUY_BOOST:
                        return a.BoostBuyPopup;
                    case c.BUY_HEART:
                        return a.HeartBuyPopup;
                    case c.WIN:
                        return a.WinPopup;
                    case c.LEVEL_TARGET:
                        return a.LevelTargetPopup;
                    case c.FAIL:
                        return a.FailPopup;
                    case c.GAME_OVER:
                        return a.GameOverPopup;
                    case c.BOOSTER_INFO:
                        return a.BoosterInfo;
                    case c.SHOP:
                        return a.Shop;
                    case c.OPTIONS:
                        return a.OptionsPopup;
                    case c.EXIT_CONFORM:
                        return a.ExitConfirmationPopup;
                    case c.PIG_MONEYBOX:
                        return a.PigPopup;
                    case c.DAILY_REWARD:
                        return a.DailyPopup;
                    case c.START_LEVEL:
                        return a.StartLevelPopup;
                    case c.NO_LIVE:
                        return a.NoLivePopup;
                    case c.GET_REWARD_COIN:
                        return a.GetRewardCoinPopup;
                    case c.ERROR:
                        return a.ErrorPopup;
                    case c.SPECIAL_BUBBLE:
                        return a.SpecialBubblePopup;
                    case c.THREE_CHEST:
                        return a.ThreeChestPopup;
                    case c.GARDEN_BUY:
                        return a.GardenBuyPopup;
                    case c.MNOGOIGROVKA:
                        return a.MnogoigrovkaPopup;
                    case c.ADD_TO_HOME_SCREEN:
                        return a.AddHomeScreenPopup;
                    case c.NEW_RANK:
                        return a.NewRankPopup;
                    case c.UPDATE_061022:
                        return a.UpdatePopup_061022;
                    case c.BLACK_FRIDAY_191122:
                        return a.SpecialOfferBlackFriday191122Popup;
                    case c.CHANGE_BUBBLE_TUTORIAL:
                        return a.ChangeBubbleTutorialPopup;
                    case c.BOMB_TUTORIAL:
                        return a.BombTutorialPopup;
                    case c.FREE_BOMB_TUTORIAL:
                        return a.FreeBombTutorialPopup;
                    case c.RAINBOW_TUTORIAL:
                        return a.RainbowTutorialPopup;
                    case c.FIREBALL_TUTORIAL:
                        return a.FireballTutorialPopup;
                    case c.LIGHTNING_TUTORIAL:
                        return a.LightningTutorialPopup;
                    case c.GOLD_BUTTON_TUTORIAL:
                        return a.GoldButtonTutorialPopup;
                    case c.PIG_KEY_TUTORIAL:
                        return a.PigKeyTutorialPopup;
                    case c.SPECIAL_TUTORIAL:
                        return a.SpecialTutorialPopup;
                    case c.GARDEN_BEGIN:
                        return a.GardenBeginTutorialPopup;
                    case c.GARDEN_PLANT:
                        return a.GardenPlantTutorialPopup;
                    case c.GARDEN_WATER:
                        return a.GardenWaterTutorialPopup;
                    case c.GARDEN_FERTILIZER:
                        return a.GardenFertilizerTutorialPopup;
                    case c.GARDEN_FERTILIZER2:
                        return a.GardenFertilizer2TutorialPopup;
                    case c.GARDEN_PESTICIDES:
                        return a.GardenPesticidesTutorialPopup;
                    case c.GARDEN_WAKEUP:
                        return a.GardenWakeupPopup;
                    case c.NY22_START:
                        return a.SpecialOfferNewYear22Popup;
                    case c.NY22_GET_PRIZE:
                        return a.NY22GetPrize;
                }
            }),
            (d.CLOSE_POPUP = 'PM_CLOSE_POPUP'),
            d
        );
    })(PIXI.Container);
    a.PopupManager = b;
    var c;
    !(function (a) {
        ((a.BUY_BOOST = 'BUY_BOOST'),
            (a.BUY_HEART = 'BUY_HEART'),
            (a.WIN = 'WIN'),
            (a.LEVEL_TARGET = 'LEVEL_TARGET'),
            (a.FAIL = 'FAIL'),
            (a.GAME_OVER = 'GAME_OVER'),
            (a.BOOSTER_INFO = 'BOOSTER_INFO'),
            (a.SHOP = 'SHOP'),
            (a.OPTIONS = 'OPTIONS'),
            (a.EXIT_CONFORM = 'EXIT_CONFORM'),
            (a.PIG_MONEYBOX = 'PIG_MONEYBOX'),
            (a.DAILY_REWARD = 'DAILY_REWARD'),
            (a.START_LEVEL = 'START_LEVEL'),
            (a.NO_LIVE = 'NO_LIVE'),
            (a.GET_REWARD_COIN = 'GET_REWARD_COIN'),
            (a.ERROR = 'ERROR'),
            (a.SPECIAL_BUBBLE = 'SPECIAL_BUBBLE'),
            (a.THREE_CHEST = 'THREE_CHEST'),
            (a.GARDEN_BUY = 'GARDEN_BUY'),
            (a.MNOGOIGROVKA = 'MNOGOIGROVKA'),
            (a.ADD_TO_HOME_SCREEN = 'ADD_TO_HOME_SCREEN'),
            (a.NEW_RANK = 'NEW_RANK'),
            (a.UPDATE_061022 = 'UPDATE_061022'),
            (a.BLACK_FRIDAY_191122 = 'BLACK_FRIDAY_191122'),
            (a.CHANGE_BUBBLE_TUTORIAL = 'CHANGE_BUBBLE_TUTORIAL'),
            (a.BOMB_TUTORIAL = 'BOMB_TUTORIAL'),
            (a.FREE_BOMB_TUTORIAL = 'FREE_BOMB_TUTORIAL'),
            (a.RAINBOW_TUTORIAL = 'RAINBOW_TUTORIAL'),
            (a.FIREBALL_TUTORIAL = 'FIREBALL_TUTORIAL'),
            (a.LIGHTNING_TUTORIAL = 'LIGHTNING_TUTORIAL'),
            (a.GOLD_BUTTON_TUTORIAL = 'GOLD_BUTTON_TUTORIAL'),
            (a.PIG_KEY_TUTORIAL = 'PIG_KEY_TUTORIAL'),
            (a.SPECIAL_TUTORIAL = 'SPECIAL_TUTORIAL'),
            (a.GARDEN_BEGIN = 'GARDEN_BEGIN'),
            (a.GARDEN_PLANT = 'GARDEN_PLANT'),
            (a.GARDEN_WATER = 'GARDEN_WATER'),
            (a.GARDEN_FERTILIZER = 'GARDEN_FERTILIZER'),
            (a.GARDEN_FERTILIZER2 = 'GARDEN_FERTILIZER2'),
            (a.GARDEN_PESTICIDES = 'GARDEN_PESTICIDES'),
            (a.GARDEN_WAKEUP = 'GARDEN_WAKEUP'),
            (a.NY22_START = 'NY22_START'),
            (a.NY22_GET_PRIZE = 'NY22_GET_PRIZE'));
    })((c = a.AllPopups || (a.AllPopups = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e(c, e) {
                var f = d.call(this) || this;
                return (
                    (f._currentData = e),
                    (f._p = c),
                    (f._arg = 0),
                    (f._empty = new PIXI.NineSlicePlane(c.getTexture('qpLotEmptyBg'), 80, 80, 80, 80)),
                    (f._empty.width = 880),
                    (f._empty.height = 240),
                    (f._empty.x -= 0.5 * f._empty.width),
                    (f._empty.y -= 0.5 * f._empty.height),
                    (f._bg = new PIXI.NineSlicePlane(c.getTexture('qpLotBg'), 80, 80, 80, 80)),
                    (f._bg.width = 880),
                    (f._bg.height = 240),
                    (f._bg.x -= 0.5 * f._bg.width),
                    (f._bg.y -= 0.5 * f._bg.height),
                    (f._iconBg = new PIXI.Sprite(c.getTexture('qpIconBg'))),
                    f._iconBg.anchor.set(0.5),
                    (f._iconBg.x = -310),
                    (f._icon = new PIXI.Sprite(c.getTexture('questIcon0001'))),
                    f._icon.anchor.set(0.5),
                    (f._icon.x = f._iconBg.x),
                    (f._description = new PIXI.Text('Собери 5 синих шаров', { fontFamily: 'Pony', fontSize: 40, fill: 16777215, align: 'left' })),
                    f._description.anchor.set(0, 0.5),
                    (f._description.x = -225),
                    (f._description.y = -70),
                    (f._txtValue = new PIXI.Text('4/5', { fontFamily: 'Pony', fontSize: 40, fill: 16777215, align: 'center', lineJoin: 'round', stroke: 2837130, strokeThickness: 10 })),
                    f._txtValue.anchor.set(0.5),
                    (f._getRrewardBtn = new a.PXButton('ui', ['redMiniBtn'])),
                    f._getRrewardBtn.addOnClick(f.getReward, f),
                    f._getRrewardBtn.setAnimationScale(0.03, 0.9),
                    (f._rewardIcon = new a.CoinText(0)),
                    (f._bgProgress = new PIXI.Sprite(c.getTexture('qpProgressBarBg'))),
                    f._bgProgress.anchor.set(0.5),
                    (f._bgProgress.x = -14),
                    (f._bgProgress.y = 30),
                    (f._visProgress = new PIXI.Sprite(c.getTexture('qpProgressBar'))),
                    f._visProgress.anchor.set(0.5),
                    (f._visProgress.x = f._bgProgress.x),
                    (f._visProgress.y = f._bgProgress.y),
                    (f._txtValue.x = f._visProgress.x),
                    (f._txtValue.y = f._visProgress.y + 2),
                    (f._mmask = new PIXI.Graphics()),
                    f._mmask.beginFill(16711680, 0.4),
                    f._mmask.drawRect(0, -30, 380, 60),
                    f._mmask.endFill(),
                    (f._mmask.x = f._visProgress.x - 190),
                    (f._mmask.y = f._visProgress.y),
                    (f._visProgress.mask = f._mmask),
                    (f._container = new b()),
                    (f._btnContainer = new b()),
                    (f._btnContainer.x = 310),
                    (f._btnContainer.y = 30),
                    (f._doneMark = new PIXI.Sprite(c.getTexture('questIcon0026'))),
                    f._doneMark.anchor.set(0.5),
                    (f._moneyExp = new a.MoneyExplosion()),
                    f.addChild(f._empty),
                    f.addChild(f._doneMark),
                    f.addChild(f._container),
                    f._container.addChild(f._bg),
                    f._container.addChild(f._iconBg),
                    f._container.addChild(f._icon),
                    f._container.addChild(f._description),
                    f._container.addChild(f._btnContainer),
                    f._container.addChild(f._bgProgress),
                    f._container.addChild(f._visProgress),
                    f._container.addChild(f._mmask),
                    f._container.addChild(f._txtValue),
                    f._btnContainer.addChild(f._getRrewardBtn),
                    f._getRrewardBtn.addChild(f._rewardIcon),
                    f.addChild(f._moneyExp),
                    f
                );
            }
            return (
                __extends(e, d),
                (e.prototype.reset = function () {
                    ((this._arg = 0), (this._close = !1), (this._done = !1), (this._empty.visible = !1), (this._getRrewardBtn.enabled = !1), (this._doneMark.visible = !1), (this._container.visible = !0), (this._container.alpha = 1), this._container.scale.set(1), this._btnContainer.scale.set(1));
                }),
                (e.prototype.setValue = function (b, d, e, f, g, h) {
                    if ((d == -1 && (this._close = !0), this._close)) return ((this._empty.visible = !0), (this._container.visible = !1), void (this._getRrewardBtn.enabled = !1));
                    ((this._empty.visible = !1), (this._doneMark.visible = !1), (this._container.visible = !0), (this._done = d >= e), this._done ? ((this._txtValue.text = a.StringManager.get('QUEST_DONE')), (this._getRrewardBtn.enabled = !0), (this._getRrewardBtn.alpha = 1)) : ((this._txtValue.text = d + '/' + e), (this._getRrewardBtn.enabled = !1), (this._getRrewardBtn.alpha = 0.5)), (this._mmask.scale.x = Math.max(1e-4, Math.min(1, d / e))), this._btnContainer.scale.set(1), (this._arg = 0), (this._icon.texture = this._p.getTexture('questIcon' + c.zeroPad(b + 1, 4))), (this._description.text = f), this._description.scale.set(1));
                    var i = 610 / this._description.width;
                    (i < 1 && this._description.scale.set(i), (this._rewardType = g), (this._rewardCount = h), this._rewardIcon.setup(this._p.getTexture('qpRewardIcon' + c.zeroPad(g + 1, 4)), null), (this._rewardIcon.text = h));
                }),
                (e.prototype.getReward = function () {
                    (a.Shop.addItemToUser(this._rewardType, this._rewardCount, a.STATS_GAME_RESOURCE_PLACEMENT.THREE_CHEST),
                        a.SoundsManager.getChestReward(),
                        (a.QuestPopup.CURRENT_QUESTS[this._currentData][1] = -1),
                        a.UserGameData.setQuestData(a.QuestPopup.CURRENT_QUESTS),
                        a.UserGameData.immediatelySave(),
                        this._rewardType != a.ShopLotItemType.MONEY
                            ? a.BoostCounter.get().show()
                            : ((a.Lobby.instance.coinCounter.pause = !0),
                              (this._moneyExp.x = this._getRrewardBtn.x),
                              (this._moneyExp.y = this._getRrewardBtn.y),
                              this._moneyExp.start(5, 0.5 * Stage.screenWidth - 394, -this._getRrewardBtn.y - this.y - 0.5 * Stage.screenHeight + 110),
                              this._moneyExp.once(a.MoneyExplosion.EVENT_COMPLETE, function () {
                                  a.Lobby.instance.coinCounter.pause = !1;
                              })),
                        (this._empty.visible = !0),
                        (this._getRrewardBtn.enabled = !1),
                        (this._doneMark.visible = !0),
                        (this._doneMark.alpha = 0),
                        this._doneMark.scale.set(0.5),
                        TweenLite.to(this._container, 0.3, { alpha: 0 }),
                        TweenLite.to(this._container.scale, 0.3, { x: 0.2, y: 0.2, ease: Back.easeIn }),
                        TweenLite.to(this._doneMark, 0.3, { alpha: 1, delay: 0.4 }),
                        TweenLite.to(this._doneMark.scale, 0.3, { x: 1, y: 1, ease: Back.easeOut, delay: 0.4 }));
                }),
                (e.prototype.update = function (a) {
                    this._done && (this._btnContainer.scale.set(1 + 0.1 * Math.abs(Math.sin(this._arg))), (this._arg += 0.04 * a));
                }),
                Object.defineProperty(e.prototype, 'currentDataIndex', {
                    get: function () {
                        return this._currentData;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                e
            );
        })(b);
    a.SlotQuest = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function g() {
                var d = c.call(this) || this;
                return (
                    (d._body = new b()),
                    (d._closeBtnBg = new KY.Sprite(457.5, -591, 'ui0', 'popups/closeBtnBg0001')),
                    (d._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])),
                    (d._closeBtn.x = d._closeBtnBg.x + 2),
                    (d._closeBtn.y = d._closeBtnBg.y - 2),
                    (d._closeBtn.enabled = !1),
                    (d._closeBtn.onDown = function () {
                        d.hide();
                    }),
                    d.loadAtlas('questAtlas', 'additionalPopup/quest'),
                    d.addChild(d._body),
                    d.addChildMiniLoader(),
                    d
                );
            }
            return (
                __extends(g, c),
                (g.prototype.onload = function () {
                    ((this._bodyBg = new PIXI.NineSlicePlane(this.getTexture('qpBodySlice'), 100, 100, 100, 100)), (this._bodyBg.width = 995), (this._bodyBg.height = 1250), (this._bodyBg.x -= 0.5 * this._bodyBg.width), (this._bodyBg.y -= 0.5 * this._bodyBg.height), (this._capBg = new PIXI.Sprite(this.getTexture('qpCaptionBg'))), this._capBg.anchor.set(0.5), (this._capBg.y = -750), (this._timeTxt = new PIXI.Text(a.StringManager.get('QUEST_TIME_TEXT') + a.Utils.formatTime(a.UserGameData.HOUR_24 - 1, a.TIME_FORMAT.DAYS_HOURS), { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 8760532, align: 'center' })), this._timeTxt.anchor.set(0.5), (this._timeTxt.y = -510));
                    var b = new PIXI.Text(a.StringManager.get('QUEST_CAPTION'), { fontFamily: 'Pony', fontSize: 55, fill: 16777215, align: 'center' });
                    (b.anchor.set(0.5), (this._slots = []));
                    for (var c = 0; c < 4; c++) {
                        var d = new a.SlotQuest(this, c);
                        ((d.y = 450 - 250 * (3 - c)), this._slots.push(d), d.setValue(g.CURRENT_QUESTS[c][0], g.CURRENT_QUESTS[c][1], g.CURRENT_QUESTS[c][2], g.getQuestDescription(g.CURRENT_QUESTS[c][0], g.CURRENT_QUESTS[c][2]), g.CURRENT_QUESTS[c][3], g.CURRENT_QUESTS[c][4]));
                    }
                    (this._body.addChild(this._bodyBg), this._body.addChild(this._closeBtnBg), this._body.addChild(this._closeBtn), this._body.addChild(this._capBg), this._body.addChild(this._timeTxt));
                    for (var c = 0; c < 4; c++) this._body.addChild(this._slots[c]);
                    this._capBg.addChild(b);
                }),
                (g.prototype.show = function () {
                    c.prototype.show.call(this);
                }),
                (g.prototype.showAfterLoading = function () {
                    var a = this;
                    ((this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 50,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                a.enable();
                            },
                        }),
                        (this._capBg.alpha = 0),
                        TweenLite.to(this._capBg, 0.2, { alpha: 1, delay: 0.4 }));
                    for (var b = 0; b < 4; b++) {
                        var c = this._slots[b];
                        c.setValue(g.CURRENT_QUESTS[b][0], g.CURRENT_QUESTS[b][1], g.CURRENT_QUESTS[b][2], g.getQuestDescription(g.CURRENT_QUESTS[b][0], g.CURRENT_QUESTS[b][2]), g.CURRENT_QUESTS[b][3], g.CURRENT_QUESTS[b][4]);
                    }
                }),
                (g.prototype.setInteractive = function (a) {
                    this._closeBtn.enabled = a;
                }),
                (g.prototype.hide = function () {
                    var a = this;
                    return (
                        c.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a._capBg, 0.1, { alpha: 0 }),
                                TweenLite.to(a, 0.1, {
                                    alpha: 0,
                                    delay: 0.2,
                                    onComplete: function () {
                                        (a.free(), b());
                                    },
                                }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (g.prototype.update = function (b) {
                    if (0 != c.prototype.update.call(this, b) && this.isLoaded) {
                        if (this._timeTxt) {
                            var d = a.UserGameData.getProperty(a.USER_PROPERTY.QUEST_TIME) - a.MI.get().time;
                            if ((d < 0 && (d = 0), (this._timeTxt.text = a.StringManager.get('QUEST_TIME_TEXT') + a.Utils.formatTime(d, a.TIME_FORMAT.DAYS_HOURS)), 0 == d)) {
                                for (var e = 0; e < 4; e++) this._slots[e].reset();
                                (g.needCurrentQuests(), this.hide());
                            }
                        }
                        for (var e = 0; e < this._slots.length; e++) this._slots[e].update(b);
                    }
                }),
                (g.needCurrentQuests = function () {
                    this.CURRENT_QUESTS || (this.CURRENT_QUESTS = []);
                    var b = a.UserGameData.getQuestData(),
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.QUEST_TIME) - a.MI.get().time;
                    if (b && b[0] && b[0][0] != -1 && c > 0) {
                        for (var e = !1, f = 0; f < 4; f++) {
                            ((this.CURRENT_QUESTS[f] = []), (e = e || b[f][1] == b[f][2]));
                            for (var g = 0; g < 5; g++) this.CURRENT_QUESTS[f][g] = b[f][g];
                        }
                        return e;
                    }
                    for (var h = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL), i = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_NEED_SHOW), j = [], f = 0; f < this.QUESTS.length; f++) j[f] = a.Utils.cloneObject(this.QUESTS[f]);
                    var k = [a.ShopLotItemType.BOMB, a.ShopLotItemType.FIREBALL, a.ShopLotItemType.LIGHTNING, a.ShopLotItemType.RAINBOW],
                        l = [a.ShopLotItemType.GUIDELINE_NO_LIMIT, a.ShopLotItemType.MAX_NEXT_BUBBLES, a.ShopLotItemType.ADD_5_BUBBLES];
                    for (this.CURRENT_QUESTS.length = 0; this.CURRENT_QUESTS.length < 4; ) {
                        var m = Stage.rnd.removeRandomItem(j),
                            n = m.level >= 0 ? m.level : m.level + a.Lobby.COUNT_LEVELS,
                            o = !m.garden || i;
                        if ((m.minlevel && (n = Math.max(n, m.minlevel)), n < h && o)) {
                            var p = 1,
                                q = void 0,
                                r = Stage.rnd.getRandomItem(a.Utils.valuesObject(m.var)),
                                s = this.getQuestRewardType(r.reward);
                            switch (s) {
                                case d.COIN:
                                    ((p = Stage.rnd.rangeInt(r.x1[0], r.x1[1])), (q = a.ShopLotItemType.MONEY));
                                    break;
                                case d.LVL_BOOSTER:
                                    ((p = Stage.rnd.rangeInt(r.x2[0], r.x2[1])), (q = Stage.rnd.getRandomItem(k)));
                                    break;
                                case d.PRE_BOOSTER:
                                    ((p = Stage.rnd.rangeInt(r.x3[0], r.x3[1])), (q = Stage.rnd.getRandomItem(l)));
                            }
                            var t = Stage.rnd.rangeInt(r.min, r.max);
                            this.CURRENT_QUESTS.push([m.type, 0, t, q, p]);
                        }
                    }
                    return (a.UserGameData.setProperty(a.USER_PROPERTY.QUEST_TIME, a.MI.get().time + a.UserGameData.HOUR_24), a.UserGameData.setQuestData(this.CURRENT_QUESTS), a.UserGameData.immediatelySave(), !0);
                }),
                (g.getQuestDescription = function (b, c) {
                    var d = this.QUESTS[b];
                    if (0 == d.textID) {
                        var e = void 0;
                        switch (b) {
                            case f.BUBLES_RED:
                                e = 'QUEST_COLOR_RED';
                                break;
                            case f.BUBLES_GREEN:
                                e = 'QUEST_COLOR_GREEN';
                                break;
                            case f.BUBLES_YELLOW:
                                e = 'QUEST_COLOR_YELLOW';
                                break;
                            case f.BUBLES_BLUE:
                                e = 'QUEST_COLOR_BLUE';
                                break;
                            case f.BUBLES_PURPLE:
                                e = 'QUEST_COLOR_PURPLE';
                        }
                        return a.StringManager.getQuest(d.textID, c, a.Utils.declension(c, a.StringManager.array(e)));
                    }
                    if (4 == d.textID) {
                        var e = void 0;
                        switch (b) {
                            case f.LIGHTNING:
                                e = 'LIGHTNING_BOOST_NAME';
                                break;
                            case f.RAINBOW:
                                e = 'RAINBOW_BOOST_NAME';
                                break;
                            case f.FIREBALL:
                                e = 'FIREBALL_BOOST_NAME';
                                break;
                            case f.BOMB:
                                e = 'BOMB_BOOST_NAME';
                        }
                        return a.StringManager.getQuest(d.textID, c, a.StringManager.get(e));
                    }
                    return a.StringManager.getQuest(d.textID, c);
                }),
                (g.getQuestRewardType = function (b) {
                    a.Utils.shuffle(this.REWARD, Stage.rnd);
                    for (var c = 0; c < this.REWARD.length; c++) if (this.REWARD[c] & b) return this.REWARD[c];
                    return d.COIN;
                }),
                (g.initAllQuests = function () {
                    this.QUESTS ||
                        (this.QUESTS = [
                            {
                                type: f.BUBLES_RED,
                                var: [
                                    { min: 100, max: 300, reward: d.COIN | d.LVL_BOOSTER, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 350, max: 500, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 550, max: 700, difficulty: e.HARD, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 0,
                                textID: 0,
                            },
                            {
                                type: f.BUBLES_GREEN,
                                var: [
                                    { min: 100, max: 300, reward: d.COIN | d.LVL_BOOSTER, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 350, max: 500, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 550, max: 700, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 0,
                                textID: 0,
                            },
                            {
                                type: f.BUBLES_YELLOW,
                                var: [
                                    { min: 100, max: 300, reward: d.COIN | d.LVL_BOOSTER, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 350, max: 500, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 550, max: 700, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 0,
                                textID: 0,
                            },
                            {
                                type: f.BUBLES_BLUE,
                                var: [
                                    { min: 100, max: 300, reward: d.COIN | d.LVL_BOOSTER, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 350, max: 500, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 550, max: 700, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 0,
                                textID: 0,
                            },
                            {
                                type: f.BUBLES_PURPLE,
                                var: [
                                    { min: 50, max: 100, reward: d.COIN | d.LVL_BOOSTER, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 100, max: 200, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 200, max: 300, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 100,
                                textID: 0,
                            },
                            {
                                type: f.CROWN,
                                var: [
                                    { min: 30, max: 80, reward: d.COIN | d.LVL_BOOSTER, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 80, max: 120, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 120, max: 160, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 0,
                                textID: 1,
                            },
                            {
                                type: f.WINS,
                                var: [
                                    { min: 5, max: 10, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 1], x3: [0, 0] },
                                    { min: 12, max: 18, reward: d.COIN | d.LVL_BOOSTER, x1: [70, 120], x2: [1, 2], x3: [0, 0] },
                                    { min: 20, max: 30, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [150, 200], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: -30,
                                textID: 2,
                            },
                            {
                                type: f.STARS,
                                var: [
                                    { min: 15, max: 20, reward: d.COIN | d.LVL_BOOSTER, x1: [40, 70], x2: [1, 1], x3: [0, 0] },
                                    { min: 20, max: 40, reward: d.COIN | d.LVL_BOOSTER, x1: [70, 90], x2: [1, 2], x3: [0, 0] },
                                    { min: 40, max: 60, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [90, 120], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: -20,
                                textID: 3,
                            },
                            {
                                type: f.LIGHTNING,
                                var: [
                                    { min: 2, max: 4, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 4, max: 6, reward: d.COIN, x1: [150, 170], x2: [0, 0], x3: [0, 0] },
                                    { min: 6, max: 8, reward: d.COIN | d.PRE_BOOSTER, x1: [170, 250], x2: [0, 0], x3: [1, 1] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_LIGHTNING,
                                textID: 4,
                            },
                            {
                                type: f.RAINBOW,
                                var: [
                                    { min: 2, max: 4, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 4, max: 6, reward: d.COIN, x1: [150, 200], x2: [0, 0], x3: [0, 0] },
                                    { min: 6, max: 8, reward: d.COIN | d.PRE_BOOSTER, x1: [200, 300], x2: [0, 0], x3: [2, 3] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_RAINBOW,
                                textID: 4,
                            },
                            {
                                type: f.FIREBALL,
                                var: [
                                    { min: 2, max: 4, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 4, max: 6, reward: d.COIN, x1: [150, 200], x2: [0, 0], x3: [0, 0] },
                                    { min: 6, max: 8, reward: d.COIN | d.PRE_BOOSTER, x1: [200, 300], x2: [0, 0], x3: [2, 3] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_FIREBALL,
                                textID: 4,
                            },
                            {
                                type: f.BOMB,
                                var: [
                                    { min: 10, max: 15, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 15, max: 25, reward: d.COIN, x1: [150, 200], x2: [0, 0], x3: [0, 0] },
                                    { min: 25, max: 35, reward: d.COIN | d.PRE_BOOSTER, x1: [200, 300], x2: [0, 0], x3: [2, 3] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_BOMB,
                                textID: 4,
                            },
                            { type: f.HARVEST, var: [{ min: 1, max: 1, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [100, 200], x2: [1, 3], x3: [1, 1] }], level: 0, garden: !0, textID: 5 },
                            {
                                type: f.SPIDER,
                                var: [
                                    { min: 4, max: 8, reward: d.COIN | d.LVL_BOOSTER, x1: [40, 80], x2: [1, 1], x3: [0, 0] },
                                    { min: 10, max: 15, reward: d.COIN | d.LVL_BOOSTER, x1: [80, 120], x2: [1, 2], x3: [0, 0] },
                                    { min: 20, max: 35, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [120, 150], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 22,
                                textID: 6,
                            },
                            {
                                type: f.BAT,
                                var: [
                                    { min: 20, max: 30, reward: d.COIN | d.LVL_BOOSTER, x1: [40, 80], x2: [1, 1], x3: [0, 0] },
                                    { min: 40, max: 60, reward: d.COIN | d.LVL_BOOSTER, x1: [80, 120], x2: [1, 2], x3: [0, 0] },
                                    { min: 70, max: 100, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [120, 150], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 153,
                                textID: 7,
                            },
                            {
                                type: f.THORN,
                                var: [
                                    { min: 5, max: 10, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 10, max: 15, reward: d.COIN | d.LVL_BOOSTER, x1: [70, 100], x2: [1, 2], x3: [0, 0] },
                                    { min: 15, max: 25, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [100, 150], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 72,
                                textID: 8,
                            },
                            {
                                type: f.DYNAMITE,
                                min: 10,
                                max: 30,
                                var: [
                                    { min: 15, max: 20, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 20, max: 35, reward: d.COIN | d.LVL_BOOSTER, x1: [70, 100], x2: [1, 2], x3: [0, 0] },
                                    { min: 35, max: 50, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [100, 150], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: 22,
                                textID: 9,
                            },
                            {
                                type: f.WATER,
                                var: [
                                    { min: 1, max: 3, reward: d.COIN, x1: [20, 50], x2: [1, 1], x3: [0, 0] },
                                    { min: 3, max: 5, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 80], x2: [1, 1], x3: [0, 0] },
                                ],
                                level: 0,
                                garden: !0,
                                textID: 10,
                            },
                            {
                                type: f.FERTILIZER,
                                var: [
                                    { min: 1, max: 1, reward: d.COIN, x1: [50, 80], x2: [1, 1], x3: [0, 0] },
                                    { min: 2, max: 5, reward: d.COIN | d.LVL_BOOSTER, x1: [80, 110], x2: [1, 1], x3: [0, 0] },
                                ],
                                level: 0,
                                garden: !0,
                                textID: 11,
                            },
                            {
                                type: f.PETAL,
                                var: [
                                    { min: 2, max: 5, reward: d.COIN | d.LVL_BOOSTER, x1: [100, 170], x2: [1, 2], x3: [0, 0] },
                                    { min: 6, max: 10, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [170, 200], x2: [2, 3], x3: [1, 1] },
                                    { min: 10, max: 15, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [200, 230], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: -15,
                                minlevel: 50,
                                textID: 12,
                            },
                            {
                                type: f.CIRCLE,
                                var: [
                                    { min: 1, max: 1, reward: d.COIN | d.LVL_BOOSTER, x1: [50, 70], x2: [1, 2], x3: [0, 0] },
                                    { min: 2, max: 3, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [100, 120], x2: [2, 3], x3: [1, 1] },
                                ],
                                level: -30,
                                textID: 13,
                            },
                            {
                                type: f.SURPRISE,
                                var: [
                                    { min: 2, max: 4, reward: d.COIN, x1: [40, 70], x2: [0, 0], x3: [0, 0] },
                                    { min: 5, max: 7, reward: d.LVL_BOOSTER, x1: [0, 0], x2: [1, 2], x3: [0, 0] },
                                    { min: 7, max: 10, reward: d.LVL_BOOSTER, x1: [100, 150], x2: [3, 4], x3: [0, 0] },
                                ],
                                level: 30,
                                textID: 14,
                            },
                            {
                                type: f.GUIDELINE,
                                var: [
                                    { min: 2, max: 3, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 3, max: 5, reward: d.COIN, x1: [150, 200], x2: [0, 0], x3: [0, 0] },
                                    { min: 5, max: 8, reward: d.COIN, x1: [200, 300], x2: [0, 0], x3: [0, 0] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE,
                                textID: 15,
                            },
                            {
                                type: f.PLUSFIVE,
                                var: [
                                    { min: 2, max: 3, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 3, max: 5, reward: d.COIN, x1: [150, 200], x2: [0, 0], x3: [0, 0] },
                                    { min: 5, max: 8, reward: d.COIN, x1: [200, 300], x2: [0, 0], x3: [0, 0] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE,
                                textID: 17,
                            },
                            {
                                type: f.THREENEXT,
                                var: [
                                    { min: 2, max: 3, reward: d.COIN, x1: [100, 150], x2: [0, 0], x3: [0, 0] },
                                    { min: 3, max: 5, reward: d.COIN, x1: [150, 200], x2: [0, 0], x3: [0, 0] },
                                    { min: 5, max: 8, reward: d.COIN, x1: [200, 300], x2: [0, 0], x3: [0, 0] },
                                ],
                                level: a.UserGameData.REQ_BOOST_LEVEL_THREENEXT,
                                textID: 16,
                            },
                            { type: f.ALL, var: [{ min: 3, max: 3, reward: d.COIN | d.LVL_BOOSTER | d.PRE_BOOSTER, x1: [70, 100], x2: [1, 2], x3: [1, 1] }], level: 0, textID: 18 },
                        ]);
                }),
                (g.ADD = function (b, c) {
                    if (this.CURRENT_QUESTS) {
                        for (var d = 0; d < 4; d++)
                            if (!(this.CURRENT_QUESTS[d][1] < 0) && this.CURRENT_QUESTS[d][0] == b) {
                                ((this.CURRENT_QUESTS[d][1] += c), this.CURRENT_QUESTS[d][1] == this.CURRENT_QUESTS[d][2] && a.QuestPopup.ADD(a.QUEST_TYPE.ALL, 1));
                                break;
                            }
                        a.UserGameData.setQuestData(g.CURRENT_QUESTS);
                    }
                }),
                (g.REWARD = [1, 2, 4]),
                g
            );
        })(a.GamePopup);
    a.QuestPopup = c;
    var d;
    !(function (a) {
        ((a[(a.COIN = 1)] = 'COIN'), (a[(a.LVL_BOOSTER = 2)] = 'LVL_BOOSTER'), (a[(a.PRE_BOOSTER = 4)] = 'PRE_BOOSTER'));
    })(d || (d = {}));
    var e;
    !(function (a) {
        ((a[(a.EASY = 1)] = 'EASY'), (a[(a.MEDIUM = 2)] = 'MEDIUM'), (a[(a.HARD = 4)] = 'HARD'));
    })(e || (e = {}));
    var f;
    !(function (a) {
        ((a[(a.BUBLES_RED = 0)] = 'BUBLES_RED'), (a[(a.BUBLES_GREEN = 1)] = 'BUBLES_GREEN'), (a[(a.BUBLES_YELLOW = 2)] = 'BUBLES_YELLOW'), (a[(a.BUBLES_BLUE = 3)] = 'BUBLES_BLUE'), (a[(a.BUBLES_PURPLE = 4)] = 'BUBLES_PURPLE'), (a[(a.CROWN = 5)] = 'CROWN'), (a[(a.WINS = 6)] = 'WINS'), (a[(a.STARS = 7)] = 'STARS'), (a[(a.LIGHTNING = 8)] = 'LIGHTNING'), (a[(a.RAINBOW = 9)] = 'RAINBOW'), (a[(a.FIREBALL = 10)] = 'FIREBALL'), (a[(a.BOMB = 11)] = 'BOMB'), (a[(a.HARVEST = 12)] = 'HARVEST'), (a[(a.SPIDER = 13)] = 'SPIDER'), (a[(a.BAT = 14)] = 'BAT'), (a[(a.THORN = 15)] = 'THORN'), (a[(a.DYNAMITE = 16)] = 'DYNAMITE'), (a[(a.WATER = 17)] = 'WATER'), (a[(a.FERTILIZER = 18)] = 'FERTILIZER'), (a[(a.PETAL = 19)] = 'PETAL'), (a[(a.CIRCLE = 20)] = 'CIRCLE'), (a[(a.SURPRISE = 21)] = 'SURPRISE'), (a[(a.GUIDELINE = 22)] = 'GUIDELINE'), (a[(a.PLUSFIVE = 23)] = 'PLUSFIVE'), (a[(a.THREENEXT = 24)] = 'THREENEXT'), (a[(a.ALL = 25)] = 'ALL'));
    })((f = a.QUEST_TYPE || (a.QUEST_TYPE = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function a(a, b) {
            ((this.game = KY.Game.instance), (this.counter = 0), (this.numberOfShakes = 0), (this.startX = a), (this.startY = b), (this.magnitudeUnit = 0), (this.shakeModif = 1), (this.shakeModifCurrent = 0), (this.randomXN = 0), (this.randomYN = 0));
        }
        return (
            (a.prototype.startShakeObjectPose = function (a, b) {
                ((this.startX = a), (this.startY = b));
            }),
            (a.prototype.shakeObject = function (a, b, c, d) {
                (void 0 === b && (b = 16), void 0 === c && (c = 15), void 0 === d && (d = 1), (this.shakeModif = d), (this.currentElement = a), (this.counter = 1), (this.numberOfShakes = c), (this.magnitude = b), (this.magnitudeUnit = this.magnitude / this.numberOfShakes), (this.shakeModifCurrent = 0), (this.randomXN = 0), (this.randomYN = 0));
            }),
            (a.prototype.updateShake = function () {
                if (this.counter < this.numberOfShakes) {
                    this.shakeModifCurrent == a.MARK && ((this.magnitude -= this.magnitudeUnit), (this.randomXN = this.game.rnd.rangeInt(-this.magnitude, this.magnitude)), (this.randomYN = this.game.rnd.rangeInt(-this.magnitude, this.magnitude)), (this.shakeModifCurrent = this.shakeModif));
                    var b = this.randomXN * this.shakeModif,
                        c = this.randomYN * this.shakeModif;
                    (this.currentElement.position.set(this.startX + b, this.startY + c), this.shakeModifCurrent < 1 ? (this.shakeModifCurrent = Math.min(this.shakeModifCurrent + this.shakeModif, 1)) : (this.shakeModifCurrent = a.MARK), (this.counter += 1), this.counter >= this.numberOfShakes && (this.currentElement.position.set(this.startX, this.startY), (this.counter = 0), (this.numberOfShakes = 0)));
                }
            }),
            (a.MARK = 16777215),
            a
        );
    })();
    a.ScreenShake = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var g = d.call(this) || this;
                ((f._instance = g),
                    (g._alphaContainer = new b()),
                    (g._topContainer = new c(0, -Stage.centerY)),
                    g._topContainer.activateRelativeMode(),
                    (g._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)),
                    g._closeBtnContainer.activateRelativeMode(),
                    (g._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])),
                    g._closeBtn.position.set(0.5 * -g._closeBtn.width - 50, 0.5 * g._closeBtn.height + 250),
                    g._closeBtn.addOnClick(g.hide, g),
                    (g._closeBtn.enabled = !1),
                    (g._topUIContainer = new b()),
                    (g._topUIBackground = new c(0, 0, 'lobby', 'lbTopBg')),
                    (g._topUIBackground.anchor.y = 0),
                    (g._topUIBackground.width = Math.max(Stage.screenWidth, Stage.screenHeight)),
                    (g._heartIcon = new c(0, 0, 'lobby', 'lbHeart')),
                    (g._heartIcon.y = 110),
                    g._heartIcon.scale.set(0.9),
                    (g._plusMoneyBtn = new c(0, 0, 'lobby', 'lbPlusBtn')),
                    (g._plusMoneyBtn.y = g._heartIcon.y),
                    (g._bgHeart = new c(0, g._heartIcon.y, 'lobby', 'lbTextbg')),
                    (g._bgHeart.anchor.x = 0),
                    (g._bgCoin = new c(0, g._heartIcon.y, 'lobby', 'lbTextbg')),
                    (g._bgCoin.anchor.x = 1),
                    (g._coinIcon = new c(0, g._heartIcon.y, 'lobby', 'lbCoin')),
                    (g._bgCoinText = new a.CoinText(0, void 0, a.CoinTextAnchor.LEFT, 159.72)),
                    g._bgCoinText.refresh(),
                    (g._bgCoinText.y = g._heartIcon.y + 2),
                    (g._heartText = new PIXI.Text('0', { fontFamily: Stage.FONT_BOLD, fontSize: 60, fill: 16777215, align: 'center' })),
                    g._heartText.anchor.set(0.5),
                    (g._heartText.y = g._bgHeart.y + 2),
                    (g._heartTimeText = new PIXI.Text('10:43', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center' })),
                    g._heartTimeText.anchor.set(0.5),
                    (g._heartTimeText.y = g._bgHeart.y + 3),
                    (g._lotsContainer = new b()),
                    (g._lotsMask = new PIXI.Graphics()),
                    (g._lotsContainer.mask = g._lotsMask));
                var h = a.Locales.get('lobby', 'shop/shopCaption');
                ((g._caption = new c(0, 0, h[0], h[1])), (g._autoClose = !1), (g._adsBg = new c(0, 120, 'lobby', 'shop/lbLotBg-3')), g._lotsContainer.addChild(g._adsBg), (g._adsBtn = new a.PXButton('ui', ['popups/greenSmallBtn'])), (g._adsBtn.x = 0.5 * g._adsBg.width - 0.5 * g._adsBtn.width - 20), g._adsBtn.addOnUp(g.showAds, g), (g._btnText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center' })), g._btnText.anchor.set(0.5), (g._btnText.alpha = 0.9), (g._btnText.y = 1), g._adsBtn.addChild(g._btnText), (g._adsIcon = new c('ui0', 'adsIco')), (g._adsIcon.y = -3), g._adsIcon.scale.set(0.8), (g._adsIcon.alpha = 0.8), g._adsBtn.addChild(g._adsIcon));
                var i = new c(0.5 * -g._adsBg.width + 90, 0, 'ui', 'shop/icons/lbLotIcon0001'),
                    j = new c(0.5 * -g._adsBg.width + 90 + 0.2 * i.width, 0, 'ui', 'shop/icons/lbLotIcon0001'),
                    k = new c(0.5 * -g._adsBg.width + 90 + 0.4 * i.width, 0, 'ui', 'shop/icons/lbLotIcon0001');
                (g._adsBg.addChild(i), g._adsBg.addChild(j), g._adsBg.addChild(k));
                var l = new PIXI.Text('x' + a.EconomyOptions.ADS_REWARD_COIN, { fontFamily: 'Pony', fontSize: 45, fill: 1595076, align: 'left' });
                return (
                    l.anchor.set(0, 0.5),
                    (l.x = k.x + 70),
                    g._adsBg.addChild(l),
                    g._adsBg.addChild(g._adsBtn),
                    (g._lot1 = new e(g, 7, 150)),
                    (g._lot2 = new e(g, 5, 100)),
                    (g._lot3 = new e(g, 6, 100)),
                    (g._lot2.y = 450),
                    (g._lot1.y = g._lot3.y = g._lot2.y),
                    (g._lot3.x = 340),
                    (g._lot1.x = -g._lot3.x),
                    g._lotsContainer.addChild(g._lot1),
                    g._lotsContainer.addChild(g._lot2),
                    g._lotsContainer.addChild(g._lot3),
                    (g._lot4 = new e(g, 1, 4 * a.EconomyOptions.LIGHTNING_X1_COST, 5)),
                    (g._lot5 = new e(g, 2, 4 * a.EconomyOptions.RAINBOW_X1_COST, 5)),
                    (g._lot6 = new e(g, 3, 4 * a.EconomyOptions.FIREBALL_X1_COST, 5)),
                    (g._lot4.x = g._lot1.x),
                    (g._lot5.x = g._lot2.x),
                    (g._lot6.x = g._lot3.x),
                    (g._lot4.y = g._lot5.y = g._lot6.y = g._lot1.y + 380),
                    g._lotsContainer.addChild(g._lot4),
                    g._lotsContainer.addChild(g._lot5),
                    g._lotsContainer.addChild(g._lot6),
                    g.addChild(g._alphaContainer),
                    g.addChild(g._topContainer),
                    g._topContainer.addChild(g._topUIContainer),
                    g._topUIContainer.addChild(g._topUIBackground),
                    g._topUIContainer.addChild(g._bgHeart),
                    g._topUIContainer.addChild(g._bgCoin),
                    g._topUIContainer.addChild(g._heartIcon),
                    g._topUIContainer.addChild(g._plusMoneyBtn),
                    g._topUIContainer.addChild(g._bgCoinText),
                    g._topUIContainer.addChild(g._coinIcon),
                    g._topUIContainer.addChild(g._heartText),
                    g._topUIContainer.addChild(g._heartTimeText),
                    g._alphaContainer.addChild(g._closeBtnContainer),
                    g._closeBtnContainer.addChild(g._closeBtn),
                    g._alphaContainer.addChild(g._caption),
                    g._alphaContainer.addChild(g._lotsContainer),
                    g._alphaContainer.addChild(g._lotsMask),
                    g
                );
            }
            return (
                __extends(f, d),
                (f.prototype.checkLot = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.MONEY);
                    ((this._lot1.enabled = this._lot1.price <= b), (this._lot2.enabled = this._lot2.price <= b), (this._lot3.enabled = this._lot3.price <= b), (this._lot4.enabled = this._lot4.price <= b), (this._lot5.enabled = this._lot5.price <= b), (this._lot6.enabled = this._lot6.price <= b));
                }),
                (f.prototype.showAds = function () {
                    var b = this;
                    this._canPress &&
                        ((f.ADS_TIME = a.MI.get().time),
                        a.LoaderScreen.show(!0),
                        a.MI.get()
                            .showAds(a.ADS_TYPE.REWARD, a.STATS_AD_PLACEMENT.SHOP)
                            .then(function () {
                                (a.LoaderScreen.hide(), a.MI.get().popupManager.show(a.AllPopups.GET_REWARD_COIN), f.instance.emit(f.EVENT_SUCCESS_BUY, a.SHOP_ITEM_ID.NONE), (b._adsBtn.enabled = !0), b._adsBtn.replaceFrames(['grayMiniBtn']));
                            })
                            .catch(function (c) {
                                (a.LoaderScreen.hide(), a.MI.get().showFailAdsMessage(void 0, c), f.instance.emit(f.EVENT_ERROR_BUY, a.SHOP_ITEM_ID.NONE), (b._adsBtn.enabled = !0));
                            }));
                }),
                (f.init = function (a) {
                    f.DATA = a;
                }),
                (f.prototype.onResize = function (a) {
                    ((this._heartIcon.x = 0.5 * -Stage.screenWidth + 104), (this._plusMoneyBtn.x = 0.5 * Stage.screenWidth - 104), (this._bgHeart.x = this._heartIcon.x + 20), (this._bgCoin.x = this._plusMoneyBtn.x - 20), (this._bgCoinText.x = this._plusMoneyBtn.x - 300), (this._coinIcon.x = this._bgCoinText.x + 12), (this._heartText.x = this._bgHeart.x - 20), (this._heartTimeText.x = this._bgHeart.x + 126), (this._caption.y = 0.5 * -Stage.screenHeight + 350), (this._lotsContainer.y = 0.5 * -Stage.screenHeight + 450), this._lotsMask.beginFill(16711680, 0.5), this._lotsMask.drawRect(0.5 * -Stage.screenWidth, this._lotsContainer.y - 12, Stage.screenWidth, Stage.screenHeight), this._lotsMask.endFill());
                }),
                (f.prototype.show = function (b, c) {
                    var e = this;
                    (void 0 === b && (b = !1),
                        void 0 === c && (c = !1),
                        d.prototype.show.call(this),
                        a.Statistics.event_shopOpen(),
                        (this._autoClose = c),
                        (this._adsBtn.enabled = !1),
                        (this.alpha = 1),
                        this._bgCoinText.refresh(),
                        this.update(0),
                        this._bgCoinText && (this._bgCoinText.auto = !0),
                        (this._alphaContainer.alpha = 0.001),
                        TweenLite.to(this._alphaContainer, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                e.enable();
                            },
                        }),
                        b ? (this._topUIContainer.alpha = 1) : ((this._topUIContainer.alpha = 0), TweenLite.to(this._topUIContainer, 0.2, { alpha: 1 })));
                    var g = a.MI.get().time - f.ADS_TIME;
                    (g < f.ADS_TIME_DELAY ? ((this._canPress = !1), this._adsBtn.replaceFrames(['grayMiniBtn']), (this._btnText.visible = !0), (this._adsIcon.visible = !1)) : ((this._canPress = !0), this._adsBtn.replaceFrames(['popups/greenSmallBtn']), (this._btnText.visible = !1), (this._adsIcon.visible = !0)), this.checkLot(), this.on(f.EVENT_SUCCESS_BUY, this.successBuy, this), this.on(f.EVENT_ERROR_BUY, this.errorBuy, this));
                }),
                (f.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._adsBtn.enabled = a), this._lot1.enabBtn(a), this._lot2.enabBtn(a), this._lot3.enabBtn(a));
                }),
                (f.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        this._bgCoinText && (this._bgCoinText.auto = !1),
                        this.off(f.EVENT_SUCCESS_BUY, this.successBuy, this),
                        this.off(f.EVENT_ERROR_BUY, this.errorBuy, this),
                        new Promise(function (b) {
                            TweenLite.to(a._alphaContainer, 0.1, {
                                alpha: 0,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            });
                        })
                    );
                }),
                (f.prototype.update = function (b) {
                    if (0 != d.prototype.update.call(this, b)) {
                        if (this._adsBtn && this._btnText.visible) {
                            var c = a.MI.get().time,
                                e = c - f.ADS_TIME;
                            e < f.ADS_TIME_DELAY ? (this._btnText.text = String(a.Utils.formatTime(f.ADS_TIME_DELAY - e))) : ((this._btnText.visible = !1), (this._adsIcon.visible = !0), (this._canPress = !0), this._adsBtn.replaceFrames(['popups/greenSmallBtn']), (this._adsBtn.enabled = !0));
                        }
                        this._heartText && ((this._heartText.text = '' + (a.UserGameData.isInfinityHP ? a.Utils.INIFINITY_CHAR : a.UserGameData.getProperty(a.USER_PROPERTY.HP))), (this._heartTimeText.text = '' + a.UserGameData.currentHPTimeString));
                    }
                }),
                (f.prototype.successBuy = function (a) {
                    this._autoClose && this.hide();
                }),
                (f.prototype.errorBuy = function (a) {}),
                Object.defineProperty(f, 'instance', {
                    get: function () {
                        return f._instance;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (f.buyLots = function (b, c, d) {
                    if ((void 0 === d && (d = !0), c)) {
                        for (var e = 0; e < c.length; e++) this.addItemToUser(c[e][0], c[e][1], a.STATS_GAME_RESOURCE_PLACEMENT.IAP, b);
                        d && a.UserGameData.immediatelySave();
                    }
                }),
                (f.addItemToUser = function (b, c, d, e) {
                    switch ((void 0 === e && (e = 'empty'), b)) {
                        case a.ShopLotItemType.MONEY:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.COIN, c, d, e));
                            break;
                        case a.ShopLotItemType.LIGHTNING:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.LIGHTNING_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.LIGHTNING, c, d, e));
                            break;
                        case a.ShopLotItemType.RAINBOW:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.RAINBOW_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.RAINBOW, c, d, e));
                            break;
                        case a.ShopLotItemType.FIREBALL:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.FIREBALL_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.FIREBALL, c, d, e));
                            break;
                        case a.ShopLotItemType.BOMB:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.BOMB_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.BOMB, c, d, e));
                            break;
                        case a.ShopLotItemType.ADD_5_BUBBLES:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.PLUSFIVE_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.PLUSFIVE, c, d, e));
                            break;
                        case a.ShopLotItemType.MAX_NEXT_BUBBLES:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.THREENEXT_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.THREENEXT, c, d, e));
                            break;
                        case a.ShopLotItemType.GUIDELINE_NO_LIMIT:
                            (a.UserGameData.addProperty(a.USER_PROPERTY.GUIDELINE_COUNT, c), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.GUIDELINE, c, d, e));
                            break;
                        case a.ShopLotItemType.ENDLESS_LIVES:
                            a.UserGameData.addInfinityHP(c);
                            break;
                        case a.ShopLotItemType.LIVE:
                            a.UserGameData.addHP(c);
                    }
                }),
                (f.ADS_TIME_DELAY = 3e5),
                (f.ADS_TIME = 0),
                (f.EVENT_SUCCESS_BUY = 'EVENT_SUCCESS_BUY'),
                (f.EVENT_ERROR_BUY = 'EVENT_ERROR_BUY'),
                f
            );
        })(a.GamePopup);
    a.Shop = d;
    var e = (function (b) {
        function e(d, e, f, g) {
            void 0 === g && (g = 1);
            var h = b.call(this) || this;
            ((h._value = g), (h._shop = d), (h._visual = new c('lobby', 'shop/bgNewLot')), (h._btn = new a.PXButton('lobby', ['shop/lbGreenMiniBtn'])), (h._btn.y = 80), (h._btn.enabled = !1), h._btn.addOnUp(h.onup, h), (h._price = new a.CoinText(f, null, a.CoinTextAnchor.LEFT, 100)), (h._price.x = -100), (h._price.y = -2), (h._isGray = !1), (h._priceValue = f), (h._id = e), (h._icon = new c(0, -90, 'ui', 'shop/icons/lbLotIcon000' + (e + 1))));
            var i = new PIXI.Text('x' + g, { fontFamily: 'Pony', fontSize: 45, fill: 1595076, align: 'left' });
            return (i.anchor.set(0.5), (i.y = -10), h.addChild(h._visual), h.addChild(h._btn), h.addChild(h._icon), h.addChild(i), h._btn.addChild(h._price), h);
        }
        return (
            __extends(e, b),
            (e.prototype.onup = function () {
                a.EconomyOptions.buyForCoins(this._priceValue, !1, a.STATS_GAME_RESOURCE_PLACEMENT.BOOSTERS, String(this._id)) && (d.instance.emit(d.EVENT_SUCCESS_BUY, a.SHOP_ITEM_ID.NONE), d.addItemToUser(this._id, this._value, a.STATS_GAME_RESOURCE_PLACEMENT.GARDEN), this._shop.checkLot(), a.BoostCounter.get().show(), a.UserGameData.save('BoostBuyPopup-buyBoost'));
            }),
            (e.prototype.setGrayBtn = function (a) {
                ((this._isGray = a), a ? (this._btn.replaceFrames(['shop/grayMiniBtn']), (this._price.alpha = 0.8)) : (this._btn.replaceFrames(['shop/lbGreenMiniBtn']), (this._price.alpha = 1)));
            }),
            (e.prototype.enabBtn = function (a) {
                this._btn.enabled = !this._isGray && a;
            }),
            Object.defineProperty(e.prototype, 'enabled', {
                get: function () {
                    return this._btn.enabled;
                },
                set: function (a) {
                    ((this._btn.enabled = a), this.setGrayBtn(!a));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'price', {
                get: function () {
                    return this._priceValue;
                },
                enumerable: !1,
                configurable: !0,
            }),
            e
        );
    })(b);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var f = d.call(this) || this;
                ((e.FROM_ERROR = !1), (f._body = new b()), (f._bodyBg = new c('ui', 'popups/specialBubble/speciaBubblelBg')), f._bodyBg.scale.set(2));
                var g = a.Locales.get('ui', 'popups/specialBubble/specialBubbleCap');
                ((f._caption = new c(g[0], g[1])), (f._caption.y = -300));
                var h = new PIXI.Text(a.StringManager.get('SPECIAL_BUBBLE_CAPTION_1'), { fill: 16777215, align: 'center', fontSize: 40, fontFamily: Stage.FONT_BOLD });
                (h.anchor.set(0.5), (h.y = -430), (h.alpha = 0.45), (f._getBtn = new a.PXButton('ui', ['popups/specialBubble/orangeBtn'])), f._getBtn.setAnimationScale(0.1, 2), (f._getBtn.y = 350), f._getBtn.addOnClick(f.getPrize, f), (f._moneyExp = new a.MoneyExplosion()), (f._moneyExp.y = f._getBtn.y));
                var i = new b();
                return (
                    i.scale.set(0.5),
                    (f._btnCap = new PIXI.Text(a.StringManager.get('SPECIAL_BUBBLE_CAPTION_2'), { fill: 16777215, align: 'center', fontSize: 42, fontFamily: Stage.FONT_BOLD })),
                    f._btnCap.anchor.set(0.5),
                    (f._btnCap.y = -33),
                    (f._adsIcon = new c(0, 0, 'ui0', 'adsIco')),
                    (f._adsIcon.alpha = 0.6),
                    (f._adsIcon.y = 26),
                    f._adsIcon.scale.set(0.83),
                    (f._price = new a.CoinText(2e3, null, a.CoinTextAnchor.CENTER)),
                    (f._price.y = f._adsIcon.y),
                    (f._icon = new c('ui', 'modifIcon0003')),
                    (f._icon.y = -70),
                    (f._text = new PIXI.Text(a.StringManager.get('SPECIAL_GUIDELINE_BOOST_INFO'), { fill: 16777215, align: 'center', fontSize: 46, fontFamily: 'Pony', wordWrap: !0, wordWrapWidth: 450, leading: 4, dropShadow: !0, dropShadowAngle: Math.PI / 4, dropShadowColor: '#000000', dropShadowDistance: 10, dropShadowBlur: 4, dropShadowAlpha: 0.45 })),
                    f._text.anchor.set(0.5),
                    (f._text.y = 130),
                    (f._coinShower = new a.PopupCoinShower()),
                    f.addChild(f._body),
                    f._body.addChild(f._bodyBg),
                    f._body.addChild(f._caption),
                    f._body.addChild(f._getBtn),
                    f._body.addChild(h),
                    f._body.addChild(f._icon),
                    f._body.addChild(f._text),
                    f._body.addChild(f._coinShower),
                    f._body.addChild(f._moneyExp),
                    f._getBtn.addChild(i),
                    i.addChild(f._btnCap),
                    i.addChild(f._adsIcon),
                    i.addChild(f._price),
                    f
                );
            }
            return (
                __extends(e, d),
                (e.prototype.show = function (b, c) {
                    var f = this;
                    switch ((d.prototype.show.call(this), (this._needFree = !0), a.SoundsManager.openSpecialBubblePopup(), (this._type = b), (this._moveCounter = c), (this._coinShower.alpha = 0), (this._btnCap.y = -33), e.FROM_ERROR ? ((this._adsIcon.visible = !1), (this._price.visible = !0), (this._price.text = a.EconomyOptions.SPECIAL_NO_ADS_COIN), (this._needMoney = !0)) : ((this._adsIcon.visible = !0), (this._price.visible = !1), (this._needMoney = !1)), this._needFree && ((this._adsIcon.visible = !1), (this._btnCap.y = 0)), (e.FROM_ERROR = !1), this._type)) {
                        case a.TypeBubbleComponent.SB_GUIDELINE:
                            ((this._icon.texture = Stage.getImage('ui', 'modifIcon0003')), (this._text.text = a.StringManager.get('SPECIAL_GUIDELINE_BOOST_INFO')), (this._text.style.wordWrapWidth = 450));
                            break;
                        case a.TypeBubbleComponent.SB_MOVE:
                            ((this._icon.texture = Stage.getImage('ui', 'popups/specialBubble/extMoveIcoBig000' + (c - 4))), (this._text.text = a.StringManager.get('SPECIAL_ADD_N_BOOST_INFO', c, a.Utils.declension(c, a.StringManager.array('SB_MOVE')))), (this._text.style.wordWrapWidth = 500));
                            break;
                        case a.TypeBubbleComponent.SB_COIN:
                            ((this._moneyValue = Stage.rnd.rangeIntJS(a.EconomyOptions.ADS_REWARD_COIN, a.EconomyOptions.SPECIAL_REWARD_COIN)), this._needFree && (this._moneyValue = 30), (this._icon.texture = Stage.getImage('lobby', 'lbCoin')), (this._text.text = a.StringManager.get('SPECIAL_ADD_N_COINS', this._moneyValue, a.Utils.declension(this._moneyValue, a.StringManager.array('COIN')))));
                    }
                    ((this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, { y: 0, alpha: 1, delay: 0.15, ease: Circ.easeOut }),
                        this._caption.scale.set(0.2),
                        TweenLite.to(this._caption.scale, 1.2, { x: 1, y: 1, ease: Elastic.easeOut, delay: 0.2 }),
                        (this._text.alpha = 0),
                        TweenLite.to(this._text, 0.3, { alpha: 1, delay: 0.7 }),
                        this._icon.scale.set(0.2),
                        (this._icon.alpha = 0),
                        TweenLite.to(this._icon, 0.2, { alpha: 1, delay: 0.5 }),
                        TweenLite.to(this._icon.scale, 1, { x: 1, y: 1, ease: Elastic.easeOut, delay: 0.5 }),
                        (this._getBtn.alpha = 0),
                        TweenLite.to(this._getBtn, 0.3, {
                            alpha: 1,
                            delay: 0.5,
                            onComplete: function () {
                                f._getBtn.enabled = !0;
                            },
                        }));
                }),
                (e.prototype.setInteractive = function (a) {
                    this._getBtn.enabled = a;
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        this._coinShower.stop(),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.1, { alpha: 0 }));
                        })
                    );
                }),
                (e.prototype.update = function (a, b) {
                    0 != d.prototype.update.call(this, a) && (this._caption.rotation = 0.07 * Math.sin(b / 15));
                }),
                (e.prototype.getAdsID = function () {
                    return a.TypeBubbleComponent.SB_GUIDELINE ? a.STATS_AD_PLACEMENT.SPECIAL_BUBBLE_GL : a.TypeBubbleComponent.SB_MOVE ? a.STATS_AD_PLACEMENT.SPECIAL_BUBBLE_MV : a.STATS_AD_PLACEMENT.SPECIAL_BUBBLE_CN;
                }),
                (e.prototype.getPrize = function () {
                    var b = this;
                    return (
                        this.disable(),
                        this._needFree
                            ? void this.__getPrize()
                            : this._needMoney
                              ? void (a.EconomyOptions.buyForCoins(a.EconomyOptions.SPECIAL_NO_ADS_COIN, !1, a.STATS_GAME_RESOURCE_PLACEMENT.SPECIAL_BUBBLE) ? this.__getPrize() : (e.FROM_ERROR = !0))
                              : (a.LoaderScreen.show(!0),
                                void a.MI.get()
                                    .showAds(a.ADS_TYPE.REWARD, this.getAdsID(), !1)
                                    .then(function () {
                                        (a.LoaderScreen.hide(), b.__getPrize());
                                    })
                                    .catch(function (c) {
                                        return (a.LoaderScreen.hide(), b._type == a.TypeBubbleComponent.SB_COIN ? void b.getCoin() : ((e.FROM_ERROR = !0), a.MI.get().showFailAdsMessage(a.StringManager.get('ERROR_FAIL_ADS_SPECIAL'), c), void b.enable()));
                                    }))
                    );
                }),
                (e.prototype.__getPrize = function () {
                    switch (this._type) {
                        case a.TypeBubbleComponent.SB_GUIDELINE:
                            (a.GameStage.instance.addGameModification(a.MODIFICATION_TYPE.GUIDELINE_NOLIMIT), a.GameStage.instance.resetModificationDemo(), (a.Options.GUIDELINE_NO_LIMIT = !0), this.hide());
                            break;
                        case a.TypeBubbleComponent.SB_MOVE:
                            (a.GameStage.instance.addExtraBubble(this._moveCounter), this.hide());
                            break;
                        case a.TypeBubbleComponent.SB_COIN:
                            this.getCoin();
                    }
                }),
                (e.prototype.getCoin = function () {
                    var b = this;
                    ((this._coinShower.x = 0.5 * Stage.screenWidth - 400),
                        (this._coinShower.y = 0.5 * -Stage.screenHeight - 200),
                        TweenLite.to(this._coinShower, 0.3, { alpha: 1, y: 0.5 * -Stage.screenHeight, delay: 0.2 }),
                        a.SoundsManager.getAdsReward(),
                        a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, this._moneyValue),
                        a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.COIN, this._moneyValue, a.STATS_GAME_RESOURCE_PLACEMENT.SPECIAL_BUBBLE),
                        this._moneyExp.start(6, 0.5 * Stage.screenWidth - 394, 0.5 * -Stage.screenHeight + 110),
                        this._moneyExp.once(a.MoneyExplosion.EVENT_ADD_COIN, function () {
                            b._coinShower.start();
                        }),
                        this._moneyExp.once(a.MoneyExplosion.EVENT_COMPLETE, function () {
                            b.hide();
                        }));
                }),
                e
            );
        })(a.GamePopup);
    a.SpecialBubblePopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                return ((d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._body = new b()), d.loadAtlas('blackFriday_191122', 'offers/blackFriday_191122'), d.addChild(d._body), d.addChildMiniLoader(), d.addChild(d._closeBtnContainer), d._closeBtnContainer.addChild(d._closeBtn), d);
            }
            return (
                __extends(d, c),
                (d.prototype.onload = function () {
                    ((this._bg = new PIXI.Sprite(this.getTexture('bodyPopup'))), this._bg.anchor.set(0.5), (this._bg.x = -80), (this._bg.y = -100), (this._timeText = new PIXI.Text(a.Utils.formatTime(0.9 * a.UserGameData.HOUR_24, a.TIME_FORMAT.DAYS_HOURS), { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 0, align: 'center' })), this._timeText.anchor.set(0.5), (this._timeText.x = this._bg.x + 145), (this._timeText.y = this._bg.y - 92), (this._btn = new a.PXButton('', [this.getTexture('buyBtn')])), (this._btn.y = 0.5 * this._bg.height + 120 - 30), this._btn.addOnClick(this.gotoShop, this), this._btn.setAnimationScale(0.1, 1));
                    var b = new PIXI.Container();
                    b.scale.set(0.5);
                    var c = 0.6,
                        d = a.Utils.uint((a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.BLACK_FRIDAY_191122] + 1) / (1 - c)),
                        e = d + ' ' + a.Utils.declension(d, a.MI.get().social.currency),
                        f = new PIXI.Text(e, { fontFamily: 'Pony', fontSize: 100, fill: 16777215, align: 'center' });
                    (f.anchor.set(0.5), (f.y = 60));
                    var g = new PIXI.Sprite(this.getTexture('bfCrossedPrice'));
                    (g.anchor.set(0.5), (g.y = f.y), g.scale.set(1.7), (d = a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.BLACK_FRIDAY_191122]), (e = d + ' ' + a.Utils.declension(d, a.MI.get().social.currency)));
                    var h = new PIXI.Text(e, { fontFamily: 'Pony', fontSize: 130, fill: [15657472, 16763136], align: 'center', dropShadow: !0, dropShadowAngle: 0.5 * Math.PI, dropShadowColor: 9854464, dropShadowDistance: 8 });
                    (h.anchor.set(0.5), (h.x = 4), (h.y = -50), (h.angle = 2), b.addChild(f), b.addChild(g), b.addChild(h), this._body.addChild(this._bg), this._body.addChild(this._timeText), this._body.addChild(this._btn), this._btn.addChild(b));
                }),
                (d.prototype.gotoShop = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b,
                            c = this;
                        return __generator(this, function (e) {
                            return (
                                this.disable(),
                                (b = a.UserGameData.getProperty(a.USER_PROPERTY.KEYS)),
                                4 == b
                                    ? (a.MI.get().popupManager.show(a.AllPopups.ERROR, a.StringManager.get('BF_191122_PIG_KEY'), !1), a.MI.get().popupManager.addNext(a.AllPopups.PIG_MONEYBOX, 0), [2])
                                    : (a.EconomyOptions.buy(a.SHOP_ITEM_ID.BLACK_FRIDAY_191122, a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.BLACK_FRIDAY_191122], a.STATS_IAP_PLACEMENT.OFFERS)
                                          .then(function () {
                                              (a.Shop.buyLots(a.SHOP_ITEM_ID.BLACK_FRIDAY_191122, d.BF_191122_ITEMS, !1), a.UserGameData.addProperty(a.USER_PROPERTY.KEYS), a.UserGameData.stopEvent('blackFriday_191122'), a.UserGameData.immediatelySave(), a.Lobby.instance.popitManager.hidePopit('blackFriday_191122'), c.hide());
                                          })
                                          .catch(function () {
                                              (a.EconomyOptions.showFailBuyMessage(), c.enable());
                                          }),
                                      [2])
                            );
                        });
                    });
                }),
                (d.prototype.show = function () {
                    (c.prototype.show.call(this), (this._closeBtn.enabled = !1), (this._closeBtn.alpha = 0), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }));
                }),
                (d.prototype.showAfterLoading = function () {
                    var a = this;
                    (c.prototype.showAfterLoading.call(this),
                        (this._body.alpha = 0),
                        this._body.scale.set(0.7),
                        TweenLite.to(this._body, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                a.enable();
                            },
                        }),
                        TweenLite.to(this._body.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut }),
                        TweenLite.to(this._closeBtn, 0.1, {
                            alpha: 1,
                            delay: 1,
                            onComplete: function () {
                                a._closeBtn.enabled = !0;
                            },
                        }));
                }),
                (d.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), this._btn && (this._btn.enabled = a));
                }),
                (d.prototype.hide = function () {
                    var b = this;
                    return (
                        c.prototype.hide.call(this),
                        a.SoundsManager.tickTack(!1),
                        new Promise(function (a) {
                            TweenLite.to(b, 0.1, {
                                alpha: 0,
                                onComplete: function () {
                                    (b.free(), a());
                                },
                            });
                        })
                    );
                }),
                (d.prototype.update = function (b) {
                    if (0 != c.prototype.update.call(this, b) && this.isLoaded && this._timeText) {
                        var d = a.UserGameData.getEventTime('blackFriday_191122') - a.MI.get().time;
                        (d < 0 && (d = 0), (this._timeText.text = a.Utils.formatTime(d, a.TIME_FORMAT.DAYS_HOURS)), 0 == d && (a.UserGameData.stopEvent('blackFriday_191122'), this.hide()));
                    }
                }),
                (d.BF_191122_ITEMS = [
                    [a.ShopLotItemType.MONEY, 1500],
                    [a.ShopLotItemType.ENDLESS_LIVES, 1440],
                    [a.ShopLotItemType.BOMB, 5],
                    [a.ShopLotItemType.LIGHTNING, 5],
                    [a.ShopLotItemType.ADD_5_BUBBLES, 5],
                ]),
                d
            );
        })(a.GamePopup);
    a.SpecialOfferBlackFriday191122Popup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var c = d.call(this) || this;
                return ((c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), c._closeBtnContainer.activateRelativeMode(), (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50), c._closeBtn.addOnClick(c.hide, c), (c._closeBtn.enabled = !1), (c._body = new b()), c.loadAtlas('newYear22', 'offers/newYear_22_StartPopup'), c.addChild(c._body), c.addChildMiniLoader(), c.addChild(c._closeBtnContainer), c._closeBtnContainer.addChild(c._closeBtn), c);
            }
            return (
                __extends(e, d),
                (e.prototype.onload = function () {
                    ((this._bg = new PIXI.Sprite(this.getTexture('ny22Bg'))), this._bg.anchor.set(0.5), (this._bg.y = -100), (this._btn = new a.PXButton('lobby', ['shop/lbGreenMiniBtn'])), (this._btn.y = 0.5 * this._bg.height + 120 - 30), this._btn.addOnDown(this.gotoNY, this));
                    var b = new PIXI.Text(a.StringManager.get('NY_GOTO_BTN'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: 35, align: 'center' });
                    (b.anchor.set(0.5), this._btn.addChild(b));
                    var d = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16777215, fontSize: 77, align: 'center', lineJoin: 'round', stroke: '#5787AA', strokeThickness: 15 }),
                        e = new PIXI.Text(a.StringManager.get('NY_CAPTION'), d);
                    (e.anchor.set(0.5), (e.y = -500));
                    var f = new c(0, 0, 'lobby', 'newYear22/ny22PopitIcon');
                    f.y = e.y + 150;
                    var g = new PIXI.Text(a.StringManager.get('NY_DESC'), { fontFamily: Stage.FONT_BOLD, fill: 5736362, fontSize: 45, leading: 20, align: 'center' });
                    (g.anchor.set(0.5), (g.y = -70));
                    var h = new PIXI.Sprite(this.getTexture('ny22Prize'));
                    (h.anchor.set(0.5), (h.y = 230), this._btn.setAnimationScale(0.1, 1.5), this._body.addChild(this._bg), this._body.addChild(e), this._body.addChild(f), this._body.addChild(h), this._body.addChild(g), this._body.addChild(this._btn));
                }),
                (e.prototype.gotoNY = function () {
                    ((this._btn.enabled = !1),
                        this.hide().then(function () {
                            (a.LoaderScreen.show(), a.MI.get().popupManager.clearQueue(), KY.Game.instance.states.start('NewYear22', !1, !1, !0));
                        }));
                }),
                (e.prototype.show = function () {
                    (d.prototype.show.call(this), (this._closeBtn.enabled = !1), (this._closeBtn.alpha = 0), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }));
                }),
                (e.prototype.showAfterLoading = function () {
                    var a = this;
                    (d.prototype.showAfterLoading.call(this),
                        (this._body.alpha = 0),
                        this._body.scale.set(0.7),
                        TweenLite.to(this._body, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                a.enable();
                            },
                        }),
                        TweenLite.to(this._body.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut }),
                        TweenLite.to(this._closeBtn, 0.1, {
                            alpha: 1,
                            delay: 1,
                            onComplete: function () {
                                a._closeBtn.enabled = !0;
                            },
                        }));
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), this._btn && (this._btn.enabled = a));
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (b) {
                    if (0 != d.prototype.update.call(this, b) && this.isLoaded) {
                        var c = a.UserGameData.getEventTime('newYear22') - a.MI.get().time;
                        (c < 0 && (c = 0), 0 == c && (a.UserGameData.stopEvent('newYear22'), this.hide()));
                    }
                }),
                e
            );
        })(a.GamePopup);
    a.SpecialOfferNewYear22Popup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                return ((d._args = [100 * Math.random(), 100 * Math.random(), 100 * Math.random(), 100 * Math.random(), 100 * Math.random()]), (d._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), d._closeBtnContainer.activateRelativeMode(), (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50), d._closeBtn.addOnClick(d.hide, d), (d._closeBtn.enabled = !1), (d._body = new b()), d.loadAtlas('novice', 'offers/novice'), d.addChild(d._body), d.addChildMiniLoader(), d.addChild(d._closeBtnContainer), d._closeBtnContainer.addChild(d._closeBtn), d);
            }
            return (
                __extends(d, c),
                (d.prototype.onload = function () {
                    var b = new PIXI.NineSlicePlane(this.getTexture('onBg'), 125, 125, 125, 125);
                    ((b.width = 835), (b.height = 950), (b.x -= 0.5 * b.width), (b.y -= 0.5 * b.height));
                    var c = new PIXI.Sprite(this.getTexture('onBgGradient'));
                    (c.anchor.set(0.5), c.scale.set(4.7));
                    var d = a.Locales.isRus ? '' : '_eng',
                        e = new PIXI.Sprite(this.getTexture('onSpecialOfferCap1' + d));
                    (e.anchor.set(0.5), (e.y = 0.5 * -b.height + 145));
                    var f = new PIXI.Sprite(this.getTexture('onSpecialOfferCap2' + d));
                    (f.anchor.set(0.5), (f.y = e.y + 110));
                    var g = new PIXI.Sprite(this.getTexture('onTimeBg'));
                    (g.anchor.set(0.5), (g.y = f.y + 65));
                    var h = a.UserGameData.getProperty(a.USER_PROPERTY.OFFER_NOVICE_TIME) - a.MI.get().time;
                    (h < 0 && (h = 0), (this._sunRay = new PIXI.Sprite(this.getTexture('onSunRay'))), this._sunRay.anchor.set(0.5), this._sunRay.scale.set(3), (this._sunRay.alpha = 0.8), (this._sunRay.y = 55), (this._timeText = new PIXI.Text(a.Utils.formatTime(h), { fontFamily: Stage.FONT_BOLD, fontSize: 50, fill: 16777215, align: 'center' })), this._timeText.anchor.set(0.5), (this._timeText.y = g.y + 4));
                    var i = a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.NOVICE_SPEC],
                        j = i + ' ' + a.Utils.declension(i, a.MI.get().social.currency),
                        k = new PIXI.Text(j, { fontFamily: 'Pony', fontSize: a.Utils.int(51), fill: 16777215, align: 'center' });
                    (k.anchor.set(0.5), (k.y = 30));
                    var l = new PIXI.Sprite(this.getTexture('onCrossedOut'));
                    (l.anchor.set(0.5), (l.y = k.y), l.scale.set(1.7), (i = a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.NOVICE_SPEC_SALE]), (j = i + ' ' + a.Utils.declension(i, a.MI.get().social.currency)));
                    var m = new PIXI.Text(j, { fontFamily: 'Pony', fontSize: a.Utils.int(74.8), fill: [15657472, 16763136], align: 'center', dropShadow: !0, dropShadowAngle: 0.5 * Math.PI, dropShadowColor: 9854464, dropShadowDistance: 8 });
                    (m.anchor.set(0.5), (m.x = 4), (m.y = -25), (m.angle = 2));
                    var n = new PIXI.Container();
                    (n.scale.set(0.5),
                        (this._l_Money = new PIXI.Sprite(this.getTexture('onIcons0001'))),
                        this._l_Money.anchor.set(0.5),
                        this._l_Money.position.set(-244, -23),
                        (this._l_Fire = new PIXI.Sprite(this.getTexture('onIcons0002'))),
                        this._l_Fire.anchor.set(0.5),
                        this._l_Fire.position.set(-183, 170),
                        (this._l_Bomb = new PIXI.Sprite(this.getTexture('onIcons0003'))),
                        this._l_Bomb.anchor.set(0.5),
                        this._l_Bomb.position.set(250, 26),
                        (this._l_Money.angle = 11.7),
                        (this._l_Sniper = new PIXI.Sprite(this.getTexture('onIcons0004'))),
                        this._l_Sniper.anchor.set(0.5),
                        this._l_Sniper.position.set(170, 210),
                        (this._l_Sniper.angle = 6.7),
                        (this._l_Heart = new PIXI.Sprite(this.getTexture('onIcons0005'))),
                        this._l_Heart.anchor.set(0.5),
                        this._l_Heart.position.set(-12, 60),
                        (this._l_Heart.angle = -12.5),
                        (this._saleMark = new PIXI.Sprite(this.getTexture('onSaleMark'))),
                        this._saleMark.anchor.set(0.5),
                        this._saleMark.position.set(0.5 * b.width - 35, 0.5 * -b.height + 35),
                        (this._saleMark.alpha = 0),
                        (this._btn = new a.PXButton('lobby', ['shop/lbGreenMiniBtn'])),
                        (this._btn.y = 0.5 * b.height + 200 - 30),
                        this._btn.addOnDown(this.gotoShop, this),
                        this._btn.setAnimationScale(0.1, 1.5));
                    var o = { fontFamily: 'Pony', fontSize: 50, fill: 12080997, align: 'center' },
                        p = new PIXI.Text('x' + a.SLNovice.NOVICE_ITEMS[0][1], o);
                    (p.anchor.set(0.5), (p.y = 88), this._l_Money.addChild(p));
                    var q = new PIXI.Text('x' + a.SLNovice.NOVICE_ITEMS[3][1], o);
                    (q.anchor.set(0.5), (q.y = 90), this._l_Fire.addChild(q));
                    var r = new PIXI.Text('x' + a.SLNovice.NOVICE_ITEMS[2][1], o);
                    (r.anchor.set(0.5), (r.y = 95), this._l_Bomb.addChild(r));
                    var s = new PIXI.Text('x' + a.SLNovice.NOVICE_ITEMS[4][1], o);
                    (s.anchor.set(0.5), (s.y = 107), this._l_Sniper.addChild(s));
                    var t = new PIXI.Text(((a.SLNovice.NOVICE_ITEMS[1][1] / 60) >> 0) + 'ч', o);
                    (t.anchor.set(0.5), (t.y = 140), this._l_Heart.addChild(t), this._body.addChild(b), this._body.addChild(c), this._body.addChild(this._sunRay), this._body.addChild(e), this._body.addChild(g), this._body.addChild(this._timeText), this._body.addChild(f), this._body.addChild(this._l_Money), this._body.addChild(this._l_Fire), this._body.addChild(this._l_Bomb), this._body.addChild(this._l_Sniper), this._body.addChild(this._l_Heart), this._body.addChild(this._btn), this._body.addChild(this._saleMark), n.addChild(k), n.addChild(l), n.addChild(m), this._btn.addChild(n));
                }),
                (d.prototype.gotoShop = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b = this;
                        return __generator(this, function (c) {
                            return (
                                this.disable(),
                                a.EconomyOptions.buy(a.SHOP_ITEM_ID.NOVICE_SPEC_SALE, a.EconomyOptions.SHOP_ITEM_PRICE[a.SHOP_ITEM_ID.NOVICE_SPEC_SALE], a.STATS_IAP_PLACEMENT.SHOP)
                                    .then(function () {
                                        (a.Shop.buyLots(a.SHOP_ITEM_ID.NOVICE_SPEC_SALE, a.SLNovice.NOVICE_ITEMS, !1), a.UserGameData.setProperty(a.USER_PROPERTY.BOUGHT_NOVICE_LOT, 1), a.UserGameData.immediatelySave(), a.Lobby.instance.popitManager.hidePopit('OfferNovicePopit'), a.Statistics.event_offerNoviceAccept(), b.hide());
                                    })
                                    .catch(function () {
                                        (a.EconomyOptions.showFailBuyMessage(), b.enable());
                                    }),
                                [2]
                            );
                        });
                    });
                }),
                (d.prototype.show = function () {
                    (c.prototype.show.call(this), 0 == this.isLoaded && a.Statistics.event_offerNoviceLoad(), (this._closeBtn.enabled = !1), (this._closeBtn.alpha = 0), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }));
                }),
                (d.prototype.showAfterLoading = function () {
                    var b = this;
                    (c.prototype.showAfterLoading.call(this),
                        a.Statistics.event_offerNoviceShow(),
                        (d.GOTO_SHOP = !1),
                        a.SoundsManager.tickTack(!0),
                        (this._l_Money.alpha = 0),
                        (this._l_Fire.alpha = 0),
                        (this._l_Bomb.alpha = 0),
                        (this._l_Sniper.alpha = 0),
                        (this._l_Heart.alpha = 0),
                        TweenLite.to(this._l_Money, 0.1, { alpha: 1 }),
                        TweenLite.to(this._l_Fire, 0.1, { alpha: 1 }),
                        TweenLite.to(this._l_Bomb, 0.1, { alpha: 1 }),
                        TweenLite.to(this._l_Sniper, 0.1, { alpha: 1 }),
                        TweenLite.to(this._l_Heart, 0.1, { alpha: 1 }),
                        TweenLite.to(this._closeBtn, 0.1, {
                            alpha: 1,
                            delay: 1,
                            onComplete: function () {
                                b._closeBtn.enabled = !0;
                            },
                        }),
                        (this._body.alpha = 0),
                        this._body.scale.set(0.7),
                        TweenLite.to(this._body, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                b.enable();
                            },
                        }),
                        TweenLite.to(this._body.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut }),
                        (this._saleMark.alpha = 0),
                        this._saleMark.scale.set(1.5),
                        TweenLite.to(this._saleMark, 0.2, { alpha: 1, delay: 0.5 }),
                        TweenLite.to(this._saleMark.scale, 1, { x: 1, y: 1, ease: Elastic.easeOut, delay: 0.5 }));
                }),
                (d.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), this._btn && (this._btn.enabled = a));
                }),
                (d.prototype.hide = function () {
                    var b = this;
                    return (
                        c.prototype.hide.call(this),
                        a.SoundsManager.tickTack(!1),
                        new Promise(function (a) {
                            TweenLite.to(b, 0.1, {
                                alpha: 0,
                                onComplete: function () {
                                    (b.free(), a());
                                },
                            });
                        })
                    );
                }),
                (d.prototype.update = function (b) {
                    if (0 != c.prototype.update.call(this, b) && this.isLoaded) {
                        var d = 0.02;
                        if (((this._l_Heart.angle = 5 * Math.sin((this._args[0] += d))), (this._l_Heart.y = 60 + 15 * Math.sin(this._args[0])), (this._l_Money.angle = 2 * Math.sin((this._args[1] += d))), (this._l_Money.y = -40 + 10 * Math.sin(this._args[1])), (this._l_Fire.angle = 2 * Math.sin((this._args[2] += d))), (this._l_Fire.y = 220 + 10 * Math.sin(this._args[2])), (this._l_Bomb.angle = 2 * Math.sin((this._args[3] += d))), (this._l_Bomb.y = 0 + 10 * Math.sin(this._args[3])), (this._l_Sniper.angle = 2 * Math.sin((this._args[4] += d))), (this._l_Sniper.y = 250 + 10 * Math.sin(this._args[4])), (this._sunRay.rotation += 0.01), this._timeText)) {
                            var e = a.UserGameData.getProperty(a.USER_PROPERTY.OFFER_NOVICE_TIME) - a.MI.get().time,
                                f = a.UserGameData.getProperty(a.USER_PROPERTY.OFFER_NOVICE_SHOW_MODE);
                            ((e < 0 || 2 == f) && (e = 0), (this._timeText.text = a.Utils.formatTime(e)), 0 == e && (this.hide(), a.UserGameData.saveOverdueNoviceSet()));
                        }
                    }
                }),
                d
            );
        })(a.GamePopup);
    a.SpecialOfferNovicePopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                ((e._body = new b()), (e._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (e._bodyBg.width = 830), (e._bodyBg.height = 1027), (e._bodyBg.x -= 0.5 * e._bodyBg.width), (e._bodyBg.y -= 0.5 * e._bodyBg.height), e._body.addChild(e._bodyBg));
                var f = -40;
                ((e._modifBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'bgModifSlice9'), 40, 40, 40, 40)), (e._modifBg.width = 676), (e._modifBg.height = 330), (e._modifBg.x = 0.5 * -e._modifBg.width), (e._modifBg.y = 0.5 * -e._modifBg.height + 120 + f), e._body.addChild(e._modifBg), (e._topSprite = new c(0, 0.5 * -e._body.height, 'ui0', 'popups/popupHead')));
                var g = a.Locales.get('ui0', 'popups/win/winCapLevelText');
                ((e._topLvlCap = new c(0, 0, g[0], g[1])), e._topSprite.addChild(e._topLvlCap), (e._stars = []));
                for (var h = 0; h < 3; h++) {
                    var i = new a.Star(200 * (h - 1), 0, !0);
                    (1 != h && (i.scale.set(0.71), (i.rotation = (8 / 180) * Math.PI * (h - 1)), (i.y = 28)), (i.y -= 300), e._stars.push(i));
                }
                ((e._boostCap = new PIXI.Text(a.StringManager.get('CHOOSE_BOOSTER') + ':', { fontFamily: 'Pony', fontSize: 50, fill: 6260683, align: 'center' })),
                    e._boostCap.anchor.set(0.5),
                    (e._boostCap.y = f),
                    (e._boostCap.x = -10),
                    (e._closeBtnBg = new KY.Sprite(0.5 * e._body.width - 34, 0.5 * -e._body.height + 30, 'ui0', 'popups/closeBtnBg0001')),
                    (e._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])),
                    (e._closeBtn.x = e._closeBtnBg.x + 2),
                    (e._closeBtn.y = e._closeBtnBg.y - 2),
                    e._closeBtn.addOnClick(e.close, e),
                    (e._nextBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])),
                    (e._nextBtn.y = 380 + 0.5 * f),
                    e._nextBtn.addOnDown(e.next, e),
                    (e._nextBtnCaption = new PIXI.Text(a.StringManager.get('START_PLAY'), { fontFamily: 'Pony', fontSize: 60, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 6 })),
                    e._nextBtnCaption.anchor.set(0.5),
                    e._nextBtn.addChild(e._nextBtnCaption),
                    (e._nextBtnCaption.y = 0),
                    (e._lvl = new PIXI.Text('1', { fontFamily: 'Pony', fontSize: 70, fill: 14019327, align: 'center' })),
                    e._lvl.anchor.set(0.5),
                    (e._infinityText = new PIXI.Text(a.Utils.INIFINITY_CHAR, { fontFamily: Stage.FONT_BOLD, fontSize: 200, fill: 6260683, align: 'center' })),
                    (e._infinityText.y = -280),
                    e._infinityText.anchor.set(0.5),
                    (e._guidelineBtn = new a.BoosterPopupButton(2)),
                    (e._threeNextBubbleBtn = new a.BoosterPopupButton(1)),
                    (e._plusFiveBubbleBtn = new a.BoosterPopupButton(3)),
                    (e._guidelineBtn.x = -220),
                    (e._plusFiveBubbleBtn.x = -e._guidelineBtn.x),
                    (e._guidelineBtn.y = 154 + f),
                    (e._threeNextBubbleBtn.y = e._guidelineBtn.y),
                    (e._plusFiveBubbleBtn.y = e._guidelineBtn.y),
                    (e._infoBtn = new a.PXButton('ui', ['popups/gameover/boostInfoBtn'])),
                    (e._infoBtn.x = e._boostCap.x + 0.5 * e._boostCap.width + 40 + 10),
                    (e._infoBtn.y = e._boostCap.y),
                    e._infoBtn.addOnClick(e.showBoostInfo, e));
                var j = a.Locales.get('ui', 'hardMark');
                ((e._hardMark = new c(j[0], j[1])), (e._hardMark.y = 0.5 * -e._body.height - 200), (e._hardMark.alpha = 0), (e._ny22_splashContainer = new b()), e.disable(), e._body.addChild(e._ny22_splashContainer), e._body.addChild(e._topSprite));
                for (var h = 0; h < 3; h++) e._body.addChild(e._stars[h]);
                return (e._body.addChild(e._nextBtn), e._body.addChild(e._lvl), e._body.addChild(e._closeBtnBg), e._body.addChild(e._closeBtn), e._body.addChild(e._hardMark), e.addChild(e._body), e._body.addChild(e._boostCap), e._body.addChild(e._guidelineBtn), e._body.addChild(e._threeNextBubbleBtn), e._body.addChild(e._plusFiveBubbleBtn), e._body.addChild(e._infoBtn), e._body.addChild(e._infinityText), e);
            }
            return (
                __extends(e, d),
                (e.prototype.updateHardVisual = function (b) {
                    if (b) {
                        ((this._bodyBg.texture = Stage.getImage('ui', 'popups/bgPoupSlice9Red')), (this._modifBg.texture = Stage.getImage('ui', 'bgModifSlice9Red')), (this._closeBtnBg.texture = Stage.getImage('ui', 'popups/closeBtnBg0001Red')), (this._topSprite.texture = Stage.getImage('ui', 'popups/popupHeadRed')), this._infoBtn.replaceFrames(['popups/gameover/boostInfoBtnRed']));
                        var c = a.Locales.get('ui', 'popups/win/winCapLevelTextRed');
                        ((this._topLvlCap.texture = Stage.getImage(c[0], c[1])), (this._lvl.style.fill = 16047842), (this._boostCap.style.fill = 14246513));
                    } else {
                        var d = a.Locales.get('ui0', 'popups/win/winCapLevelText');
                        ((this._bodyBg.texture = Stage.getImage('ui0', 'popups/bgPoupSlice9')), (this._modifBg.texture = Stage.getImage('ui0', 'bgModifSlice9')), (this._closeBtnBg.texture = Stage.getImage('ui0', 'popups/closeBtnBg0001')), (this._topSprite.texture = Stage.getImage('ui0', 'popups/popupHead')), this._infoBtn.replaceFrames(['popups/gameover/boostInfoBtn']), (this._topLvlCap.texture = Stage.getImage(d[0], d[1])), (this._lvl.style.fill = 14019327), (this._boostCap.style.fill = 6260683));
                    }
                }),
                (e.prototype.createBoosterTutorial = function () {
                    var b = this._currentLevel == a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE && a.UserGameData.checkTutor(a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE, !1),
                        c = this._currentLevel == a.UserGameData.REQ_BOOST_LEVEL_THREENEXT && a.UserGameData.checkTutor(a.UserGameData.REQ_BOOST_LEVEL_THREENEXT, !1),
                        d = this._currentLevel == a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE && a.UserGameData.checkTutor(a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE, !1);
                    if (0 != (b || c || d)) {
                        this._isTutor = !0;
                        var f = KY.Game.instance.screenWidth,
                            g = KY.Game.instance.screenHeight;
                        (this._tutorBg || ((this._tutorBg = new PIXI.Graphics()), (this._tutorText = new MultiStyleText('', a.TutorialUtils.MULTY_TEXT_STYLE)), this._tutorText.anchor.set(0.5), (this._tutorText.y = -300), (this._tutorHand = new KY.Sprite(0, 0, 'tutorial', 'handUp')), this._tutorHand.anchor.set(0.5, 0), (this._tutorBgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg'))), this._tutorBg.clear(), this._tutorBg.beginFill(2698289), this._tutorBg.drawRect(-f, -g, 2 * f, 2 * g), this._tutorBg.endFill(), (this._tutorBg.interactive = !0), (this._tutorBg.alpha = 0.001), (this._tutorText.alpha = 0), (this._tutorHand.alpha = 0), (this._tutorBgText.alpha = 0));
                        var h, i, j;
                        (b ? ((h = this._guidelineBtn.x), (i = this._guidelineBtn.y), (j = a.StringManager.get('TUT_GUIDELINE')), (e.TUTOR_MARK = 2), a.UserGameData.checkTutor(a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE, !0)) : c ? ((h = this._threeNextBubbleBtn.x), (i = this._threeNextBubbleBtn.y), (j = a.StringManager.get('TUT_THREE_NEXT')), (e.TUTOR_MARK = 1), a.UserGameData.checkTutor(a.UserGameData.REQ_BOOST_LEVEL_THREENEXT, !0)) : ((h = this._plusFiveBubbleBtn.x), (i = this._plusFiveBubbleBtn.y), (j = a.StringManager.get('TUT_PLUS_FIVE')), (e.TUTOR_MARK = 3), a.UserGameData.checkTutor(a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE, !0)),
                            this._tutorBg.beginHole().drawCircle(h, i, 115).endHole(),
                            (this._tutorHand.x = h),
                            (this._tutorHand.y = i + 180),
                            (this._tutorText.text = j),
                            TweenLite.to(this._tutorBg, 0.3, { alpha: 0.6, delay: 0.4 }),
                            TweenLite.to(this._tutorText, 0.3, { alpha: 1, delay: 0.4 }),
                            TweenLite.to(this._tutorHand, 0.3, { alpha: 1, delay: 0.4 }),
                            TweenLite.to(this._tutorBgText, 0.3, { alpha: 1, delay: 0.4 }),
                            (this._tutorBgText.x = this._tutorText.x),
                            (this._tutorBgText.y = this._tutorText.y + 18),
                            (this._tutorBgText.width = 1.2 * Stage.screenWidth),
                            (this._tutorBgText.height = 1.4 * this._tutorText.height),
                            this.once(e.CLOSE_TUTOR, this.closeTutor, this),
                            this.addChild(this._tutorBg),
                            this.addChild(this._tutorBgText),
                            this.addChild(this._tutorText),
                            this.addChild(this._tutorHand));
                    }
                }),
                (e.prototype.closeTutor = function () {
                    (this.removeChild(this._tutorBg), this.removeChild(this._tutorText), this.removeChild(this._tutorHand), this.removeChild(this._tutorBgText));
                }),
                (e.prototype.update = function (a, b) {
                    if (0 != d.prototype.update.call(this, a)) {
                        if (this._hardMark.visible) {
                            var c = 0.95 + 0.05 * Math.sin(b / 15);
                            this._hardMark.scale.set(c);
                        }
                        (this._guidelineBtn.update(a, b), this._threeNextBubbleBtn.update(a, b), this._plusFiveBubbleBtn.update(a, b), this._isTutor && this._tutorHand && (this._tutorHand.y = this._plusFiveBubbleBtn.y + 180 + 25 * (Math.sin(b / 15) + 1)));
                    }
                }),
                (e.prototype.show = function (b, d, e) {
                    switch (e) {
                        case a.GAME_MODE.NEW_YEAR22:
                            (this._ny22_hat ? ((this._ny22_hat.visible = !0), (this._ny22_splash.visible = !0)) : ((this._ny22_hat = new c(-260, -580, 'newYear', 'hat')), (this._ny22_splash = new c(0, -280, 'newYear', 'popup_christmas')), this._body.addChild(this._ny22_hat), this._ny22_splashContainer.addChild(this._ny22_splash)), this.showNewYers22(b, d));
                            break;
                        default:
                            (this._ny22_hat && ((this._ny22_hat.visible = !1), (this._ny22_splash.visible = !1)), this.showDefault(b, d));
                    }
                }),
                (e.prototype.showNewYers22 = function (b, c) {
                    var e = this;
                    (d.prototype.show.call(this), (this._lobby = b), (this._currentLevel = c), (this.visible = !0), (this._isTutor = !1), this.updateHardVisual(!1), (this._lvl.text = String(c + 1)), (this._lvl.style.fontSize = 70), (this._topLvlCap.alpha = 1), (this._lvl.y = 0.5 * -this._bodyBg.height + 10), (this._infinityText.visible = !1));
                    for (var f = 0; f < 3; f++) this._stars[f].visible = !1;
                    ((this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                e.enable();
                            },
                        }),
                        this._guidelineBtn.show(!1),
                        this._threeNextBubbleBtn.show(!1),
                        this._plusFiveBubbleBtn.show(!1),
                        this._guidelineBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_COUNT)),
                        this._threeNextBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_COUNT)),
                        this._plusFiveBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_COUNT)),
                        a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_SELECTED) && this._guidelineBtn.value ? this._guidelineBtn.check(!0) : this._guidelineBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_SELECTED) && this._threeNextBubbleBtn.value ? this._threeNextBubbleBtn.check(!0) : this._threeNextBubbleBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED) && this._plusFiveBubbleBtn.value ? this._plusFiveBubbleBtn.check(!0) : this._plusFiveBubbleBtn.check(!1),
                        this.createBoosterTutorial());
                }),
                (e.prototype.showDefault = function (b, c) {
                    var e = this;
                    (d.prototype.show.call(this), (this._hardMark.y = 0.5 * this._body.height + 100), (this._lobby = b), (this._currentLevel = c), (this.visible = !0), (this._isTutor = !1));
                    var f = c == -1,
                        g = f ? 0 : a.UserGameData.getLevelStars(c) + 1,
                        h = a.Lobby.HARD_LEVELS.indexOf(c + 1) != -1;
                    ((this._hardMark.visible = !1), h && ((this._hardMark.visible = !0), (this._hardMark.alpha = 0), TweenLite.to(this._hardMark, 0.2, { alpha: 1, delay: 0.4 })), this.updateHardVisual(h), (this._lvl.text = f ? a.StringManager.get('INFINITY_MODE_CAPTION') : '' + (c + 1)), f ? ((this._lvl.style.fontSize = 50), (this._topLvlCap.alpha = 0), (this._lvl.y = 0.5 * -this._bodyBg.height - 8), (this._infinityText.visible = !0)) : ((this._lvl.style.fontSize = 70), (this._topLvlCap.alpha = 1), (this._lvl.y = 0.5 * -this._bodyBg.height + 10), (this._infinityText.visible = !1)));
                    for (var i = 0; i < 3; i++) f ? (this._stars[i].visible = !1) : ((this._stars[i].visible = !0), this._stars[i].reset(), i + 1 < g && this._stars[i].show(0));
                    ((this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                e.enable();
                            },
                        }),
                        this._guidelineBtn.show(h),
                        this._threeNextBubbleBtn.show(h),
                        this._plusFiveBubbleBtn.show(h),
                        this._guidelineBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_COUNT)),
                        this._threeNextBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_COUNT)),
                        this._plusFiveBubbleBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_COUNT)),
                        a.UserGameData.getProperty(a.USER_PROPERTY.GUIDELINE_SELECTED) && this._guidelineBtn.value ? this._guidelineBtn.check(!0) : this._guidelineBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.THREENEXT_SELECTED) && this._threeNextBubbleBtn.value ? this._threeNextBubbleBtn.check(!0) : this._threeNextBubbleBtn.check(!1),
                        a.UserGameData.getProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED) && this._plusFiveBubbleBtn.value ? this._plusFiveBubbleBtn.check(!0) : this._plusFiveBubbleBtn.check(!1),
                        this.createBoosterTutorial());
                }),
                (e.prototype.setInteractive = function (a) {
                    ((this._closeBtn.enabled = a), (this._nextBtn.enabled = a), this._guidelineBtn.setEnabled(a), this._threeNextBubbleBtn.setEnabled(a), this._plusFiveBubbleBtn.setEnabled(a), (this._infoBtn.enabled = a));
                }),
                (e.prototype.showBoostInfo = function () {
                    a.MI.get().popupManager.show(a.AllPopups.BOOSTER_INFO);
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        (e.TUTOR_MARK = null),
                        this._hardMark.visible && TweenLite.to(this._hardMark, 0.2, { alpha: 0 }),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.close = function () {
                    this.hide();
                }),
                (e.prototype.staticNext = function () {
                    (this._guidelineBtn.isCheck ? (a.UserGameData.setProperty(a.USER_PROPERTY.GUIDELINE_SELECTED, 1), a.UserGameData.subProperty(a.USER_PROPERTY.GUIDELINE_COUNT), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.GUIDELINE, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)) : a.UserGameData.setProperty(a.USER_PROPERTY.GUIDELINE_SELECTED, 0),
                        this._threeNextBubbleBtn.isCheck ? (a.UserGameData.setProperty(a.USER_PROPERTY.THREENEXT_SELECTED, 1), a.UserGameData.subProperty(a.USER_PROPERTY.THREENEXT_COUNT), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.THREENEXT, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)) : a.UserGameData.setProperty(a.USER_PROPERTY.THREENEXT_SELECTED, 0),
                        this._plusFiveBubbleBtn.isCheck ? (a.UserGameData.setProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED, 1), a.UserGameData.subProperty(a.USER_PROPERTY.PLUSFIVE_COUNT), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.PLUSFIVE, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)) : a.UserGameData.setProperty(a.USER_PROPERTY.PLUSFIVE_SELECTED, 0),
                        a.UserGameData.save('StartLevelPopup-next'),
                        a.Statistics.progress(a.STATS_PROGRESSION_STATUS.START, String(this._currentLevel)),
                        this._lobby.launchLevel(this._currentLevel, this._guidelineBtn.isCheck, this._threeNextBubbleBtn.isCheck, this._plusFiveBubbleBtn.isCheck));
                }),
                (e.prototype.next = function () {
                    var a = this;
                    this.hide().then(function () {
                        a.staticNext();
                    });
                }),
                (e.CLOSE_TUTOR = 'CLOSE_HINT'),
                e
            );
        })(a.GamePopup);
    a.StartLevelPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function c() {
                var c = b.call(this) || this;
                ((c.playDefaultOpenSFX = !1), (c._text = new MultiStyleText(a.StringManager.get('THREE_CHESTS'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -390), (c._chests = []));
                for (var d = 0; d < 3; d++) (c._chests.push(new e(d, c)), (c._chests[d].y = 60));
                ((c._chests[2].x = 280), (c._chests[0].x = -c._chests[2].x), (c._getReward = new a.PXButton('lobby', ['greenMidBtn'])), c._getReward.addOnUp(c.getReward, c), c._getReward.setAnimationScale(0.05, 1));
                var f = new PIXI.Text(a.StringManager.get('THREE_CHESTS_BUTTON_CAPTION_2'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: 40, align: 'center' });
                return (f.anchor.set(0.5), (f.y = -3), c._getReward.addChild(f), c.addChild(c._getReward), c.addChild(c._text), c.addChild(c._chests[0]), c.addChild(c._chests[1]), c.addChild(c._chests[2]), c);
            }
            return (
                __extends(c, b),
                (c.prototype.show = function () {
                    (b.prototype.show.call(this), a.SoundsManager.showChestRewardPopup());
                    var c = 826 / Stage.screenWidth / 0.765,
                        d = 280;
                    ((this._chests[2].x = Math.max(d, d / c)), (this._chests[0].x = -this._chests[2].x), (this._text.text = a.StringManager.get('THREE_CHESTS')), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }));
                    for (var e = 0; e < 3; e++) this._chests[e].show();
                    ((this._openChestsCount = 0), (this._getReward.y = 490), (this._getReward.alpha = 1), (this._getReward.visible = !1), this.enable());
                }),
                (c.prototype.setInteractive = function (a) {
                    a || (this._getReward.enabled = !1);
                }),
                (c.prototype.getReward = function () {
                    var b = this;
                    (this.disable(), (this._getReward.alpha = 0.5));
                    for (var c = !1, d = 0; d < 3; d++) this._chests[d].checked && (0 != this._chests[d].id && (c = !0), this._chests[d].getReawar(), a.Shop.addItemToUser(this._chests[d].id, this._chests[d].count, a.STATS_GAME_RESOURCE_PLACEMENT.THREE_CHEST));
                    (a.UserGameData.immediatelySave(), a.SoundsManager.getChestReward());
                    var e = 0.4;
                    (c && (a.BoostCounter.get().show(), (e = 0.6)),
                        TweenLite.delayedCall(e, function () {
                            b.hide();
                        }));
                }),
                (c.prototype.action = function (b) {
                    for (var c = 0; c < 3; c++) this._chests[c].enabled = !1;
                    var d, e;
                    (0 == this._openChestsCount && ((this._text.text = a.StringManager.get('THREE_CHESTS_OPEN_2')), Math.random() <= 0.8 ? ((d = 0), (e = Stage.rnd.rangeIntJS(Math.min(1, (0.9 * a.EconomyOptions.ADS_REWARD_COIN) >> 0), (2 * a.EconomyOptions.ADS_REWARD_COIN) >> 0))) : ((d = Stage.rnd.getRandomItem(this.getEnabledItemsIds(!0))), (e = 1))), this._openChestsCount++, (this._getReward.visible = !0), (this._getReward.enabled = !0), this._chests[b].showIcon(d, e));
                }),
                (c.prototype.hide = function () {
                    var a = this;
                    return (
                        b.prototype.hide.call(this),
                        new Promise(function (b) {
                            TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            });
                        })
                    );
                }),
                (c.prototype.update = function (a) {
                    if (0 != b.prototype.update.call(this, a)) for (var c = 0; c < 3; c++) this._chests[c].update(a);
                }),
                (c.prototype.getEnabledItemsIds = function (b) {
                    void 0 === b && (b = !1);
                    var c = [],
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1;
                    return (d >= a.UserGameData.REQ_BOOST_LEVEL_LIGHTNING && c.push(1), d >= a.UserGameData.REQ_BOOST_LEVEL_RAINBOW && c.push(2), d >= a.UserGameData.REQ_BOOST_LEVEL_FIREBALL && c.push(3), d >= a.UserGameData.REQ_BOOST_LEVEL_BOMB && c.push(4), b ? c : (d >= a.UserGameData.REQ_BOOST_LEVEL_THREENEXT && c.push(5), d >= a.UserGameData.REQ_BOOST_LEVEL_PLUSFIVE && c.push(6), d >= a.UserGameData.REQ_BOOST_LEVEL_GUIDELINE && c.push(7), c));
                }),
                c
            );
        })(a.GamePopup);
    a.ThreeChestPopup = d;
    var e = (function (d) {
        function e(a, e) {
            var f = d.call(this) || this;
            ((f._ind = a), (f._chestParent = e), (f._invisBg = new c(0, 0, 'ui0', 'swapBtn')), (f._main = new b()), (f._visual = new c(0, 0, 'lobby', 'chest_bottom')), (f._glitter = new c(0, 0, 'lobby', 'chest_shine')), (f._glitter.visible = !1), (f._top = new c(0, 0, 'lobby', 'chest_top')), (f._getIcon = new c('ui', 'shop/icons/lbLotIcon0001')), (f._getIcon.y = -140));
            var g = new PIXI.TextStyle({ fontFamily: 'Pony', fill: 16777215, fontSize: 55, align: 'center', lineJoin: 'round', stroke: 9000450, strokeThickness: 12, padding: 10 });
            return ((f._getText = new PIXI.Text('x10', g)), f._getText.anchor.set(0.5), (f._getText.y = -50), (f._sunray = new c(0, f._getIcon.y, 'lobby', 'dailyBonus/dbSunRay')), (f._iconContainer = new b()), (f._invisBg.width = f._visual.width), (f._invisBg.height = f._visual.height), f.addChild(f._invisBg), f._main.addChild(f._visual), f._main.addChild(f._top), f._main.addChild(f._glitter), f.addChild(f._main), f.addChild(f._iconContainer), f._iconContainer.addChild(f._sunray), f._iconContainer.addChild(f._getIcon), f._iconContainer.addChild(f._getText), f.on('pointerdown', f.action, f), (f._isOver = !1), IS_DESKTOP && (f.on('pointerover', f.over, f), f.on('pointerout', f.out, f), f.on('pointerupoutside', f.out, f)), f);
        }
        return (
            __extends(e, d),
            (e.prototype.over = function () {
                this._isOver = !0;
            }),
            (e.prototype.out = function () {
                this._isOver = !1;
            }),
            (e.prototype.show = function () {
                var a = this;
                ((this._iconContainer.visible = !1),
                    (this._iconContainer.alpha = 1),
                    (this._iconContainer.y = 0),
                    (this._visual.alpha = 1),
                    (this._glitter.visible = !1),
                    (this._top.frameName = 'chest_top'),
                    (this.alpha = 0),
                    this.scale.set(0.3),
                    (this._isOver = !1),
                    (this._checked = !1),
                    (this._arg = 0),
                    (this.enabled = !1),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        delay: 0.2 + 0.1 * this._ind,
                        onComplete: function () {
                            a.enabled = !0;
                        },
                    }),
                    TweenLite.to(this.scale, 0.5, { x: 1, y: 1, delay: 0.2 + 0.1 * this._ind, ease: Back.easeOut }));
            }),
            (e.prototype.update = function (a) {
                ((this._sunray.rotation += 0.01 * a), (this._glitter.alpha = 0.9 + 0.1 * Math.sin((this._arg += 0.04 * a))), IS_DESKTOP && (this._isOver ? (this._main.y += 0.2 * (-30 - this._main.y)) : (this._main.y += 0.4 * (0 - this._main.y))));
            }),
            (e.prototype.action = function () {
                (this._chestParent.action(this._ind), (this._glitter.visible = !0), (this._top.frameName = 'chest_top_open'), (this.enabled = !1), (this._isOver = !1), (this._visual.y = 0), (this._checked = !0), (this._iconContainer.y = 30), (this._iconContainer.alpha = 0), TweenLite.to(this._iconContainer, 0.2, { alpha: 1 }), TweenLite.to(this._iconContainer, 0.4, { y: 0, ease: Back.easeOut }), (this._iconContainer.visible = !0), a.SoundsManager.showChestReward());
            }),
            (e.prototype.showIcon = function (a, b) {
                ((this._id = a), (this._count = b), (this._getIcon.frameName = 'shop/icons/lbLotIcon' + c.zeroPad(a + 1, 4)), (this._getText.text = 'x' + b));
            }),
            (e.prototype.getReawar = function () {
                (TweenLite.to(this._iconContainer, 0.3, { alpha: 0 }), TweenLite.to(this._iconContainer, 0.3, { y: -30 }));
            }),
            Object.defineProperty(e.prototype, 'enabled', {
                set: function (a) {
                    this.interactive = a;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'checked', {
                get: function () {
                    return this._checked;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'id', {
                get: function () {
                    return this._id;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(e.prototype, 'count', {
                get: function () {
                    return this._count;
                },
                enumerable: !1,
                configurable: !0,
            }),
            e
        );
    })(PIXI.Container);
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), c._closeBtnContainer.activateRelativeMode(), (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50), c._closeBtn.addOnClick(c.hide, c), (c._closeBtn.enabled = !1), (c._text = new MultiStyleText(a.StringManager.get('TUT_BOMB'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), (c._showCloseTimer = new a.UpdateTimer(3)), c._showCloseTimer.addOnComplete(c.showCloseBtn, c), c.addChild(c._closeBtnContainer), c._closeBtnContainer.addChild(c._closeBtn), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = 0.5 * Stage.screenWidth - 140), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180));
            }),
            (c.prototype.setHole = function () {
                this.manager.setCircleHole(0.5 * Stage.screenWidth - 140, 0.5 * Stage.screenHeight - 80, 100);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0), this._showCloseTimer.start());
            }),
            (c.prototype.showCloseBtn = function () {
                (TweenLite.to(this._closeBtn, 0.2, { alpha: 1 }), (this._closeBtn.enabled = !0));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y - 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }),
                    (this._closeBtn.alpha = 0));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = !1;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), this._showCloseTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.BombTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return (
                (c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)),
                c._closeBtnContainer.activateRelativeMode(),
                (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])),
                c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50),
                c._closeBtn.addOnClick(c.hide, c),
                (c._closeBtn.enabled = !1),
                (c._text = new MultiStyleText(IS_DESKTOP ? a.StringManager.get('TUT_CHANGE_BUBBLE_DESKTOP') : a.StringManager.get('TUT_CHANGE_BUBBLE'), a.TutorialUtils.MULTY_TEXT_STYLE)),
                c._text.anchor.set(0.5),
                (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')),
                (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')),
                (c._hand.rotation = Math.PI),
                c._hand.anchor.set(0.5, 0),
                (c._showHoleTimer = new a.UpdateTimer(0.8)),
                c._showHoleTimer.addOnComplete(c.startHole, c),
                (c._showCloseTimer = new a.UpdateTimer(3)),
                c._showCloseTimer.addOnComplete(c.showCloseBtn, c),
                c.addChild(c._closeBtnContainer),
                c._closeBtnContainer.addChild(c._closeBtn),
                c.addChild(c._bgText),
                c.addChild(c._text),
                c.addChild(c._hand),
                c
            );
        }
        return (
            __extends(c, b),
            (c.prototype.tap = function (b, c, d) {
                d && (a.GameStage.instance.swap(), this.hide());
            }),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = a.Options.NEXT_BUBBLES_POSITON[1][0] - a.Options.CANNON_X), (this._hand.y = a.Options.NEXT_BUBBLES_POSITON[1][1] - a.Options.CANNON_Y + 0.5 * Stage.screenHeight - (a.GameStage.CANNON_BOTTOM_OFFSET + 180)));
            }),
            (c.prototype.setHole = function () {
                this.manager.setCircleHole(a.Options.NEXT_BUBBLES_POSITON[1][0] - a.Options.CANNON_X, a.Options.NEXT_BUBBLES_POSITON[1][1] - a.Options.CANNON_Y + 0.5 * Stage.screenHeight - a.GameStage.CANNON_BOTTOM_OFFSET, 100);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0), this._showCloseTimer.start());
            }),
            (c.prototype.showCloseBtn = function () {
                (TweenLite.to(this._closeBtn, 0.2, { alpha: 1 }), (this._closeBtn.enabled = !0));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }),
                    (this._closeBtn.alpha = 0));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = !1;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), this._showCloseTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = a.Options.NEXT_BUBBLES_POSITON[1][1] - a.Options.CANNON_Y + 0.5 * Stage.screenHeight - 500 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.ChangeBubbleTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), c._closeBtnContainer.activateRelativeMode(), (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50), c._closeBtn.addOnClick(c.hide, c), (c._closeBtn.enabled = !1), (c._text = new MultiStyleText(a.StringManager.get('TUT_FIREBALL'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), (c._showCloseTimer = new a.UpdateTimer(3)), c._showCloseTimer.addOnComplete(c.showCloseBtn, c), c.addChild(c._closeBtnContainer), c._closeBtnContainer.addChild(c._closeBtn), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = 0.5 * Stage.screenWidth - 140 - 200), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180));
            }),
            (c.prototype.setHole = function () {
                this.manager.setCircleHole(0.5 * Stage.screenWidth - 140 - 200, 0.5 * Stage.screenHeight - 80, 100);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0), this._showCloseTimer.start());
            }),
            (c.prototype.showCloseBtn = function () {
                (TweenLite.to(this._closeBtn, 0.2, { alpha: 1 }), (this._closeBtn.enabled = !0));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y - 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }),
                    (this._closeBtn.alpha = 0));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = !1;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), this._showCloseTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.FireballTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            ((c._bottomContainer = new KY.Sprite(0, Stage.centerY)), c._bottomContainer.activateRelativeMode(), (c._text = new MultiStyleText(a.StringManager.get('TUT_FREE_BOMB', a.UserGameData.FREE_BOMB_SHOOT_COUNT), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._text.y = -300));
            var d = a.Locales.get('ui', 'txtFreeBomb');
            ((c._freeBomb = new KY.Sprite(0, 100, d[0], d[1])), (c._freeBomb.alpha = 0), (c._okBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])), c._okBtn.addOnClick(c.hide, c), (c._okBtn.y = -300));
            var e = new PIXI.Text(a.StringManager.get('TUT_BUTTON_CAPTION'), a.TutorialUtils.BUTTON_CAPTION_STYLE);
            return (e.anchor.set(0.5), c._okBtn.addChild(e), c.addChild(c._bottomContainer), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._freeBomb), c._bottomContainer.addChild(c._okBtn), c);
        }
        return (
            __extends(c, b),
            (c.prototype.startHole = function () {
                (this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._freeBomb, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._okBtn, 0.2, { alpha: 1, delay: 0.4 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    this.startHole(),
                    (this._text.alpha = 0),
                    (this._okBtn.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y + 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }));
            }),
            (c.prototype.setInteractive = function (a) {
                this._okBtn.enabled = a;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (a, c) {
                0 != b.prototype.update.call(this, a) && (this._freeBomb.rotation = 0.2 * Math.sin(c / 15));
            }),
            c
        );
    })(a.GamePopup);
    a.FreeBombTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return (
                (c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)),
                c._closeBtnContainer.activateRelativeMode(),
                (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])),
                c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50),
                c._closeBtn.addOnClick(c.hide, c),
                (c._closeBtn.enabled = !1),
                (c._text = new MultiStyleText(a.StringManager.get('TUT_GARDEN_BEGIN'), a.TutorialUtils.MULTY_TEXT_STYLE)),
                c._text.anchor.set(0.5),
                (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')),
                (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')),
                (c._hand.rotation = Math.PI / 2),
                c._hand.anchor.set(0.5, 0),
                (c._handX = 0),
                (c._showHoleTimer = new a.UpdateTimer(0.8)),
                c._showHoleTimer.addOnComplete(c.startHole, c),
                (c._showCloseTimer = new a.UpdateTimer(3)),
                c._showCloseTimer.addOnComplete(c.showCloseBtn, c),
                c.addChild(c._closeBtnContainer),
                c._closeBtnContainer.addChild(c._closeBtn),
                c.addChild(c._bgText),
                c.addChild(c._text),
                c.addChild(c._hand),
                c
            );
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                this._holeShowed && this.setHole();
                var b = a.Lobby.instance.popitManager.getPopit('GardenPopit');
                ((this._hand.x = b.px - 0.5 * Stage.screenWidth - 130), (this._hand.y = b.py - 0.5 * Stage.screenHeight + 20), (this._handX = this._hand.x), (this._bgText.y = 0.5 * Stage.screenHeight - 400), (this._text.y = this._bgText.y));
            }),
            (c.prototype.setHole = function () {
                var b = a.Lobby.instance.popitManager.getPopit('GardenPopit');
                this.manager.setCircleHole(b.px - 0.5 * Stage.screenWidth, b.py - 0.5 * Stage.screenHeight + 20, 100);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0), this._showCloseTimer.start());
            }),
            (c.prototype.showCloseBtn = function () {
                (TweenLite.to(this._closeBtn, 0.2, { alpha: 1 }), (this._closeBtn.enabled = !0));
            }),
            (c.prototype.show = function () {
                var a = this;
                (b.prototype.show.call(this),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y + 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            a.enable();
                        },
                    }),
                    (this._closeBtn.alpha = 0));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = !1;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), this._showCloseTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.x = this._handX + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.GardenBeginTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            ((c._bottomContainer = new KY.Sprite(0, Stage.centerY)), c._bottomContainer.activateRelativeMode());
            var d = 80;
            ((c._text = new MultiStyleText(a.StringManager.get('TUT_GARDEN_FERTILIZER_2'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -300), (c._gold = new KY.Sprite(-270 + d, 0, 'ui0', 'popups/win/winStar0002')), c._gold.scale.set(0.6), (c._gold2 = new KY.Sprite(120 + d, c._gold.y, 'garden', 'ui/actionIcon0002')), (c._bgText = new KY.Sprite(0, 0, 'garden', 'ui/tutorTextBg')), (c._equal = new KY.Sprite(d, c._gold.y, 'lobby', 'lbEqual')), c._equal.scale.set(0.8), (c._okBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])), c._okBtn.addOnClick(c.hide, c), (c._okBtn.y = -300));
            var e = new PIXI.Text(a.StringManager.get('TUT_BUTTON_CAPTION'), a.TutorialUtils.BUTTON_CAPTION_STYLE);
            return (e.anchor.set(0.5), c._okBtn.addChild(e), (c._starCount = new PIXI.Text('x' + a.UserGameData.MAX_GARDEN_FERTILIZER_STARS, { fontFamily: 'Pony', fontSize: 80, fill: 16777215, align: 'center' })), c._starCount.anchor.set(0.5), (c._starCount.x = c._gold.x + 140), c.addChild(c._bottomContainer), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._gold), c.addChild(c._gold2), c.addChild(c._equal), c.addChild(c._starCount), c._bottomContainer.addChild(c._okBtn), c);
        }
        return (
            __extends(c, b),
            (c.prototype.startHole = function () {
                (this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._gold, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._gold2, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._equal, 0.2, { alpha: 0.7, delay: 0.2 }), TweenLite.to(this._starCount, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._okBtn, 0.2, { alpha: 1, delay: 0.4 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }));
            }),
            (c.prototype.show = function (a, c) {
                var d = this;
                (b.prototype.show.call(this),
                    (this._callback = a),
                    (this._cntx = c),
                    this.manager.setTransparent(),
                    this.startHole(),
                    (this._text.alpha = 0),
                    (this._okBtn.alpha = 0),
                    (this._gold.alpha = 0),
                    (this._gold2.alpha = 0),
                    (this._equal.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y + 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this._starCount.alpha = 0),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            d.enable();
                        },
                    }));
            }),
            (c.prototype.setInteractive = function (a) {
                this._okBtn.enabled = a;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a(), c._callback && (c._callback.call(c._cntx), (c._callback = null)));
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (a, c) {
                0 == b.prototype.update.call(this, a);
            }),
            c
        );
    })(a.GamePopup);
    a.GardenFertilizer2TutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this, 0.2) || this,
                d = (((a.UserGameData.GADEN_FERTILIZER_BOOST / a.UserGameData.HOUR) * 10) >> 0) / 10;
            return ((c._text = new MultiStyleText(a.StringManager.get('TUT_GARDEN_FERTILIZER_1', d + ' ' + a.Utils.declension(d >> 0, a.StringManager.array('HOUR'))), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -400), (c._hand = new KY.Sprite(0, 0, 'garden', 'ui/handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(1)), c._showHoleTimer.addOnComplete(c.startHole, c), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = 0), (this._hand.y = 0.5 * Stage.screenHeight - 600));
            }),
            (c.prototype.setHole = function () {
                var a = 0,
                    b = 0.5 * Stage.screenHeight - 224;
                this.manager.setCircleHole(a, b, 150);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3, this.opacity), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0));
            }),
            (c.prototype.show = function () {
                var a = this;
                (b.prototype.show.call(this),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            a.enable();
                        },
                    }));
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 400 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.GardenFertilizerTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this, 0.2) || this;
            return ((c._text = new MultiStyleText(a.StringManager.get('TUT_GARDEN_BUG'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -400), (c._hand = new KY.Sprite(0, 0, 'garden', 'ui/handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = 300), (this._hand.y = 0.5 * Stage.screenHeight - 400));
            }),
            (c.prototype.setHole = function () {
                var a = 300,
                    b = 0.5 * Stage.screenHeight - 224;
                this.manager.setCircleHole(a, b, 150);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3, this.opacity), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0));
            }),
            (c.prototype.show = function () {
                var a = this;
                (b.prototype.show.call(this),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            a.enable();
                        },
                    }));
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 400 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.GardenPesticidesTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this, 0.2) || this;
            return ((c._text = new MultiStyleText(a.StringManager.get('TUT_GARDEN_PLANT'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -400), (c._hand = new KY.Sprite(0, 0, 'garden', 'ui/handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = -150), (this._hand.y = 0.5 * Stage.screenHeight - 600));
            }),
            (c.prototype.setHole = function () {
                var a = 0.5 * Stage.screenHeight - 600,
                    b = 580,
                    c = 230;
                this.manager.setRectleHole(0.5 * -b, a - 0.5 * c, b, c, 60);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3, this.opacity), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0));
            }),
            (c.prototype.show = function () {
                var a = this;
                (b.prototype.show.call(this),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            a.enable();
                        },
                    }));
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 750 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.GardenPlantTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this, 0.2) || this;
            return ((c._text = new MultiStyleText(a.StringManager.get('TUT_GARDEN_WATER'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -400), (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = -300), (this._hand.y = 0.5 * Stage.screenHeight - 400));
            }),
            (c.prototype.setHole = function () {
                var a = -300,
                    b = 0.5 * Stage.screenHeight - 224;
                this.manager.setCircleHole(a, b, 150);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3, this.opacity), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0));
            }),
            (c.prototype.show = function () {
                var a = this;
                (b.prototype.show.call(this),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            a.enable();
                        },
                    }));
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 400 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.GardenWaterTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            ((c._bottomContainer = new KY.Sprite(0, Stage.centerY)), c._bottomContainer.activateRelativeMode(), (c._text = new MultiStyleText(a.StringManager.get('TUT_GOLD_BUTTON_1'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -280), (c._gold = new KY.Sprite(-150, -50, 'lobby', 'LevelButton0003')), (c._gold2 = new KY.Sprite(120, c._gold.y, 'lobby', 'lbGold')), (c._equal = new KY.Sprite(0, c._gold.y, 'lobby', 'lbEqual')));
            var d = a.UserGameData.NEED_GOLD_TO_SHOW_GARDEN;
            ((c._text2 = new MultiStyleText(a.StringManager.get('TUT_GOLD_BUTTON_2', d + ' ' + a.Utils.declension(d, a.StringManager.array('PETAL'))), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text2.anchor.set(0.5), (c._text2.y = c._gold.y + 220 + 50), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._okBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])), c._okBtn.addOnClick(c.hide, c), (c._okBtn.y = -300));
            var e = new PIXI.Text(a.StringManager.get('TUT_BUTTON_CAPTION'), a.TutorialUtils.BUTTON_CAPTION_STYLE);
            return (e.anchor.set(0.5), c._okBtn.addChild(e), c.addChild(c._bottomContainer), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._gold), c.addChild(c._gold2), c.addChild(c._equal), c.addChild(c._text2), c._bottomContainer.addChild(c._okBtn), c);
        }
        return (
            __extends(c, b),
            (c.prototype.startHole = function () {
                (this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._gold, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._gold2, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._equal, 0.2, { alpha: 0.7, delay: 0.2 }), TweenLite.to(this._okBtn, 0.2, { alpha: 1, delay: 0.4 }), TweenLite.to(this._text2, 0.2, { alpha: 1, delay: 0.3 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }));
            }),
            (c.prototype.show = function () {
                var a = this;
                (b.prototype.show.call(this),
                    this.manager.setTransparent(),
                    this.startHole(),
                    (this._text.alpha = 0),
                    (this._okBtn.alpha = 0),
                    (this._gold.alpha = 0),
                    (this._gold2.alpha = 0),
                    (this._equal.alpha = 0),
                    (this._text2.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._equal.x),
                    (this._bgText.y = this._equal.y + 20),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 800),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            a.enable();
                        },
                    }));
            }),
            (c.prototype.setInteractive = function (a) {
                this._okBtn.enabled = a;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (a, c) {
                0 != b.prototype.update.call(this, a) && ((this._gold.scale.x = 1 + 0.05 * Math.sin(c / 15)), (this._gold.scale.y = this._gold.scale.x), (this._gold2.scale.x = 1 + 0.05 * Math.sin(c / 15)), (this._gold2.scale.y = this._gold2.scale.x));
            }),
            c
        );
    })(a.GamePopup);
    a.GoldButtonTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), c._closeBtnContainer.activateRelativeMode(), (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50), c._closeBtn.addOnClick(c.hide, c), (c._closeBtn.enabled = !1), (c._text = new MultiStyleText(a.StringManager.get('TUT_LIGHTNING'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), (c._showCloseTimer = new a.UpdateTimer(3)), c._showCloseTimer.addOnComplete(c.showCloseBtn, c), c.addChild(c._closeBtnContainer), c._closeBtnContainer.addChild(c._closeBtn), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = 0.5 * Stage.screenWidth - 140 - 600), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180));
            }),
            (c.prototype.setHole = function () {
                this.manager.setCircleHole(0.5 * Stage.screenWidth - 140 - 600, 0.5 * Stage.screenHeight - 80, 100);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0), this._showCloseTimer.start());
            }),
            (c.prototype.showCloseBtn = function () {
                (TweenLite.to(this._closeBtn, 0.2, { alpha: 1 }), (this._closeBtn.enabled = !0));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y - 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }),
                    (this._closeBtn.alpha = 0));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = !1;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), this._showCloseTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.LightningTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            ((c._bottomContainer = new KY.Sprite(0, Stage.centerY)), c._bottomContainer.activateRelativeMode(), (c._text = new MultiStyleText(a.StringManager.get('TUT_PIG_KEY'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._text.y = -300), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._icon = new KY.Sprite(0, 140, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/goldKey')), (c._icon.alpha = 0), (c._okBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])), c._okBtn.addOnClick(c.hide, c), (c._okBtn.y = -300));
            var d = new PIXI.Text(a.StringManager.get('TUT_BUTTON_CAPTION'), a.TutorialUtils.BUTTON_CAPTION_STYLE);
            return (d.anchor.set(0.5), c._okBtn.addChild(d), (c._sunRay = new KY.Sprite(c._icon.x, c._icon.y, 'ui', 'popups/buyBoost/buyBoostSunray')), (c._sunRay.alpha = 0), c.addChild(c._bottomContainer), c.addChild(c._bgText), c.addChild(c._sunRay), c.addChild(c._icon), c.addChild(c._text), c._bottomContainer.addChild(c._okBtn), c);
        }
        return (
            __extends(c, b),
            (c.prototype.startHole = function () {
                (this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._icon, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._sunRay, 0.2, { alpha: 0.6, delay: 0.25 }), TweenLite.to(this._okBtn, 0.2, { alpha: 1, delay: 0.4 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    this.startHole(),
                    (this._text.alpha = 0),
                    (this._okBtn.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y + 170),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height + 340),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }));
            }),
            (c.prototype.setInteractive = function (a) {
                this._okBtn.enabled = a;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (a, c) {
                0 != b.prototype.update.call(this, a) && ((this._icon.rotation = 0.2 * Math.sin(c / 15)), (this._sunRay.rotation += 0.02 * a));
            }),
            c
        );
    })(a.GamePopup);
    a.PigKeyTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            var c = b.call(this) || this;
            return ((c._closeBtnContainer = new KY.Sprite(Stage.centerX, -Stage.centerY)), c._closeBtnContainer.activateRelativeMode(), (c._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])), c._closeBtn.position.set(0.5 * -c._closeBtn.width - 50, 0.5 * c._closeBtn.height + 50), c._closeBtn.addOnClick(c.hide, c), (c._closeBtn.enabled = !1), (c._text = new MultiStyleText(a.StringManager.get('TUT_RAINBOW'), a.TutorialUtils.MULTY_TEXT_STYLE)), c._text.anchor.set(0.5), (c._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (c._hand = new KY.Sprite(0, 0, 'tutorial', 'handUp')), (c._hand.rotation = Math.PI), c._hand.anchor.set(0.5, 0), (c._showHoleTimer = new a.UpdateTimer(0.8)), c._showHoleTimer.addOnComplete(c.startHole, c), (c._showCloseTimer = new a.UpdateTimer(3)), c._showCloseTimer.addOnComplete(c.showCloseBtn, c), c.addChild(c._closeBtnContainer), c._closeBtnContainer.addChild(c._closeBtn), c.addChild(c._bgText), c.addChild(c._text), c.addChild(c._hand), c);
        }
        return (
            __extends(c, b),
            (c.prototype.onResize = function () {
                (this._holeShowed && this.setHole(), (this._hand.x = 0.5 * Stage.screenWidth - 140 - 400), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180));
            }),
            (c.prototype.setHole = function () {
                this.manager.setCircleHole(0.5 * Stage.screenWidth - 140 - 400, 0.5 * Stage.screenHeight - 80, 100);
            }),
            (c.prototype.startHole = function () {
                (this.setHole(), this.manager.restoreOpacity(0.3), TweenLite.to(this._text, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._hand, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }), (this._holeShowed = !0), this._showCloseTimer.start());
            }),
            (c.prototype.showCloseBtn = function () {
                (TweenLite.to(this._closeBtn, 0.2, { alpha: 1 }), (this._closeBtn.enabled = !0));
            }),
            (c.prototype.show = function () {
                var c = this;
                (b.prototype.show.call(this),
                    (a.GameStage.TUTOR_MARK = this.id),
                    this.manager.setTransparent(),
                    (this._holeShowed = !1),
                    this._showHoleTimer.start(),
                    (this._text.alpha = 0),
                    (this._hand.alpha = 0),
                    (this._bgText.alpha = 0),
                    (this._bgText.x = this._text.x),
                    (this._bgText.y = this._text.y - 18),
                    (this._bgText.width = 1.2 * Stage.screenWidth),
                    (this._bgText.height = 1.4 * this._text.height),
                    (this.alpha = 0.001),
                    TweenLite.to(this, 0.2, {
                        alpha: 1,
                        onComplete: function () {
                            c.enable();
                        },
                    }),
                    (this._closeBtn.alpha = 0));
            }),
            (c.prototype.setInteractive = function (a) {
                this._closeBtn.enabled = !1;
            }),
            (c.prototype.hide = function () {
                var c = this;
                return (
                    b.prototype.hide.call(this),
                    a.Statistics.event_tutorial(this.id),
                    new Promise(function (a) {
                        TweenLite.to(c, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                (c.free(), a());
                            },
                        });
                    })
                );
            }),
            (c.prototype.update = function (c, d) {
                0 != b.prototype.update.call(this, c) && (this._showHoleTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), this._showCloseTimer.update(c * a.UpdateTimer.TIME_ONE_FPS), (this._hand.y = 0.5 * Stage.screenHeight - 80 - 180 + 25 * (Math.sin(d / 15) + 1)));
            }),
            c
        );
    })(a.GamePopup);
    a.RainbowTutorialPopup = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d() {
                var d = c.call(this) || this;
                ((d._bottomContainer = new KY.Sprite(0, Stage.centerY)), d._bottomContainer.activateRelativeMode(), (d._text1 = new MultiStyleText(a.StringManager.get('TUT_SPECIAL_1'), a.TutorialUtils.MULTY_TEXT_STYLE)), d._text1.anchor.set(0.5), (d._text1.y = -340), (d._text2 = new MultiStyleText(a.StringManager.get('TUT_SPECIAL_2'), a.TutorialUtils.MULTY_TEXT_STYLE)), d._text2.anchor.set(0.5), (d._text2.y = d._text1.y + 400), (d._bgText = new KY.Sprite(0, 0, 'tutorial', 'tutorTextBg')), (d._icon = new PIXI.Container()), (d._icon.alpha = 0), d._icon.addChild(new b(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleBg')), d._icon.addChild(new b('ui0', 'popups/coinIcon')), d._icon.addChild(new b(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/specialBubbleUp')), (d._icon.y = d._text1.y + 150), (d._okBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])), d._okBtn.addOnClick(d.hide, d), (d._okBtn.y = -300));
                var e = new PIXI.Text(a.StringManager.get('TUT_BUTTON_CAPTION'), a.TutorialUtils.BUTTON_CAPTION_STYLE);
                return (e.anchor.set(0.5), d._okBtn.addChild(e), d.addChild(d._bottomContainer), d.addChild(d._bgText), d.addChild(d._icon), d.addChild(d._text1), d.addChild(d._text2), d._bottomContainer.addChild(d._okBtn), d);
            }
            return (
                __extends(d, c),
                (d.prototype.startHole = function () {
                    (this.manager.restoreOpacity(0.3), TweenLite.to(this._text1, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._text2, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._icon, 0.2, { alpha: 1, delay: 0.2 }), TweenLite.to(this._okBtn, 0.2, { alpha: 1, delay: 0.4 }), TweenLite.to(this._bgText, 0.2, { alpha: 1, delay: 0.2 }));
                }),
                (d.prototype.show = function () {
                    var b = this;
                    (c.prototype.show.call(this),
                        (a.GameStage.TUTOR_MARK = this.id),
                        this.manager.setTransparent(),
                        this.startHole(),
                        (this._text1.alpha = 0),
                        (this._text2.alpha = 0),
                        (this._okBtn.alpha = 0),
                        (this._bgText.alpha = 0),
                        (this._bgText.x = this._text1.x),
                        (this._bgText.y = -90),
                        (this._bgText.width = 1.2 * Stage.screenWidth),
                        (this._bgText.height = 1.4 * (this._text1.height + this._text2.height) + 340),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, {
                            alpha: 1,
                            onComplete: function () {
                                b.enable();
                            },
                        }));
                }),
                (d.prototype.setInteractive = function (a) {
                    this._okBtn.enabled = a;
                }),
                (d.prototype.hide = function () {
                    var b = this;
                    return (
                        c.prototype.hide.call(this),
                        a.Statistics.event_tutorial(this.id),
                        new Promise(function (a) {
                            TweenLite.to(b, 0.1, {
                                alpha: 0,
                                onComplete: function () {
                                    (b.free(), a());
                                },
                            });
                        })
                    );
                }),
                (d.prototype.update = function (a, b) {
                    0 != c.prototype.update.call(this, a) && (this._icon.rotation = 0.2 * Math.sin(b / 15));
                }),
                d
            );
        })(a.GamePopup);
    a.SpecialTutorialPopup = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.init = function () {
                ((this._TEXT_STYLE = { fontFamily: 'Pony', fontSize: 60, fill: 15987711, align: 'center', lineJoin: 'round', stroke: 21124, strokeThickness: 20, leading: 8 }), (this._BUTTON_CAPTION_STYLE = { fontFamily: 'Pony', fontSize: 60, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#00822C', strokeThickness: 10, padding: 10 }), (this._MULTY_TEXT_STYLE = { default: { fontFamily: 'Pony', fontSize: 60, fill: 15987711, align: 'center', lineJoin: 'round', stroke: 21124, strokeThickness: 20, leading: 10, padding: 10 }, caption: { fontSize: 64, fill: 15646018, strokeThickness: 0 }, caption2: { fontSize: 55, fill: 15646018, strokeThickness: 0 }, select: { fill: 15646018 }, minSpec: { fontSize: 50, leading: 40 } }));
            }),
            Object.defineProperty(a, 'TEXT_STYLE', {
                get: function () {
                    return this._TEXT_STYLE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a, 'MULTY_TEXT_STYLE', {
                get: function () {
                    return this._MULTY_TEXT_STYLE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(a, 'BUTTON_CAPTION_STYLE', {
                get: function () {
                    return this._BUTTON_CAPTION_STYLE;
                },
                enumerable: !1,
                configurable: !0,
            }),
            a
        );
    })();
    a.TutorialUtils = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var c = d.call(this) || this;
                ((c._atlasName = 'update_061022'), (c._body = new b()), (c._getReward = new a.PXButton('lobby', ['greenMidBtn'])), c._getReward.addOnUp(c.getReward, c), c._getReward.setAnimationScale(0.05, 0.9));
                var e = new PIXI.Text('Забрать', { fontFamily: Stage.FONT_BOLD, fill: 16777215, fontSize: a.Utils.int(40), align: 'center' });
                return (e.anchor.set(0.5), (e.y = -3), c._getReward.addChild(e), (c._moneyExp = new a.MoneyExplosion()), c.loadAtlas(c._atlasName, 'additionalPopup/update_061022'), c.addChild(c._body), c.addChildMiniLoader(), c.addChild(c._moneyExp), c);
            }
            return (
                __extends(e, d),
                (e.prototype.getReward = function () {
                    var b = this;
                    ((this._getReward.enabled = !1),
                        a.SoundsManager.getAdsReward(),
                        (this._moneyExp.x = 0),
                        (this._moneyExp.y = this._getReward.y),
                        (a.Lobby.instance.coinCounter.pause = !0),
                        a.UserGameData.addProperty(a.USER_PROPERTY.MONEY, this._rewardCount),
                        a.UserGameData.immediatelySave(),
                        this._moneyExp.start(5, 0.5 * Stage.screenWidth - 394, 0.5 * -Stage.screenHeight + 110),
                        this._moneyExp.once(a.MoneyExplosion.EVENT_COMPLETE, function () {
                            ((a.Lobby.instance.coinCounter.pause = !1), b.hide());
                        }));
                }),
                (e.prototype.onload = function () {
                    ((this._bodyBg = new PIXI.NineSlicePlane(this.getTexture('upBody'), 130, 119, 130, 119)), (this._bodyBg.width = 840), (this._bodyBg.height = 1027), (this._bodyBg.x -= 0.5 * this._bodyBg.width), (this._bodyBg.y -= 0.5 * this._bodyBg.height), this._body.addChild(this._bodyBg));
                    var b = 8,
                        d = 0,
                        e = new PIXI.Sprite(this.getTexture('upStar'));
                    (e.anchor.set(0.5), e.scale.set(0.76), e.position.set(-291 + b, -412 + d), (e.angle = -25.5), this._body.addChild(e));
                    var f = new PIXI.Sprite(this.getTexture('upStar'));
                    (f.anchor.set(0.5), f.scale.set(0.52), f.position.set(-343 + b, -299 + d), (f.angle = 24.5), this._body.addChild(f));
                    var g = new PIXI.Sprite(this.getTexture('upStar'));
                    (g.anchor.set(0.5), g.scale.set(0.4), g.position.set(-330 + b, -190 + d), (g.angle = -20.5), this._body.addChild(g));
                    var h = new PIXI.Sprite(this.getTexture('upStar'));
                    (h.anchor.set(0.5), h.scale.set(0.4), h.position.set(349 + b, 423 + d), (h.angle = 26.2), this._body.addChild(h));
                    var i = new PIXI.Text('В игру добавились Ранги.\n\nЗарабатывайте звёзды и\nполучайте больше бонусов!', { fontFamily: Stage.FONT_BOLD, fill: 9333285, fontSize: a.Utils.int(45), align: 'center', leading: a.Utils.int(20) });
                    (i.anchor.set(0.5), (i.y = -167), this._body.addChild(i));
                    var j = new PIXI.Text('За все полученные ранее\nзвёзды вам полагается\nкомпенсация:', { fontFamily: Stage.FONT_BOLD, fill: 9333285, fontSize: a.Utils.int(45), align: 'center', leading: a.Utils.int(20) });
                    (j.anchor.set(0.5), (j.y = 120), this._body.addChild(j));
                    var k = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL);
                    this._rewardCount = 0;
                    for (var l = 0; l < k; l++) this._rewardCount += a.UserGameData.getLevelStars(l);
                    (this._rewardCount || (this._rewardCount = 50), this._rewardCount > 600 && (this._rewardCount = 600));
                    var m = new c(0, 333, 'lobby', 'lbCoin');
                    m.anchor.x = 0;
                    var n = new PIXI.Text('x' + this._rewardCount, { fontFamily: 'Pony', fill: 9333285, fontSize: a.Utils.int(70), align: 'left' });
                    (n.anchor.set(0, 0.5), (n.y = m.y + 2), (n.x = m.x + m.width + 20));
                    var o = 0.5 * (m.width + n.width + 20);
                    ((m.x -= o), (n.x -= o), this._body.addChild(m), this._body.addChild(n), (this._caption = new PIXI.Sprite(this.getTexture('upCaption'))), this._caption.anchor.set(0.5), (this._caption.y -= 0.5 * this._bodyBg.width + 10), this._body.addChild(this._caption), this._body.addChild(this._getReward));
                }),
                (e.prototype.show = function () {
                    (d.prototype.show.call(this), (this.alpha = 0.001), TweenLite.to(this, 0.2, { alpha: 1 }));
                }),
                (e.prototype.showAfterLoading = function () {
                    var a = this;
                    ((this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, { y: 0, alpha: 1, delay: 0.15, ease: Circ.easeOut }),
                        (this._getReward.y = 0.5 * Stage.screenHeight - 200),
                        (this._getReward.alpha = 0),
                        TweenLite.to(this._getReward, 0.2, {
                            alpha: 1,
                            delay: 0.5,
                            onComplete: function () {
                                a.enable();
                            },
                        }));
                }),
                (e.prototype.setInteractive = function (a) {
                    this._getReward.enabled = a;
                }),
                (e.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                (e.prototype.update = function (a) {
                    0 == d.prototype.update.call(this, a);
                }),
                e
            );
        })(a.GamePopup);
    a.UpdatePopup_061022 = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var f = d.call(this) || this;
                ((f._isShare = !0), (f._body = new b()), (f._bodyBg = new PIXI.NineSlicePlane(Stage.getImage('ui0', 'popups/bgPoupSlice9'), 130, 119, 130, 119)), (f._bodyBg.width = 830), (f._bodyBg.height = 1027), (f._bodyBg.x -= 0.5 * f._bodyBg.width), (f._bodyBg.y -= 0.5 * f._bodyBg.height), f._body.addChild(f._bodyBg));
                var g = new c(0, 0.5 * -f._body.height, 'ui0', 'popups/popupHead'),
                    h = a.Locales.get('ui0', 'popups/win/winCapLevelText');
                ((f._topLvlCap = new c(0, 0, h[0], h[1])), g.addChild(f._topLvlCap), (f._closeBtnBg = new KY.Sprite(0.5 * f._body.width - 34, 0.5 * -f._body.height + 30, 'ui0', 'popups/closeBtnBg0001')), (f._closeBtn = new a.PXButton('ui0', ['popups/closeBtn'])), (f._closeBtn.x = f._closeBtnBg.x + 2), (f._closeBtn.y = f._closeBtnBg.y - 2), f._closeBtn.addOnClick(f.next, f), (f._stars = []));
                for (var i = 0; i < 3; i++) {
                    var j = new e(200 * (i - 1), 0);
                    (1 != i && (j.scale.set(0.71), (j.rotation = (8 / 180) * Math.PI * (i - 1)), (j.y = 28)), (j.y -= 300), f._stars.push(j));
                }
                ((f._nextBtn = new a.PXButton('ui0', ['popups/win/greenBtn'])),
                    (f._nextBtn.y = 250 + (a.MI.get().social.haveShare ? 0 : 60)),
                    (f._nextBtnCaption = new PIXI.Text(a.StringManager.get('WIN_POPUP_CAPTION_1'), { fontFamily: 'Pony', fontSize: 45, fill: 16777215, align: 'center' })),
                    f._nextBtnCaption.anchor.set(0.5),
                    f._nextBtn.addChild(f._nextBtnCaption),
                    f._nextBtn.addOnClick(f.next, f),
                    (f._share = new a.PXButton('ui0', ['popups/win/checkBox0002'])),
                    (f._share.x = -220),
                    (f._share.y = f._nextBtn.y + 150),
                    f._share.addOnClick(f.checkShare, f),
                    (f._shareCaption = new PIXI.Text(a.StringManager.get('WIN_POPUP_CAPTION_2'), { fontFamily: 'Pony', fontSize: 35, fill: 2520253, align: 'left' })),
                    (f._shareCaption.x = f._share.x + 50),
                    (f._shareCaption.y = f._share.y),
                    f._shareCaption.anchor.set(0, 0.5),
                    (f._lvl = new PIXI.Text('1', { fontFamily: 'Pony', fontSize: 70, fill: 14019327, align: 'center' })),
                    f._lvl.anchor.set(0.5),
                    (f._lvl.y = 0.5 * -f._body.height + 10),
                    (f._scoreContainer = new b()),
                    (f._scoreBg = new c(0, 0, 'ui0', 'popups/win/winClaimBg')),
                    (f._scoreBg.alpha = 0.1),
                    (f._score = new PIXI.Text('1', { fontFamily: Stage.FONT_BOLD, fontSize: 100, fill: 16777215, align: 'center', lineJoin: 'round', stroke: 1264512, strokeThickness: 18, padding: 6 })),
                    (f._score.y = -5),
                    f._score.anchor.set(0.5),
                    (f._pigOverlay = new a.PigOverlay()),
                    (f._scoreContainer.visible = !1),
                    (f._pigOverlay.visible = !1));
                var k = a.Locales.get('ui0', 'popups/win/winNewRecord');
                ((f._newRecord = new c(0, -90, k[0], k[1])), (f._newRecord.alpha = 0), (f._ny22_splashContainer = new b()), f.disable(), f._body.addChild(f._ny22_splashContainer), f._body.addChild(g));
                for (var i = 0; i < 3; i++) f._body.addChild(f._stars[i]);
                return (f._body.addChild(f._nextBtn), a.MI.get().social.haveShare && (f._body.addChild(f._share), f._body.addChild(f._shareCaption)), f._body.addChild(f._lvl), f._body.addChild(f._scoreContainer), f._body.addChild(f._pigOverlay), f._scoreContainer.addChild(f._scoreBg), f._scoreContainer.addChild(f._score), f._scoreContainer.addChild(f._newRecord), f._body.addChild(f._closeBtnBg), f._body.addChild(f._closeBtn), f.addChild(f._body), f);
            }
            return (
                __extends(f, d),
                (f.prototype.next = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b = this;
                        return __generator(this, function (c) {
                            return (
                                this.disable(),
                                this._isShare && this._share.visible
                                    ? (this.setInteractive(!1),
                                      a.MI.get()
                                          .social.share()
                                          .then(function () {
                                              (a.Statistics.event_share(), b.gotoLobby());
                                          })
                                          .catch(function () {
                                              b.gotoLobby();
                                          }))
                                    : this.gotoLobby(),
                                [2]
                            );
                        });
                    });
                }),
                (f.prototype.gotoLobby = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b,
                            c,
                            d = this;
                        return __generator(this, function (e) {
                            switch (e.label) {
                                case 0:
                                    if (((b = !1), !this._needShowAds)) return [3, 5];
                                    (a.LoaderScreen.show(!0), (e.label = 1));
                                case 1:
                                    return (e.trys.push([1, 3, , 4]), [4, a.MI.get().showAds(a.ADS_TYPE.INTERSTITIAL, a.STATS_AD_PLACEMENT.LEVEL_END)]);
                                case 2:
                                    return (e.sent(), (b = !0), [3, 4]);
                                case 3:
                                    return ((c = e.sent()), [3, 4]);
                                case 4:
                                    (a.LoaderScreen.hide(), (e.label = 5));
                                case 5:
                                    return (
                                        a.UserGameData.adsCounterFinishedLevel(b),
                                        a.UserGameData.levelsPlayed++,
                                        this.hide().then(function () {
                                            switch (d._mode) {
                                                case a.GAME_MODE.NEW_YEAR22:
                                                    a.GameStage.instance.game.states.start('NewYear22', !1, !1);
                                                    break;
                                                default:
                                                    a.GameStage.instance.game.states.start('Lobby', !1, !1);
                                            }
                                        }),
                                        [2]
                                    );
                            }
                        });
                    });
                }),
                (f.prototype.checkShare = function () {
                    ((this._isShare = !this._isShare), this._isShare ? this._share.replaceFrames(['popups/win/checkBox0002']) : this._share.replaceFrames(['popups/win/checkBox0001']));
                }),
                (f.prototype.update = function (b) {
                    if (0 != d.prototype.update.call(this, b))
                        if (this._needShowPig) {
                            if (this._pigOverlay && (this._pigOverlay.update(b), (this._pigAddTime += 0.016 * b), this._pigAddTime >= this._beginCoinDelay && this._currentAddStar <= this._starsCount && !this._fullPig)) {
                                switch (((this._pigAddTime -= this._beginCoinDelay), this._currentAddStar)) {
                                    case 1:
                                        this._pigOverlay.one();
                                        break;
                                    case 2:
                                        this._pigOverlay.two();
                                        break;
                                    case 3:
                                        this._pigOverlay.three();
                                }
                                (this._currentAddStar++, (this._beginCoinDelay = 1));
                            }
                        } else {
                            this._scoreAnimDelay -= b;
                            var c = this._totalScore - this._nextScore;
                            (this._scoreAnimDelay <= 0 && 0 != c && ((this._nextScore += 0.2 * c), a.SoundsManager.levelWinScoring(), c < 1 && (this._nextScore = this._totalScore), (this._score.text = '' + a.Utils.int(this._nextScore))), (this._newRecord.rotation = 0.08 * Math.sin(this._scoreAnimDelay / 10)));
                        }
                }),
                (f.prototype.show = function (b, d, e, f, g) {
                    if (((this._mode = g), a.UserGameData.st_welcome))
                        switch (b) {
                            case 0:
                                a.MI.get().social.reachGoal('1_end');
                                break;
                            case 1:
                                a.MI.get().social.reachGoal('2_end');
                        }
                    switch (g) {
                        case a.GAME_MODE.NEW_YEAR22:
                            (this._ny22_hat ? ((this._ny22_hat.visible = !0), (this._ny22_splash.visible = !0)) : ((this._ny22_hat = new c(-260, -580, 'newYear', 'hat')), (this._ny22_splash = new c(0, -280, 'newYear', 'popup_christmas')), this._body.addChild(this._ny22_hat), this._ny22_splashContainer.addChild(this._ny22_splash)), this.showNewYers22(b, e));
                            break;
                        default:
                            (this._ny22_hat && ((this._ny22_hat.visible = !1), (this._ny22_splash.visible = !1)), this.showDefault(b, d, e, f));
                    }
                }),
                (f.prototype.showNewYers22 = function (b, c) {
                    var e = this;
                    (a.UserGameData.setProperty(a.USER_PROPERTY.NY_LEVEL, b + 1), a.UserGameData.getProperty(a.USER_PROPERTY.NY_MAX_LEVEL) < b + 1 && a.UserGameData.setProperty(a.USER_PROPERTY.NY_MAX_LEVEL, b + 1), d.prototype.show.call(this), (this._scoreContainer.visible = !1), (this._pigOverlay.visible = !1), (this._scoreContainer.visible = !0), a.SoundsManager.levelWinJinglePopUp());
                    for (var f = 0; f < 3; f++) this._stars[f].visible = !1;
                    ((this.visible = !0),
                        (this._totalScore = c),
                        (this._nextScore = 0),
                        (this._scoreAnimDelay = 40),
                        (this._score.text = '0'),
                        (this._lvl.text = String(b + 1)),
                        (this._lvl.style.fontSize = 70),
                        (this._topLvlCap.alpha = 1),
                        (this._lvl.y = 0.5 * -this._bodyBg.height + 10),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                e.enable();
                            },
                        }),
                        a.MI.get().social.haveShare && ((this._share.visible = !1), (this._shareCaption.visible = !1), (this._nextBtn.y = 310)),
                        a.UserGameData.save('WinPopup-show'));
                }),
                (f.prototype.showDefault = function (b, c, e, f) {
                    var g = this,
                        h = b != -1,
                        i = b >= a.Lobby.COUNT_LEVELS,
                        j = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) < b + 1;
                    if ((h && j && a.UserGameData.setProperty(a.USER_PROPERTY.CURRENT_LEVEL, b + 1), !h)) {
                        var k = a.UserGameData.getProperty(a.USER_PROPERTY.RND_COUNT),
                            l = a.UserGameData.getProperty(a.USER_PROPERTY.RND_INDEX) + 1;
                        (l >= k && ((l = 101), (k = a.Lobby.COUNT_LEVELS - 1), a.UserGameData.setProperty(a.USER_PROPERTY.RND_COUNT, k)), a.UserGameData.setProperty(a.USER_PROPERTY.RND_INDEX, l));
                    }
                    if (i && j) {
                        var l = a.UserGameData.getProperty(a.USER_PROPERTY.RND_INDEX) + 1;
                        (l >= a.Lobby.COUNT_LEVELS - 1 && (l = 100), a.UserGameData.setProperty(a.USER_PROPERTY.RND_INDEX, l));
                    }
                    switch (((this._needShowPig = h && a.UserGameData.haveNewStars(b, c)), (this._pigAddTime = 0), (this._starsCount = c), (this._currentAddStar = h ? a.UserGameData.getLevelStars(b) + 1 : 0), (this._fullPig = a.UserGameData.isFullPigBank()), this._currentAddStar)) {
                        case 1:
                            this._beginCoinDelay = 0.9;
                            break;
                        case 2:
                            this._beginCoinDelay = 1.2;
                            break;
                        case 3:
                            this._beginCoinDelay = 1.5;
                    }
                    if (h)
                        if (this._fullPig) this._pigOverlay.full();
                        else {
                            var m = c - (this._currentAddStar - 1);
                            m > 0 && a.UserGameData.addToPigBank(m);
                        }
                    (d.prototype.show.call(this),
                        (this._scoreContainer.visible = !1),
                        (this._pigOverlay.visible = !1),
                        this._needShowPig ? ((this._pigOverlay.visible = !0), this._pigOverlay.show()) : ((this._scoreContainer.visible = !0), (this._newRecord.alpha = 0), (this._newRecord.rotation = 0), h && a.UserGameData.newScoreRecord(b, e) && TweenLite.to(this._newRecord, 0.2, { alpha: 1, delay: 0.3 })),
                        a.SoundsManager.levelWinJinglePopUp(),
                        h && a.UserGameData.levelComplete(b, e, c, !1, a.GameStage.instance.lbShootCountDelta, f),
                        a.Statistics.progress(a.STATS_PROGRESSION_STATUS.COMPLETE, String(b), e, c, a.UserGameData.getLevelGold(b), a.GameStage.replayCount),
                        (this._needShowAds = a.UserGameData.needShowLevelAds()),
                        (this.visible = !0),
                        (this._totalScore = e),
                        (this._nextScore = 0),
                        (this._scoreAnimDelay = 40),
                        (this._score.text = '0'),
                        (this._lvl.text = h ? '' + (b + 1) : a.StringManager.get('INFINITY_MODE_CAPTION')),
                        h ? ((this._lvl.style.fontSize = 70), (this._topLvlCap.alpha = 1), (this._lvl.y = 0.5 * -this._bodyBg.height + 10)) : ((this._lvl.style.fontSize = 50), (this._topLvlCap.alpha = 0), (this._lvl.y = 0.5 * -this._bodyBg.height - 8)));
                    for (var n = null, o = 0; o < 3; o++)
                        if ((this._stars[o].reset(), (this._stars[o].visible = !0), o + 1 < this._currentAddStar ? this._stars[o].mark(!0) : this._stars[o].mark(!1), o <= c - 1)) {
                            var p = 0.4 + 0.3 * o;
                            (this._stars[o].show(p), this._needShowPig && ((n = p), a.SoundsManager.showStarInWinPopup(o, p)));
                        }
                    (this._needShowPig && null != n && a.SoundsManager.piggy(n + 0.2),
                        (this.alpha = 0.001),
                        TweenLite.to(this, 0.2, { alpha: 1 }),
                        (this._body.y = this._body.height + 20),
                        (this._body.alpha = 0),
                        TweenLite.to(this._body, 0.2, {
                            y: 0,
                            alpha: 1,
                            delay: 0.15,
                            ease: Circ.easeOut,
                            onComplete: function () {
                                g.enable();
                            },
                        }),
                        a.MI.get().social.haveShare && (b < a.UserGameData.SHARE_BEGIN_LEVEL ? ((this._share.visible = !1), (this._shareCaption.visible = !1), (this._nextBtn.y = 310)) : ((this._share.visible = !0), (this._shareCaption.visible = !0), (this._nextBtn.y = 250))),
                        a.UserGameData.save('WinPopup-show'));
                }),
                (f.prototype.setInteractive = function (b) {
                    ((this._closeBtn.enabled = b), (this._nextBtn.enabled = b), (this._share.enabled = !!a.MI.get().social.haveShare && b));
                }),
                (f.prototype.hide = function () {
                    var a = this;
                    return (
                        d.prototype.hide.call(this),
                        this._needShowPig && this._pigOverlay && this._pigOverlay.stopAnim(),
                        new Promise(function (b) {
                            (TweenLite.to(a, 0.1, {
                                alpha: 0,
                                delay: 0.2,
                                onComplete: function () {
                                    (a.free(), b());
                                },
                            }),
                                TweenLite.to(a._body, 0.2, { y: a._body.height + 20, ease: Circ.easeIn }));
                        })
                    );
                }),
                f
            );
        })(a.GamePopup);
    a.WinPopup = d;
    var e = (function (a) {
        function b(b, d, e) {
            void 0 === e && (e = !1);
            var f = a.call(this) || this;
            return ((f.x = b), (f.y = d), (f._s1 = new c(0, 0, 'ui0', 'popups/win/winStar0001')), (f._s2 = new c(0, 0, 'ui0', 'popups/win/winStar0002')), (f._s3 = new c(0, 0, 'ui0', 'popups/win/starBorder')), (f._s2.alpha = 0), (f._s3.alpha = 0), e || (f._mark = new c(0, 0, 'ui0', 'popups/win/winGetCoinMark0002')), f._mark && f.addChild(f._mark), f.addChild(f._s1), f.addChild(f._s2), f.addChild(f._s3), f);
        }
        return (
            __extends(b, a),
            (b.prototype.reset = function () {
                ((this._s2.alpha = 0), (this._s3.alpha = 0), this.mark(!1));
            }),
            (b.prototype.show = function (a, b) {
                ((this._s2.alpha = 0), TweenLite.to(this._s2, 0.2, { alpha: 1, delay: a }), this._s2.position.set(0, -50), TweenLite.to(this._s2, 0.2, { x: 0, y: 0, delay: a }), this._s2.scale.set(1.5, 1.5), TweenLite.to(this._s2.scale, 1, { x: 1, y: 1, delay: 0.1 + a, ease: Elastic.easeOut }), (this._s3.alpha = 0), (a += 0.2), TweenLite.to(this._s3, 0.1, { alpha: 0.8, delay: a, overwrite: 'auto' }), TweenLite.to(this._s3.scale, 0.6, { x: 1.5, y: 1.5, delay: a + 0.1 }), TweenLite.to(this._s3, 0.4, { alpha: 0, delay: a + 0.3, overwrite: 'auto' }), this._mark && (this._mark.scale.set(1 / this.scale.x), (this._mark.y = 1 == this.scale.x ? -120 : -140), (this._mark.alpha = 0.6)));
            }),
            (b.prototype.mark = function (a) {
                this._mark && (a ? ((this._mark.frameName = 'popups/win/winGetCoinMark0001'), (this._mark.visible = !0)) : (this._mark.visible = !1));
            }),
            b
        );
    })(b);
    a.Star = e;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._sunRay = new c(0, 0, 'ui', 'popups/buyBoost/buyBoostSunray')), d._sunRay.scale.set(0.5), (d._shadow = new c(6, 4, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/crownShadow')), (d._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/crown')), d.addChild(d._sunRay), d.addChild(d._shadow), d.addChild(d._visual), d);
            }
            return (
                __extends(d, b),
                (d.prototype.update = function (a) {
                    this._sunRay.rotation += a / 40;
                }),
                d
            );
        })(b);
    a.CrownPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d() {
                var d = b.call(this) || this;
                return ((d._sunRay = new c(0, 0, 'ui', 'popups/buyBoost/buyBoostSunray')), d._sunRay.scale.set(0.5), (d._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/specialBubble/goldKey')), d.addChild(d._visual), d);
            }
            return (__extends(d, b), d);
        })(b);
    a.KeyPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var e = d.call(this) || this;
                return ((e._container = new b()), (e._sunRay = new c(0, 0, 'ui', 'popups/buyBoost/buyBoostSunray')), e._sunRay.scale.set(0.5), (e._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/veil/unlockerDiamond')), e._container.addChild(e._sunRay), e._container.addChild(e._visual), e.addChild(e._container), e);
            }
            return (
                __extends(e, d),
                (e.prototype.update = function (a) {
                    this._sunRay.rotation += a / 40;
                }),
                e
            );
        })(b);
    a.LockPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(d) {
                var e = b.call(this) || this,
                    f = d < 0,
                    g = 2 == Math.abs(d) ? 'p' : 'switchP';
                return ((e._visual = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/' + g + 'lusMinusPop000' + (f ? 2 : 1))), e.addChild(e._visual), e);
            }
            return (
                __extends(d, b),
                (d.prototype.reset = function (a) {
                    var b = a < 0,
                        c = 2 == Math.abs(a) ? 'p' : 'switchP';
                    this._visual.frameName = 'bubbles/' + c + 'lusMinusPop000' + (b ? 2 : 1);
                }),
                d
            );
        })(b);
    a.PlusMinusTwoPopup = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (b) {
            function d(a) {
                var d = b.call(this) || this;
                return ((d._isDesktop = a), (d._visual = new c(0, -300, 'tutorial', 'handUp')), (d._visual.alpha = 0), (d._canAnim = !1), d.addChild(d._visual), d);
            }
            return (
                __extends(d, b),
                (d.prototype.show = function () {
                    ((this._arg = 0), (this._visual.alpha = 0), TweenLite.to(this._visual, 0.2, { alpha: 1 }), (this._canAnim = !0), (this._down = !1));
                }),
                (d.prototype.hide = function () {
                    var b = this;
                    ((this._canAnim = !1),
                        a.GameStage.instance.grid.clearGuidline(),
                        a.Statistics.event_tutorial('FIRST'),
                        TweenLite.to(this._visual, 0.1, {
                            alpha: 0,
                            onComplete: function () {
                                b.destroy();
                            },
                        }));
                }),
                (d.prototype.update = function (b) {
                    if (this._canAnim) {
                        var c = this._visual.x;
                        ((this._visual.x = Math.sin((this._arg += 0.02 * b)) * (0.6 * Stage.screenWidth) * 0.5), (c -= this._visual.x));
                        var d = 0.12;
                        this._isDesktop ? (Math.abs(this._visual.x) >= Stage.screenWidth * d && !this._down && ((this._down = !0), (this._visual.frameName = 'handDown')), Math.abs(this._visual.x) < Stage.screenWidth * d && this._down && c < 0 && ((this._down = !1), (this._visual.frameName = 'handUp'))) : (Math.abs(this._visual.x) >= Stage.screenWidth * d && !this._down && ((this._down = !0), (this._visual.frameName = 'handDown'), a.GameStage.instance.grid.touch(this.offsetX, this.y + 0.65 * Stage.screenHeight, !0)), Math.abs(this._visual.x) < Stage.screenWidth * d && this._down && c < 0 && ((this._down = !1), (this._visual.frameName = 'handUp'), a.GameStage.instance.grid.clearGuidline()), this._down && a.GameStage.instance.grid.move(this.offsetX, this.y + 0.65 * Stage.screenHeight));
                    }
                }),
                Object.defineProperty(d.prototype, 'isDown', {
                    get: function () {
                        return this._down;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(d.prototype, 'offsetX', {
                    get: function () {
                        return this._visual.x;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                d
            );
        })(b);
    a.TutorialHand = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = KY.Sprite,
        c = (function (c) {
            function d() {
                var d = c.call(this, 0, 0) || this;
                ((d._bg = new KY.Sprite(0, 0, 'ui0', 'black')), d.addChild(d._bg), d._bg.scale.set(100, 100), (d._bg.interactive = !0), (d._icon = new KY.Sprite(0, 20, 'ui0', 'fakeLoaderIco')), d.addChild(d._icon));
                var e = a.Locales.get('ui0', 'caption');
                return (
                    (d._logo = new KY.Sprite(0, IS_YA ? -300 : -250, e[0], e[1])),
                    d.addChild(d._logo),
                    (d._text = new PIXI.Text(a.StringManager.get('TXT_LOADING') + '...', { fontFamily: 'Pony', fill: 16777215, align: 'center', fontSize: 60 })),
                    d._text.anchor.set(0.5),
                    (d._text.y = 300),
                    (d._closeBtn = new a.PXButton('ui0', ['closeWhiteBtn'])),
                    d._closeBtn.position.set(0.5 * -d._closeBtn.width - 50, 0.5 * d._closeBtn.height + 50),
                    d._closeBtn.addOnClick(d.close, d),
                    (d._closeBtn.enabled = !1),
                    (d._closeBtn.visible = !1),
                    (d._closeTimerText = new PIXI.Text('0', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 50 })),
                    d._closeTimerText.anchor.set(0.5),
                    (d._closeTimerText.x = 0),
                    (d._closeTimerText.y = 100),
                    (d._closeTimerText.alpha = 0.5),
                    (d._closeTimerText.visible = !1),
                    (d._closeContainer = new b(Stage.centerX, -Stage.centerY)),
                    d._closeContainer.activateRelativeMode(),
                    (d._showed = !1),
                    d.addChild(d._text),
                    (d._miniLoader = new a.MiniLoading()),
                    d.addChild(d._miniLoader),
                    d.addChild(d._closeTimerText),
                    d.addChild(d._closeContainer),
                    d._closeContainer.addChild(d._closeBtn),
                    d
                );
            }
            return (
                __extends(d, c),
                (d.prototype.close = function () {
                    ((this._closeBtn.enabled = !1), a.MI.get().social.resolveLastAds());
                }),
                (d.show = function (b, c) {
                    (void 0 === b && (b = !1), void 0 === c && (c = !1), null == this._instance && (this._instance = new d()), this._instance._showed || ((this._instance._closeTimer = 0), (this._instance._canClose = c), (this._instance._canClose = !0), (this._instance._miniMode = b), b ? ((this._instance._text.visible = !1), (this._instance._icon.visible = !1), (this._instance._logo.visible = !1), (this._instance._miniLoader.visible = !0)) : ((this._instance._text.visible = !0), (this._instance._icon.visible = !0), (this._instance._logo.visible = !0), (this._instance._miniLoader.visible = !1), (this._instance._text.text = a.StringManager.get('TXT_LOADING')), (this._instance._dot = 0), (this._instance._timer = 0)), (this._instance._showed = !0), a.MI.get().addToCenterContainer(this._instance), Stage.on(KY.GameEvent.ENTER_FRAME, this._instance.update, this._instance)));
                }),
                (d.hide = function () {
                    this._instance._showed && (a.MI.get().removeFromCenterContainer(this._instance), Stage.off(KY.GameEvent.ENTER_FRAME, this._instance.update, this._instance), (this._instance._showed = !1), (this._instance._canClose = !1), (this._instance._closeTimerText.visible = !1), (this._instance._closeBtn.enabled = !1), (this._instance._closeBtn.visible = !1));
                }),
                (d.prototype.update = function (b, c) {
                    if (this._miniMode) (this._miniLoader.update(b), this._canClose && ((this._closeTimer += 0.016 * b), this._closeTimer >= d.CLOSE_TIME ? ((this._closeTimerText.visible = !1), (this._closeBtn.visible = !0), (this._closeBtn.enabled = !0), console.log('Пук!'), (this._canClose = !1)) : this._closeTimer >= d.CLOSE_TEXT_TIME && ((this._closeTimerText.visible = !0), (this._closeTimerText.text = String(Math.ceil(d.CLOSE_TIME - this._closeTimer))))));
                    else if (((this._timer += 0.016 * b), (this._logo.rotation = 0.01 * Math.sin(c / 15)), this._timer >= 0.45))
                        switch (((this._timer = 0), this._dot++, this._dot >= 4 && (this._dot = 0), this._dot)) {
                            case 0:
                                this._text.text = a.StringManager.get('TXT_LOADING');
                                break;
                            case 1:
                                this._text.text = a.StringManager.get('TXT_LOADING') + '.';
                                break;
                            case 2:
                                this._text.text = a.StringManager.get('TXT_LOADING') + '..';
                                break;
                            case 3:
                                this._text.text = a.StringManager.get('TXT_LOADING') + '...';
                        }
                }),
                (d.CLOSE_TIME = 13),
                (d.CLOSE_TEXT_TIME = 3),
                d
            );
        })(b);
    a.LoaderScreen = c;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b() {}
        return (
            Object.defineProperty(b, 'needLobbyPreload', {
                get: function () {
                    return !(this.ATLAS_LOBBY && this.FONT_LEVELBUTTON && this.MUSIC_LOBBY && this.ATLAS_UI && this.SFX_LOBBY);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b, 'needGamePreload', {
                get: function () {
                    var c = this.ATLAS_0 || this.ATLAS;
                    return (a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) >= b.ATLAS_LEVEL && !this.ATLAS && (c = !1), !this.FONT_SCORE || !this.MUSIC_MAIN || !c);
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.ATLAS_LEVEL = 13),
            (b.ATLAS_0 = !1),
            (b.ATLAS = !1),
            (b.ATLAS_LOBBY = !1),
            (b.ATLAS_UI = !1),
            (b.FONT_SCORE = !1),
            (b.FONT_LEVELBUTTON = !1),
            (b.MUSIC_MAIN = !1),
            (b.MUSIC_LOBBY = !1),
            (b.SFX_LOBBY = !1),
            b
        );
    })();
    a.LoadManager = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.check = function () {
                console.log('Locales Check');
                var a = window.navigator.language || window.navigator.userLanguage || 'en';
                ((this._rus = a.includes('ru')), (this._rus = !1));
            }),
            (a.get = function (a, b) {
                return this._rus ? [a, b] : ['locale_eng', a + '/' + b];
            }),
            Object.defineProperty(a, 'isRus', {
                get: function () {
                    return this._rus;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (a._rus = !0),
            a
        );
    })();
    a.Locales = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b(a) {
            this.initGame(this, a);
        }
        return (
            (b.prototype.initGame = function (c, d) {
                return __awaiter(this, void 0, void 0, function () {
                    var c, e;
                    return __generator(this, function (f) {
                        switch (f.label) {
                            case 0:
                                return ((b.isWideMode = !!d && Boolean(d.wmode)), (c = d ? d.eid : -1), (b.noloading = d.noloading), (b.adBlock = !!d.data && null != d.data.adblock && d.data.adblock), (b.settings = d.settings ? d.settings : null), (b.serverName = d.server ? d.server : './'), (e = !!d.antialias && d.antialias), a.Define.initSocial(d.social), a.Locales.check(), [4, a.MI.get().init(d)]);
                            case 1:
                                return (
                                    f.sent(),
                                    b.isWideMode && ((document.body.style['background-image'] = 'url(./wideBg.png)'), (document.body.style['background-position'] = 'left bottom'), (document.body.style['background-repeat'] = 'repeat')),
                                    (this._game = new KY.Game({
                                        width: b.isWideMode ? 1600 : 1080,
                                        height: 1920,
                                        assetScales: [
                                            ['hd', 1],
                                            ['md', 0.75],
                                            ['sd', 0.5],
                                        ],
                                        scaleMode: KY.ScaleMode.FULLSCREEN,
                                        scaleModePC: KY.ScaleMode.LETTERBOX,
                                        lockScreen: KY.DeviceOrientation.LANDSCAPE,
                                        lockScreenPC: !1,
                                        resolution: window.devicePixelRatio,
                                        antialias: e,
                                        roundPixels: !1,
                                        pixelated: !1,
                                        forceFXAA: !1,
                                        legacy: !0,
                                        forceCanvas: !1,
                                        preserveDrawingBuffer: !1,
                                        autoDensity: !0,
                                        backgroundColor: 511988,
                                        transparent: !1,
                                        alwaysOnMusic: !1,
                                        browserCacheLabel: KY.CacheLabelType.NEWER,
                                        gamePath: (null === d || void 0 === d ? void 0 : d.gamePath) ? d.gamePath : '',
                                        buildVersion: b.BUILD_VERSION,
                                        statsPosition: KY.STATS_POSITION.LEFT_BOTTOM,
                                        showStats: !1,
                                        debug: d.debug,
                                        assetPath: d.cdn,
                                    })),
                                    b.isWideMode && (this._game.application.view.style['box-shadow'] = '0 0 50px rgba(0,0,0,0.5)'),
                                    (this._game.multitouch = !1),
                                    a.Define.initDevice(this._game.detect.mobile, this._game.detect.tablet, this._game.detect.iOS, this._game.detect.android, this._game.detect.macOS),
                                    this._game.states.add('Boot', a.Boot, !0),
                                    this._game.states.add('Preloader', a.Preloader),
                                    this._game.states.add('GameStage', a.GameStage),
                                    this._game.states.add('Lobby', a.Lobby),
                                    this._game.states.add('WeekCompetition', a.WeekCompetition),
                                    this._game.states.add('NewYear22', a.NewYear22),
                                    Stage.on(KY.GameEvent.ENTER_FRAME, this.globalUpdate, this),
                                    this.initStatistics(c),
                                    (this._game.errorImage = this.errorImage.bind(this)),
                                    [2]
                                );
                        }
                    });
                });
            }),
            (b.prototype.errorImage = function (b, c) {
                a.Statistics.error('errorImage: ' + b + '/' + c, 0, 0);
            }),
            (b.prototype.initStatistics = function (b) {
                (a.MI.get().isDebug && a.Statistics.disable(),
                    a.Statistics.init(b),
                    window.addEventListener('unload', function (b) {
                        (a.UserGameData.immediatelySave(), a.Statistics.endSession());
                    }),
                    document.addEventListener('visibilitychange', function () {
                        'visible' == document.visibilityState ? a.Statistics.changeSession(!0) : a.Statistics.changeSession(!1);
                    }));
            }),
            (b.prototype.globalUpdate = function (b) {
                a.UserGameData.update(b);
            }),
            Object.defineProperty(b, 'LEVEL', {
                get: function () {
                    return a.UserGameData.isLoaded ? a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) : -1;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b, 'CURSTATE', {
                get: function () {
                    try {
                        if (KY.Game.instance && KY.Game.instance.states && KY.Game.instance.states.current) return KY.Game.instance.states.current.name;
                    } catch (a) {}
                    return 'NONE';
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b, 'GAME', {
                get: function () {
                    return KY.Game.instance;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.emitEvent = function (b, c) {
                var d = a.MI.get().social;
                switch (b) {
                    case 'adsCallback':
                        d.setAdsStatus(c);
                        break;
                    case 'paymentReceivedCallback':
                        d.setOrderBoxStatus();
                        break;
                    case 'paymentWindowClosedCallback':
                        d.closeOrderBox();
                }
            }),
            (b.emitEventOK = function (b, c, d) {
                var e = a.MI.get().social;
                e.emit(b, c, d);
            }),
            (b.BUILD_VERSION = '1.0.4'),
            b
        );
    })();
    a.Main = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function a() {}
        return (
            (a.gameThemaPlay = function () {
                ((this._music = new KY.Sound('game', 'music')), (this._music.loop = !0), (this._music.volume = this.GAME_MUSIC_VOLUME), (this._music.VLM = this.GAME_MUSIC_VOLUME), this._music.play(), (this._musicFadeOut = !1));
            }),
            (a.menuThemaPlay = function () {
                ((this._music = new KY.Sound('lobby', 'lobby')), (this._music.loop = !0), (this._music.volume = this.MENU_MUSIC_VOLUME), (this._music.VLM = this.MENU_MUSIC_VOLUME), this._music.play(), (this._musicFadeOut = !1));
            }),
            (a.gardenThemaPlay = function () {
                ((this._music = new KY.Sound('garden', 'garden_music')), (this._music.loop = !0), (this._music.volume = this.MENU_MUSIC_VOLUME), (this._music.VLM = this.MENU_MUSIC_VOLUME), this._music.play(), (this._musicFadeOut = !1));
            }),
            (a.NY22ThemaPlay = function () {
                ((this._music = new KY.Sound('newYear22', 'newYear22_music')), (this._music.loop = !0), (this._music.volume = 0.38 * this.MENU_MUSIC_VOLUME), (this._music.VLM = 0.38 * this.MENU_MUSIC_VOLUME), this._music.play(), (this._musicFadeOut = !1));
            }),
            (a.gameMusicFade = function () {
                !this._musicFadeOut && this._music && (this._music.fade(this._music.VLM, this._music.VLM - 0.15, 500), (this._musicFadeOut = !0));
            }),
            (a.gameMusicFadeBack = function () {
                this._musicFadeOut && this._music && (this._music.fade(this._music.VLM - 0.15, this._music.VLM, 500), (this._musicFadeOut = !1));
            }),
            (a.gameMusicStop = function () {
                this._music && (this._music.stop(), (this._music = null));
            }),
            (a.pop = function () {
                KY.Game.instance.audioPlay('pop', 'sfx0', 0.3 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.openLock = function () {
                KY.Game.instance.audioPlay('thornPop', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popDoubleColor = function () {
                KY.Game.instance.audioPlay('doubleColorPop', 'sfx', 0.05 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popUnlocker = function () {
                KY.Game.instance.audioPlay('doubleColorPop', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popBurst = function () {
                KY.Game.instance.audioPlay('burstPop', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popDummy = function () {
                KY.Game.instance.audioPlay('dummyPop', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popSnowball = function () {
                KY.Game.instance.audioPlay('snowball', 'sfx', -0.2 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.hitSpider = function () {
                KY.Game.instance.audioPlay('spiderHit', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popThorn = function () {
                KY.Game.instance.audioPlay('thornPop', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popPentagon = function () {
                KY.Game.instance.audioPlay('pentagonPop', 'sfx', 0.28 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.popFire = function () {
                KY.Game.instance.audioPlay('bubbleBurnUp', 'sfx', 0.4 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.breakingLeaves = function () {
                KY.Game.instance.audioPlay('leaves', 'sfx', -0.1 + a.MASTER_ADD_VOLUME, !1, 200);
            }),
            (a.breakingIce = function () {
                KY.Game.instance.audioPlay('iceBreaking', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1, 30);
            }),
            (a.laserBall = function () {
                KY.Game.instance.audioPlay('laser', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.plusMinusBall = function () {
                KY.Game.instance.audioPlay('plusMinusBall', 'sfx', 0.5 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.collision = function (b) {
                KY.Game.instance.audioPlay('ballBounce', 'sfx0', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.lightningActivate = function () {
                KY.Game.instance.audioPlay('lightningActivate', 'sfx', 0.18 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.bombgActivate = function () {
                KY.Game.instance.audioPlay('bombgActivate', 'sfx', 0.25 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.rainbowActivate = function () {
                KY.Game.instance.audioPlay('rainbowActivate', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.buttonClick = function () {
                KY.Game.instance.audioPlay('mi_buttonDown', 'sfx0', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.coinPurchase = function () {
                KY.Game.instance.audioPlay('getCoin', 'sfx', 0.15 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.successfulPurchase = function () {
                KY.Game.instance.audioPlay('successfulPurchase', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.demoBusterShow = function () {
                KY.Game.instance.audioPlay('demoBusterShow', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.demoBusterApply = function () {
                KY.Game.instance.audioPlay('demoBusterApply', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getNewRank = function () {
                KY.Game.instance.audioPlay('rankUp', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showStarInWinPopup = function (b, c) {
                TweenLite.delayedCall(c, function () {
                    KY.Game.instance.audioPlay('showStarInWinPopup_' + (b + 1), 'sfx0', 0.3 + a.MASTER_ADD_VOLUME, !1);
                });
            }),
            (a.showCoinInWinPopup = function () {
                KY.Game.instance.audioPlay('showCoinInWinPopup', 'sfx0', 0.6 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.insertCoinInWinPopupPig = function () {
                KY.Game.instance.audioPlay('insertCoinInWinPopupPig', 'sfx0', 0.15 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.levelWinJinglePopUp = function () {}),
            (a.levelWinStartBallsFountain = function (b) {
                KY.Game.instance.audioPlay('levelWinStartBallsFountain', 'sfx0', 0.15 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.levelWinNoBallsFountain = function (b) {
                TweenLite.delayedCall(b, function () {
                    KY.Game.instance.audioPlay('levelWinNoBallsFountain', 'sfx0', 0.3 + a.MASTER_ADD_VOLUME, !1);
                });
            }),
            (a.levelWinScoring = function () {
                KY.Game.instance.audioPlay('levelWinScoring', 'sfx0', 0.3 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.getDailyReward = function () {
                KY.Game.instance.audioPlay('getDailyReward', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getAdsReward = function () {
                KY.Game.instance.audioPlay('getAdsReward', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showChestRewardPopup = function () {
                KY.Game.instance.audioPlay('specialBubble', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showChestReward = function () {
                KY.Game.instance.audioPlay('getDailyReward', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getChestReward = function () {
                KY.Game.instance.audioPlay('getChestReward', 'sfx', -0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showAdsRewardPopup = function () {
                KY.Game.instance.audioPlay('showAdsRewardPopup', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showPigPopup = function () {
                KY.Game.instance.audioPlay('showPigPopup', 'sfx', -0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.breakPiggy = function () {
                KY.Game.instance.audioPlay('breakPiggy', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getCoinsExp = function () {
                KY.Game.instance.audioPlay('getCoin', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.addOneCoin = function () {
                KY.Game.instance.audioPlay('addOneCoin', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1, 50);
            }),
            (a.noLivePopup = function () {
                KY.Game.instance.audioPlay('noLivePopup', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showAlmostFailPopup = function () {
                KY.Game.instance.audioPlay('showAlmostFailPopup', 'sfx0', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.showGameOverPopup = function () {
                return KY.Game.instance.audioPlay('showGameOverPopup', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.stopGameOverPopupJungle = function (a) {
                a && KY.Game.instance.getAudioAtlas('sfx').stop(a);
            }),
            (a.playLevelStartSwipeIn = function () {
                return KY.Game.instance.audioPlay('playLevelStartSwipeIn', 'sfx0', 0.05 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.playLevelStartSwipeOut = function () {
                return KY.Game.instance.audioPlay('playLevelStartSwipeOut', 'sfx0', 0.05 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getStarInLevel = function (b) {
                return KY.Game.instance.audioPlay('getStarInLevel_' + (b + 1), 'sfx0', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getCrownInLevel = function () {
                return KY.Game.instance.audioPlay('getCrownInLevel', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.crownFlyOnUI = function () {
                return KY.Game.instance.audioPlay('crownFlyOnUI', 'sfx', 0.01 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.openPopup = function () {
                KY.Game.instance.audioPlay('popupOpen', 'sfx0', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.closePopup = function () {
                KY.Game.instance.audioPlay('popupClose', 'sfx0', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.openSpecialBubblePopup = function () {
                KY.Game.instance.audioPlay('specialBubble', 'sfx', 0.3 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.swap = function () {
                KY.Game.instance.audioPlay('swap', 'sfx0', 0.2 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.shoot = function (b) {
                b ? KY.Game.instance.audioPlay('shootFireball', 'sfx', 0.25 + a.MASTER_ADD_VOLUME, !1) : KY.Game.instance.audioPlay('shootDefault', 'sfx0', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.alert5Bubbles = function () {
                KY.Game.instance.audioPlay('alert5Bubbles', 'sfx0', 0.08 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.piggy = function (b) {
                TweenLite.delayedCall(b, function () {
                    KY.Game.instance.audioPlay('piggy', 'sfx0', 0.1 + a.MASTER_ADD_VOLUME, !1);
                });
            }),
            (a.exitConfirmationPopup = function () {
                KY.Game.instance.audioPlay('exitConfirmationPopup', 'sfx', 0.15 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.alertTxt = function () {}),
            (a.getFreeBomb = function () {
                KY.Game.instance.audioPlay('getFreeBomb', 'sfx', 0.08 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.panelsIn = function () {
                KY.Game.instance.audioPlay('panelsIn', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1, 500);
            }),
            (a.panelsOut = function () {
                KY.Game.instance.audioPlay('panelsOut', 'sfx', 0.07 + a.MASTER_ADD_VOLUME, !1, 500);
            }),
            (a.levelBallClick = function () {
                KY.Game.instance.audioPlay('levelBallClick', 'sfx', -0.15 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.getKey = function () {
                KY.Game.instance.audioPlay('getKey', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.rainbowSelected = function (b) {
                b ? (this._rainbowSelectedID = KY.Game.instance.audioPlay('rainbowSelected', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !0)) : (null != this._rainbowSelectedID && KY.Game.instance.getAudioAtlas('sfx').stop(this._rainbowSelectedID), (this._rainbowSelectedID = null));
            }),
            (a.bombSelected = function (b) {
                b ? (this._bombSelectedID = KY.Game.instance.audioPlay('bombSelected', 'sfx', 0.22 + a.MASTER_ADD_VOLUME, !0)) : (null != this._bombSelectedID && KY.Game.instance.getAudioAtlas('sfx').stop(this._bombSelectedID), (this._bombSelectedID = null));
            }),
            (a.fireballSelected = function (b) {
                b ? (this._fireballSelectedID = KY.Game.instance.audioPlay('fireballSelected', 'sfx', 0.1 + a.MASTER_ADD_VOLUME, !0)) : (null != this._fireballSelectedID && KY.Game.instance.getAudioAtlas('sfx').stop(this._fireballSelectedID), (this._fireballSelectedID = null));
            }),
            (a.lightningSelected = function (b) {
                b ? (this._lightningSelectedID = KY.Game.instance.audioPlay('lightningSelected', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !0)) : (null != this._lightningSelectedID && KY.Game.instance.getAudioAtlas('sfx').stop(this._lightningSelectedID), (this._lightningSelectedID = null));
            }),
            (a.tickTack = function (b) {
                b ? (this._tickID = KY.Game.instance.audioPlay('tickTack', 'sfx', 0.2 + a.MASTER_ADD_VOLUME, !0)) : (null != this._tickID && KY.Game.instance.getAudioAtlas('sfx').stop(this._tickID), (this._tickID = null));
            }),
            (a.garden_showBug = function () {
                KY.Game.instance.audioPlay('bug', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_hideBug = function () {
                KY.Game.instance.audioPlay('spider', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_pesticides = function () {
                KY.Game.instance.audioPlay('spray', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_watering = function () {
                KY.Game.instance.audioPlay('watering', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_fertilizer = function () {
                KY.Game.instance.audioPlay('fertilizer', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_plant = function () {
                KY.Game.instance.audioPlay('plant', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_wakeup = function () {
                KY.Game.instance.audioPlay('wakeup', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_coinTap = function () {
                KY.Game.instance.audioPlay('touchCoin', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_coinDrop = function () {
                KY.Game.instance.audioPlay('getCoin', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_harvest = function () {
                KY.Game.instance.audioPlay('harvest', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            (a.garden_potFertilizerJump = function () {
                KY.Game.instance.audioPlay('speedUp', 'garden_sfx', 0.1 + a.MASTER_ADD_VOLUME, !1);
            }),
            Object.defineProperty(a, 'rnd', {
                get: function () {
                    return KY.Game.instance.rnd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (a.MASTER_ADD_VOLUME = 0.4),
            (a.GAME_MUSIC_VOLUME = 0.3 + a.MASTER_ADD_VOLUME),
            (a.MENU_MUSIC_VOLUME = 0.2 + a.MASTER_ADD_VOLUME),
            (a._rainbowSelectedID = null),
            (a._bombSelectedID = null),
            (a._fireballSelectedID = null),
            (a._lightningSelectedID = null),
            (a._tickID = null),
            a
        );
    })();
    a.SoundsManager = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            return (null !== b && b.apply(this, arguments)) || this;
        }
        return (
            __extends(c, b),
            (c.prototype.preload = function () {
                this.loadAtlases(['preloader']);
            }),
            (c.prototype.create = function () {
                var b = this;
                (a.MI.get().prepare({}),
                    a.MI.get().useServerTime(),
                    a.UserGameData.load()
                        .then(function () {
                            ((document.getElementById('begin-loader').style.display = 'none'), a.MI.get().isMapEditor && ((a.UserGameData.SHOW_TUTORIAL = !1), (a.UserGameData.TEST_SAVE_NAME = null), a.UserGameData.setProperty(a.USER_PROPERTY.CURRENT_LEVEL, a.LoadManager.ATLAS_LEVEL + 1)), b.game.states.start('Preloader'));
                        })
                        .catch(function () {
                            a.MI.get().noServerConnect(!0);
                        }));
            }),
            c
        );
    })(KY.State);
    a.Boot = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function g() {
                var a = (null !== d && d.apply(this, arguments)) || this;
                return ((a._postDownX = null), (a._postDownY = null), (a._postDowned = !1), (a.MOVE_MIN_TIME_DELTA = 10), (a._mouseDownTime = 0), (a._lastMoveTime = 0), (a._lastMoveX = null), (a._lastMoveY = null), (a._varMoveX = null), (a._varMoveY = null), (a._debugReplay = DebugReplay.REPLAY), (a._debugReplayTime = null), a);
            }
            return (
                __extends(g, d),
                Object.defineProperty(g, 'CANNON_BOTTOM_OFFSET', {
                    get: function () {
                        return IS_DESKTOP ? this.CANNON_BOTTOM_OFFSET_PC : this.CANNON_BOTTOM_OFFSET_MOBILE;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (g.prototype.preload = function () {
                    a.LoadManager.needGamePreload && (a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) < a.LoadManager.ATLAS_LEVEL ? a.LoadManager.ATLAS_0 || (this.loadAtlases(['atlas0']), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas0'), (a.LoadManager.ATLAS_0 = !0)) : a.LoadManager.ATLAS || (this.loadAtlases(['atlas']), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas'), (a.LoadManager.ATLAS = !0)), a.LoadManager.FONT_SCORE || (this.loadBmpFonts(['Montserrat-ExtraBold-50-PopScore', 'Montserrat-ExtraBold-70-PopScore', 'Pony-60-Combo']), (a.LoadManager.FONT_SCORE = !0)), a.LoadManager.MUSIC_MAIN || (this.loadAudio('main/music', 'music', !0), (a.LoadManager.MUSIC_MAIN = !0)));
                }),
                (g.prototype.init = function (b, c, d, f, h, i) {
                    (void 0 === i && (i = e.NORMAL), (this._currentLevel = b), (this._isLoaded = !1), (this._mode = i), a.MI.get().setSeed(this._currentLevel == -1 ? a.Utils.int(Date.now() * this.game.rnd.js) : this._currentLevel), (a.Options.GUIDELINE_NO_LIMIT = d), (a.Options.MAX_NEXT_BUBBLES = f ? 3 : 2), (a.Options.ADD_5_BUBBLES = h), a.Options.setup(this.game.screenWidth, this.game.screenHeight, g.CANNON_BOTTOM_OFFSET), (this._mapData = c));
                }),
                (g.prototype.create = function () {
                    ((this._isLoaded = !0), a.MI.get().CG.loadingStop(), a.MI.get().CG.gameplayStart(), (g.instance = this), a.UserGameData.setGameState(!0), (this._lbShootCount = 0), this.initGame(), this.initControls(), this.initGrid(), this.initVisual(), this.setupGrid(), a.MI.get().on(a.MI.EVENT_SHOW_ADS, this.showAds, this), IS_DESKTOP && this.game.keyboard.addOnDown(this.keyDown, this), this.createBombGuideline(), g.LINE_GUIDELINE || (g.LINE_GUIDELINE = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghostLine')), a.LoaderScreen.hide());
                }),
                (g.prototype.initVisual = function () {
                    ((this._mainContainer = this.sprite(this.centerX, 0)),
                        this._mainContainer.activateRelativeMode(),
                        (this._centerContainer = this.sprite(this.centerX, this.centerY)),
                        this._centerContainer.activateRelativeMode(),
                        (this._backgroundContainer = this.sprite(this.centerX, 0)),
                        this._backgroundContainer.activateRelativeMode(),
                        (this._bottomContainer = this.sprite(this.centerX, 2 * this.centerY)),
                        this._bottomContainer.activateRelativeMode(),
                        (this._cannonContainer = this.sprite(this.centerX, 2 * this.centerY)),
                        this._cannonContainer.activateRelativeMode().bottomOffset(g.CANNON_BOTTOM_OFFSET).end(),
                        (this._additionalCannonContainer = new b()),
                        (this._additionalCannonContainer.alpha = 0),
                        (this._modifContainer = this.sprite(this.centerX, 2 * this.centerY)),
                        this._modifContainer.activateRelativeMode().bottomOffset(g.CANNON_BOTTOM_OFFSET).end(),
                        (this._bubbleContainer = new b()),
                        (this._topUIContainer = new b()),
                        (this._bubblePlace = this.sprite(0, 0, 'ui0', g.DOCK_INACTIVE)),
                        0 == this._currentLevel && a.UserGameData.checkTutor(this._currentLevel, !0) && ((this._tutorialHandContainer = this.sprite(this.centerX, 2 * this.centerY)), this._tutorialHandContainer.activateRelativeMode().bottomOffset(g.CANNON_BOTTOM_OFFSET).end(), (this._tutorialHand = new a.TutorialHand(IS_DESKTOP)), this._tutorialHandContainer.addChild(this._tutorialHand)),
                        (this._swapIcon = this.sprite(a.Options.NEXT_BUBBLES_POSITON[1][0] - a.Options.CANNON_X, a.Options.NEXT_BUBBLES_POSITON[1][1] - a.Options.CANNON_Y, 'ui0', 'swapIcon')),
                        this._currentLevel == a.UserGameData.TUTORIAL_LIST.CHANGE_BUBBLE_TUTORIAL && this._swapIcon.on('pointerup', this.swapIconUpTutor, this),
                        (this._bubbleCounter = new a.BubbleCounter()),
                        (this._bubbleCounter.x = -200),
                        (this._bubbleCounter.y = 0),
                        (this._rightBorder = this.sprite(510, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')),
                        this._rightBorder.anchor.set(1, 0),
                        (this._rightBorder.scale.x = -1),
                        (this._rightBorder.scale.y = 40),
                        (this._leftBorder = this.sprite(-510, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')),
                        this._leftBorder.anchor.set(1, 0),
                        (this._leftBorder.scale.y = this._rightBorder.scale.y));
                    var c, d;
                    (IS_DESKTOP && this.game.scaleMode == KY.ScaleMode.STATIC && ((c = this.sprite(1290, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')), c.anchor.set(1, 0), (c.scale.x = -1), (c.scale.y = 40), (d = this.sprite(-1290, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')), d.anchor.set(1, 0), (d.scale.y = this._rightBorder.scale.y)),
                        (this._topPanelBackground = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopSlice9'), 40, 50, 40, 73)),
                        (this._topPanelBackground.height = 123),
                        (this._topTargetBg = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopBarSlice9'), 35, 31, 35, 35)),
                        (this._topTargetBg.width = 220),
                        (this._topTargetBg.height = 66),
                        (this._topTargetBg.y = 20),
                        (this._topScoreBg = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopBarSlice9'), 35, 31, 35, 35)),
                        (this._topScoreBg.width = 220),
                        (this._topScoreBg.height = 66),
                        (this._topScoreBg.y = 20),
                        (this._starsAndProgressContainer = new b()),
                        this._mode == e.NEW_YEAR22 && (this._starsAndProgressContainer.visible = !1),
                        (this._topStarsBg = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopBarSlice9'), 35, 31, 35, 35)),
                        (this._topStarsBg.width = 500),
                        (this._topStarsBg.height = 66),
                        (this._topStarsBg.y = 21),
                        (this._topStarsBg.x = 0.5 * -this._topStarsBg.width),
                        (this._progressBarBg = new KY.Sprite(0, 54, 'ui0', 'uiBgProgress')));
                    var f = 467;
                    ((this._progressBar = new KY.Sprite(0, 54, 'ui0', 'uiProgress')), (this._progressMask = new PIXI.Graphics()), (this._progressMask.x = 0.5 * -f), this._progressMask.beginFill(16711680), this._progressMask.drawRect(0, 24, 467, 60), this._progressMask.endFill(), (this._progressBar.mask = this._progressMask), (this._progressStars = []));
                    for (var h = 0; h < 3; h++) (this._progressStars.push(this.sprite(0, 0, 'ui0', 'uiStarProgress0001')), (this._progressStars[h].y = 74), (this._progressStars[h].x = this._progressMask.x + (this._starScore[h] / this._maxScore) * f));
                    this._thresholdStars = [];
                    for (var h = 0; h < 3; h++) (this._thresholdStars.push(this.sprite(0, 0, 'ui0', 'starTreshold')), (this._thresholdStars[h].y = 51), (this._thresholdStars[h].x = this._progressMask.x + (this._starScore[h] / this._maxScore) * f));
                    ((this._scoreText = new PIXI.Text('0', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#2769a4', strokeThickness: 10, dropShadow: !0, dropShadowAlpha: 0.4, dropShadowAngle: Math.PI / 4, dropShadowBlur: 2, dropShadowDistance: 4, padding: 10 })), this._scoreText.anchor.set(0.5), (this._scoreText.y = 57));
                    var i = this._mapData.mapType == a.World.MAP_TYPE_CROWN,
                        j = this._mapData.mapType == a.World.MAP_TYPE_CIRCLE,
                        k = 'typeGameIcon0001';
                    (i ? (k = 'typeGameIcon0002') : j && (k = 'typeGameIcon0003'),
                        (this._gameTypeIcon = this.sprite(0, 0, 'ui0', k)),
                        (this._gameTypeIcon.y = i ? 54 : 52),
                        j && (this._gameTypeIcon.x -= 7),
                        i && ((this._crownCounter = new PIXI.Text('10/10', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 34, lineJoin: 'round', stroke: '#2769a4', strokeThickness: 8, padding: 10 })), this._crownCounter.anchor.set(0.5), (this._crownCounter.y = this._gameTypeIcon.y + 3)),
                        this.setProgress(0),
                        (this._bottomPanelBackground = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiBottomSlice9'), 40, 50, 40, 126)),
                        (this._bottomPanelBackground.height = 176),
                        (this._bottomPanelBackground.y = -176),
                        (this._boostButtonLayer = new b()),
                        (this._optionsBtn = new a.PXButton('ui0', ['uiOptionsBtn'])),
                        (this._optionsBtn.x = -430),
                        (this._optionsBtn.y = -80),
                        this._optionsBtn.addOnClick(this.showOptions, this),
                        (this._lightningBoosterBtn = new a.BoosterButton(1, !1)),
                        (this._lightningBoosterBtn.y = -80),
                        this._lightningBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT)),
                        this._lightningBoosterBtn.addOnClick(this.toggleLightningBooster, this),
                        (this._rainbowBoosterBtn = new a.BoosterButton(2, !1)),
                        (this._rainbowBoosterBtn.y = this._lightningBoosterBtn.y),
                        this._rainbowBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT)),
                        this._rainbowBoosterBtn.addOnClick(this.toggleRainbowBooster, this),
                        (this._fireballBoosterBtn = new a.BoosterButton(3, !1, 2)),
                        (this._fireballBoosterBtn.y = this._lightningBoosterBtn.y),
                        this._fireballBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT)),
                        this._fireballBoosterBtn.addOnClick(this.toggleFireballBooster, this),
                        (this._bombBoosterBtn = new a.BoosterButton(4, !0, 0)),
                        (this._bombBoosterBtn.y = this._lightningBoosterBtn.y),
                        this._bombBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT)),
                        this._bombBoosterBtn.addOnClick(this.toggleBombBooster, this),
                        (this._boostInfoLayer = new b()),
                        a.LoadManager.ATLAS_UI && ((this._boostInfoIconBg = this.sprite(-430, -80, 'ui', 'boostIcoBg')), (this._boostInfoCloseBg = this.sprite(430, -80, 'ui', 'boostCloseBtnBg')), (this._closeBoostInfo = new a.PXButton('ui', ['boostCloseBtn'])), this._closeBoostInfo.position.set(430, -81), this._closeBoostInfo.addOnClick(this.toggleBooster, this), (this._boostInfoIcon = this.sprite(-430, -80, 'ui', 'boostIco0001')), this._boostInfoIcon.scale.set(0.5), (this._boostInfoTxt = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'left', fontSize: 34, wordWrap: !0, wordWrapWidth: 710 })), (this._boostInfoTxt.alpha = 0.8), (this._boostInfoTxt.y = -82), this._boostInfoTxt.anchor.set(0, 0.5)),
                        this.hideBoostInfo());
                    var l = a.Locales.get('ui0', 'popups/win/levelComplete');
                    if (((this._lvlCompleteSgn = this.sprite(0, 0, l[0], l[1])), (this._lvlCompleteSgn.alpha = 0), (this._lightningEffect = []), (this._lasers = []), a.LoadManager.ATLAS_UI)) {
                        var m = a.Locales.get('ui', 'txtFreeBomb');
                        ((this._cannonSgn = this.sprite(0, 400, m[0], m[1])), (this._cannonSgn.alpha = 0));
                    }
                    ((this._centralSgn = []),
                        (this._crownSgn = []),
                        (this._lockSgn = []),
                        (this._crownSgnActive = []),
                        (this._lockSgnActive = []),
                        (this._flyPool = []),
                        (this._keyPool = []),
                        (this._plusMinusTwoPool = []),
                        (this._centralSgnContainer = new PIXI.Container()),
                        a.LoadManager.ATLAS_UI && ((this._keyCounter = new a.KeyCounter(a.UserGameData.getProperty(a.USER_PROPERTY.KEYS))), (this._keyCounter.alpha = 0)),
                        this.addChild(this._backgroundContainer),
                        this.addChild(this._cannonContainer),
                        this.addChild(this._mainContainer),
                        this.addChild(this._modifContainer),
                        this.addChild(this._centerContainer),
                        this.addChild(this._bottomContainer),
                        this._tutorialHandContainer && this.addChild(this._tutorialHandContainer),
                        this._mainContainer.addChild(this._bubbleContainer),
                        this._mainContainer.addChild(this._topUIContainer),
                        this._centerContainer.addChild(this._centralSgnContainer),
                        this._centerContainer.addChild(this._lvlCompleteSgn),
                        this._cannonContainer.addChild(this._additionalCannonContainer),
                        this._additionalCannonContainer.addChild(this._bubblePlace),
                        this._additionalCannonContainer.addChild(this._swapIcon),
                        this._additionalCannonContainer.addChild(this._bubbleCounter),
                        c && d && (this._backgroundContainer.addChild(c), this._backgroundContainer.addChild(d)),
                        this._backgroundContainer.addChild(this._rightBorder),
                        this._backgroundContainer.addChild(this._leftBorder),
                        this._bubbleContainer.addChild(this._grid),
                        this._topUIContainer.addChild(this._topPanelBackground),
                        this._topUIContainer.addChild(this._topTargetBg),
                        this._topUIContainer.addChild(this._topScoreBg),
                        this._topUIContainer.addChild(this._starsAndProgressContainer),
                        this._starsAndProgressContainer.addChild(this._topStarsBg),
                        a.LoadManager.ATLAS_UI && this._topUIContainer.addChild(this._cannonSgn),
                        this._starsAndProgressContainer.addChild(this._progressBarBg),
                        this._starsAndProgressContainer.addChild(this._progressBar),
                        this._starsAndProgressContainer.addChild(this._progressMask));
                    for (var h = 0; h < 3; h++) (this._starsAndProgressContainer.addChild(this._thresholdStars[h]), this._starsAndProgressContainer.addChild(this._progressStars[h]));
                    (this._topUIContainer.addChild(this._scoreText),
                        this._topUIContainer.addChild(this._gameTypeIcon),
                        this._crownCounter && this._topUIContainer.addChild(this._crownCounter),
                        a.LoadManager.ATLAS_UI && this._topUIContainer.addChild(this._keyCounter),
                        this._boostButtonLayer.addChild(this._optionsBtn),
                        this._boostButtonLayer.addChild(this._lightningBoosterBtn),
                        this._boostButtonLayer.addChild(this._rainbowBoosterBtn),
                        this._boostButtonLayer.addChild(this._fireballBoosterBtn),
                        this._boostButtonLayer.addChild(this._bombBoosterBtn),
                        this._bottomContainer.addChild(this._bottomPanelBackground),
                        this._bottomContainer.addChild(this._boostButtonLayer),
                        this._bottomContainer.addChild(this._boostInfoLayer),
                        a.LoadManager.ATLAS_UI && (this._boostInfoLayer.addChild(this._boostInfoIconBg), this._boostInfoLayer.addChild(this._boostInfoCloseBg), this._boostInfoLayer.addChild(this._closeBoostInfo), this._boostInfoLayer.addChild(this._boostInfoIcon), this._boostInfoLayer.addChild(this._boostInfoTxt)),
                        this.resize('start'),
                        this.game.on(KY.GameEvent.RESIZE, this.resize, this));
                }),
                (g.prototype.resize = function (b) {
                    (IS_MOBILE && b == KY.DeviceOrientation.LANDSCAPE) ||
                        ('start' != b && (a.Options.resize(this.game.screenWidth, this.game.screenHeight, g.CANNON_BOTTOM_OFFSET), this._grid.resize()),
                        (this._topPanelBackground.width = this.game.screenWidth),
                        (this._topPanelBackground.x = 0.5 * -this._topPanelBackground.width),
                        (this._bottomPanelBackground.width = this.game.screenWidth - 10),
                        (this._bottomPanelBackground.x = 0.5 * -this._bottomPanelBackground.width),
                        (this._topTargetBg.x = 0.5 * -this.game.screenWidth + 26),
                        (this._topScoreBg.x = 0.5 * this.game.screenWidth - 26 - this._topScoreBg.width),
                        this._crownCounter ? ((this._gameTypeIcon.x = 0.5 * -this.game.screenWidth + 74), (this._crownCounter.x = this._gameTypeIcon.x + 90)) : (this._gameTypeIcon.x = 0.5 * -this.game.screenWidth + 132),
                        (this._scoreText.x = 0.5 * this.game.screenWidth - 132),
                        (this._optionsBtn.x = 0.5 * -this.game.screenWidth + 104),
                        IS_DESKTOP && this.game.scaleMode == KY.ScaleMode.STATIC ? (this._bombBoosterBtn.x = 295) : (this._bombBoosterBtn.x = 0.5 * this.game.screenWidth - 140),
                        (this._fireballBoosterBtn.x = this._bombBoosterBtn.x - 200),
                        (this._rainbowBoosterBtn.x = this._fireballBoosterBtn.x - 200),
                        (this._lightningBoosterBtn.x = this._rainbowBoosterBtn.x - 200),
                        a.LoadManager.ATLAS_UI && ((this._boostInfoIconBg.x = this._optionsBtn.x), (this._boostInfoCloseBg.x = this._bombBoosterBtn.x + 40), (this._boostInfoTxt.x = this._optionsBtn.x + 100), (this._boostInfoIcon.x = this._optionsBtn.x), (this._closeBoostInfo.x = this._boostInfoCloseBg.x), (this._boostInfoTxt.text = this._boostInfoTxt.text), (this._boostInfoTxt.style.wordWrapWidth = 0.68 * this.game.screenWidth), (this._keyCounter.y = 300)));
                }),
                (g.prototype.staticInitGame = function () {
                    for (this._selectedRainbow = !1, this._selectedFireball = !1, this._selectedBomb = !1, this._selectedLightning = !1, this._gameScore = 0, this._compliment = f.NONE, this._lastCompliment = null, this._fountainStarted = !1, this._starsActivated = 0, this._levelStart = !1, this._needShowWinPopup = !1, this._winPopupDelay = 0, this._effectiveShotForFreeBomb = 0, this._lastEffectiveShot = -1, this._lastBombBooster = !1, this._needShowModification = !1; this._modifications.length; ) this._modifications.pop();
                    (a.Options.GUIDELINE_NO_LIMIT && this.addGameModification(a.MODIFICATION_TYPE.GUIDELINE_NOLIMIT), 3 == a.Options.MAX_NEXT_BUBBLES && this.addGameModification(a.MODIFICATION_TYPE.THREE_NEXT_BUBBLES), a.Options.ADD_5_BUBBLES && this.addGameModification(a.MODIFICATION_TYPE.PLUS_5_BUBLES));
                }),
                (g.prototype.initGame = function () {
                    (a.SoundsManager.gameThemaPlay(), (this._starScore = [this._mapData.stars[0], this._mapData.stars[1], this._mapData.stars[2]]));
                    var b = 467,
                        c = 18;
                    ((this._maxScore = a.Utils.int((this._starScore[2] * b) / (b - c))), (this._modifications = []), (this._modificationVisual = new a.Modification(this)), (this._tmpSwapIconInteractive = !0), (this.specialBubbleFlag = !1), this.staticInitGame());
                }),
                (g.prototype.initControls = function () {
                    (IS_DESKTOP && (this.interactionAfterTouch = !1), this._debugReplay || (this.on(KY.GameEvent.MOUSE_MOVE, this.onMove, this), this.on(KY.GameEvent.MOUSE_DOWN, this.onDown, this), this.on(KY.GameEvent.MOUSE_UP, this.onUp, this)));
                }),
                (g.prototype.initGrid = function () {
                    this._mapData.mapType == a.World.MAP_TYPE_CIRCLE ? (this._grid = new a.CircleWorld()) : this._mapData.mapType == a.World.MAP_TYPE_CROWN ? (this._grid = new a.CrownWorld()) : (this._grid = new a.DefaultWorld());
                }),
                (g.prototype.shutdown = function () {
                    (a.MI.get().CG.gameplayStop(), a.LoaderScreen.show(), this.game.off(KY.GameEvent.RESIZE, this.resize, this), a.MI.get().off(a.MI.EVENT_SHOW_ADS, this.showAds, this), this.game.keyboard.clearCallbacks(), this._grid.removeAllListeners(), this.removeAllListeners(), a.SoundsManager.gameMusicStop(), a.PopScore.free(), a.PopCombo.free(), this._crownCounter && (this._crownCounter.destroy(), (this._crownCounter = null)), this._tutorialHandContainer && ((this._tutorialHand = null), this._tutorialHandContainer.destroy(), (this._tutorialHandContainer = null)), (g.TUTOR_MARK = null));
                }),
                (g.prototype.setupGrid = function () {
                    (this._grid.on(a.World.EVENT_BUBBLE_COUNT_CHANGE, this.setBubbleCount, this),
                        this._grid.on(a.World.EVENT_PLUS_MINUS_TWO, this.getPlusMinusBubble, this),
                        this._grid.on(a.World.EVENT_FOUNTAIN_START, this.startFountain, this),
                        this._grid.on(a.World.EVENT_FOUNTAIN_END, this.endFountain, this),
                        this._grid.on(a.World.EVENT_LAST_BUBBLE, this.lastBubble, this),
                        this._grid.on(a.World.EVENT_FIRED, this.fired, this),
                        this._grid.on(a.World.EVENT_AFTER_FIRED, this.afterFired, this),
                        this._grid.on(a.World.EVENT_SWAP, this.swapDown, this),
                        this._grid.on(a.World.EVENT_CAN_TOUCH, this.checkCanShoot, this),
                        this._grid.on(a.World.EVENT_BOUNCE_WALL, this.bounceWall, this),
                        this._grid.on(a.World.EVENT_BUBBLE_POP, this.bubblePopScore, this),
                        this._grid.on(a.World.EVENT_STAGE_CLEAR, this.stageClear, this),
                        this._grid.on(a.World.EVENT_GAME_WIN, this.gameWin, this),
                        this._grid.on(a.World.EVENT_GAME_OVER, this.gameOver, this),
                        this._grid.on(a.World.EVENT_GAME_CONTINUE, this.gameContinue, this),
                        this._grid.on(a.World.EVENT_GUIDELINE_NO_LIMIT_MOVE, this.guidelineNLMove, this),
                        this._grid.on(a.World.EVENT_GUIDELINE_BEGIN, this.guidelineBegin, this),
                        this._grid.on(a.World.EVENT_GUIDELINE_END, this.guidelineEnd, this),
                        this._grid.on(a.World.EVENT_BUBBLE_CONTACT, this.contact, this),
                        this._grid.on(a.World.EVENT_SHOW_LIGHTNING, this.showLightningEffect, this),
                        this._grid.on(a.World.EVENT_SHOW_LASER, this.showLaserEffect, this),
                        this._grid.on(a.World.EVENT_AFTER_COLLISION, this.afterCollision, this),
                        this._grid.on(a.World.EVENT_END_START_DEMO, this.endStartDemo, this),
                        this._grid.on(a.World.EVENT_MAP_SCROLL, this.scrollMap, this),
                        this.on(a.LevelTargetPopup.EVENT_LEVEL_TARGET_END, this.endLevelTarget, this),
                        this._grid.on(a.World.EVENT_GET_UNLOCKER, this.getUnlocker, this),
                        this._grid.on(a.World.EVENT_GET_UNLOCKER_FREE, this.getUnlockerFree, this),
                        this._mapData.mapType == a.World.MAP_TYPE_CROWN && (this._grid.once(a.World.EVENT_CROWN_COUNT, this.setCrownCount, this), this._grid.on(a.World.EVENT_CROWN_SHOW, this.showCrown, this)),
                        this._grid.on(a.World.EVENT_SHOW_FLY, this.showFly, this),
                        this._grid.on(a.World.EVENT_PIG_KEY_SHOW, this.showPigKey, this),
                        this._grid.on(a.World.EVENT_GET_SPECIAL_BUBBLE, this.showSpecialPopup, this),
                        (this._grid.user_level = this._currentLevel),
                        this._grid.setup(this._mapData),
                        (this._grid.pcMode = IS_DESKTOP),
                        this._grid.setSwapAreaHeightOffset(IS_DESKTOP ? 0 : g.CANNON_BOTTOM_OFFSET_MOBILE - g.CANNON_BOTTOM_OFFSET_PC),
                        this.hideThirdBubble(),
                        this._grid.user_haveSpecialBubbles && a.MI.get().popupManager.get(a.AllPopups.SPECIAL_BUBBLE),
                        a.MI.get().isMapEditor && ((this._debugTouch = []), (this._debugTouchTime = Date.now())));
                }),
                (g.prototype.hideThirdBubble = function () {
                    3 == a.Options.MAX_NEXT_BUBBLES && (this._grid.nextBubbles[2].alpha = 0);
                }),
                (g.prototype.showAds = function (b) {
                    b == a.ADS_TYPE.REWARD && a.UserGameData.adsCounterGetReward();
                }),
                (g.prototype.showOptions = function () {
                    a.MI.get().popupManager.isOverlay || a.MI.get().popupManager.add(a.AllPopups.OPTIONS);
                }),
                (g.prototype.replay = function (b, c, d) {
                    (a.UserGameData.setGameState(!0), a.SoundsManager.gameMusicFadeBack(), a.UserGameData.lelelStart(this._currentLevel), (a.Options.GUIDELINE_NO_LIMIT = b), (a.Options.MAX_NEXT_BUBBLES = c ? 3 : 2), (a.Options.ADD_5_BUBBLES = d), this.staticInitGame(), this.setProgress(0), this._bubbleCounter.reset5Bubbles(), (this._currentCrownCount = 0), this.setCrownText(this._currentCrownCount), this._bombBoosterBtn.setProgress(0), this._grid.reset(), this._grid.setup(this._mapData, !1, !0), (this._grid.pcMode = IS_DESKTOP), (this.specialBubbleFlag = !1), a.MI.get().isMapEditor && ((this._debugTouch = []), (this._debugTouchTime = Date.now())), this.showSwapIcon(), this.hideThirdBubble());
                }),
                (g.prototype.addExtraBubble = function (b, c) {
                    if ((this.addGameModification({ type: a.MODIFICATION_TYPE.PLUS_N_BUBLES, value: b }), a.Options.SHOW_STARTLEVEL_ANIMATIONS && 1 != c)) ((this._needShowModification = !0), (this._levelStart = !1));
                    else {
                        var d = this._modifications.pop();
                        a.Modification.applyModification(this, d.type, d.value);
                    }
                }),
                (g.prototype.endLevelTarget = function () {
                    if (this._modifications.length)
                        if (a.Options.SHOW_STARTLEVEL_ANIMATIONS) this._needShowModification = !0;
                        else {
                            for (; this._modifications.length; ) {
                                var b = this._modifications.pop();
                                'object' == typeof b ? a.Modification.applyModification(this, b.type, b.value) : a.Modification.applyModification(this, b);
                            }
                            this._levelStart = !0;
                        }
                    else this._levelStart = !0;
                    this._tutorialHand && this._tutorialHand.show();
                }),
                (g.prototype.endStartDemo = function () {
                    var b = this;
                    (TweenLite.to(this._additionalCannonContainer, 0.2, { alpha: 1 }),
                        this._grid.showCannonBubbles(0.2),
                        0 == this._currentLevel
                            ? setTimeout(function () {
                                  b.endLevelTarget();
                              }, 200)
                            : (setTimeout(function () {
                                  a.MI.get().popupManager.add(a.AllPopups.LEVEL_TARGET, b._grid, a.Options.LEVEL_TARGET_SHOW_5PLUS);
                              }, 200),
                              a.UserGameData.checkTutor(this._currentLevel, !0) && a.MI.get().popupManager.get(a.AllPopups.LEVEL_TARGET).once(a.PopupManager.CLOSE_POPUP, this.showTutor, this)),
                        (this._debugReplayTime = 0));
                }),
                (g.prototype.showTutor = function () {
                    for (var b in a.UserGameData.TUTORIAL_LIST) {
                        var c = a.UserGameData.TUTORIAL_LIST[b];
                        if (c == this.currentLevel) {
                            a.MI.get().popupManager.add(b);
                            break;
                        }
                    }
                }),
                (g.prototype.resetModificationDemo = function () {
                    ((this._levelStart = !1), (this._needShowModification = !0));
                }),
                (g.prototype.addGameModification = function (a) {
                    this._modifications.push(a);
                }),
                (g.prototype.M_plusNBubbles = function (a) {
                    (this._grid.changeBubbleCount(a), this._bubbleCounter.jump(), this._grid.bubbleCount >= 2 && !this._swapIcon.visible && this.showSwapIcon());
                }),
                (g.prototype.M_show3NextBubbles = function () {
                    var a = this._grid.nextBubbles[2].scale.x;
                    (this._grid.nextBubbles[2].scale.set(0.1), TweenLite.to(this._grid.nextBubbles[2], 0.2, { alpha: 1 }), TweenLite.to(this._grid.nextBubbles[2].scale, 0.2, { x: a, y: a, ease: Back.easeOut }));
                }),
                (g.prototype.showFly = function (b, c, d) {
                    var e,
                        f = this;
                    ((e = this._flyPool.length ? this._flyPool.pop() : new a.BigFly()), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), e.setColor(d), this._bubbleContainer.addChild(e));
                    var g = 0.4,
                        h = 0.8;
                    (TweenLite.to(e, 0.1, { alpha: 1, delay: g, overwrite: 'auto' }),
                        TweenLite.to(e, 1, { y: e.y - 200, delay: g }),
                        TweenLite.to(e.scale, 0.8, { x: 1.2, y: 1.2, delay: g, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.3, {
                            alpha: 0,
                            delay: g + h,
                            onComplete: function () {
                                (TweenLite.killTweensOf(e), f._bubbleContainer.removeChild(e), f._flyPool.push(e));
                            },
                        }));
                }),
                (g.prototype.showSpecialPopup = function (a, b) {
                    ((this._specialBubbleMark = a), (this._specialBubbleMoveCounter = b));
                }),
                (g.prototype.afterFired = function () {
                    (this._specialBubbleMark && 0 == a.MI.get().popupManager.isOverlay && ((this._postDowned = !1), a.MI.get().popupManager.add(a.AllPopups.SPECIAL_BUBBLE, this._specialBubbleMark, this._specialBubbleMoveCounter)), (this._specialBubbleMark = null), this._grid.effectiveShots > 1 && this._bubbleContainer.addChild(a.PopCombo.getPopup(this._grid.effectiveShots, this._grid.lastContactX, this._grid.lastContactY + this._grid.bubbleContainer.y + 350)));
                }),
                (g.prototype.showPigKey = function (b, c) {
                    var d = this;
                    (a.UserGameData.addProperty(a.USER_PROPERTY.KEYS), 4 == a.UserGameData.getProperty(a.USER_PROPERTY.KEYS) && a.UserGameData.setProperty(a.USER_PROPERTY.SHOW_FULL_PIG_BANK, 0), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.KEYS, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME), a.SoundsManager.getKey(), a.LoadManager.ATLAS_UI && this._keyCounter.addKey());
                    var e;
                    ((e = this._keyPool.length ? this._keyPool.pop() : new a.KeyPopup()), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), (e.rotation = 0), this._bubbleContainer.addChild(e));
                    var f = 0.1,
                        g = 0.8;
                    (TweenLite.to(e, 0.1, { alpha: 1, delay: f, overwrite: 'auto' }),
                        TweenLite.to(e.scale, 0.8, { x: 1, y: 1, delay: f, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.8, { rotation: -Math.PI / 6, delay: f, ease: Back.easeOut }),
                        TweenLite.to(e, 0.3, {
                            alpha: 0,
                            delay: f + g,
                            onComplete: function () {
                                (TweenLite.killTweensOf(e), d._bubbleContainer.removeChild(e), d._keyPool.push(e));
                            },
                        }));
                }),
                (g.prototype.showPlusMinusTwo = function (b, c, d) {
                    var e,
                        f = d < 0;
                    (this._plusMinusTwoPool.length ? ((e = this._plusMinusTwoPool.pop()), e.reset(d)) : (e = new a.PlusMinusTwoPopup(d)), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), (e.rotation = Stage.rnd.rangeJS(-Math.PI / 6, Math.PI / 6)), this._bubbleContainer.addChild(e));
                    var g = 0.1;
                    (TweenLite.to(e, 0.1, { alpha: 1, delay: g, overwrite: 'auto' }),
                        TweenLite.to(e.scale, 0.8, { x: 1, y: 1, delay: g, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.8, { rotation: 0, delay: g, ease: Back.easeOut }),
                        (b += this._grid.bubbleContainer.x),
                        (c += this._grid.bubbleContainer.y),
                        f && 0 == this._grid.bubbleCount
                            ? (TweenMax.to(e, 0.2, { alpha: 0, delay: g + 0.8, ease: Sine.easeIn }), TweenMax.to(e.scale, 0.2, { x: 0, y: 0, delay: g + 0.8, ease: Sine.easeIn }), this.setBubbleCount(0, !0), this.hideSwapIcon(), this._grid.clearCannon())
                            : !f && this._grid.bubbleCount < 2 + d
                              ? (TweenMax.to(e, 0.2, { alpha: 0, delay: g + 0.8, ease: Sine.easeIn }), TweenMax.to(e.scale, 0.2, { x: 0, y: 0, delay: g + 0.8, ease: Sine.easeIn }), this.setBubbleCount(this._grid.bubbleCount, !0))
                              : (TweenMax.to(e, 0.2, { alpha: 0, delay: g + 0.9, ease: Sine.easeIn }),
                                TweenMax.to(e.scale, 0.2, { x: 0, y: 0, delay: g + 0.9, ease: Sine.easeIn }),
                                TweenMax.to(e, 0.4, {
                                    bezier: {
                                        curviness: 1.25,
                                        type: 'soft',
                                        values: [
                                            { x: b, y: c },
                                            { x: 0.5 * b - 100, y: 0.5 * (c + this._cannonContainer.y) },
                                            { x: 0, y: this._cannonContainer.y },
                                        ],
                                    },
                                    delay: g + 0.6,
                                    ease: Sine.easeIn,
                                }),
                                this.setBubbleCount(this._grid.bubbleCount, !0, 1.3, !0)));
                }),
                (g.prototype.showCrown = function (b, c, d) {
                    var e,
                        f = this;
                    ((e = this._crownSgn.length ? this._crownSgn.pop() : new a.CrownPopup()), a.SoundsManager.getCrownInLevel(), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), (e.rotation = 0), this._crownSgnActive.push(e));
                    var g = d ? 0 : 0.2,
                        h = 0.6,
                        i = this._crownCounter.x - b,
                        j = this._crownCounter.y - c,
                        k = Math.sqrt(i * i + j * j);
                    ((h = Math.max(0.5, Math.min(k / 1046, 0.74))),
                        this._topUIContainer.addChild(e),
                        TweenLite.to(e, 0.2, { alpha: 1, delay: g, overwrite: !0 }),
                        TweenLite.to(e.scale, 0.8, { x: 1.2, y: 1.2, delay: g, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.4, {
                            alpha: 0,
                            delay: h + 0.5 + g,
                            onComplete: function () {
                                (f._topUIContainer.removeChild(e), f._crownSgn.push(e), f._crownSgnActive.splice(f._crownSgnActive.indexOf(e), 1));
                            },
                        }),
                        TweenLite.to(e.scale, 0.5, { x: 0.8, y: 0.8, delay: g + 0.6 }),
                        TweenMax.to(e, h, {
                            bezier: {
                                curviness: 1.25,
                                type: 'soft',
                                values: [
                                    { x: b + this._grid.bubbleContainer.x, y: c + this._grid.bubbleContainer.y },
                                    { x: this._crownCounter.x, y: this._crownCounter.y },
                                ],
                            },
                            rotation: -Math.PI / 10,
                            delay: g + 0.5,
                            ease: Sine.easeIn,
                            onComplete: function () {
                                (f._currentCrownCount++, f.setCrownText(f._currentCrownCount), a.SoundsManager.crownFlyOnUI());
                            },
                        }));
                }),
                (g.prototype.getUnlockerFree = function () {}),
                (g.prototype.getUnlocker = function (b, c, d, e, f, g, h, i) {
                    var j,
                        k = this;
                    ((j = this._lockSgn.length ? this._lockSgn.pop() : new a.LockPopup()), a.SoundsManager.popUnlocker(), (j.x = b), (j.y = c), j.scale.set(0.2), (j.alpha = 0), (j.rotation = 0), this._lockSgnActive.push(j));
                    var l = f ? 0 : 0.2,
                        m = 0.6,
                        n = d - b,
                        o = e - c,
                        p = Math.sqrt(n * n + o * o);
                    ((m = Math.max(0.5, Math.min(p / 1046, 0.74))),
                        this._grid.upContainer.addChild(j),
                        TweenLite.to(j, 0.2, { alpha: 1, delay: l, overwrite: !0 }),
                        TweenLite.to(j.scale, 0.8, { x: 1.2, y: 1.2, delay: l, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(j, 0.4, {
                            alpha: 0,
                            delay: m + 0.5 + l,
                            onComplete: function () {
                                (k._grid.upContainer.removeChild(j), k._lockSgn.push(j), k._lockSgnActive.splice(k._lockSgnActive.indexOf(j), 1));
                            },
                        }),
                        TweenLite.to(j.scale, 0.5, { x: 0.8, y: 0.8, delay: l + 0.6 }),
                        TweenMax.to(j, m, {
                            bezier: {
                                curviness: 1.25,
                                type: 'soft',
                                values: [
                                    { x: b, y: c },
                                    { x: d, y: e },
                                ],
                            },
                            rotation: -Math.PI / 10,
                            delay: l + 0.5,
                            ease: Sine.easeIn,
                            onComplete: function () {
                                return i.x != d || i.y != e
                                    ? void TweenLite.to(j, 0.05, {
                                          x: i.x,
                                          y: i.y,
                                          onComplete: function () {
                                              (k._grid.lockDone(g, h), a.SoundsManager.openLock());
                                          },
                                      })
                                    : (k._grid.lockDone(g, h), void a.SoundsManager.openLock());
                            },
                        }));
                }),
                (g.prototype.setCrownText = function (a) {
                    this._crownCounter && ((this._crownCounter.text = a + '/' + this._maxCrownCount), TweenLite.to(this._crownCounter.scale, 0.1, { x: 1.2, y: 1.2, overwrite: 'auto' }), TweenLite.to(this._crownCounter.scale, 0.2, { x: 1, y: 1, delay: 0.2 }));
                }),
                (g.prototype.setCrownCount = function (a, b) {
                    ((this._maxCrownCount = b), (this._currentCrownCount = 0), this.setCrownText(0));
                }),
                (g.prototype.showCentralSgn = function (b, c) {
                    var d,
                        e,
                        f = this;
                    (this._centralSgn.length ? (d = this._centralSgn.pop()) : ((e = a.Locales.get('ui0', 'textEffect0004')), (d = this.sprite(0, 0, e[0], e[1]))),
                        (d.alpha = 0),
                        this._centralSgnContainer.addChild(d),
                        (e = a.Locales.get('textEffect0004' == b ? 'ui0' : 'ui', b)),
                        d.changeKey(e[0]),
                        (d.frameName = e[1]),
                        d.scale.set(0.3),
                        (d.y = 200),
                        TweenLite.to(d, 0.4, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(d.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut }),
                        TweenLite.to(d, 0.4, { y: 0, ease: Back.easeOut }),
                        TweenLite.to(d, 0.4, {
                            alpha: 0,
                            delay: c,
                            onComplete: function () {
                                (f._centralSgnContainer.removeChild(d), f._centralSgn.push(d));
                            },
                        }),
                        a.SoundsManager.alertTxt());
                }),
                (g.prototype.setBubbleCount = function (a, b, c, d) {
                    (void 0 === b && (b = !1), void 0 === c && (c = null), void 0 === d && (d = !1));
                    var e = this._bubbleCounter.value;
                    (this._bubbleCounter.setCount(a, c), b && this._bubbleCounter.jump(null != c), 5 == a && !this._fountainStarted && e > a && this.showCentralSgn('textEffect0004', 1));
                }),
                (g.prototype.getPlusMinusBubble = function (a, b, c) {
                    (this.showPlusMinusTwo(b, c, a), a > 0 && this.showSwapIcon());
                }),
                (g.prototype.contact = function (b, c) {
                    b.mainColor == a.BubbleColor.LIGHTNING && this.showLightningEffect(b);
                }),
                (g.prototype.getLightningEffect = function () {
                    for (var b = 0; b < this._lightningEffect.length; b++) if (0 == this._lightningEffect[b].animPlaying) return this._lightningEffect[b];
                    var c = this.sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/lightning/lightningEffect0001');
                    return (c.addAnimation('idle', KY.Sprite.createAnimationState('effects/lightning/lightningEffect', 1, 4, 4), 15, !0), c.scale.set(2), this._lightningEffect.push(c), c);
                }),
                (g.prototype.getLaserEffect = function () {
                    this._lasers;
                    for (var b = 0; b < this._lasers.length; b++) if (this._lasers[b].isFree) return this._lasers[b];
                    var c = new a.LaserEffect();
                    return c;
                }),
                (g.prototype.showLightningEffect = function (b) {
                    var c = this,
                        d = this.getLightningEffect();
                    if (this._grid instanceof a.CircleWorld) {
                        var e = b.x - this._grid.anchor.x,
                            f = b.y - this._grid.anchor.y,
                            g = Math.sqrt(e * e + f * f),
                            h = Math.atan2(f, e);
                        d.y = this._grid.anchor.y + Math.sin(h + this._grid.anchor.rotation) * g + this._grid.bubbleContainer.y;
                    } else d.y = b.y + this._grid.bubbleContainer.y;
                    (d.play('idle', !0),
                        this._bubbleContainer.addChild(d),
                        a.SoundsManager.lightningActivate(),
                        setTimeout(function () {
                            (d.stop(), c._bubbleContainer.removeChild(d));
                        }, 500));
                }),
                (g.prototype.showLaserEffect = function (b) {
                    var c = this,
                        d = this.getLaserEffect(),
                        e = b.getComponent(a.TypeBubbleComponent.LASER),
                        f = e.visual.getAngle();
                    if (this._grid instanceof a.CircleWorld) {
                        var g = b.x - this._grid.anchor.x,
                            h = b.y - this._grid.anchor.y,
                            i = Math.sqrt(g * g + h * h),
                            j = Math.atan2(h, g);
                        ((d.x = this._grid.anchor.x + Math.cos(j + this._grid.anchor.rotation) * i + this._grid.bubbleContainer.x), (d.y = this._grid.anchor.y + Math.sin(j + this._grid.anchor.rotation) * i + this._grid.bubbleContainer.y));
                    } else ((d.x = b.x + this._grid.bubbleContainer.x), (d.y = b.y + this._grid.bubbleContainer.y));
                    (this._bubbleContainer.addChild(d),
                        d.show(f),
                        a.SoundsManager.laserBall(),
                        setTimeout(function () {
                            ((d.isFree = !0), c._bubbleContainer.removeChild(d));
                        }, 500));
                }),
                (g.prototype.scrollMap = function (a, b, c) {
                    for (var d = 0; d < this._lightningEffect.length; d++) TweenLite.to(this._lightningEffect[d], c, { delay: 0.05, y: this._lightningEffect[d].y + b, ease: Sine.easeOut });
                    for (var d = 0; d < this._lasers.length; d++) TweenLite.to(this._lasers[d], c, { delay: 0.05, y: this._lasers[d].y + b, ease: Sine.easeOut });
                }),
                (g.prototype.afterCollision = function (b, c) {
                    var d = this._grid.effectiveShots;
                    (d ? (this._lastEffectiveShot < d && this._effectiveShotForFreeBomb++, (this._lastEffectiveShot = d)) : ((this._effectiveShotForFreeBomb = 0), (this._lastEffectiveShot = -1)),
                        this._bombBoosterBtn.isFull || (this._bombBoosterBtn.setProgress(this._effectiveShotForFreeBomb / a.UserGameData.FREE_BOMB_SHOOT_COUNT), a.LoadManager.ATLAS_UI && this._bombBoosterBtn.isFull && ((this._cannonSgn.alpha = 0), this._cannonSgn.scale.set(0.3), TweenLite.to(this._cannonSgn, 0.4, { alpha: 1, overwrite: 'auto' }), TweenLite.to(this._cannonSgn, 0.6, { rotation: -0.3, delay: 0.1, ease: Back.easeOut }), TweenLite.to(this._cannonSgn.scale, 0.4, { x: 0.9, y: 0.9, ease: Back.easeOut }), TweenLite.to(this._cannonSgn, 0.4, { alpha: 0, delay: 1 }), a.SoundsManager.getFreeBomb())),
                        d >= a.UserGameData.EXCELLENT_COMPLIMENT ? (this._compliment = f.EXCELLENT) : d >= a.UserGameData.FANTASTIC_COMPLIMENT ? (this._compliment = f.FANTASTIC) : d >= a.UserGameData.SUPER_COMPLIMENT && (this._compliment = f.SUPER));
                }),
                (g.prototype.guidelineBegin = function () {
                    this._tmpSwapDown = !1;
                }),
                (g.prototype.guidelineNLMove = function (b, c, d, e) {
                    if (this._selectedBomb) (this._grid.unselectAllBubbles(), this.updateBombGuideline(b, c, d, e), this._bubbleContainer.addChild(g.BOMB_GUIDELINE));
                    else if (this._selectedFireball) (this._grid.unselectAllBubbles(), this._grid.selectFireGuideline());
                    else if (this._selectedRainbow) (this._grid.unselectAllBubbles(), this._grid.selectRainbowGuideline(d, e));
                    else if (this._selectedLightning) {
                        (this._grid.unselectAllBubbles(), this._grid.selectLightningGuideline(d, e));
                        var f = c;
                        if (this._grid instanceof a.CircleWorld) {
                            var h = b - this._grid.anchor.x,
                                i = f - this._grid.anchor.y,
                                j = Math.sqrt(h * h + i * i),
                                k = Math.atan2(i, h);
                            f = this._grid.anchor.y + Math.sin(k + this._grid.anchor.rotation) * j;
                        }
                        ((g.LINE_GUIDELINE.y = f + this._grid.bubbleContainer.y), (g.LINE_GUIDELINE.width = a.Options.MAP_WIDTH), (g.LINE_GUIDELINE.rotation = 0), (g.LINE_GUIDELINE.alpha = 0.35), this._bubbleContainer.addChild(g.LINE_GUIDELINE));
                    }
                }),
                (g.prototype.guidelineEnd = function () {
                    (this._bubbleContainer.removeChild(g.BOMB_GUIDELINE), this._bubbleContainer.removeChild(g.LINE_GUIDELINE), this._grid.unselectAllBubbles());
                }),
                (g.prototype.swapDown = function () {
                    this._swapIcon.visible && (this._tmpSwapDown = !0);
                }),
                (g.prototype.swap = function (b) {
                    (void 0 === b && (b = !1), this._grid.swap(), a.SoundsManager.swap(), a.UserGameData.checkTutor(a.UserGameData.TUTORIAL_LIST[a.AllPopups.CHANGE_BUBBLE_TUTORIAL], !0), g.TUTOR_MARK == a.AllPopups.CHANGE_BUBBLE_TUTORIAL && ((g.TUTOR_MARK = null), a.MI.get().popupManager.get(a.AllPopups.CHANGE_BUBBLE_TUTORIAL).hide()), (this._tmpSwapDown = !1));
                }),
                (g.prototype.swapIconUpTutor = function () {
                    a.MI.get().popupManager.isOverlay && this._currentLevel == a.UserGameData.TUTORIAL_LIST.CHANGE_BUBBLE_TUTORIAL && (this.swap(), (this._swapIcon.interactive = !1));
                }),
                (g.prototype.showSwapIcon = function (b) {
                    (void 0 === b && (b = !1), b ? null != this._tmpSwapIconInteractive && ((this._swapIcon.visible = this._tmpSwapIconInteractive), this._currentLevel == a.UserGameData.TUTORIAL_LIST.CHANGE_BUBBLE_TUTORIAL && (this._swapIcon.interactive = this._tmpSwapIconInteractive)) : ((this._swapIcon.visible = !0), this._currentLevel == a.UserGameData.TUTORIAL_LIST.CHANGE_BUBBLE_TUTORIAL && (this._swapIcon.interactive = !0)));
                }),
                (g.prototype.hideSwapIcon = function () {
                    ((this._tmpSwapIconInteractive = this._swapIcon.visible), (this._swapIcon.visible = !1), (this._swapIcon.interactive = !1));
                }),
                (g.prototype.keyDown = function (b) {
                    if (a.MI.get().isMapEditor)
                        switch (b) {
                            case KY.Keys.ONE:
                                this._grid.debugTrace1();
                                break;
                            case KY.Keys.TWO:
                                this._grid.debugTrace2();
                                break;
                            case KY.Keys.THREE:
                                (console.log('---------- TRACE MOVES ---------------'), console.log(JSON.stringify(this._debugTouch)), console.log('--------------------------------------\n'));
                                break;
                            case KY.Keys.FOUR:
                                this._grid.debugTrace3();
                                break;
                            case KY.Keys.FIVE:
                                this._grid.debugTrace5();
                        }
                    0 == this.canTouch || a.MI.get().popupManager.isOverlay || 0 == this._swapIcon.visible || (b == KY.Keys.SPACE && (this.swap(!0), this._debugTouch && this._debugTouch.push([4, Date.now() - this._debugTouchTime, 0, 0])));
                }),
                (g.prototype.stageClear = function () {
                    this._needShowWinPopup = !0;
                }),
                (g.prototype.gameWin = function () {
                    (this._lvlCompleteSgn.scale.set(0.1), TweenLite.to(this._lvlCompleteSgn, 0.15, { alpha: 1, y: 0, delay: 1, overwrite: 'auto' }), TweenLite.to(this._lvlCompleteSgn.scale, 0.5, { x: 1, y: 1, delay: 1, ease: Back.easeOut }), TweenLite.to(this._lvlCompleteSgn.scale, 0.4, { x: 0.001, y: 0.001, delay: 2, ease: Back.easeIn }), TweenMax.to(this._lvlCompleteSgn, 0.15, { alpha: 0, delay: 2.5, overwrite: 'auto' }), (this._winPopupDelay = Date.now()), this._bombBoosterBtn.isFull && a.Statistics.event_dropFreeBomb());
                }),
                (g.prototype.gameOver = function () {
                    var b = this;
                    return 0 == this._bubbleCounter.value && this._bombBoosterBtn.isFull
                        ? (this.addExtraBubble(1, !0), this.grid.continue(!1), this.staticToggleBombBooster(!0), (this._lastBombBooster = !0), void this._bubbleCounter.reset5Bubbles())
                        : (a.UserGameData.setGameState(!1),
                          setTimeout(function () {
                              a.MI.get().popupManager.add(a.AllPopups.FAIL, g.replayCount, b._currentLevel, b._mode);
                          }, 700),
                          g.replayCount++,
                          void (this._bombBoosterBtn.isFull && a.Statistics.event_dropFreeBomb()));
                }),
                (g.prototype.gameContinue = function (b) {
                    (void 0 === b && (b = !0), a.UserGameData.setGameState(!0), a.SoundsManager.gameMusicFadeBack(), b && this.showSwapIcon());
                }),
                (g.prototype.bubblePopScore = function (b, c, d, e, f, g, h) {
                    var i = f ? d : this._grid.lastShotInfo.color,
                        j = 0;
                    if (a.Bubble.BOOSTER_SCORE.indexOf(i) != -1 || a.Bubble.BOOSTER_SCORE.indexOf(e) != -1) {
                        var k = this._grid.effectiveShots + (i == a.BubbleColor.FIREBALL ? 1 : 0);
                        j = a.UserGameData.SCORE_MODIF_BOOST - a.UserGameData.SCORE_MODIF_DEFAULT + k * a.UserGameData.SCORE_MODIF_DEFAULT;
                    } else j = this._grid.effectiveShots * a.UserGameData.SCORE_MODIF_DEFAULT;
                    (f && (j = a.UserGameData.SCORE_MODIF_DROP), a.Bubble.NO_SCORE.indexOf(d) != -1 && (j = 0), g && (j = a.UserGameData.SCORE_MODIF_FOUNTAIN), d == a.BubbleColor.PENTAGON && (j = a.UserGameData.SCORE_MODIF_PENTAGON * Math.max(this._grid.effectiveShots - 5, 1)), 0 != j && ((this._gameScore += j), this.setProgress(this._gameScore), this._bubbleContainer.addChild(a.PopScore.getPopup('' + j, a.Bubble.colorValue(i), b, c)), h && !this._isShake && this.shake()));
                }),
                (g.prototype.bounceWall = function (a) {
                    if (a) {
                        var b = -510;
                        ((this._leftBorder.x = b - 10), TweenLite.to(this._leftBorder, 0.2, { x: b }));
                    } else {
                        var b = 510;
                        ((this._rightBorder.x = b + 10), TweenLite.to(this._rightBorder, 0.2, { x: b }));
                    }
                }),
                (g.prototype.startFountain = function () {
                    (this._bubbleCounter.value > 0 ? a.SoundsManager.levelWinStartBallsFountain(1.5) : a.SoundsManager.levelWinNoBallsFountain(1), (this._fountainStarted = !0), this._bubbleCounter.startFountain(), this.hideSwapIcon());
                }),
                (g.prototype.endFountain = function () {
                    this._fountainStarted = !1;
                }),
                (g.prototype.checkCanShoot = function (a) {
                    ((this._canTouch = a), a && this._compliment != f.NONE && this._currentLevel > 1 && (this._lastCompliment != this._compliment && (this.showCentralSgn(this._compliment, 1), (this._lastCompliment = this._compliment)), (this._compliment = f.NONE)));
                }),
                (g.prototype.showBoostInfo = function (b, c) {
                    switch (((this._boostButtonLayer.interactiveChildren = !1), (this._boostButtonLayer.alpha = 0), (this._boostInfoLayer.interactiveChildren = !0), (this._boostInfoLayer.alpha = 1), this.hideSwapIcon(), this._bubbleCounter.countVisible(!1), c ? ((this._closeBoostInfo.visible = !1), (this._closeBoostInfo.enabled = !1), (this._boostInfoCloseBg.visible = !1)) : ((this._closeBoostInfo.visible = !0), (this._closeBoostInfo.enabled = !0), (this._boostInfoCloseBg.visible = !0)), b)) {
                        case 0:
                            ((this._boostInfoTxt.text = a.StringManager.get('RAINBOW_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0002'));
                            break;
                        case 1:
                            ((this._boostInfoTxt.text = a.StringManager.get('FIREBALL_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0003'));
                            break;
                        case 2:
                            ((this._boostInfoTxt.text = a.StringManager.get('LIGHTNING_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0001'));
                            break;
                        case 3:
                            ((this._boostInfoTxt.text = a.StringManager.get('BOMB_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0004'));
                    }
                }),
                (g.prototype.hideBoostInfo = function () {
                    ((this._boostButtonLayer.interactiveChildren = !0), (this._boostButtonLayer.alpha = 1), (this._boostInfoLayer.interactiveChildren = !1), (this._boostInfoLayer.alpha = 0), this.showSwapIcon(!0), this._bubbleCounter.countVisible(!0));
                }),
                (g.prototype.updateBoostButtons = function (b) {
                    switch ((this._lightningBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT)), this._rainbowBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT)), this._fireballBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT)), this._bombBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT)), b)) {
                        case 0:
                            this.toggleLightningBooster();
                            break;
                        case 1:
                            this.toggleRainbowBooster();
                            break;
                        case 2:
                            this.toggleFireballBooster();
                            break;
                        case 3:
                            this.toggleBombBooster();
                    }
                }),
                (g.prototype.buyBoostCallback = function (a) {
                    this.updateBoostButtons(a);
                }),
                (g.prototype.toggleBooster = function () {
                    this._selectedRainbow ? this.toggleRainbowBooster() : this._selectedFireball ? this.toggleFireballBooster() : this._selectedBomb ? this.toggleBombBooster() : this._selectedLightning && this.toggleLightningBooster();
                }),
                (g.prototype.toggleLightningBooster = function () {
                    if (this.canTouch) {
                        if (a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT) <= 0 && !this._lightningBoosterBtn.isInfinity) return void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 0, this.buyBoostCallback, this);
                        ((this._selectedLightning = !this._selectedLightning), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 1, this._selectedLightning ? 1 : 0]), this._grid.setLightning(this._selectedLightning), a.SoundsManager.lightningSelected(this._selectedLightning), this._selectedLightning ? (this.showBoostInfo(2), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._lightningBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)), g.TUTOR_MARK == a.AllPopups.LIGHTNING_TUTORIAL && a.MI.get().popupManager.get(a.AllPopups.LIGHTNING_TUTORIAL).hide());
                    }
                }),
                (g.prototype.toggleBombBooster = function () {
                    if (this.canTouch) return a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT) <= 0 && !this._bombBoosterBtn.isFull && !this._bombBoosterBtn.isInfinity ? void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 3, this.buyBoostCallback, this) : void this.staticToggleBombBooster();
                }),
                (g.prototype.staticToggleBombBooster = function (b) {
                    ((this._selectedBomb = !this._selectedBomb), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 4, this._selectedBomb ? 1 : 0]), this._grid.setBomb(this._selectedBomb), a.SoundsManager.bombSelected(this._selectedBomb), this._selectedBomb ? (this.showBoostInfo(3, b), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._bombBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)), g.TUTOR_MARK == a.AllPopups.BOMB_TUTORIAL && a.MI.get().popupManager.get(a.AllPopups.BOMB_TUTORIAL).hide());
                }),
                (g.prototype.toggleRainbowBooster = function () {
                    if (this.canTouch) {
                        if (a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT) <= 0 && !this._rainbowBoosterBtn.isInfinity) return void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 1, this.buyBoostCallback, this);
                        ((this._selectedRainbow = !this._selectedRainbow), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 2, this._selectedRainbow ? 1 : 0]), this._grid.setRainbow(this._selectedRainbow), a.SoundsManager.rainbowSelected(this._selectedRainbow), this._selectedRainbow ? (this.showBoostInfo(0), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._rainbowBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)), g.TUTOR_MARK == a.AllPopups.RAINBOW_TUTORIAL && a.MI.get().popupManager.get(a.AllPopups.RAINBOW_TUTORIAL).hide());
                    }
                }),
                (g.prototype.toggleFireballBooster = function () {
                    if (this.canTouch) {
                        if (a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT) <= 0 && !this._fireballBoosterBtn.isInfinity) return void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 2, this.buyBoostCallback, this);
                        ((this._selectedFireball = !this._selectedFireball), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 3, this._selectedFireball ? 1 : 0]), this._grid.setFireball(this._selectedFireball), a.SoundsManager.fireballSelected(this._selectedFireball), this._selectedFireball ? (this.showBoostInfo(1), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._fireballBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)), g.TUTOR_MARK == a.AllPopups.FIREBALL_TUTORIAL && a.MI.get().popupManager.get(a.AllPopups.FIREBALL_TUTORIAL).hide());
                    }
                }),
                (g.prototype.fired = function () {
                    (0 == this._currentLevel && g._countfired < 5 && (g._countfired > 0 && a.MI.get().social.reachGoal('bub_' + g._countfired), g._countfired++), (this._specialBubbleMark = null), (this._lastBombBooster = !1));
                    var b = !1;
                    (this._selectedRainbow
                        ? (this.toggleRainbowBooster(), 0 == this._rainbowBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.RAINBOW_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.RAINBOW, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._rainbowBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT)))
                        : this._selectedFireball
                          ? ((b = !0), this.toggleFireballBooster(), 0 == this._fireballBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.FIREBALL_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.FIREBALL, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._fireballBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT)))
                          : this._selectedBomb
                            ? (this.toggleBombBooster(), this._bombBoosterBtn.isFull ? (this._bombBoosterBtn.setProgress(0), (this._effectiveShotForFreeBomb = -1), a.Statistics.event_useFreeBomb()) : 0 == this._bombBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.BOMB_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.BOMB, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._bombBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT)))
                            : this._selectedLightning && (this.toggleLightningBooster(), 0 == this._lightningBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.LIGHTNING_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.LIGHTNING, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._lightningBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT))),
                        a.SoundsManager.shoot(b),
                        (this._lbShootCount += 1));
                }),
                (g.prototype.lastBubble = function () {
                    this.hideSwapIcon();
                }),
                (g.prototype.setProgress = function (a) {
                    if (this._mode == e.NEW_YEAR22) return void (this._scoreText.text = '' + a);
                    var b = this._maxScore ? a / this._maxScore : 0;
                    if ((b <= 0 ? (b = 1e-5) : b > 1 && (b = 1), 0 == a)) for (var c = 0; c < this._progressStars.length; c++) this._progressStars[c].frameName = 'uiStarProgress0001';
                    (a >= this._starScore[0] && 0 == this._starsActivated && ((this._starsActivated = 1), this.jumpProgressStar(this._progressStars[0], 0)), a >= this._starScore[1] && 1 == this._starsActivated && ((this._starsActivated = 2), this.jumpProgressStar(this._progressStars[1], 1)), a >= this._starScore[2] && 2 == this._starsActivated && ((this._starsActivated = 3), this.jumpProgressStar(this._progressStars[2], 2)), (this._progressMask.scale.x = b), (this._scoreText.text = '' + a));
                }),
                (g.prototype.jumpProgressStar = function (b, c) {
                    (TweenLite.to(b.scale, 0.15, { overwrite: !0, x: 0.9, y: 0.9 }),
                        TweenLite.to(b, 0.1, { delay: 0.15, rotation: 0.2 * (Math.random() > 0.5 ? -1 : 1) }),
                        TweenLite.to(b.scale, 0.1, {
                            overwrite: !0,
                            delay: 0.15,
                            x: 1.25,
                            y: 1.25,
                            onComplete: function () {
                                ((b.frameName = 'uiStarProgress0002'), a.SoundsManager.getStarInLevel(c), TweenLite.to(b.scale, 0.8, { delay: 0.1, x: 1, y: 1, ease: Elastic.easeOut }), TweenLite.to(b, 0.8, { delay: 0.1, rotation: 0, ease: Elastic.easeOut }));
                            },
                        }));
                }),
                (g.prototype.onDown = function (b, c, d, e) {
                    if ((this._debugTouch && null != this._debugReplayTime && !e && this._debugTouch.push([1, Date.now() - this._debugTouchTime, b, c]), !a.MI.get().popupManager.isOverlay)) {
                        if (g.ONCE_BLOCK_DOWN) return void (g.ONCE_BLOCK_DOWN = !1);
                        if (IS_DESKTOP && e) return void this.keyDown(KY.Keys.SPACE);
                        if (!this.canDown) return (this._grid.skipDemo(), (this._postDownX = b), (this._postDownY = c), void (this._postDowned = !0));
                        ((this._isMouseDown = !0), (this._mouseDownTime = Date.now()), this._tutorialHand && (a.MI.get().social.reachGoal('tut_hand'), this._tutorialHand.hide(), (this._tutorialHand = null)), this._grid.touch(b - this._mainContainer.x, c - this._mainContainer.y, !0));
                    }
                }),
                (g.prototype.onUp = function (a, b) {
                    if ((this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([2, Date.now() - this._debugTouchTime, a, b]), (this._postDowned = !1), this._swapIcon.visible && this._tmpSwapDown && this.swap(), this._grid && this.canTouch && this._isMouseDown)) {
                        this._isMouseDown = !1;
                        var c = Date.now(),
                            d = c - this._lastMoveTime,
                            e = c - this._mouseDownTime;
                        null != this._lastMoveX && d < this.MOVE_MIN_TIME_DELTA && e >= this.MOVE_MIN_TIME_DELTA + 1 && (this._grid.move(this._lastMoveX - this._mainContainer.x, this._lastMoveY - this._mainContainer.y), (this._lastMoveX = null), (this._lastMoveY = null));
                        var f = (this._selectedRainbow || this._selectedBomb || this._selectedFireball || this._selectedLightning) && 1 != this._lastBombBooster;
                        this._grid.fireBubble(0 == f);
                    }
                }),
                (g.prototype.onMove = function (b, c) {
                    if (this._grid && this.canTouch) {
                        if (this._grid.pcMode) {
                            if (a.MI.get().popupManager.isOverlay) return void g.instance.grid.clearGuidline();
                        } else if (!this._isMouseDown) return;
                        ((this._lastMoveTime = Date.now()), (this._lastMoveX = this._varMoveX), (this._lastMoveY = this._varMoveY), (this._varMoveX = b), (this._varMoveY = c), this._grid.move(b - this._mainContainer.x, c - this._mainContainer.y) && ((this._lastMoveX = null), (this._lastMoveY = null)));
                    }
                }),
                (g.prototype.debugUpdate = function (b) {
                    if (a.MI.get().isMapEditor && this._debugReplay && null != this._debugReplayTime) {
                        if (this._debugReplay.length) {
                            var c = this._debugReplay[0][0],
                                d = this._debugReplay[0][1],
                                e = this._debugReplay[0][2],
                                f = this._debugReplay[0][3];
                            if (d <= this._debugReplayTime - 4e3) {
                                switch (c) {
                                    case 1:
                                        (this.onMove(e, f), this.onDown(e, f));
                                        break;
                                    case 2:
                                        (this.onMove(e, f), this.onUp(e, f));
                                        break;
                                    case 4:
                                        this.swap(!0);
                                        break;
                                    case 5:
                                        switch (e) {
                                            case 1:
                                                this.toggleLightningBooster();
                                                break;
                                            case 2:
                                                this.toggleRainbowBooster();
                                                break;
                                            case 3:
                                                this.toggleFireballBooster();
                                                break;
                                            case 4:
                                                this.toggleBombBooster();
                                        }
                                }
                                this._debugReplay.shift();
                            }
                        }
                        this._debugReplayTime += 16 * b;
                    }
                }),
                (g.prototype.update = function (b) {
                    if (this._grid && this._isLoaded) {
                        (this.specialBubbleFlag && this._grid.getStopCheckZeroBubble() && this._levelStart && 0 == a.MI.get().popupManager.isOverlay && ((this.specialBubbleFlag = !1), this._grid.cancelStopCheckZeroBubble()),
                            this.debugUpdate(b),
                            this._postDowned && this.canDown && ((this._postDowned = !1), this.onDown(this._postDownX, this._postDownY), this.onMove(this._postDownX, this._postDownY)),
                            this._needShowWinPopup && Date.now() - this._winPopupDelay > 2500 && ((this._needShowWinPopup = !1), a.UserGameData.setGameState(!1), a.MI.get().popupManager.clearQueue(), a.MI.get().popupManager.add(a.AllPopups.WIN, this._currentLevel, this._starsActivated, this._gameScore, this._mode)),
                            this._tutorialHand && this._tutorialHand.update(b),
                            this.canTouch ? (a.Options.GUIDELINE_NO_LIMIT ? (this._bubblePlace.frameName = g.DOCK_GUIDELINE_NOLIMIT) : (this._bubblePlace.frameName = g.DOCK_ACTIVE)) : (this._bubblePlace.frameName = g.DOCK_INACTIVE),
                            this._needShowModification && this._modificationVisual && this._modificationVisual.isReadyToShow && (this._modifications.length ? (this._modificationVisual.show(this._modifications.pop()), this._modifContainer.addChild(this._modificationVisual)) : (this._levelStart = !0)),
                            this._bombBoosterBtn && this._bombBoosterBtn.update(b));
                        for (var c = 0; c < this._crownSgnActive.length; c++) this._crownSgnActive[c].update(b);
                        for (var c = 0; c < this._lockSgnActive.length; c++) this._lockSgnActive[c].update(b);
                        if (this._isShake) {
                            var d = this.game.width,
                                e = this.game.height;
                            ((!this._shakeX || (a.Utils.equal(this._grid.x, this._shakeX, 0.1) && a.Utils.equal(this._grid.y, this._shakeY, 0.1))) && ((this._shakeX = Math.random() * this._shakeIntensity * d * 2 - this._shakeIntensity * d), (this._shakeY = Math.random() * this._shakeIntensity * e * 2 - this._shakeIntensity * e)), (this._grid.x += 0.1 * (this._shakeX - this._grid.x)), (this._grid.y += 0.1 * (this._shakeY - this._grid.y)), (this._shakeDuration -= 16 * b), this._shakeDuration <= 0 && ((this._grid.x = 0), (this._grid.y = 0), (this._isShake = !1)));
                        }
                        (this._grid.update(b, this.mouseX - this._mainContainer.x, this.mouseY - this._mainContainer.y), this._bubbleCounter.update(b), (this._swapIcon.rotation += 0.05 * b));
                    }
                }),
                (g.prototype.shake = function () {
                    ((this._isShake = !0), (this._shakeDuration = 70), (this._shakeIntensity = 0.02), (this._shakeX = 0), (this._shakeX = 0));
                }),
                (g.prototype.createBombGuideline = function () {
                    if (!g.BOMB_GUIDELINE) {
                        ((g.BOMB_GUIDELINE = new PIXI.Container()), (g._bombGuidelineSprites = []));
                        for (var b = 0; b < a.World.BOMB_MASK.length; b++) {
                            var d = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghostWhite'),
                                e = a.World.BOMB_MASK[b],
                                f = e[0] % 2 == 0;
                            ((d.x = a.Options.BUBBLE_GAP_X * (e[1] + 3) + (f ? 0 : a.Options.BUBBLE_RADIUS) - a.Options.GRID_OFFSET_X), (d.y = a.Options.BUBBLE_GAP_Y * e[0]), (d.bx = d.x), (d.by = d.y), (d.cx = e[1] - 1), (d.cy = e[0]), (d.odd = f), g._bombGuidelineSprites.push(d), g.BOMB_GUIDELINE.addChild(d));
                        }
                    }
                }),
                (g.prototype.updateBombGuideline = function (b, c, d, e) {
                    for (var f = 0; f < g._bombGuidelineSprites.length; f++) {
                        var h = g._bombGuidelineSprites[f],
                            i = (e + h.cy) % 2 == 0,
                            j = this._grid.getBubbleByCell(d + h.cx - (i ? 0 : 1) - (h.odd && i ? 1 : 0), e + h.cy),
                            k = null != j && !j.isAnchor;
                        k ? ((h.alpha = 0), j.setSelect(!0)) : (h.alpha = 0.5);
                        var l = h.bx + b,
                            m = h.by + c;
                        if (this._grid instanceof a.CircleWorld) {
                            var n = l - this._grid.anchor.x,
                                o = m - this._grid.anchor.y,
                                p = Math.sqrt(n * n + o * o),
                                q = Math.atan2(o, n);
                            ((l = this._grid.anchor.x + Math.cos(q + this._grid.anchor.rotation) * p), (m = this._grid.anchor.y + Math.sin(q + this._grid.anchor.rotation) * p));
                        }
                        ((h.x = l + this._grid.bubbleContainer.x), (h.y = m + this._grid.bubbleContainer.y));
                    }
                }),
                Object.defineProperty(g.prototype, 'canTouch', {
                    get: function () {
                        return this._canTouch && this._levelStart;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(g.prototype, 'grid', {
                    get: function () {
                        return this._grid;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(g.prototype, 'currentLevel', {
                    get: function () {
                        return this._currentLevel;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(g.prototype, 'canDown', {
                    get: function () {
                        return this._grid && this.canTouch && !a.PXButton.checkClickedButton();
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(g.prototype, 'lbShootCountDelta', {
                    get: function () {
                        return this._mapData.bubbles - this._lbShootCount;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(g.prototype, 'mode', {
                    get: function () {
                        return this._mode;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (g.ONCE_BLOCK_DOWN = !1),
                (g.CANNON_BOTTOM_OFFSET_MOBILE = 400),
                (g.CANNON_BOTTOM_OFFSET_PC = 320),
                (g.DOCK_INACTIVE = 'dock0002'),
                (g.DOCK_ACTIVE = 'dock0001'),
                (g.DOCK_GUIDELINE_NOLIMIT = 'dock0003'),
                (g._countfired = 0),
                g
            );
        })(KY.State);
    a.GameStage = d;
    var e;
    !(function (a) {
        ((a[(a.NORMAL = 0)] = 'NORMAL'), (a[(a.NEW_YEAR22 = 1)] = 'NEW_YEAR22'));
    })((e = a.GAME_MODE || (a.GAME_MODE = {})));
    var f;
    !(function (a) {
        ((a.NONE = '_'), (a.SUPER = 'textEffect0001'), (a.FANTASTIC = 'textEffect0002'), (a.EXCELLENT = 'textEffect0003'));
    })(f || (f = {}));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                return (null !== d && d.apply(this, arguments)) || this;
            }
            return (
                __extends(f, d),
                (f.prototype.preload = function () {
                    f.LOADED || (a.MI.get().CG.loadingStart(), this.loadAtlases(['garden']), this.loadAudio('garden/music', 'garden_music', !0), this.loadAudio('garden/sfx', 'garden_sfx', !0));
                }),
                (f.prototype.create = function () {
                    (f.LOADED || a.MI.get().CG.loadingStop(), (f.LOADED = !0));
                    var d = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_ENTER_TIME);
                    (a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_ENTER_TIME, a.MI.get().time), (this._firstEnter = 0 == d), (this._rnd = new KY.Rnd()), (this._plantContainer = new b()), (this._progressContainer = new b()), (this._progressContainer.visible = !1), (this._wallpaperBuilded = !1), (this._bottomWallpaperBuilded = !1), (this._window = new c('garden', 'window')), this._window.anchor.set(0.5, 1), (this._windowBorder = new c('garden', 'border')), (this._windowsill = new c('garden', 'windowsill')), (this._bottomWallpaperContainer = new b()), (this._wallpaperContainer = new b()), (this._backBtn = new a.PXButton('garden', ['ui/backBtn'])), this._backBtn.addOnClick(this.back, this));
                    var e = new PIXI.Text(a.StringManager.get('GRADEN_PLANT_BACK'), { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'center', fontSize: 54 });
                    (e.anchor.set(0.5),
                        this._backBtn.addChild(e),
                        (this._plantPot = new a.PlantPot()),
                        (this._plantPot.y = 200),
                        (this._fakePot = new a.FakePot()),
                        (this._fakePot.y = this._plantPot.y),
                        (this._plantBtn = new a.PXButton('garden', ['ui/orangeButton'])),
                        this._plantBtn.addOnClick(this.action, this),
                        (this._priceTag = new a.CoinText(0)),
                        (this._priceTag.fontSize = 65),
                        this._priceTag.scale.set(0.8),
                        (this._priceTag.y = 25),
                        this._priceTag.setup(Stage.getImage('garden', 'ui/gold'), null),
                        (this._buyCaption = new PIXI.Text(a.StringManager.get('GRADEN_PLANT_STATE_BEGIN'), { fontFamily: Stage.FONT_BOLD, fontSize: 42, fill: 15856113, align: 'center' })),
                        this._buyCaption.anchor.set(0.5),
                        (this._buyCaption.y = -45),
                        (this._buyCaption.alpha = 0.8),
                        (this._progressBg = new c('garden', 'ui/whiteProgressBarBg')),
                        (this._progress = new c('garden', 'ui/whiteProgressBar')),
                        (this._progressMask = new PIXI.Graphics()),
                        this._progressMask.beginFill(16711680, 0.3),
                        this._progressMask.drawRect(0, -25, 292, 50),
                        this._progressMask.endFill(),
                        (this._progressMask.x = -146),
                        (this._progress.mask = this._progressMask),
                        (this._progressTime = new PIXI.Text('0', { fontFamily: Stage.FONT_BOLD, fontSize: 46, fill: 16777215, align: 'center' })),
                        this._progressTime.anchor.set(0.5),
                        (this._progressTime.y = 80),
                        (this._boosterIcon = new c(0, 0, 'ui', 'shop/icons/lbLotIcon0002')),
                        (this._boosterIcon.visible = !1),
                        (this._wateringBtn = new a.GardenActionButton(1)),
                        this._wateringBtn.addOnClick(this.actionWatering, this),
                        (this._fertilizerBtn = new a.GardenActionButton(2)),
                        this._fertilizerBtn.addOnClick(this.actionFertilizer, this),
                        this._fertilizerBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT), a.UserGameData.MAX_GARDEN_FERTILIZER_COUNT),
                        (this._pesticidesBtn = new a.GardenActionButton(3, null, 35)),
                        this._pesticidesBtn.addOnClick(this.actionPesticides, this),
                        this._pesticidesBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PESTICIDES_COUNT)),
                        (this._popupText = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fontSize: 90, fill: 16777215, align: 'center', dropShadow: !0, dropShadowAlpha: 0.6, dropShadowAngle: 1.57, dropShadowBlur: 6, dropShadowDistance: 14, wordWrap: !0, wordWrapWidth: 0.8 * Stage.screenWidth, leading: 15 })),
                        this._popupText.anchor.set(0.5),
                        (this._popupText.visible = !1),
                        (this._coinShower = new a.MoneyShower(!1)),
                        (this._goldShower = new a.MoneyShower(!0)),
                        (this._dropMoney = new a.DropMoney(this)),
                        (this._tutTimer = 0),
                        (this._page = 0),
                        (this._rightArrow = new a.PXButton('garden', ['ui/arrow'])),
                        this._rightArrow.addOnClick(this.right, this),
                        (this._leftArrow = new a.PXButton('garden', ['ui/arrow'])),
                        this._leftArrow.addOnClick(this.left, this),
                        this._leftArrow.inverse(),
                        this.addChild(this._wallpaperContainer),
                        this.addChild(this._bottomWallpaperContainer),
                        this.addChild(this._windowBorder),
                        this.addChild(this._window),
                        this.addChild(this._windowsill),
                        this.addChild(this._backBtn),
                        this.addChild(this._plantContainer),
                        this.addChild(this._dropMoney),
                        this.addChild(this._plantBtn),
                        this.addChild(this._progressContainer),
                        this.addChild(this._wateringBtn),
                        this.addChild(this._fertilizerBtn),
                        this.addChild(this._pesticidesBtn),
                        this.addChild(this._rightArrow),
                        this.addChild(this._leftArrow),
                        this.addChild(this._coinShower),
                        this.addChild(this._goldShower),
                        this.addChild(this._boosterIcon),
                        this.addChild(this._popupText),
                        this._plantContainer.addChild(this._plantPot),
                        this._plantContainer.addChild(this._fakePot),
                        this._progressContainer.addChild(this._progressBg),
                        this._progressContainer.addChild(this._progress),
                        this._progressContainer.addChild(this._progressMask),
                        this._progressContainer.addChild(this._progressTime),
                        this._plantBtn.addChild(this._buyCaption),
                        this._plantBtn.addChild(this._priceTag),
                        a.LoaderScreen.hide(),
                        this.resize(),
                        this.game.on(KY.GameEvent.RESIZE, this.resize, this),
                        this.start(),
                        this._firstEnter && a.UserGameData.checkTutor('GARDEN_PLANT', !0) && (a.MI.get().popupManager.show(a.AllPopups.GARDEN_PLANT), (this._backBtn.alpha = 0), (this._backBtn.enabled = !1), (f.TUT_MARK = 'GARDEN_PLANT')),
                        a.Statistics.event_gardenEnter());
                }),
                (f.prototype.right = function () {
                    1 != this._page && ((this._page = 1), (this._rightArrow.visible = !1), (this._rightArrow.enabled = !1), (this._leftArrow.visible = !0), (this._leftArrow.enabled = !0), this.setUIButton(e.FAKE, !1), TweenLite.to(this._plantPot, 0.1, { alpha: 0, ease: Sine.easeIn }), TweenLite.to(this._plantPot.scale, 0.1, { x: 0.5, y: 0.5, ease: Sine.easeIn }), this._fakePot.scale.set(1), TweenLite.to(this._fakePot, 0.1, { alpha: 1, delay: 0.1, ease: Sine.easeIn }), this._fakePot.jumpPot());
                }),
                (f.prototype.left = function () {
                    0 != this._page && ((this._page = 0), (this._leftArrow.visible = !1), (this._leftArrow.enabled = !1), (this._rightArrow.visible = !0), (this._rightArrow.enabled = !0), this.setUIButton(this._currentUIMode), TweenLite.to(this._fakePot, 0.1, { alpha: 0, ease: Sine.easeIn }), TweenLite.to(this._fakePot.scale, 0.1, { x: 0.5, y: 0.5, ease: Sine.easeIn }), this._plantPot.scale.set(1), TweenLite.to(this._plantPot, 0.1, { alpha: 1, delay: 0.1, ease: Sine.easeIn }), this._plantPot.jumpPot());
                }),
                (f.prototype.buttonDelayDisabled = function () {
                    (this._wateringBtn.delayDisable(), this._fertilizerBtn.delayDisable(), this._pesticidesBtn.delayDisable());
                }),
                (f.prototype.start = function () {
                    (a.SoundsManager.gardenThemaPlay(), this._firstEnter ? ((this._rightArrow.enabled = !1), (this._rightArrow.visible = !1)) : ((this._rightArrow.enabled = !0), (this._rightArrow.visible = !0)), (this._leftArrow.enabled = !1), (this._leftArrow.visible = !1), this._fakePot.scale.set(1), (this._fakePot.alpha = 0), this._plantPot.scale.set(1), (this._plantPot.alpha = 1));
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        c = f.bugTime();
                    (b == -1 ? this.setUIButton(e.BEGIN) : 0 == b ? (this.setUIButton(e.WAKE), this._plantPot.planting(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME), a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME)), this._plantPot.sleep(!0), this.update(0)) : (this._plantPot.planting(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME), a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME)), this._plantPot.isDone ? (this.setUIButton(e.DONE), this._plantPot.setBoosterIcon(this.getBoosterId())) : (this.setUIButton(e.PLANT), this.update(0))), 0 != c ? (this._plantPot.activateBug(), this._wateringBtn.web(!0), this._fertilizerBtn.web(!0), a.UserGameData.checkTutor('GARDEN_BUG', !0) && (a.MI.get().popupManager.show(a.AllPopups.GARDEN_PESTICIDES), (f.TUT_MARK = 'GARDEN_BUG'))) : a.UserGameData.checkTutor('GARDEN_BUG', !1) && this._pesticidesBtn.close(), this.checkEmotion());
                }),
                (f.prototype.action = function () {
                    var b = this,
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.GOLD);
                    if (c == -1)
                        if (d >= a.UserGameData.GARDEN_BUY_PLANT_GOLD) {
                            (a.SoundsManager.garden_plant(), this.setUIButton(e.PLANT));
                            var g = a.MI.get().time;
                            (a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME, g),
                                a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME, a.UserGameData.GADEN_PLANT_TIME),
                                a.UserGameData.subProperty(a.USER_PROPERTY.GOLD, a.UserGameData.GARDEN_BUY_PLANT_GOLD),
                                this._plantPot.planting(a.UserGameData.GADEN_PLANT_TIME, g),
                                this._plantPot.setEmotion(a.PLANT_EMOTION.WATER),
                                this.update(0),
                                'GARDEN_PLANT' == f.TUT_MARK &&
                                    ((f.TUT_MARK = null),
                                    a.MI.get()
                                        .popupManager.get(a.AllPopups.GARDEN_PLANT)
                                        .hide()
                                        .then(function () {
                                            f.TUT_MARK = 'GARDEN_WATER';
                                        }),
                                    a.MI.get().popupManager.add(a.AllPopups.GARDEN_WATER)),
                                a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.GOLD, a.UserGameData.GARDEN_BUY_PLANT_GOLD, a.STATS_GAME_RESOURCE_PLACEMENT.GARDEN),
                                a.Statistics.event_gardenPlant());
                        } else this.showTextAlert(a.StringManager.get('GRADEN_NO_PETALS'));
                    else if (0 == c) d >= a.UserGameData.GARDEN_WAKE_PLANT_GOLD ? this.wakeupPlant() : a.MI.get().popupManager.show(a.AllPopups.GARDEN_WAKEUP, this.wakeupPlant, this);
                    else if (f.plantDone()) {
                        (a.SoundsManager.garden_harvest(), a.MI.get().CG.happytime(), this._plantPot.setBoosterIcon(this.getBoosterId()), this.showBooster(), a.Shop.addItemToUser(this._plantPot.boosterId - 1, 1, a.STATS_GAME_RESOURCE_PLACEMENT.GARDEN), a.BoostCounter.get().show(), a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME, 0), a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME, 0), a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_HAS_GROWN, 1), a.UserGameData.addProperty(a.USER_PROPERTY.GARDEN_PLANT_COUNT), this.setUIButton(e.WAKE), this._plantPot.hideBoosterIcon(), this._plantPot.sleep());
                        for (var h = 0; h < 3; h++)
                            setTimeout(function () {
                                b._dropMoney.addCoin(0, -400);
                            }, 150);
                        a.Statistics.event_gardenHarvest();
                    }
                }),
                (f.prototype.wakeupPlant = function () {
                    (this.setUIButton(e.PLANT), a.SoundsManager.garden_wakeup());
                    var b = a.MI.get().time;
                    (a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME, b), a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME, a.UserGameData.GADEN_WAKE_TIME), a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_PLANT_WATERING_TIME, 0), a.UserGameData.subProperty(a.USER_PROPERTY.GOLD, a.UserGameData.GARDEN_WAKE_PLANT_GOLD), this._plantPot.planting(a.UserGameData.GADEN_WAKE_TIME, b), this._plantPot.setEmotion(a.PLANT_EMOTION.WATER), this.update(0), this._plantPot.jumpPot(), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.GOLD, a.UserGameData.GARDEN_WAKE_PLANT_GOLD, a.STATS_GAME_RESOURCE_PLACEMENT.GARDEN), a.Statistics.event_gardenWake());
                }),
                (f.prototype.actionWatering = function () {
                    var b = this;
                    if (!f.plantNotActive()) {
                        var c = f.waterOffset();
                        if (0 == c) return void this.showTextAlert(a.StringManager.get('GRADEN_NO_REQUIRED_WATERING'));
                        'GARDEN_WATER' == f.TUT_MARK &&
                            ((f.TUT_MARK = null),
                            a.MI.get()
                                .popupManager.get(a.AllPopups.GARDEN_WATER)
                                .hide()
                                .then(function () {
                                    f.TUT_MARK = 'GARDEN_FERTILIZER';
                                }),
                            a.MI.get().popupManager.add(a.AllPopups.GARDEN_FERTILIZER));
                        var d = a.MI.get().time;
                        (a.UserGameData.addProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME, c),
                            a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_PLANT_WATERING_TIME, d),
                            this._plantPot.setActivateTime(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME)),
                            this._plantPot.actionAnim(1).then(function () {
                                (b._dropMoney.addCoin(0, -400), b.update(0));
                            }),
                            this.checkEmotion(),
                            this._plantPot.actionAnim(1),
                            this.buttonDelayDisabled(),
                            a.Statistics.event_gardenWater());
                    }
                }),
                (f.prototype.actionFertilizer = function () {
                    var b = this,
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT);
                    if (0 == c) return void a.MI.get().popupManager.show(a.AllPopups.GARDEN_BUY, 1, this.updateActionButtons, this);
                    var d = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME);
                    d <= 0 ||
                        f.plantDone() ||
                        this._plantPot.isDone ||
                        ('GARDEN_FERTILIZER' == f.TUT_MARK &&
                            ((f.TUT_MARK = null),
                            a.MI.get()
                                .popupManager.get(a.AllPopups.GARDEN_FERTILIZER)
                                .hide()
                                .then(function () {
                                    f.TUT_MARK = 'GARDEN_FERTILIZER2';
                                })),
                        this._plantPot.actionAnim(2).then(function () {
                            a.UserGameData.subProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT);
                            var c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME);
                            (a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME, Math.max(1, c - a.UserGameData.GADEN_FERTILIZER_BOOST)), b._plantPot.fertilizer(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME)), b._plantPot.jumpPot(), a.SoundsManager.garden_potFertilizerJump());
                        }),
                        this._fertilizerBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT) - 1, a.UserGameData.MAX_GARDEN_FERTILIZER_COUNT),
                        this.buttonDelayDisabled(),
                        a.Statistics.event_gardenFertilizer());
                }),
                (f.prototype.actionPesticides = function () {
                    var b = this,
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PESTICIDES_COUNT);
                    if (0 == c) return void a.MI.get().popupManager.show(a.AllPopups.GARDEN_BUY, 2, this.updateActionButtons, this);
                    var d = f.bugTime();
                    if (0 == d) return void this.showTextAlert(a.StringManager.get('GRADEN_NO_PESTS'));
                    'GARDEN_BUG' == f.TUT_MARK && ((f.TUT_MARK = null), a.MI.get().popupManager.get(a.AllPopups.GARDEN_PESTICIDES).hide());
                    var e = a.MI.get().time;
                    (this._plantPot.activateBug(!1), a.UserGameData.addProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME, e - d), a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_BUG_TIME, 0));
                    var g = f.waterOffset();
                    (g > 0 && a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_PLANT_WATERING_TIME, e - a.UserGameData.GARDEN_WATERING_TIME - 2),
                        this._plantPot.actionAnim(3).then(function () {
                            (b._plantPot.setActivateTime(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME)), b._dropMoney.addCoin(0, -400), b.update(0), b._wateringBtn.web(!1), b._fertilizerBtn.web(!1), b.checkEmotion());
                        }),
                        this.checkEmotion(),
                        this._pesticidesBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PESTICIDES_COUNT) - 1),
                        this.buttonDelayDisabled(),
                        a.Statistics.event_gardenPesticides());
                }),
                (f.prototype.updateActionButtons = function () {
                    (this._fertilizerBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_FERTILIZER_COUNT), a.UserGameData.MAX_GARDEN_FERTILIZER_COUNT), this._pesticidesBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PESTICIDES_COUNT)));
                }),
                (f.prototype.checkEmotion = function () {
                    return f.plantNotActive() ? void this._plantPot.setEmotion(a.PLANT_EMOTION.NONE) : void (f.haveBug() ? this._plantPot.setEmotion(a.PLANT_EMOTION.BUG) : 0 != f.waterOffset() ? this._plantPot.setEmotion(a.PLANT_EMOTION.WATER) : this._plantPot.setEmotion(a.PLANT_EMOTION.NONE));
                }),
                (f.prototype.setUIButton = function (b, c) {
                    if ((void 0 === c && (c = !0), c && (this._currentUIMode = b), !c || 1 != this._page))
                        switch ((this._plantPot.zPause(!0), b)) {
                            case e.FAKE:
                                ((this._plantBtn.enabled = !1), (this._plantBtn.visible = !1), (this._progressContainer.visible = !1), this._wateringBtn.disable(!0), this._fertilizerBtn.disable(!0), this._pesticidesBtn.disable(!0));
                                break;
                            case e.BEGIN:
                                ((this._plantBtn.enabled = !0), (this._plantBtn.visible = !0), (this._buyCaption.visible = !0), (this._buyCaption.y = -45), (this._buyCaption.text = a.StringManager.get('GRADEN_PLANT_STATE_BEGIN')), (this._buyCaption.alpha = 0.9), (this._priceTag.visible = !0), (this._priceTag.text = a.UserGameData.GARDEN_BUY_PLANT_GOLD), (this._progressContainer.visible = !1), this._wateringBtn.disable(!0), this._fertilizerBtn.disable(!0), this._pesticidesBtn.disable(!0));
                                break;
                            case e.PLANT:
                                ((this._plantBtn.enabled = !1), (this._plantBtn.visible = !1), (this._progressContainer.visible = !0), this._wateringBtn.disable(!1), this._fertilizerBtn.disable(!1), this._pesticidesBtn.disable(!1));
                                break;
                            case e.DONE:
                                (this._plantPot.setEmotion(a.PLANT_EMOTION.NONE), (this._plantBtn.enabled = !0), (this._plantBtn.visible = !0), (this._buyCaption.visible = !0), (this._buyCaption.y = 0), (this._buyCaption.text = a.StringManager.get('GRADEN_PLANT_STATE_DONE')), (this._buyCaption.alpha = 1), (this._priceTag.visible = !1), (this._progressContainer.visible = !1), this._wateringBtn.disable(!0), this._fertilizerBtn.disable(!0), this._pesticidesBtn.disable(!0));
                                break;
                            case e.WAKE:
                                ((this._plantBtn.enabled = !0), (this._plantBtn.visible = !0), (this._buyCaption.visible = !0), (this._buyCaption.y = -45), (this._buyCaption.text = a.StringManager.get('GRADEN_PLANT_STATE_WAKE')), (this._buyCaption.alpha = 0.9), (this._priceTag.visible = !0), (this._priceTag.text = a.UserGameData.GARDEN_WAKE_PLANT_GOLD), (this._progressContainer.visible = !1), this._plantPot.zPause(!1), this._wateringBtn.disable(!0), this._fertilizerBtn.disable(!0), this._pesticidesBtn.disable(!0));
                        }
                }),
                (f.prototype.back = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (a) {
                            return ((this._backBtn.enabled = !1), (this._backBtn.alpha = 0.5), (this._leftArrow.enabled = !1), (this._rightArrow.enabled = !1), (this._wateringBtn.enabled = !1), (this._fertilizerBtn.enabled = !1), (this._pesticidesBtn.enabled = !1), (this._plantBtn.enabled = !1), this._dropMoney.collect() ? this.exit() : (this._readyToExit = !0), [2]);
                        });
                    });
                }),
                (f.prototype.exit = function () {
                    this.game.states.start('Lobby', !1, !0, !0);
                }),
                (f.prototype.buildWallpaper = function () {
                    if (!this._wallpaperBuilded) {
                        this._wallpaperBuilded = !0;
                        var a = 280,
                            b = Stage.screenWidth + 20,
                            d = this._windowsill.y + 20,
                            e = Math.ceil(b / a),
                            f = Math.ceil(d / a);
                        a -= 1;
                        for (var g = 0; g < e; g++)
                            for (var h = 0; h < f; h++) {
                                var i = new c('garden', 'wall');
                                (i.anchor.set(0, 0), (i.x = -10 + g * a), (i.y = -10 + h * a), this._wallpaperContainer.addChild(i));
                            }
                    }
                }),
                (f.prototype.buildBottomWallpaper = function () {
                    if (!this._bottomWallpaperBuilded) {
                        this._bottomWallpaperBuilded = !0;
                        var a = 227,
                            b = Stage.screenWidth + 20,
                            d = Stage.screenHeight - this._windowsill.y + 20,
                            e = Math.ceil(b / a);
                        a -= 1;
                        for (var f = 0; f < e; f++) {
                            var g = new c('garden', 'bottomWallpaper');
                            (g.anchor.set(0, 1), (g.x = -10 + f * a), this._bottomWallpaperContainer.addChild(g));
                        }
                        this._bottomWallpaperContainer.height = d;
                    }
                }),
                (f.prototype.resize = function () {
                    ((this._windowsill.x = 0.5 * Stage.screenWidth),
                        (this._windowsill.y = Stage.screenHeight - 700),
                        (this._window.x = this._windowsill.x),
                        (this._window.y = this._windowsill.y - 110),
                        (this._bottomWallpaperContainer.y = Stage.screenHeight),
                        this.buildBottomWallpaper(),
                        (this._windowBorder.x = this._windowsill.x),
                        (this._windowBorder.y = this._windowsill.y),
                        (this._windowBorder.width = 1.2 * Stage.screenWidth),
                        this.buildWallpaper(),
                        (this._backBtn.x = 0.5 * this._backBtn.width + 50),
                        (this._backBtn.y = 0.5 * this._backBtn.height + 50),
                        (this._plantContainer.x = 0.5 * Stage.screenWidth),
                        (this._plantContainer.y = this._windowsill.y - 220),
                        (this._plantBtn.x = 0.5 * Stage.screenWidth),
                        (this._plantBtn.y = this._plantContainer.y + 320),
                        (this._progressContainer.x = 0.5 * Stage.screenWidth),
                        (this._progressContainer.y = this._plantContainer.y + 280),
                        (this._fertilizerBtn.x = 0.5 * Stage.screenWidth),
                        (this._fertilizerBtn.y = Stage.screenHeight - 224),
                        (this._wateringBtn.x = this._fertilizerBtn.x - 300),
                        (this._wateringBtn.y = this._fertilizerBtn.y),
                        (this._pesticidesBtn.x = this._fertilizerBtn.x + 300),
                        (this._pesticidesBtn.y = this._fertilizerBtn.y),
                        (this._coinShower.x = Stage.screenWidth - 350),
                        (this._coinShower.y = this._backBtn.y + 10),
                        (this._goldShower.x = this._coinShower.x),
                        (this._goldShower.y = this._coinShower.y + 130),
                        (this._dropMoney.x = this._plantContainer.x),
                        (this._dropMoney.y = this._windowsill.y - 60),
                        (this._rightArrow.x = Stage.screenWidth - 100),
                        (this._rightArrow.y = this._plantContainer.y),
                        (this._leftArrow.x = 100),
                        (this._leftArrow.y = this._rightArrow.y));
                }),
                (f.prototype.showTextAlert = function (a, b, c) {
                    (void 0 === b && (b = 90), void 0 === c && (c = 0.8), TweenLite.killTweensOf(this._popupText), (this._popupText.text = a), (this._popupText.visible = !0), (this._popupText.style.fontSize = b), (this._popupText.x = 0.5 * Stage.screenWidth), (this._popupText.y = 0.5 * Stage.screenHeight + 150), (this._popupText.alpha = 0), TweenLite.to(this._popupText, 0.2, { alpha: 1, y: 0.5 * Stage.screenHeight, ease: Sine.easeOut, overwrite: 'auto' }), TweenLite.to(this._popupText, 0.2, { alpha: 0, y: 0.5 * Stage.screenHeight - 150, ease: Sine.easeIn, delay: c, overwrite: 'auto' }));
                }),
                (f.prototype.showBooster = function () {
                    ((this._boosterIcon.frameName = 'shop/icons/lbLotIcon' + c.zeroPad(this._plantPot.boosterId, 4)), (this._boosterIcon.x = this._plantContainer.x + this._plantPot.x + this._plantPot.bonusX), (this._boosterIcon.y = this._plantContainer.y + this._plantPot.y + this._plantPot.bonusY), (this._boosterIcon.alpha = 0), (this._boosterIcon.visible = !0), TweenLite.to(this._boosterIcon, 0.3, { alpha: 1, overwrite: 'auto' }), TweenLite.to(this._boosterIcon, 0.2, { alpha: 0, delay: 0.8, overwrite: 'auto' }), TweenLite.to(this._boosterIcon, 1, { y: this._boosterIcon.y - 150 }));
                }),
                (f.prototype.showBackButton = function () {
                    (TweenLite.to(this._backBtn, 0.2, { alpha: 1 }), (this._backBtn.enabled = !0), (this._rightArrow.visible = !0), (this._rightArrow.enabled = !0), (this._rightArrow.alpha = 0), TweenLite.to(this._rightArrow, 0.2, { alpha: 1 }), this.showTextAlert(a.StringManager.get('TUT_GARDEN_BACK'), 80, 1.5), (this._hand = new KY.Sprite(0, 0, 'garden', 'ui/handUp')), this._hand.anchor.set(0.5, 0), (this._hand.x = 178), (this._hand.y = 200), this.addChild(this._hand));
                }),
                (f.prototype.update = function (b, c) {
                    var d = this;
                    (void 0 === c && (c = 0),
                        1 == f.LOADED &&
                            ('GARDEN_FERTILIZER2' == f.TUT_MARK && ((this._tutTimer += 0.016 * b), this._tutTimer >= 2.5 && ((f.TUT_MARK = null), this.showBackButton())),
                            this._plantPot.update(b),
                            this._dropMoney.update(b),
                            this._plantPot.haveActivePlant && ((this._progressMask.scale.x = Math.max(f.plantVisualProgress(), 1e-4)), (this._progressTime.text = a.Utils.formatTime(this._plantPot.time)), this._currentUIMode == e.PLANT && f.plantDone() && (this.setUIButton(e.DONE), this._plantPot.setBoosterIcon(this.getBoosterId()))),
                            this._readyToExit &&
                                0 == this._dropMoney.count &&
                                ((this._readyToExit = !1),
                                setTimeout(function () {
                                    d.exit();
                                }, 1e3)),
                            this._hand && (this._hand.y = 200 + 25 * (Math.sin(c / 15) + 1))));
                }),
                (f.prototype.getBoosterId = function () {
                    return 0 == a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_COUNT) ? 8 : (this._rnd.seed(a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME)), this._rnd.value < 0.8 ? this._rnd.rangeInt(2, 5) : this._rnd.rangeInt(6, 8));
                }),
                (f.prototype.shutdown = function () {
                    (this.game.off(KY.GameEvent.RESIZE, this.resize, this), a.SoundsManager.gameMusicStop(), this._hand && (this._hand.destroy(), (this._hand = null)), (f.TUT_MARK = null));
                }),
                Object.defineProperty(f.prototype, 'coinsShower', {
                    get: function () {
                        return this._coinShower;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (f.plantMainLevel = function () {
                    var b = 3;
                    return (a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_HAS_GROWN) && (b = 1), ((1 == b ? 3 : 1) + this.plantProgress() * b) >> 0);
                }),
                (f.plantDone = function () {
                    return this.plantMainLevel() >= 4;
                }),
                (f.plantSleeping = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME);
                    return 0 == b;
                }),
                (f.noPlant = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME);
                    return b == -1;
                }),
                (f.plantActive = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME);
                    return b > 0;
                }),
                (f.plantNotActive = function () {
                    return !this.plantActive() || 0 != this.plantDone();
                }),
                (f.plantVisualProgress = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME),
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        e = 0 == d;
                    if (!b || e) return 0;
                    var g = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_COUNT),
                        h = 0 == g ? a.UserGameData.GADEN_PLANT_TIME : a.UserGameData.GADEN_WAKE_TIME,
                        i = a.MI.get().time - c - f.timeOffset();
                    return Math.max((i + h - b) / h, 1e-4);
                }),
                (f.plantProgress = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_RIPENING_TIME),
                        c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        d = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME),
                        e = 0 == d;
                    if (!b || e) return 0;
                    var g = a.MI.get().time - c - f.timeOffset();
                    return Math.max(g / b, 1e-4);
                }),
                (f.timeOffset = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_BUG_TIME);
                    return 0 == b ? this.waterOffset() : a.MI.get().time - b;
                }),
                (f.haveBug = function () {
                    var a = f.bugTime();
                    return 0 != a;
                }),
                (f.bugTime = function () {
                    return f.plantNotActive() ? 0 : a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_BUG_TIME);
                }),
                (f.waterOffset = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_WATERING_TIME),
                        c = !1;
                    0 == b && ((b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME)), (c = !0));
                    var d = a.MI.get().time - b;
                    return c ? (0.5 * d) >> 0 : ((d -= a.UserGameData.GARDEN_WATERING_TIME), d <= 0 ? 0 : (0.5 * d) >> 0);
                }),
                (f.checkBug = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_NEED_SHOW);
                    if (b) {
                        var c = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_BUG_TIME);
                        if (0 == c && 0 == f.plantNotActive() && Stage.rnd.js >= a.UserGameData.GARDEN_BUG_PROBABILITY) {
                            var d = a.MI.get().time,
                                e = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_ENTER_TIME),
                                g = f.plantMainLevel(),
                                h = d - e,
                                i = a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_PLANT_COUNT);
                            if (0 == c && 0 != e && h > a.UserGameData.HOUR && g > 1 && g < 4 && i > 0) {
                                a.UserGameData.setProperty(a.USER_PROPERTY.GARDEN_BUG_TIME, d);
                                var j = f.waterOffset();
                                j > 0 && a.UserGameData.addProperty(a.USER_PROPERTY.GARDEN_PLANT_ACTIVATE_TIME, j);
                            }
                        }
                    }
                }),
                (f.LOADED = !1),
                f
            );
        })(KY.State);
    a.Garden = d;
    var e;
    !(function (a) {
        ((a[(a.BEGIN = 0)] = 'BEGIN'), (a[(a.PLANT = 1)] = 'PLANT'), (a[(a.DONE = 2)] = 'DONE'), (a[(a.WAKE = 3)] = 'WAKE'), (a[(a.FAKE = 4)] = 'FAKE'));
    })(e || (e = {}));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function f() {
                var a = (null !== d && d.apply(this, arguments)) || this;
                return ((a._oldMapScrollContainerY = 0), (a._mapScrollVelocity = 0), a);
            }
            return (
                __extends(f, d),
                (f.prototype.preload = function () {
                    if (!this._isFisrtLaunch && a.LoadManager.needLobbyPreload) {
                        var b = null;
                        (a.LoadManager.ATLAS_LOBBY || (b || (b = []), b.push('lobby'), (a.LoadManager.ATLAS_LOBBY = !0)), a.LoadManager.ATLAS_UI || (b || (b = []), b.push('ui'), (a.LoadManager.ATLAS_UI = !0)), a.LoadManager.FONT_LEVELBUTTON || (this.loadBmpFonts(['Pony-60-LevelButton']), (a.LoadManager.FONT_LEVELBUTTON = !0)), a.LoadManager.MUSIC_LOBBY || (this.loadAudio('lobby/music', 'lobby', !0), (a.LoadManager.MUSIC_LOBBY = !0)), a.LoadManager.SFX_LOBBY || (this.loadAudio('main/sfx', 'sfx', !1), (a.LoadManager.SFX_LOBBY = !0)), b && this.loadAtlases(b));
                    }
                }),
                (f.prototype.init = function (b, c, d) {
                    (void 0 === d && (d = !1), (f._instance = this), (this._startLobby = !1), (this._manualExit = c), (this._isLaunch = b), (this._fromGarden = d), (this._isFisrtLaunch = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) < a.UserGameData.IS_FIRST_LAUNCH_LEVEL));
                }),
                (f.prototype.create = function () {
                    if ((a.MI.get().CG.loadingStop(), this._isLaunch || this._isFisrtLaunch)) {
                        ((f.MAX_PREV_CURRENT_LEVEl = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL)), (f.PREV_RANK = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_RANK)), a.LoaderScreen.show(), (f.LAST_PLAY_LEVEL_FOR_SCROLL = null));
                        var b = new a.URLLoader(!0),
                            c = a.Main.settings ? a.Main.settings : 'gameSettings',
                            d = void 0;
                        ((d = new a.URLRequest('settings/'.concat(c, '.txt'))), (d.data = { id: a.MI.get().social.userID }), b.once(a.URLLoader.COMPLETE, this.loadedGameSettings, this), b.once(a.URLLoader.IO_ERROR, this.errorLoadGameSettings, this), b.load(d));
                    } else (a.UserGameData.immediatelySave(!0), a.LoaderScreen.hide(), this.start());
                }),
                (f.prototype.loadedGameSettings = function (b) {
                    b.self.close();
                    var c = JSON.parse(b.currentTarget.data);
                    ((f._DATA = c), (f.COUNT_LEVELS = c.levels), (f.COUNT_RND_LEVELS = c.rnd), (f.HARD_LEVELS = c.hardLevels), a.MI.get().isMapEditor && a.UserGameData.setProperty(a.USER_PROPERTY.CURRENT_LEVEL, a.MI.get().debugLevel ? a.MI.get().debugLevel : f.COUNT_LEVELS), a.EconomyOptions.initEconomy(c.shop.prices, c.pricesInCoins), a.Shop.init(c.shop), a.DailyPopup.init(c.dailyRewards), a.UserGameData.setupDailyReward(c.dailyRewards), a.NewRankPopup.init(c.rankReward), this._isFisrtLaunch ? this.launchLevel(a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL), !1, !1, !1) : (a.LoaderScreen.hide(), this.start()));
                }),
                (f.prototype.errorLoadGameSettings = function (b) {
                    (b.self.close(), a.LoaderScreen.hide(), a.MI.get().noServerConnect(!0));
                }),
                (f.prototype.start = function () {
                    (a.UserGameData.setGameState(!1), this._isFisrtLaunch || (a.SoundsManager.menuThemaPlay(), 1 != this._fromGarden && a.Garden.checkBug(), this.readyToStart(), this.initControls(), this.resize(), this.game.on(KY.GameEvent.RESIZE, this.resize, this)));
                }),
                (f.prototype.readyToStart = function () {
                    var d = this;
                    (a.PXButton.clearClickedButton(),
                        (this._startLobby = !0),
                        (this._bottomContainer = new c(this.centerX, 2 * this.centerY)),
                        this._bottomContainer.activateRelativeMode(),
                        (this._topContainer = new c(this.centerX, 0)),
                        this._topContainer.activateRelativeMode(),
                        (this._mapScrollContainer = new b()),
                        (this._mapLevelButtonContainer = new b()),
                        (this._mapLevelDotContainer = new b()),
                        (this._mapAlertContainer = new b()),
                        (this._mapTopContainer = new b()),
                        (this._curLevelMark = new a.MiniAvatarBlock()),
                        (this._levelMarkUpContainer = new b()),
                        (this._levelMarkDownContainer = new b()),
                        (this._topUIContainer = new b()),
                        (this._topUIBackground = new c(0, 0, 'lobby', 'lbTopBg')),
                        (this._topUIBackground.anchor.y = 0),
                        (this._topUIBackground.width = Math.max(Stage.screenWidth, Stage.screenHeight)),
                        (this._topUIBackground.interactive = !0),
                        (this._heartIcon = new c(0, 0, 'lobby', 'lbHeart')),
                        (this._heartIcon.y = 110),
                        this._heartIcon.scale.set(0.9),
                        (this._plusMoneyBtn = new a.PXButton('lobby', ['lbPlusBtn'])),
                        (this._plusMoneyBtn.y = this._heartIcon.y),
                        this._plusMoneyBtn.addOnUp(this.showShop, this),
                        (this._plusMoneyFakeBtn = new a.PXButton('lobby', ['alphaHeart'])),
                        (this._plusMoneyFakeBtn.y = this._heartIcon.y),
                        this._plusMoneyFakeBtn.setAnimationScale(0, 0.78),
                        this._plusMoneyFakeBtn.addOnUp(this.showShop, this),
                        (this._plusHeartBtn = new a.PXButton('lobby', ['lbPlusBtn'])),
                        (this._plusHeartBtn.y = this._heartIcon.y),
                        this._plusHeartBtn.addOnUp(this.buyHeart, this),
                        (this._plusHeartBtn.visible = !1),
                        (this._plusHeartBtn.enabled = !1),
                        (this._bgHeart = new c(0, this._heartIcon.y, 'lobby', 'lbTextbg')),
                        (this._bgHeart.anchor.x = 0),
                        (this._bgCoin = new c(0, this._heartIcon.y, 'lobby', 'lbTextbg')),
                        (this._bgCoin.anchor.x = 1),
                        (this._coinIcon = new c(0, this._heartIcon.y, 'lobby', 'lbCoin')),
                        (this._bgCoinText = new a.CoinText(0, void 0, a.CoinTextAnchor.LEFT, 159.72)),
                        this._bgCoinText.refresh(),
                        (this._bgCoinText.y = this._heartIcon.y + 2),
                        (this._bgCoinText.auto = !0),
                        (this._heartText = new PIXI.Text('5', { fontFamily: Stage.FONT_BOLD, fontSize: 60, fill: 16777215, align: 'center' })),
                        this._heartText.anchor.set(0.5),
                        (this._heartText.y = this._bgHeart.y + 2),
                        (this._heartTimeText = new PIXI.Text(a.StringManager.get('MAX_HP'), { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center' })),
                        this._heartTimeText.anchor.set(0.5),
                        (this._heartTimeText.y = this._bgHeart.y + 3),
                        (this._plusHeartFakeBtn = new a.PXButton('lobby', ['alphaHeart'])),
                        (this._plusHeartFakeBtn.y = this._bgHeart.y),
                        this._plusHeartFakeBtn.addOnUp(this.buyHeart, this),
                        (this._plusHeartFakeBtn.soundFileDown = ''),
                        (this._popitManager = new a.PopitManagerMain()),
                        this._popitManager.addDaily(),
                        this._popitManager.addPig(),
                        a.UserGameData.SHOW_SHOP_POPIT_LEVEL < a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) && this._popitManager.addShop(),
                        (this._battlePassPanel = new a.BattlePassPanel()),
                        this._battlePassPanel.setValue(a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_RANK), a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_RANK_STARS), !!this._isLaunch),
                        (this._needShowUI = !0),
                        (this._bottomUIContainer = new b()),
                        (this._bottomUIBackground = new c(0, 0, 'lobby', 'lbBottomBg')),
                        (this._bottomUIBackground.anchor.y = 1),
                        (this._bottomUIBackground.width = this._topUIBackground.width),
                        (this._bottomUIBackground.interactive = !0),
                        (this._optionsBtn = new a.PXButton('ui0', ['uiOptionsBtn'])),
                        (this._optionsBtn.y = -80),
                        this._optionsBtn.addOnClick(this.showOptions, this),
                        a.UserGameData.getProperty(a.USER_PROPERTY.GARDEN_NEED_SHOW) ? this._popitManager.addGarden() : 0 == a.UserGameData.checkTutor('GOLD_BUTTON', !1) && this._popitManager.addGardenGold());
                    var e = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL),
                        g = e >= f.SHOW_START_BUTTON_LEVEL;
                    if (g) {
                        var h = f.HARD_LEVELS.indexOf(e + 1) != -1;
                        ((this._gotoLevelBtn = new a.PXButton('lobby', [h ? 'lbLevelButtonHard' : 'lbLevelButton'])), (this._gotoLevelBtn.y = 0), this._gotoLevelBtn.setAnimationScale(0.03), this._gotoLevelBtn.addOnClick(this.playCurrentLevel, this), this.showGotoLevelButton());
                        var i = new PIXI.Text(a.StringManager.get('LOBBY_PLAY_BUTTON'), { fontFamily: 'Pony', fontSize: 46, fill: h ? 13146527 : 10078448, align: 'center', lineJoin: 'round', padding: 10, stroke: h ? 9046812 : 3831722, strokeThickness: 10 });
                        (i.anchor.set(0.5), (i.y = -40), this._gotoLevelBtn.addChild(i), (this._gotoLevelText = new PIXI.Text(a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) + 1, { fontFamily: 'Pony', fontSize: 71, fill: 16777215, align: 'center', lineJoin: 'round', padding: 10, stroke: h ? 9046812 : 3831722, strokeThickness: 10 })), this._gotoLevelText.anchor.set(0.5), (this._gotoLevelText.y = 30), this._gotoLevelBtn.addChild(this._gotoLevelText), a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) == f.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY && ((this._gotoLevelText.style.fontFamily = Stage.FONT_BOLD), (this._gotoLevelText.text = a.Utils.INIFINITY_CHAR)));
                    }
                    this.createMap(e);
                    var j = e;
                    e >= f.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY && j--;
                    var k,
                        l,
                        m = this.checkLeftPositionMiniAvatar(j);
                    if (((k = a.LevelButton.CURRENT_LEVEL_BUTTON.x + (m ? -130 : 120)), (l = a.LevelButton.CURRENT_LEVEL_BUTTON.y - 50), this.addMiniAvatar(!0), this._isLaunch || 0 == j || (e >= f.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY) || f.MAX_PREV_CURRENT_LEVEl == j)) {
                        if (
                            ((this._curLevelMark.x = k),
                            (this._curLevelMark.y = l),
                            (this._levelMarkPrevPosX = k),
                            (this._levelMarkPrevPosY = l),
                            this._isLaunch ||
                                f.MAX_PREV_CURRENT_LEVEl != j ||
                                TweenLite.to(this._curLevelMark, 0.4, {
                                    x: k,
                                    onComplete: function () {
                                        d.gotoNextLevel();
                                    },
                                }),
                            this._isLaunch)
                        ) {
                            var n = a.UserGameData.HOUR_24 - a.UserGameData.currentTimeDailyReward();
                            n <= 0 && a.MI.get().popupManager.add(a.AllPopups.DAILY_REWARD);
                        }
                    } else
                        ((this._curLevelMark.x = this._levelMarkPrevPosX),
                            (this._curLevelMark.y = this._levelMarkPrevPosY),
                            (this._levelMarkPrevPosX = k),
                            (this._levelMarkPrevPosY = l),
                            KY.Game.instance.interactiveOff(),
                            TweenLite.to(this._curLevelMark, 0.4, {
                                x: k,
                                y: l,
                                delay: 0.5,
                                ease: Sine.easeOut,
                                onStart: function () {
                                    d.addMiniAvatar(!1);
                                },
                                onComplete: function () {
                                    (d.gotoNextLevel(), d.addMiniAvatar(!0));
                                },
                            }));
                    (!this._isLaunch && null != f.LAST_PLAY_LEVEL_FOR_SCROLL && e - f.LAST_PLAY_LEVEL_FOR_SCROLL > 10 && this.scrollMapToLvl(f.LAST_PLAY_LEVEL_FOR_SCROLL),
                        a.BoostCounter.get().init(),
                        this.addChild(this._bottomContainer),
                        this.addChild(this._battlePassPanel),
                        this.addChild(this._topContainer),
                        this.addChild(this._popitManager),
                        this._topContainer.addChild(this._topUIContainer),
                        this._bottomContainer.addChild(this._mapScrollContainer),
                        this._bottomContainer.addChild(this._bottomUIContainer),
                        this._mapScrollContainer.addChild(this._mapLevelDotContainer),
                        this._mapScrollContainer.addChild(this._levelMarkDownContainer),
                        this._mapScrollContainer.addChild(this._mapLevelButtonContainer),
                        this._mapScrollContainer.addChild(this._mapAlertContainer),
                        this._mapScrollContainer.addChild(this._levelMarkUpContainer),
                        this._mapScrollContainer.addChild(this._mapTopContainer),
                        this._gotoLevelBtn && this._bottomUIContainer.addChild(this._gotoLevelBtn),
                        this._bottomUIContainer.addChild(this._bottomUIBackground),
                        this._bottomUIContainer.addChild(this._optionsBtn),
                        this._topUIContainer.addChild(this._topUIBackground),
                        this._topUIContainer.addChild(this._bgHeart),
                        this._topUIContainer.addChild(this._bgCoin),
                        this._topUIContainer.addChild(this._heartIcon),
                        this._topUIContainer.addChild(this._plusMoneyBtn),
                        this._topUIContainer.addChild(this._plusMoneyFakeBtn),
                        this._topUIContainer.addChild(this._bgCoinText),
                        this._topUIContainer.addChild(this._coinIcon),
                        this._topUIContainer.addChild(this._heartText),
                        this._topUIContainer.addChild(this._heartTimeText),
                        this._topUIContainer.addChild(this._plusHeartFakeBtn),
                        this._topUIContainer.addChild(this._plusHeartBtn));
                }),
                (f.prototype.resize = function () {
                    ((this._optionsBtn.x = 0.5 * -this.game.screenWidth + 104), (this._heartIcon.x = 0.5 * -this.game.screenWidth + 104), (this._plusMoneyBtn.x = 0.5 * this.game.screenWidth - 104), (this._plusMoneyFakeBtn.x = this._plusMoneyBtn.x - 200), (this._bgHeart.x = this._heartIcon.x + 20), (this._bgCoin.x = this._plusMoneyBtn.x - 20), (this._plusHeartBtn.x = this._bgHeart.x + 260), (this._bgCoinText.x = this._plusMoneyBtn.x - 300), (this._coinIcon.x = this._bgCoinText.x + 12), (this._heartText.x = this._bgHeart.x - 20), (this._heartTimeText.x = this._bgHeart.x + 126), (this._plusHeartFakeBtn.x = this._heartIcon.x + 105), this._battlePassPanel && this._battlePassPanel.resize());
                }),
                (f.prototype.initControls = function () {
                    (this.on(KY.GameEvent.MOUSE_MOVE, this.onMove, this), this.on(KY.GameEvent.MOUSE_DOWN, this.onDown, this), this.on(KY.GameEvent.MOUSE_UP, this.onUp, this), IS_DESKTOP && ((Stage.stage.interactiveMousewheel = !0), Stage.stage.on('mousewheel', this.desctopScroll, this)), (this._isTaped = !1));
                }),
                (f.prototype.scrollCoef = function () {
                    var a = 0,
                        b = -100;
                    return (this._mapScrollContainer.y < 0 && (a = Math.min(1, this._mapScrollContainer.y / b)), IS_DESKTOP ? 0.5 * (1 - a) : 1 - a);
                }),
                (f.prototype.onMove = function (b, c) {
                    if (!a.MI.get().popupManager.isOverlay && this._isTaped) {
                        var d = (c - this._tapY) * this.scrollCoef();
                        ((this._mapScrollContainer.y += d), (this._tapY = c), (this._mapScrollVelocity = d));
                    }
                }),
                (f.prototype.onDown = function (b, c) {
                    a.MI.get().popupManager.isOverlay || a.Popit.isDown || a.PXButton.checkClickedButton() || c > Stage.screenHeight - this._bottomUIBackground.height || ((this._isTaped = !0), (this._tapY = c), (this._mapScrollVelocity = 0));
                }),
                (f.prototype.onUp = function (a, b) {
                    this._isTaped = !1;
                }),
                (f.prototype.shutdown = function () {
                    if (!this._isFisrtLaunch) {
                        switch ((IS_DESKTOP && Stage.stage.off('mousewheel', this.desctopScroll, this), this._bgCoinText && (this._bgCoinText.auto = !1), this._gotoLevelBtn && (this._gotoLevelBtn.destroy({ children: !0 }), (this._gotoLevelBtn = null)), a.BoostCounter.get().free(), this.game.off(KY.GameEvent.RESIZE, this.resize, this), (f.FISRT_START = !1), a.LevelButton.clear(), a.SoundsManager.gameMusicStop(), f.TUTOR_MARK)) {
                            case 'GARDEN_BEGIN':
                                a.MI.get().popupManager.get(a.AllPopups.GARDEN_BEGIN).hide();
                        }
                        f.TUTOR_MARK = null;
                    }
                }),
                (f.prototype.gotoGarden = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b;
                        return __generator(this, function (c) {
                            switch (c.label) {
                                case 0:
                                    if ((a.LoaderScreen.show(), 'GARDEN_BEGIN' != f.TUTOR_MARK)) return [3, 5];
                                    c.label = 1;
                                case 1:
                                    return (c.trys.push([1, 3, , 4]), [4, a.MI.get().popupManager.get(a.AllPopups.GARDEN_BEGIN).hide()]);
                                case 2:
                                    return (c.sent(), [3, 4]);
                                case 3:
                                    return ((b = c.sent()), [3, 4]);
                                case 4:
                                    ((f.TUTOR_MARK = null), (c.label = 5));
                                case 5:
                                    return (a.Garden.LOADED || this.game.states.add('Garden', a.Garden), this.game.states.start('Garden'), [2]);
                            }
                        });
                    });
                }),
                (f.prototype.desctopScroll = function (b, c) {
                    a.MI.get().popupManager.isOverlay || (IS_MAC ? (this._mapScrollVelocity += (b * f.SCROLL_SPEED) / 5) : (this._mapScrollVelocity += b * f.SCROLL_SPEED));
                }),
                (f.prototype.createMap = function (b) {
                    var c = Math.ceil(this.game.screenHeight / this.mapBlockHeight) + 1,
                        d = f.BIG_BUTTON_PATTERN.length,
                        g = Math.abs(f.BIG_BUTTON_PATTERN[d - 1][1]) + e.BUTTON_OFFSET_Y;
                    this._countLevelButtonOnScreen = Math.round((this.game.screenHeight / g) * d);
                    var h = 0;
                    if (b > a.Utils.int(0.5 * this._countLevelButtonOnScreen)) {
                        var i = b % d;
                        h = a.Utils.int(b / d);
                        var j = f.BIG_BUTTON_PATTERN[i][1] - e.BUTTON_OFFSET_Y - (this.mapBlockHeight + e.GAP_Y) * h;
                        ((this._mapScrollContainer.y = -j - 0.35 * this.game.screenHeight), (this._oldMapScrollContainerY = -j));
                    }
                    this._mapBlocks = [];
                    for (var k = h; k < c + h; k++) {
                        var l = new e(this, this._mapLevelButtonContainer, this._mapLevelDotContainer, this._mapAlertContainer, this._mapTopContainer);
                        (l.draw(k), this._mapBlocks.push(l));
                    }
                    this.updateMapBlocks();
                }),
                (f.prototype.scrollMapToLvl = function (b) {
                    if (null != b) {
                        var c = f.BIG_BUTTON_PATTERN.length,
                            d = 0;
                        b < 5 && (b = 5);
                        var g = b % c;
                        d = a.Utils.int(b / c);
                        var h = f.BIG_BUTTON_PATTERN[g][1] - e.BUTTON_OFFSET_Y - (this.mapBlockHeight + e.GAP_Y) * d;
                        ((this._mapScrollContainer.y = -h - 0.35 * this.game.screenHeight), this.updateMapBlocks2());
                        for (var i = 0; i < this._mapBlocks.length; i++) this._mapBlocks[i].update(1, 0);
                    }
                }),
                (f.prototype.updateMapBlocks = function () {
                    if (this._oldMapScrollContainerY != this._mapScrollContainer.y && this._mapBlocks && 0 != this._mapBlocks.length) {
                        var a = this._mapScrollContainer.y - this._oldMapScrollContainerY;
                        this._oldMapScrollContainerY = this._mapScrollContainer.y;
                        var b = this._mapBlocks.length;
                        if (a > 0) {
                            if (this._mapBlocks[b - 1].endy > -f.SCROLL_SPEED) {
                                var c = this._mapBlocks[b - 1].curInd,
                                    d = this._mapBlocks.splice(0, 1)[0];
                                (d.draw(c + 1), this._mapBlocks.push(d));
                            }
                        } else {
                            var e = f.BIG_BUTTON_PATTERN[f.BIG_BUTTON_PATTERN.length - 2][1] - f.BIG_BUTTON_PATTERN[f.BIG_BUTTON_PATTERN.length - 1][1];
                            if (this._mapBlocks[0].curInd > 0 && this._mapBlocks[0].y < this.game.screenHeight + f.SCROLL_SPEED + e) {
                                var c = this._mapBlocks[0].curInd,
                                    d = this._mapBlocks.splice(b - 1, 1)[0];
                                (d.draw(c - 1), this._mapBlocks.unshift(d));
                            }
                        }
                    }
                }),
                (f.prototype.updateMapBlocks2 = function () {
                    var a = this._mapScrollContainer.y - this._oldMapScrollContainerY;
                    this._oldMapScrollContainerY = this._mapScrollContainer.y;
                    for (var b = 1460, c = Math.ceil(Math.abs(a) / b), d = this._mapBlocks.length, e = 0; e < c; e++)
                        if (a > 0) {
                            if (this._mapBlocks[d - 1].endy > -f.SCROLL_SPEED) {
                                var g = this._mapBlocks[d - 1].curInd,
                                    h = this._mapBlocks.splice(0, 1)[0];
                                (h.draw(g + 1), this._mapBlocks.push(h));
                            }
                        } else {
                            var i = f.BIG_BUTTON_PATTERN[f.BIG_BUTTON_PATTERN.length - 2][1] - f.BIG_BUTTON_PATTERN[f.BIG_BUTTON_PATTERN.length - 1][1];
                            if (this._mapBlocks[0].curInd > 0 && this._mapBlocks[0].y < this.game.screenHeight + f.SCROLL_SPEED + i) {
                                var g = this._mapBlocks[0].curInd,
                                    h = this._mapBlocks.splice(d - 1, 1)[0];
                                (h.draw(g - 1), this._mapBlocks.unshift(h));
                            }
                        }
                }),
                (f.prototype.showOptions = function () {
                    a.MI.get().popupManager.isOverlay || a.MI.get().popupManager.add(a.AllPopups.OPTIONS, !0);
                }),
                (f.prototype.launchWeekCompetition = function () {}),
                (f.prototype.showShop = function () {
                    a.EconomyOptions.showShop(!0);
                }),
                (f.prototype.buyHeart = function () {
                    a.MI.get().popupManager.show(a.AllPopups.BUY_HEART);
                }),
                Object.defineProperty(f.prototype, 'mapBlockHeight', {
                    get: function () {
                        return Math.abs(f.BIG_BUTTON_PATTERN[f.BIG_BUTTON_PATTERN.length - 1][1]);
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (f.prototype.launchLevel = function (b, c, d, e) {
                    var g = this;
                    (a.LoaderScreen.show(), a.MI.get().popupManager.clearQueue(), (f.LAST_PLAY_LEVEL_FOR_SCROLL = b), a.UserGameData.lelelStart(b));
                    var h;
                    if (b < 0) {
                        f.LAST_PLAY_LEVEL_FOR_SCROLL = f.COUNT_LEVELS - 1;
                        var i = a.UserGameData.getProperty(a.USER_PROPERTY.RND_COUNT);
                        0 == i && ((i = f.COUNT_LEVELS - 1), a.UserGameData.setProperty(a.USER_PROPERTY.RND_COUNT, i));
                        var j = a.UserGameData.getProperty(a.USER_PROPERTY.RND_INDEX);
                        (0 == j && ((j = 101), a.UserGameData.setProperty(a.USER_PROPERTY.RND_INDEX, j)), (h = './assets/maps/def/' + j + '.map'));
                    } else {
                        var k = b >= f.COUNT_LEVELS;
                        if (k) {
                            var l = 500,
                                m = f.COUNT_LEVELS,
                                n = Math.max(0, Math.floor(b / m) - 1),
                                j = l * (1 - n) - 0 + ((b - (l + 0)) % (m - l));
                            h = './assets/maps/def/' + (j + 1) + '.map';
                        } else h = './assets/maps/def/' + (b + 1) + '.map';
                    }
                    ((this._mapLoader = new a.MapLoader(h)),
                        (a.GameStage.replayCount = 0),
                        (f.MAX_PREV_CURRENT_LEVEl = Math.max(f.MAX_PREV_CURRENT_LEVEl, a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL))),
                        a.MI.get().CG.loadingStart(),
                        this._mapLoader.once(
                            a.MapLoaderEvent.COMPLETE,
                            function (a) {
                                g.game.states.start('GameStage', b, a, c, d, e);
                            },
                            this
                        ),
                        this._mapLoader.once(a.MapLoaderEvent.ERROR, function (a) {}, this),
                        this._mapLoader.load());
                }),
                (f.prototype.playLevel = function (b) {
                    a.MI.get().isMapEditor && console.log('Play Level:', b);
                    var c = a.UserGameData.getProperty(a.USER_PROPERTY.HP);
                    (b == f.COUNT_LEVELS && 0 == a.UserGameData.USE_INFINITY && (b = -1), a.MI.get().popupManager.clearQueue(), 0 == c ? a.MI.get().popupManager.add(a.AllPopups.NO_LIVE, 'start', b) : a.MI.get().popupManager.add(a.AllPopups.START_LEVEL, this, b));
                }),
                (f.prototype.playCurrentLevel = function () {
                    var b = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL);
                    this.playLevel(b);
                }),
                (f.prototype.gotoNextLevel = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b, c;
                        return __generator(this, function (d) {
                            switch (d.label) {
                                case 0:
                                    return (KY.Game.instance.interactiveOn(), (b = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL)), (c = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_RANK)), c > f.PREV_RANK ? ((f.PREV_RANK = c), KY.Game.instance.interactiveOff(), [4, a.delay(800)]) : [3, 2]);
                                case 1:
                                    (d.sent(), KY.Game.instance.interactiveOn(), a.MI.get().popupManager.add(a.AllPopups.NEW_RANK), (d.label = 2));
                                case 2:
                                    return (
                                        b > 0 && b > f.MAX_PREV_CURRENT_LEVEl && b % a.UserGameData.CHEST_LEVEL_INTERVAL == 0 && a.MI.get().popupManager.add(a.AllPopups.THREE_CHEST),
                                        (f.MAX_PREV_CURRENT_LEVEl = Math.max(f.MAX_PREV_CURRENT_LEVEl, b)),
                                        a.UserGameData.getProperty(a.USER_PROPERTY.GOLD) == a.UserGameData.NEED_GOLD_TO_SHOW_GARDEN && a.UserGameData.checkTutor('GARDEN_BEGIN', !0) && (a.MI.get().popupManager.add(a.AllPopups.GARDEN_BEGIN), (f.TUTOR_MARK = 'GARDEN_BEGIN')),
                                        b >= f.SHOW_START_BUTTON_LEVEL && a.UserGameData.checkTutor('GOLD_BUTTON', !0) && (a.MI.get().popupManager.add(a.AllPopups.GOLD_BUTTON_TUTORIAL), this._popitManager.addGardenGold()),
                                        a.UserGameData.isFullPigBank() && !a.UserGameData.getProperty(a.USER_PROPERTY.SHOW_FULL_PIG_BANK) && (a.UserGameData.setProperty(a.USER_PROPERTY.SHOW_FULL_PIG_BANK, 1), a.MI.get().popupManager.add(a.AllPopups.PIG_MONEYBOX)),
                                        0 == a.MI.get().popupManager.haveQueue && 0 == a.MI.get().popupManager.isOverlay && a.UserGameData.getProperty(a.USER_PROPERTY.HP) && 0 == this._manualExit && this.playLevel(b),
                                        [2]
                                    );
                            }
                        });
                    });
                }),
                (f.prototype.showGotoLevelButton = function (a) {
                    (void 0 === a && (a = !1), this._gotoLevelBtn && (a ? (this._gotoLevelBtn.y = -320) : TweenLite.to(this._gotoLevelBtn, 0.3, { y: -320, ease: Sine.easeOut })));
                }),
                (f.prototype.hideGotoLevelButton = function (a) {
                    (void 0 === a && (a = !1), this._gotoLevelBtn && (a ? (this._gotoLevelBtn.y = 0) : TweenLite.to(this._gotoLevelBtn, 0.3, { y: 0, ease: Sine.easeOut })));
                }),
                (f.prototype.update = function (b, c) {
                    if (this._startLobby) {
                        if (IS_DESKTOP) {
                            if (this._mapScrollContainer.y < 0) {
                                var d = Math.abs(this._mapScrollContainer.y / 100);
                                ((this._mapScrollContainer.y += this._mapScrollVelocity * d), (this._mapScrollContainer.y = Math.max(-100, this._mapScrollContainer.y)), (this._mapScrollContainer.y += 0.1 * (0 - this._mapScrollContainer.y)), this._mapScrollContainer.y > -1 && this._mapScrollContainer.y < 0 && (this._mapScrollContainer.y = 0));
                            } else this._mapScrollContainer.y += this._mapScrollVelocity;
                            this._mapScrollVelocity *= 0.9;
                        } else 0 == this._isTaped && ((this._mapScrollContainer.y += this._mapScrollVelocity), (this._mapScrollVelocity *= 0.94), this._mapScrollContainer.y < 0 && ((this._mapScrollContainer.y += 0.2 * (0 - this._mapScrollContainer.y) * b), (this._mapScrollVelocity = 0), Math.abs(this._mapScrollContainer.y) < 1 && (this._mapScrollContainer.y = 0)), Math.abs(this._mapScrollVelocity) < 0.05 && (this._mapScrollVelocity = 0));
                        (Math.abs(this._mapScrollVelocity) > 1 && this._mapScrollContainer.y > 0 ? 0 == this._needShowUI && ((this._needShowUI = !0), this._popitManager.hide(), this._battlePassPanel.hide(), this.hideGotoLevelButton(), a.SoundsManager.panelsOut()) : this._needShowUI && !this._isTaped && ((this._needShowUI = !1), this._popitManager.show(), this._battlePassPanel.show(), this.showGotoLevelButton(), a.SoundsManager.panelsIn()), this.updateMapBlocks(), a.LevelButton.updateAlert(b, c));
                        for (var e = 0; e < this._mapBlocks.length; e++) this._mapBlocks[e].update(b, c);
                        if (this._heartText) {
                            var f = a.UserGameData.getProperty(a.USER_PROPERTY.HP);
                            ((this._heartText.text = '' + (a.UserGameData.isInfinityHP ? a.Utils.INIFINITY_CHAR : f)), (this._heartTimeText.text = '' + a.UserGameData.currentHPTimeString), a.UserGameData.isInfinityHP || f >= a.UserGameData.MAX_HP ? (this._plusHeartBtn.visible && (this._plusHeartBtn.enabled = !1), (this._plusHeartBtn.visible = !1)) : (this._plusHeartBtn.visible || (this._plusHeartBtn.enabled = !0), (this._plusHeartBtn.visible = !0)));
                        }
                        (this._popitManager && this._popitManager.update(b), this._battlePassPanel && this._battlePassPanel.update(b));
                    }
                }),
                (f.prototype.checkLeftPositionMiniAvatar = function (a) {
                    var b = (a + 1) % 14;
                    return 4 == b || 5 == b || 6 == b || 11 == b || 12 == b || 13 == b;
                }),
                (f.prototype.addMiniAvatar = function (a) {
                    a ? this._levelMarkDownContainer.addChild(this._curLevelMark) : this._levelMarkUpContainer.addChild(this._curLevelMark);
                }),
                Object.defineProperty(f.prototype, 'scrollMapY', {
                    get: function () {
                        return this._mapScrollContainer.y;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'isScroll', {
                    get: function () {
                        return Math.abs(this._mapScrollVelocity) > 1;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'popitManager', {
                    get: function () {
                        return this._popitManager;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f.prototype, 'coinCounter', {
                    get: function () {
                        return this._bgCoinText;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f, 'instance', {
                    get: function () {
                        return this._instance;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(f, 'DATA', {
                    get: function () {
                        return this._DATA;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (f.stopAdblockPopup = !1),
                (f.SHOW_START_BUTTON_LEVEL = 3),
                (f.COUNT_LEVELS = 0),
                (f.COUNT_RND_LEVELS = 0),
                (f.SCROLL_SPEED = 10),
                (f.FISRT_START = !0),
                (f.BIG_BUTTON_PATTERN = [
                    [0, 0],
                    [-216, -66],
                    [-446, -99],
                    [-559, -256],
                    [-409, -393],
                    [-196, -457],
                    [-25, -543],
                    [-81, -713],
                    [-281, -767],
                    [-504, -821],
                    [-509, -1059],
                    [-294, -1114],
                    [-31, -1155],
                    [108, -1329],
                ]),
                (f.MINI_DOT_PATTERN = [
                    [-22, 35],
                    [0, 0],
                    [11, -43],
                    [12, -88],
                    [5, -132],
                    [-10, -173],
                    [-36, -209],
                    [-78, -238],
                    [-115, -260],
                    [-152, -277],
                    [-197, -291],
                    [-242, -299],
                    [-383, -303],
                    [-431, -304],
                    [-340, -304],
                    [-294, -304],
                    [-479, -310],
                    [-528, -327],
                    [-572, -348],
                    [-613, -370],
                    [-642, -414],
                    [-652, -464],
                    [-652, -515],
                    [-636, -562],
                    [-609, -605],
                    [-571, -638],
                    [-524, -659],
                    [-478, -675],
                    [-432, -685],
                    [-385, -692],
                    [-337, -696],
                    [-292, -700],
                    [-246, -710],
                    [-202, -725],
                    [-164, -747],
                    [-135, -776],
                    [-121, -816],
                    [-115, -860],
                    [-123, -905],
                    [-157, -950],
                    [-201, -985],
                    [-489, -1005],
                    [-440, -1005],
                    [-254, -1010],
                    [-393, -1013],
                    [-538, -1015],
                    [-300, -1016],
                    [-348, -1027],
                    [-579, -1042],
                    [-617, -1075],
                    [-642, -1115],
                    [-674, -1160],
                    [-674, -1218],
                    [-640, -1275],
                    [-607, -1311],
                    [-560, -1336],
                    [-511, -1346],
                    [-464, -1352],
                    [-415, -1357],
                    [-367, -1361],
                    [-321, -1363],
                    [-274, -1367],
                    [-227, -1372],
                    [-182, -1380],
                    [-137, -1389],
                    [-93, -1400],
                    [-54, -1428],
                ]),
                f
            );
        })(KY.State);
    a.Lobby = d;
    var e = (function () {
        function b(b, e, f, g, h) {
            ((this._dots = []), (this._btns = []), (this._lobby = b));
            for (var i = 0; i < d.MINI_DOT_PATTERN.length; i++) {
                var j = new c(0, 0, 'lobby', 'pathDot0001');
                (j.scale.set(0.8), f.addChild(j), this._dots.push(j));
            }
            for (var i = 0; i < d.BIG_BUTTON_PATTERN.length; i++) {
                var k = new a.LevelButton(b, g, h, this);
                (e.addChild(k), this._btns.push(k));
            }
        }
        return (
            (b.prototype.draw = function (a) {
                for (var c = 0; c < d.MINI_DOT_PATTERN.length; c++) ((this._dots[c].x = d.MINI_DOT_PATTERN[c][0] + b.OFFSET_X + 100), (this._dots[c].y = d.MINI_DOT_PATTERN[c][1] - b.DOT_OFFSET_Y - this.blockGap * a));
                for (var c = 0; c < d.BIG_BUTTON_PATTERN.length; c++) ((this._btns[c].x = d.BIG_BUTTON_PATTERN[c][0] + b.OFFSET_X), (this._btns[c].y = d.BIG_BUTTON_PATTERN[c][1] - b.BUTTON_OFFSET_Y - this.blockGap * a), this._btns[c].init(c + a * d.BIG_BUTTON_PATTERN.length, c));
                this._curInd = a;
            }),
            (b.prototype.update = function (a, b) {
                for (var c = 0; c < this._btns.length; c++) this._btns[c].update(a, b);
            }),
            Object.defineProperty(b.prototype, 'btns', {
                get: function () {
                    return this._btns;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'blockGap', {
                get: function () {
                    return this._lobby.mapBlockHeight + b.GAP_Y;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'y', {
                get: function () {
                    return this._dots[0].y + this._lobby.scrollMapY + KY.Game.instance.screenHeight;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'endy', {
                get: function () {
                    return this._dots[this._dots.length - 1].y + this._lobby.scrollMapY + KY.Game.instance.screenHeight;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(b.prototype, 'curInd', {
                get: function () {
                    return this._curInd;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (b.DOT_OFFSET_Y = 70),
            (b.BUTTON_OFFSET_Y = 315),
            (b.OFFSET_X = 250),
            (b.GAP_Y = 170),
            b
        );
    })();
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                return (null !== d && d.apply(this, arguments)) || this;
            }
            return (
                __extends(e, d),
                (e.prototype.preload = function () {
                    if (a.LoadManager.needLobbyPreload) {
                        var b = null;
                        (a.LoadManager.ATLAS_LOBBY || (b || (b = []), b.push('lobby'), (a.LoadManager.ATLAS_LOBBY = !0)), a.LoadManager.ATLAS_UI || (b || (b = []), b.push('ui'), (a.LoadManager.ATLAS_UI = !0)), a.LoadManager.FONT_LEVELBUTTON || (this.loadBmpFonts(['Pony-60-LevelButton']), (a.LoadManager.FONT_LEVELBUTTON = !0)), a.LoadManager.MUSIC_LOBBY || (this.loadAudio('lobby/music', 'lobby', !0), (a.LoadManager.MUSIC_LOBBY = !0)), a.LoadManager.SFX_LOBBY || (console.log('!!!!2'), this.loadAudio('main/sfx', 'sfx', !1), (a.LoadManager.SFX_LOBBY = !0)), b && this.loadAtlases(b));
                    }
                    e.LOADED || (this.loadAtlases([['newYear', 'offers/newYear_22']]), this.loadAudio('newYear22/music', 'newYear22_music', !0));
                }),
                (e.prototype.init = function (b, c, d) {
                    (void 0 === d && (d = !1), (e._instance = this), (this._fromLobby = d), (this._startLobby = !1), (this._manualExit = c), (this._isLaunch = b), (this._currentLevel = a.UserGameData.getProperty(a.USER_PROPERTY.NY_LEVEL)), d && (e.LAST_LEVEL = a.UserGameData.getProperty(a.USER_PROPERTY.NY_MAX_LEVEL)), (this._isFirst = 0 == a.UserGameData.getProperty(a.USER_PROPERTY.NY_OPENED)), a.UserGameData.setProperty(a.USER_PROPERTY.NY_OPENED, 1));
                }),
                (e.prototype.create = function () {
                    (a.LoaderScreen.hide(), (e.LOADED = !0), (this._showEndTime = !1), this.start());
                }),
                (e.prototype.start = function () {
                    (a.UserGameData.setGameState(!1), a.SoundsManager.NY22ThemaPlay(), this.readyToStart(), this.initControls(), this.resize(), this.game.on(KY.GameEvent.RESIZE, this.resize, this));
                }),
                (e.prototype.getGift = function (b) {
                    if (((e.LAST_LEVEL = a.UserGameData.getProperty(a.USER_PROPERTY.NY_MAX_LEVEL)), a.MI.get().popupManager.clearQueue(), a.MI.get().popupManager.show(a.AllPopups.NY22_GET_PRIZE, b), 2 == b)) {
                        var c = a.MI.get().popupManager.add(a.AllPopups.ERROR, a.StringManager.get('NY_FIN'));
                        (c.once('END', this.exit, this), a.UserGameData.setProperty(a.USER_PROPERTY.NY_OPENED, 2));
                    }
                }),
                (e.prototype.readyToStart = function () {
                    a.PXButton.clearClickedButton();
                    var d = -1;
                    ((this._startLobby = !0), (this._bottomContainer = new c(this.centerX, 2 * this.centerY)), this._bottomContainer.activateRelativeMode(), (this._topContainer = new c(this.centerX, 0)), this._topContainer.activateRelativeMode(), (this._mapContainer = new b()), this.createMapVisual());
                    var f = [
                        [-218, -259],
                        [-53, -378],
                        [146, -445],
                        [142, -693],
                        [-41, -742],
                        [-228, -776],
                        [-225, -966],
                        [-34, -1003],
                        [146, -1065],
                        [287, -1169],
                    ];
                    this._buttons = [];
                    var g = [
                            [330, -574],
                            [-402, -895],
                            [141, -1319],
                        ],
                        h = [3, 6, 10];
                    this._prizes = [];
                    for (var i = a.UserGameData.getProperty(a.USER_PROPERTY.NY_MAX_LEVEL), j = 0; j < g.length; j++) {
                        var k = new a.NYPrize22(j);
                        ((k.x = g[j][0]), (k.y = g[j][1]), this._prizes.push(k), h[j] <= i && (h[j] == i && i > e.LAST_LEVEL ? ((e.LAST_LEVEL = i), k.open(!0), (d = j)) : k.open(!1)), this._mapContainer.addChild(k));
                    }
                    for (var j = 0; j < f.length; j++) {
                        var l = new a.NYLevelButton(this, j);
                        ((l.x = f[j][0]), (l.y = f[j][1]), this._buttons.push(l), j == this._currentLevel ? l.setCurrent() : j < this._currentLevel && l.setDone(), this._mapContainer.addChild(l));
                    }
                    ((this._header = new c(0, 0, 'newYear', 'header/header')), (this._header.alpha = 0));
                    var m = new c(0, 0, 'newYear', 'header/header_text_' + (a.Locales.isRus ? 'rus' : 'eng'));
                    (this._header.addChild(m), TweenLite.to(this._header, 0.2, { alpha: 1 }), TweenLite.to(this._header, 0.4, { y: 180, ease: Back.easeOut }), (this._timeTxt = new PIXI.Text(a.Utils.formatTime(a.UserGameData.HOUR_24 - 1, a.TIME_FORMAT.DAYS_HOURS), { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 15063507, align: 'center' })), this._timeTxt.anchor.set(0.5), (this._timeTxt.y = 68), this._header.addChild(this._timeTxt));
                    var n = new PIXI.Text(a.StringManager.get('NY_HEADER_TIME_CAP'), { fontFamily: Stage.FONT_BOLD, fontSize: 35, fill: 15063507, align: 'center' });
                    (n.anchor.set(0.5), (n.y = 7), this._header.addChild(n), (this._backBtn = new a.PXButton('newYear', ['btn_back'])), this._backBtn.addOnClick(this.back, this), (this._playBtn = new a.PXButton('newYear', ['btn_play'])), this._playBtn.addOnClick(this.playlvl, this), (this._lvlOnBtn = new c(0, 0, 'newYear', 'btn_play_counter/' + c.zeroPad(this._currentLevel + 1, 2))), this._playBtn.addChild(this._lvlOnBtn), a.BoostCounter.get().init(), this.addChild(this._bottomContainer), this.addChild(this._topContainer), this._bottomContainer.addChild(this._mapContainer), this._topContainer.addChild(this._header), this._bottomContainer.addChild(this._backBtn), this._bottomContainer.addChild(this._playBtn), d != -1 ? this.getGift(d) : this._fromLobby ? this._isFirst && a.MI.get().popupManager.add(a.AllPopups.ERROR, a.StringManager.get('NY_ALERT')) : this.playLevel(this._currentLevel));
                    var o = this.getDeltaTime();
                    if (o <= 0) {
                        var k = a.MI.get().popupManager.add(a.AllPopups.ERROR, a.StringManager.get('NY_END'));
                        k.once('END', this.exit, this);
                    }
                }),
                (e.prototype.exit = function () {
                    this.back();
                }),
                (e.prototype.playlvl = function () {
                    this.playLevel(this._currentLevel);
                }),
                (e.prototype.back = function () {
                    (a.LoaderScreen.show(), this.game.states.start('Lobby', !1, !0, !0));
                }),
                (e.prototype.createMapVisual = function () {
                    ((this._gradientSnow = new c(0, 1, 'newYear', 'snow')), (this._gradientSnow.anchor.y = 1), (this._gradientSnow.width = Stage.screenWidth), (this._gradientSnow.scale.y = 0.8), (this._gradientSky = new c(0, -Stage.screenHeight, 'newYear', 'sky')), (this._gradientSky.anchor.y = 0), (this._gradientSky.width = Stage.screenWidth));
                    var a = new c(0, -1400, 'newYear', 'bg_full');
                    a.anchor.y = 1;
                    var b = new c(0, 0, 'newYear', 'road');
                    b.anchor.y = 1;
                    var d = new c(-155, -1200, 'newYear', 'tree');
                    d.anchor.y = 1;
                    var e = new c(-280, -1170, 'newYear', 'gifts');
                    e.anchor.y = 1;
                    var f = new c(-440, -1250, 'newYear', 'snowman');
                    f.anchor.y = 1;
                    var g = new c(0, 1, 'newYear', 'snow_front');
                    ((g.anchor.y = 1), this._mapContainer.addChild(this._gradientSky), this._mapContainer.addChild(this._gradientSnow), this._mapContainer.addChild(a), this._mapContainer.addChild(b));
                    for (var h = 2; h <= 13; h++) {
                        var i = 13 == h ? 1 : h,
                            j = new c(0, 0, 'newYear', 'elements/element_' + c.zeroPad(i, 3));
                        ((j.anchor.y = 1), this._mapContainer.addChild(j));
                    }
                    (this._mapContainer.addChild(d), this._mapContainer.addChild(e), this._mapContainer.addChild(f), this._mapContainer.addChild(g));
                }),
                (e.prototype.resize = function () {
                    (this._gradientSnow && ((this._gradientSnow.width = Stage.screenWidth), (this._gradientSky.width = Stage.screenWidth), (this._gradientSky.y = -Stage.screenHeight)), (this._backBtn.x = -Stage.screenWidth / 2 + this._backBtn.width / 2 + 40), (this._backBtn.y = -this._backBtn.height / 2 - 15), (this._playBtn.x = Stage.screenWidth / 2 - this._backBtn.width / 2 - 40), (this._playBtn.y = -this._playBtn.height / 2 - 15));
                }),
                (e.prototype.initControls = function () {
                    (this.on(KY.GameEvent.MOUSE_MOVE, this.onMove, this), this.on(KY.GameEvent.MOUSE_DOWN, this.onDown, this), this.on(KY.GameEvent.MOUSE_UP, this.onUp, this), IS_DESKTOP && ((Stage.stage.interactiveMousewheel = !0), Stage.stage.on('mousewheel', this.desctopScroll, this)));
                }),
                (e.prototype.scrollCoef = function () {
                    var a = 0;
                    return IS_DESKTOP ? 0.5 * (1 - a) : 1 - a;
                }),
                (e.prototype.onMove = function (b, c) {
                    a.MI.get().popupManager.isOverlay;
                }),
                (e.prototype.onDown = function (b, c) {
                    a.MI.get().popupManager.isOverlay || a.Popit.isDown || a.PXButton.checkClickedButton();
                }),
                (e.prototype.onUp = function (a, b) {}),
                (e.prototype.shutdown = function () {
                    (IS_DESKTOP && Stage.stage.off('mousewheel', this.desctopScroll, this), a.BoostCounter.get().free(), this.game.off(KY.GameEvent.RESIZE, this.resize, this), a.LevelButton.clear(), a.SoundsManager.gameMusicStop());
                }),
                (e.prototype.gotoGarden = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        return __generator(this, function (b) {
                            return (a.LoaderScreen.show(), a.Garden.LOADED || this.game.states.add('Garden', a.Garden), this.game.states.start('Garden'), [2]);
                        });
                    });
                }),
                (e.prototype.desctopScroll = function (b, c) {
                    a.MI.get().popupManager.isOverlay;
                }),
                (e.prototype.launchLevel = function (b, c, d, e) {
                    var f = this;
                    (a.LoaderScreen.show(), a.MI.get().popupManager.clearQueue(), a.UserGameData.lelelStart(b));
                    var g = 'assets/maps/newYear22/' + (b + 1) + '.map';
                    (IS_YA ? (this._mapLoader = new a.MapLoader(g)) : (this._mapLoader = new a.MapLoader(a.Main.serverName + g)),
                        (a.GameStage.replayCount = 0),
                        this._mapLoader.once(
                            a.MapLoaderEvent.COMPLETE,
                            function (g) {
                                f.game.states.start('GameStage', b, g, c, d, e, a.GAME_MODE.NEW_YEAR22);
                            },
                            this
                        ),
                        this._mapLoader.load());
                }),
                (e.prototype.playLevel = function (b) {
                    (a.MI.get().isMapEditor && console.log('Play Level:', b), (e.LAST_LEVEL = a.UserGameData.getProperty(a.USER_PROPERTY.NY_MAX_LEVEL)), a.MI.get().popupManager.clearQueue(), a.MI.get().popupManager.add(a.AllPopups.START_LEVEL, this, b, a.GAME_MODE.NEW_YEAR22));
                }),
                (e.prototype.gotoNextLevel = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var b, c;
                        return __generator(this, function (d) {
                            return (KY.Game.instance.interactiveOn(), (b = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL)), (c = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_RANK)), 0 == a.MI.get().popupManager.haveQueue && 0 == a.MI.get().popupManager.isOverlay && a.UserGameData.getProperty(a.USER_PROPERTY.HP) && 0 == this._manualExit && this.playLevel(b), [2]);
                        });
                    });
                }),
                (e.prototype.getDeltaTime = function () {
                    var b = a.Lobby.DATA.ny2022[1];
                    return b - a.MI.get().time;
                }),
                (e.prototype.update = function (b, c) {
                    if (this._startLobby) {
                        for (var d = 0; d < this._buttons.length; d++) this._buttons[d].update(b);
                        var e = this.getDeltaTime();
                        if (e > 0) this._timeTxt.text = a.Utils.formatTime(e, a.TIME_FORMAT.DAYS_HOURS);
                        else if (((this._timeTxt.text = a.Utils.formatTime(0, a.TIME_FORMAT.DAYS_HOURS)), !this._showEndTime)) {
                            ((this._showEndTime = !0), (this._startLobby = !1));
                            var f = a.MI.get().popupManager.add(a.AllPopups.ERROR, a.StringManager.get('NY_END'));
                            f.once('END', this.exit, this);
                        }
                    }
                }),
                Object.defineProperty(e.prototype, 'isScroll', {
                    get: function () {
                        return !1;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(e, 'instance', {
                    get: function () {
                        return this._instance;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (e.LOADED = !1),
                (e.LAST_LEVEL = 0),
                e
            );
        })(KY.State);
    a.NewYear22 = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function (b) {
        function c() {
            return (null !== b && b.apply(this, arguments)) || this;
        }
        return (
            __extends(c, b),
            (c.prototype.preload = function () {
                a.MI.get().CG.loadingStart();
                var b,
                    c,
                    d = a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL);
                (0 == d
                    ? ((b = ['atlas0', 'ui0']), a.Locales.isRus || b.push(['locale_eng', 'locales/eng']), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas0'), (a.LoadManager.ATLAS_0 = !0), (c = ['Montserrat-ExtraBold-50-PopScore', 'Montserrat-ExtraBold-70-PopScore', 'Pony-60-Combo']), (a.LoadManager.FONT_SCORE = !0), this.loadAudio('main/music', 'music', !0), this.loadAudio('main/sfx0', 'sfx0', !1), (a.LoadManager.MUSIC_MAIN = !0))
                    : ((b = ['lobby', 'ui', 'ui0']), a.Locales.isRus || b.push(['locale_eng', 'locales/eng']), (a.LoadManager.ATLAS_LOBBY = !0), (a.LoadManager.ATLAS_UI = !0), d < a.LoadManager.ATLAS_LEVEL ? (b.push('atlas0'), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas0'), (a.LoadManager.ATLAS_0 = !0)) : (b.push('atlas'), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas'), (a.LoadManager.ATLAS = !0)), (c = ['Pony-60-LevelButton']), (a.LoadManager.FONT_LEVELBUTTON = !0), this.loadAudio('lobby/music', 'lobby', !0), this.loadAudio('main/sfx0', 'sfx0', !1), this.loadAudio('main/sfx', 'sfx', !1), (a.LoadManager.SFX_LOBBY = !0), (a.LoadManager.MUSIC_LOBBY = !0)),
                    a.UserGameData.needTutorial && b.push('tutorial'),
                    this.loadAtlases(b),
                    this.loadBmpFonts(c),
                    this.loadFonts(['Montserrat-ExtraBold', 'Montserrat-Medium', 'Pony']));
            }),
            (c.prototype.create = function () {
                var a = this,
                    b = new PIXI.Container();
                this.game.application.renderer.plugins.prepare.upload(b, function () {
                    a.start();
                });
            }),
            (c.prototype.start = function () {
                (1 != a.Main.noloading && this.loadGame(), (this._isStart = !0));
            }),
            (c.prototype.loadGame = function () {
                var b = this;
                (this.game.muteMusic(0 == a.UserGameData.getProperty(a.USER_PROPERTY.MUSIC)),
                    this.game.muteSound(0 == a.UserGameData.getProperty(a.USER_PROPERTY.SOUND)),
                    (a.Options.SHOW_STARTLEVEL_ANIMATIONS = 1 == a.UserGameData.getProperty(a.USER_PROPERTY.SHOW_STARTLEVEL_ANIMATIONS)),
                    (a.Options.WHITE_GUIDELINE = 1 == a.UserGameData.getProperty(a.USER_PROPERTY.WHITE_GUIDELINE)),
                    a.TutorialUtils.init(),
                    setTimeout(function () {
                        ((document.body.style.backgroundColor = '#7177AA'), (b.game.backgroundColor = 9672891), b.game.states.start('Lobby', !0, !1), a.Statistics.startSession());
                    }, 100));
            }),
            (c.prototype.init = function () {
                ((this._centerContainer = new KY.Sprite(this.game.centerX, this.centerY)),
                    this._centerContainer.activateRelativeMode(),
                    this.addChild(this._centerContainer),
                    (this._bg = new a.ParallaxSprite(this.game, this.game.screenWidth, this.game.screenHeight, 'preloader', 'bgMn')),
                    (this._bg.x -= 0.5 * this.game.screenWidth),
                    (this._bg.y -= 0.5 * this.game.screenHeight),
                    this._bg.speedUpdate(20, 20),
                    this._centerContainer.addChild(this._bg),
                    (this._caption = this.sprite(0, 0, 'preloader', 'caption')),
                    this._centerContainer.addChild(this._caption),
                    (this._loadBar = this.sprite(0, 0, 'preloader', 'loadBar')),
                    (this._loadBar.x = 0.5 * -this._caption.width),
                    (this._loadBar.y = 110),
                    (this._loadBar.anchor.x = 0),
                    (this._loadBar.scale.y = 0.5),
                    (this._loadBar.scale.x = 0.001),
                    this._caption.addChild(this._loadBar),
                    (this._bg.alpha = 0),
                    TweenLite.to(this._bg, 0.2, { alpha: 1 }),
                    (this._caption.alpha = 0),
                    this._caption.scale.set(0.9, 0.9),
                    this._caption.anchor.set(0.5),
                    TweenLite.to(this._caption, 0.1, { alpha: 1, delay: 0.2 }),
                    TweenLite.to(this._caption.scale, 0.2, { x: 1, y: 1, delay: 0.2, ease: Back.easeOut }));
            }),
            (c.prototype.update = function () {
                (this._bg.speedUpdate(1, 1), (this._loadBar.scale.x = this.totalLoading + 0.001), a.Main.noloading && this._isStart && this.game.loadingEnd && ((a.Main.noloading = !1), this.loadGame()));
            }),
            (c.prototype.shutdown = function () {
                (this._bg.destroy({ children: !0 }), this._centerContainer.destroy());
            }),
            c
        );
    })(KY.State);
    a.Preloader = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = PIXI.Container,
        c = KY.Sprite,
        d = (function (d) {
            function e() {
                var a = (null !== d && d.apply(this, arguments)) || this;
                return ((a._postDownX = null), (a._postDownY = null), (a._postDowned = !1), (a.MOVE_MIN_TIME_DELTA = 10), (a._mouseDownTime = 0), (a._lastMoveTime = 0), (a._lastMoveX = null), (a._lastMoveY = null), (a._varMoveX = null), (a._varMoveY = null), (a._debugReplay = DebugReplay.REPLAY), (a._debugReplayTime = null), a);
            }
            return (
                __extends(e, d),
                Object.defineProperty(e, 'CANNON_BOTTOM_OFFSET', {
                    get: function () {
                        return IS_DESKTOP ? this.CANNON_BOTTOM_OFFSET_PC : this.CANNON_BOTTOM_OFFSET_MOBILE;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (e.prototype.preload = function () {
                    a.LoadManager.needGamePreload && (a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) < a.LoadManager.ATLAS_LEVEL ? a.LoadManager.ATLAS_0 || (this.loadAtlases(['atlas0']), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas0'), (a.LoadManager.ATLAS_0 = !0)) : a.LoadManager.ATLAS || (this.loadAtlases(['atlas']), (a.LoadManager.CURRENT_ATLAS_NAME = 'atlas'), (a.LoadManager.ATLAS = !0)), a.LoadManager.FONT_SCORE || (this.loadBmpFonts(['Montserrat-ExtraBold-50-PopScore', 'Montserrat-ExtraBold-70-PopScore', 'Pony-60-Combo']), (a.LoadManager.FONT_SCORE = !0)), a.LoadManager.MUSIC_MAIN || (this.loadAudio('main/music', 'music', !0), (a.LoadManager.MUSIC_MAIN = !0)));
                }),
                (e.prototype.init = function (b, c, d, f) {
                    ((this._isLoaded = !1), (this._patterns = b), a.MI.get().setSeed(a.Utils.int(Date.now() * this.game.rnd.js)), (a.Options.GUIDELINE_NO_LIMIT = c), (a.Options.MAX_NEXT_BUBBLES = d ? 3 : 2), (a.Options.ADD_5_BUBBLES = f), a.Options.setup(this.game.screenWidth, this.game.screenHeight, e.CANNON_BOTTOM_OFFSET));
                }),
                (e.prototype.create = function () {
                    ((this._isLoaded = !0), (e.instance = this), a.UserGameData.setGameState(!0), this.initGame(), this.initControls(), this.initGrid(), this.initVisual(), this.setupGrid(), a.MI.get().on(a.MI.EVENT_SHOW_ADS, this.showAds, this), IS_DESKTOP && this.game.keyboard.addOnDown(this.keyDown, this), this.createBombGuideline(), e.LINE_GUIDELINE || (e.LINE_GUIDELINE = new c(a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghostLine')), a.LoaderScreen.hide());
                }),
                (e.prototype.initVisual = function () {
                    ((this._mainContainer = this.sprite(this.centerX, 0)),
                        this._mainContainer.activateRelativeMode(),
                        (this._centerContainer = this.sprite(this.centerX, this.centerY)),
                        this._centerContainer.activateRelativeMode(),
                        (this._backgroundContainer = this.sprite(this.centerX, 0)),
                        this._backgroundContainer.activateRelativeMode(),
                        (this._bottomContainer = this.sprite(this.centerX, 2 * this.centerY)),
                        this._bottomContainer.activateRelativeMode(),
                        (this._cannonContainer = this.sprite(this.centerX, 2 * this.centerY)),
                        this._cannonContainer.activateRelativeMode().bottomOffset(e.CANNON_BOTTOM_OFFSET).end(),
                        (this._additionalCannonContainer = new b()),
                        (this._additionalCannonContainer.alpha = 0),
                        (this._modifContainer = this.sprite(this.centerX, 2 * this.centerY)),
                        this._modifContainer.activateRelativeMode().bottomOffset(e.CANNON_BOTTOM_OFFSET).end(),
                        (this._bubbleContainer = new b()),
                        (this._topUIContainer = new b()),
                        (this._bubblePlace = this.sprite(0, 0, 'ui0', e.DOCK_INACTIVE)),
                        (this._swapIcon = this.sprite(a.Options.NEXT_BUBBLES_POSITON[1][0] - a.Options.CANNON_X, a.Options.NEXT_BUBBLES_POSITON[1][1] - a.Options.CANNON_Y, 'ui0', 'swapIcon')),
                        (this._bubbleCounter = new a.BubbleCounter()),
                        (this._bubbleCounter.x = -200),
                        (this._bubbleCounter.y = 0),
                        (this._rightBorder = this.sprite(510, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')),
                        this._rightBorder.anchor.set(1, 0),
                        (this._rightBorder.scale.x = -1),
                        (this._rightBorder.scale.y = 40),
                        (this._leftBorder = this.sprite(-510, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')),
                        this._leftBorder.anchor.set(1, 0),
                        (this._leftBorder.scale.y = this._rightBorder.scale.y));
                    var c, d;
                    (IS_DESKTOP && this.game.scaleMode == KY.ScaleMode.STATIC && ((c = this.sprite(1290, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')), c.anchor.set(1, 0), (c.scale.x = -1), (c.scale.y = 40), (d = this.sprite(-1290, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'walls')), d.anchor.set(1, 0), (d.scale.y = this._rightBorder.scale.y)),
                        (this._topPanelBackground = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopSlice9'), 40, 50, 40, 73)),
                        (this._topPanelBackground.height = 123),
                        (this._topPanelBackground.alpha = 0.2),
                        (this._topTargetBg = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopBarSlice9'), 35, 31, 35, 35)),
                        (this._topTargetBg.width = 220),
                        (this._topTargetBg.height = 66),
                        (this._topTargetBg.y = 20),
                        (this._topScoreBg = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiTopBarSlice9'), 35, 31, 35, 35)),
                        (this._topScoreBg.width = 220),
                        (this._topScoreBg.height = 66),
                        (this._topScoreBg.y = 20),
                        (this._scoreText = new PIXI.Text('0', { fontFamily: Stage.FONT_BOLD, fontSize: 40, fill: 16777215, align: 'center', lineJoin: 'round', stroke: '#2769a4', strokeThickness: 10, dropShadow: !0, dropShadowAlpha: 0.4, dropShadowAngle: Math.PI / 4, dropShadowBlur: 2, dropShadowDistance: 4, padding: 10 })),
                        this._scoreText.anchor.set(0.5),
                        (this._scoreText.y = 57));
                    var f = 'typeGameIcon0001';
                    ((this._gameTypeIcon = this.sprite(0, 0, 'ui0', f)),
                        (this._gameTypeIcon.y = 52),
                        (this._bottomPanelBackground = new PIXI.NineSlicePlane(this.game.getImage('ui0', 'uiBottomSlice9'), 40, 50, 40, 126)),
                        (this._bottomPanelBackground.height = 176),
                        (this._bottomPanelBackground.y = -176),
                        (this._boostButtonLayer = new b()),
                        (this._optionsBtn = new a.PXButton('ui0', ['uiOptionsBtn'])),
                        (this._optionsBtn.x = -430),
                        (this._optionsBtn.y = -80),
                        this._optionsBtn.addOnClick(this.showOptions, this),
                        (this._lightningBoosterBtn = new a.BoosterButton(1, !1)),
                        (this._lightningBoosterBtn.y = -80),
                        this._lightningBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT)),
                        this._lightningBoosterBtn.addOnClick(this.toggleLightningBooster, this),
                        (this._rainbowBoosterBtn = new a.BoosterButton(2, !1)),
                        (this._rainbowBoosterBtn.y = this._lightningBoosterBtn.y),
                        this._rainbowBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT)),
                        this._rainbowBoosterBtn.addOnClick(this.toggleRainbowBooster, this),
                        (this._fireballBoosterBtn = new a.BoosterButton(3, !1, 2)),
                        (this._fireballBoosterBtn.y = this._lightningBoosterBtn.y),
                        this._fireballBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT)),
                        this._fireballBoosterBtn.addOnClick(this.toggleFireballBooster, this),
                        (this._bombBoosterBtn = new a.BoosterButton(4, !0, 0)),
                        (this._bombBoosterBtn.y = this._lightningBoosterBtn.y),
                        this._bombBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT)),
                        this._bombBoosterBtn.addOnClick(this.toggleBombBooster, this),
                        (this._boostInfoLayer = new b()),
                        a.LoadManager.ATLAS_UI && ((this._boostInfoIconBg = this.sprite(-430, -80, 'ui', 'boostIcoBg')), (this._boostInfoCloseBg = this.sprite(430, -80, 'ui', 'boostCloseBtnBg')), (this._closeBoostInfo = new a.PXButton('ui', ['boostCloseBtn'])), this._closeBoostInfo.position.set(430, -81), this._closeBoostInfo.addOnClick(this.toggleBooster, this), (this._boostInfoIcon = this.sprite(-430, -80, 'ui', 'boostIco0001')), this._boostInfoIcon.scale.set(0.5), (this._boostInfoTxt = new PIXI.Text('', { fontFamily: Stage.FONT_BOLD, fill: 16777215, align: 'left', fontSize: 34, wordWrap: !0, wordWrapWidth: 710 })), (this._boostInfoTxt.alpha = 0.8), (this._boostInfoTxt.y = -82), this._boostInfoTxt.anchor.set(0, 0.5)),
                        this.hideBoostInfo());
                    var g = a.Locales.get('ui0', 'popups/win/levelComplete');
                    if (((this._lvlCompleteSgn = this.sprite(0, 0, g[0], g[1])), (this._lvlCompleteSgn.alpha = 0), (this._lightningEffect = []), (this._lasers = []), a.LoadManager.ATLAS_UI)) {
                        var h = a.Locales.get('ui', 'txtFreeBomb');
                        ((this._cannonSgn = this.sprite(0, 400, h[0], h[1])), (this._cannonSgn.alpha = 0));
                    }
                    ((this._centralSgn = []),
                        (this._crownSgnActive = []),
                        (this._flyPool = []),
                        (this._keyPool = []),
                        (this._plusMinusTwoPool = []),
                        (this._centralSgnContainer = new PIXI.Container()),
                        this.addChild(this._backgroundContainer),
                        this.addChild(this._cannonContainer),
                        this.addChild(this._mainContainer),
                        this.addChild(this._modifContainer),
                        this.addChild(this._centerContainer),
                        this.addChild(this._bottomContainer),
                        this._mainContainer.addChild(this._bubbleContainer),
                        this._mainContainer.addChild(this._topUIContainer),
                        this._centerContainer.addChild(this._centralSgnContainer),
                        this._centerContainer.addChild(this._lvlCompleteSgn),
                        this._cannonContainer.addChild(this._additionalCannonContainer),
                        this._additionalCannonContainer.addChild(this._bubblePlace),
                        this._additionalCannonContainer.addChild(this._swapIcon),
                        this._additionalCannonContainer.addChild(this._bubbleCounter),
                        c && d && (this._backgroundContainer.addChild(c), this._backgroundContainer.addChild(d)),
                        this._backgroundContainer.addChild(this._rightBorder),
                        this._backgroundContainer.addChild(this._leftBorder),
                        this._bubbleContainer.addChild(this._grid),
                        this._topUIContainer.addChild(this._topPanelBackground),
                        this._topUIContainer.addChild(this._topTargetBg),
                        this._topUIContainer.addChild(this._topScoreBg),
                        a.LoadManager.ATLAS_UI && this._topUIContainer.addChild(this._cannonSgn),
                        this._topUIContainer.addChild(this._scoreText),
                        this._topUIContainer.addChild(this._gameTypeIcon),
                        this._boostButtonLayer.addChild(this._optionsBtn),
                        this._boostButtonLayer.addChild(this._lightningBoosterBtn),
                        this._boostButtonLayer.addChild(this._rainbowBoosterBtn),
                        this._boostButtonLayer.addChild(this._fireballBoosterBtn),
                        this._boostButtonLayer.addChild(this._bombBoosterBtn),
                        this._bottomContainer.addChild(this._bottomPanelBackground),
                        this._bottomContainer.addChild(this._boostButtonLayer),
                        this._bottomContainer.addChild(this._boostInfoLayer),
                        a.LoadManager.ATLAS_UI && (this._boostInfoLayer.addChild(this._boostInfoIconBg), this._boostInfoLayer.addChild(this._boostInfoCloseBg), this._boostInfoLayer.addChild(this._closeBoostInfo), this._boostInfoLayer.addChild(this._boostInfoIcon), this._boostInfoLayer.addChild(this._boostInfoTxt)),
                        this.resize('start'),
                        this.game.on(KY.GameEvent.RESIZE, this.resize, this));
                }),
                (e.prototype.resize = function (b) {
                    (IS_MOBILE && b == KY.DeviceOrientation.LANDSCAPE) ||
                        ('start' != b && (a.Options.resize(this.game.screenWidth, this.game.screenHeight, e.CANNON_BOTTOM_OFFSET), this._grid.resize()),
                        (this._topPanelBackground.width = this.game.screenWidth),
                        (this._topPanelBackground.x = 0.5 * -this._topPanelBackground.width),
                        (this._bottomPanelBackground.width = this.game.screenWidth - 10),
                        (this._bottomPanelBackground.x = 0.5 * -this._bottomPanelBackground.width),
                        (this._topTargetBg.x = 0.5 * -this.game.screenWidth + 26),
                        (this._topScoreBg.x = 0.5 * this.game.screenWidth - 26 - this._topScoreBg.width),
                        (this._gameTypeIcon.x = 0.5 * -this.game.screenWidth + 132),
                        (this._scoreText.x = 0.5 * this.game.screenWidth - 132),
                        (this._optionsBtn.x = 0.5 * -this.game.screenWidth + 104),
                        IS_DESKTOP && this.game.scaleMode == KY.ScaleMode.STATIC ? (this._bombBoosterBtn.x = 295) : (this._bombBoosterBtn.x = 0.5 * this.game.screenWidth - 140),
                        (this._fireballBoosterBtn.x = this._bombBoosterBtn.x - 200),
                        (this._rainbowBoosterBtn.x = this._fireballBoosterBtn.x - 200),
                        (this._lightningBoosterBtn.x = this._rainbowBoosterBtn.x - 200),
                        a.LoadManager.ATLAS_UI && ((this._boostInfoIconBg.x = this._optionsBtn.x), (this._boostInfoCloseBg.x = this._bombBoosterBtn.x + 40), (this._boostInfoTxt.x = this._optionsBtn.x + 100), (this._boostInfoIcon.x = this._optionsBtn.x), (this._closeBoostInfo.x = this._boostInfoCloseBg.x), (this._boostInfoTxt.text = this._boostInfoTxt.text), (this._boostInfoTxt.style.wordWrapWidth = 0.68 * this.game.screenWidth)));
                }),
                (e.prototype.staticInitGame = function () {
                    for (this._selectedRainbow = !1, this._selectedFireball = !1, this._selectedBomb = !1, this._selectedLightning = !1, this._fountainStarted = !1, this._levelStart = !1, this._needShowWinPopup = !1, this._winPopupDelay = 0, this._effectiveShotForFreeBomb = 0, this._lastEffectiveShot = -1, this._lastBombBooster = !1, this._needShowModification = !1; this._modifications.length; ) this._modifications.pop();
                    (a.Options.GUIDELINE_NO_LIMIT && this.addGameModification(a.MODIFICATION_TYPE.GUIDELINE_NOLIMIT), 3 == a.Options.MAX_NEXT_BUBBLES && this.addGameModification(a.MODIFICATION_TYPE.THREE_NEXT_BUBBLES), a.Options.ADD_5_BUBBLES && this.addGameModification(a.MODIFICATION_TYPE.PLUS_5_BUBLES));
                }),
                (e.prototype.initGame = function () {
                    (a.SoundsManager.gameThemaPlay(), (this._modifications = []), (this._modificationVisual = new a.Modification(this)), (this._tmpSwapIconInteractive = !0), this.staticInitGame());
                }),
                (e.prototype.initControls = function () {
                    (IS_DESKTOP && (this.interactionAfterTouch = !1), this._debugReplay || (this.on(KY.GameEvent.MOUSE_MOVE, this.onMove, this), this.on(KY.GameEvent.MOUSE_DOWN, this.onDown, this), this.on(KY.GameEvent.MOUSE_UP, this.onUp, this)));
                }),
                (e.prototype.initGrid = function () {
                    this._grid = new a.WeekCompetitionWorld();
                }),
                (e.prototype.shutdown = function () {
                    (a.LoaderScreen.show(), this.game.off(KY.GameEvent.RESIZE, this.resize, this), a.MI.get().off(a.MI.EVENT_SHOW_ADS, this.showAds, this), this.game.keyboard.clearCallbacks(), this._grid.removeAllListeners(), this.removeAllListeners(), a.SoundsManager.gameMusicStop(), a.PopScore.free(), a.PopCombo.free());
                }),
                (e.prototype.setupGrid = function () {
                    (this._grid.on(a.World.EVENT_BUBBLE_COUNT_CHANGE, this.setBubbleCount, this),
                        this._grid.on(a.World.EVENT_PLUS_MINUS_TWO, this.getPlusMinusBubble, this),
                        this._grid.on(a.World.EVENT_FOUNTAIN_START, this.startFountain, this),
                        this._grid.on(a.World.EVENT_FOUNTAIN_END, this.endFountain, this),
                        this._grid.on(a.World.EVENT_LAST_BUBBLE, this.lastBubble, this),
                        this._grid.on(a.World.EVENT_FIRED, this.fired, this),
                        this._grid.on(a.World.EVENT_AFTER_FIRED, this.afterFired, this),
                        this._grid.on(a.World.EVENT_SWAP, this.swapDown, this),
                        this._grid.on(a.World.EVENT_CAN_TOUCH, this.checkCanShoot, this),
                        this._grid.on(a.World.EVENT_BOUNCE_WALL, this.bounceWall, this),
                        this._grid.on(a.World.EVENT_BUBBLE_POP, this.bubblePopScore, this),
                        this._grid.on(a.World.EVENT_STAGE_CLEAR, this.stageClear, this),
                        this._grid.on(a.World.EVENT_GAME_WIN, this.gameWin, this),
                        this._grid.on(a.World.EVENT_GAME_OVER, this.gameOver, this),
                        this._grid.on(a.World.EVENT_GAME_CONTINUE, this.gameContinue, this),
                        this._grid.on(a.World.EVENT_GUIDELINE_NO_LIMIT_MOVE, this.guidelineNLMove, this),
                        this._grid.on(a.World.EVENT_GUIDELINE_BEGIN, this.guidelineBegin, this),
                        this._grid.on(a.World.EVENT_GUIDELINE_END, this.guidelineEnd, this),
                        this._grid.on(a.World.EVENT_BUBBLE_CONTACT, this.contact, this),
                        this._grid.on(a.World.EVENT_SHOW_LIGHTNING, this.showLightningEffect, this),
                        this._grid.on(a.World.EVENT_SHOW_LASER, this.showLaserEffect, this),
                        this._grid.on(a.World.EVENT_AFTER_COLLISION, this.afterCollision, this),
                        this._grid.on(a.World.EVENT_END_START_DEMO, this.endStartDemo, this),
                        this._grid.on(a.World.EVENT_MAP_SCROLL, this.scrollMap, this),
                        this._grid.on(a.World.EVENT_SHOW_FLY, this.showFly, this),
                        this._grid.on(a.World.EVENT_PIG_KEY_SHOW, this.showPigKey, this),
                        this._grid.on(a.World.EVENT_GET_SPECIAL_BUBBLE, this.showSpecialPopup, this),
                        this._grid.setup(this._patterns),
                        (this._grid.pcMode = IS_DESKTOP),
                        this._grid.setSwapAreaHeightOffset(IS_DESKTOP ? 0 : e.CANNON_BOTTOM_OFFSET_MOBILE - e.CANNON_BOTTOM_OFFSET_PC),
                        this.hideThirdBubble(),
                        this._grid.user_haveSpecialBubbles && a.MI.get().popupManager.get(a.AllPopups.SPECIAL_BUBBLE),
                        a.MI.get().isMapEditor && ((this._debugTouch = []), (this._debugTouchTime = Date.now())));
                }),
                (e.prototype.hideThirdBubble = function () {
                    3 == a.Options.MAX_NEXT_BUBBLES && (this._grid.nextBubbles[2].alpha = 0);
                }),
                (e.prototype.showAds = function (b) {
                    b == a.ADS_TYPE.REWARD && a.UserGameData.adsCounterGetReward();
                }),
                (e.prototype.showOptions = function () {
                    a.MI.get().popupManager.isOverlay || a.MI.get().popupManager.add(a.AllPopups.OPTIONS);
                }),
                (e.prototype.addExtraBubble = function (b, c) {
                    if ((this.addGameModification({ type: a.MODIFICATION_TYPE.PLUS_N_BUBLES, value: b }), a.Options.SHOW_STARTLEVEL_ANIMATIONS && 1 != c)) ((this._needShowModification = !0), (this._levelStart = !1));
                    else {
                        var d = this._modifications.pop();
                        a.Modification.applyModification(this, d.type, d.value);
                    }
                }),
                (e.prototype.endLevelTarget = function () {
                    if (this._modifications.length)
                        if (a.Options.SHOW_STARTLEVEL_ANIMATIONS) this._needShowModification = !0;
                        else {
                            for (; this._modifications.length; ) {
                                var b = this._modifications.pop();
                                'object' == typeof b ? a.Modification.applyModification(this, b.type, b.value) : a.Modification.applyModification(this, b);
                            }
                            this._levelStart = !0;
                        }
                    else this._levelStart = !0;
                }),
                (e.prototype.endStartDemo = function () {
                    var a = this;
                    (TweenLite.to(this._additionalCannonContainer, 0.2, { alpha: 1 }),
                        this._grid.showCannonBubbles(0.2),
                        setTimeout(function () {
                            a.endLevelTarget();
                        }, 200),
                        (this._debugReplayTime = 0));
                }),
                (e.prototype.resetModificationDemo = function () {
                    ((this._levelStart = !1), (this._needShowModification = !0));
                }),
                (e.prototype.addGameModification = function (a) {
                    this._modifications.push(a);
                }),
                (e.prototype.M_plusNBubbles = function (a) {
                    (this._grid.changeBubbleCount(a), this._bubbleCounter.jump(), this._grid.bubbleCount >= 2 && !this._swapIcon.visible && this.showSwapIcon());
                }),
                (e.prototype.M_show3NextBubbles = function () {
                    var a = this._grid.nextBubbles[2].scale.x;
                    (this._grid.nextBubbles[2].scale.set(0.1), TweenLite.to(this._grid.nextBubbles[2], 0.2, { alpha: 1 }), TweenLite.to(this._grid.nextBubbles[2].scale, 0.2, { x: a, y: a, ease: Back.easeOut }));
                }),
                (e.prototype.showFly = function (b, c, d) {
                    var e,
                        f = this;
                    ((e = this._flyPool.length ? this._flyPool.pop() : new a.BigFly()), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), e.setColor(d), this._bubbleContainer.addChild(e));
                    var g = 0.4,
                        h = 0.8;
                    (TweenLite.to(e, 0.1, { alpha: 1, delay: g, overwrite: 'auto' }),
                        TweenLite.to(e, 1, { y: e.y - 200, delay: g }),
                        TweenLite.to(e.scale, 0.8, { x: 1.2, y: 1.2, delay: g, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.3, {
                            alpha: 0,
                            delay: g + h,
                            onComplete: function () {
                                (TweenLite.killTweensOf(e), f._bubbleContainer.removeChild(e), f._flyPool.push(e));
                            },
                        }));
                }),
                (e.prototype.showSpecialPopup = function (a, b) {
                    ((this._specialBubbleMark = a), (this._specialBubbleMoveCounter = b));
                }),
                (e.prototype.afterFired = function () {
                    (this._specialBubbleMark && 0 == a.MI.get().popupManager.isOverlay && ((this._postDowned = !1), a.MI.get().popupManager.add(a.AllPopups.SPECIAL_BUBBLE, this._specialBubbleMark, this._specialBubbleMoveCounter)), (this._specialBubbleMark = null), this._grid.effectiveShots > 1 && this._bubbleContainer.addChild(a.PopCombo.getPopup(this._grid.effectiveShots, this._grid.lastContactX, this._grid.lastContactY + this._grid.bubbleContainer.y + 350)));
                }),
                (e.prototype.showPigKey = function (b, c) {
                    var d = this;
                    (a.UserGameData.addProperty(a.USER_PROPERTY.KEYS), 4 == a.UserGameData.getProperty(a.USER_PROPERTY.KEYS) && a.UserGameData.setProperty(a.USER_PROPERTY.SHOW_FULL_PIG_BANK, 0), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.KEYS, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME), a.SoundsManager.getKey());
                    var e;
                    ((e = this._keyPool.length ? this._keyPool.pop() : new a.KeyPopup()), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), (e.rotation = 0), this._bubbleContainer.addChild(e));
                    var f = 0.1,
                        g = 0.8;
                    (TweenLite.to(e, 0.1, { alpha: 1, delay: f, overwrite: 'auto' }),
                        TweenLite.to(e.scale, 0.8, { x: 1, y: 1, delay: f, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.8, { rotation: -Math.PI / 6, delay: f, ease: Back.easeOut }),
                        TweenLite.to(e, 0.3, {
                            alpha: 0,
                            delay: f + g,
                            onComplete: function () {
                                (TweenLite.killTweensOf(e), d._bubbleContainer.removeChild(e), d._keyPool.push(e));
                            },
                        }));
                }),
                (e.prototype.showPlusMinusTwo = function (b, c, d) {
                    var e,
                        f = d < 0;
                    (this._plusMinusTwoPool.length ? ((e = this._plusMinusTwoPool.pop()), e.reset(d)) : (e = new a.PlusMinusTwoPopup(d)), (e.x = b), (e.y = c + this._grid.bubbleContainer.y), e.scale.set(0.2), (e.alpha = 0), (e.rotation = Stage.rnd.rangeJS(-Math.PI / 6, Math.PI / 6)), this._bubbleContainer.addChild(e));
                    var g = 0.1;
                    (TweenLite.to(e, 0.1, { alpha: 1, delay: g, overwrite: 'auto' }),
                        TweenLite.to(e.scale, 0.8, { x: 1, y: 1, delay: g, overwrite: 'auto', ease: Back.easeOut }),
                        TweenLite.to(e, 0.8, { rotation: 0, delay: g, ease: Back.easeOut }),
                        (b += this._grid.bubbleContainer.x),
                        (c += this._grid.bubbleContainer.y),
                        f && 0 == this._grid.bubbleCount
                            ? (TweenMax.to(e, 0.2, { alpha: 0, delay: g + 0.8, ease: Sine.easeIn }), TweenMax.to(e.scale, 0.2, { x: 0, y: 0, delay: g + 0.8, ease: Sine.easeIn }), this.setBubbleCount(0, !0), this.hideSwapIcon(), this._grid.clearCannon())
                            : !f && this._grid.bubbleCount < 2 + d
                              ? (TweenMax.to(e, 0.2, { alpha: 0, delay: g + 0.8, ease: Sine.easeIn }), TweenMax.to(e.scale, 0.2, { x: 0, y: 0, delay: g + 0.8, ease: Sine.easeIn }), this.setBubbleCount(this._grid.bubbleCount, !0))
                              : (TweenMax.to(e, 0.2, { alpha: 0, delay: g + 0.9, ease: Sine.easeIn }),
                                TweenMax.to(e.scale, 0.2, { x: 0, y: 0, delay: g + 0.9, ease: Sine.easeIn }),
                                TweenMax.to(e, 0.4, {
                                    bezier: {
                                        curviness: 1.25,
                                        type: 'soft',
                                        values: [
                                            { x: b, y: c },
                                            { x: 0.5 * b - 100, y: 0.5 * (c + this._cannonContainer.y) },
                                            { x: 0, y: this._cannonContainer.y },
                                        ],
                                    },
                                    delay: g + 0.6,
                                    ease: Sine.easeIn,
                                }),
                                this.setBubbleCount(this._grid.bubbleCount, !0, 1.3, !0)));
                }),
                (e.prototype.showCentralSgn = function (b, c) {
                    var d,
                        e,
                        f = this;
                    (this._centralSgn.length ? (d = this._centralSgn.pop()) : ((e = a.Locales.get('ui0', 'textEffect0004')), (d = this.sprite(0, 0, e[0], e[1]))),
                        (d.alpha = 0),
                        this._centralSgnContainer.addChild(d),
                        (e = a.Locales.get('textEffect0004' == b ? 'ui0' : 'ui', b)),
                        d.changeKey(e[0]),
                        (d.frameName = e[1]),
                        d.scale.set(0.3),
                        (d.y = 200),
                        TweenLite.to(d, 0.4, { alpha: 1, overwrite: 'auto' }),
                        TweenLite.to(d.scale, 0.4, { x: 1, y: 1, ease: Back.easeOut }),
                        TweenLite.to(d, 0.4, { y: 0, ease: Back.easeOut }),
                        TweenLite.to(d, 0.4, {
                            alpha: 0,
                            delay: c,
                            onComplete: function () {
                                (f._centralSgnContainer.removeChild(d), f._centralSgn.push(d));
                            },
                        }),
                        a.SoundsManager.alertTxt());
                }),
                (e.prototype.setBubbleCount = function (a, b, c, d) {
                    (void 0 === b && (b = !1), void 0 === c && (c = null), void 0 === d && (d = !1));
                    var e = this._bubbleCounter.value;
                    (this._bubbleCounter.setCount(a, c), b && this._bubbleCounter.jump(null != c), 5 == a && !this._fountainStarted && e > a && this.showCentralSgn('textEffect0004', 1));
                }),
                (e.prototype.getPlusMinusBubble = function (a, b, c) {
                    (this.showPlusMinusTwo(b, c, a), a > 0 && this.showSwapIcon());
                }),
                (e.prototype.contact = function (b, c) {
                    b.mainColor == a.BubbleColor.LIGHTNING && this.showLightningEffect(b);
                }),
                (e.prototype.getLightningEffect = function () {
                    for (var b = 0; b < this._lightningEffect.length; b++) if (0 == this._lightningEffect[b].animPlaying) return this._lightningEffect[b];
                    var c = this.sprite(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'effects/lightning/lightningEffect0001');
                    return (c.addAnimation('idle', KY.Sprite.createAnimationState('effects/lightning/lightningEffect', 1, 4, 4), 15, !0), c.scale.set(2), this._lightningEffect.push(c), c);
                }),
                (e.prototype.getLaserEffect = function () {
                    this._lasers;
                    for (var b = 0; b < this._lasers.length; b++) if (this._lasers[b].isFree) return this._lasers[b];
                    var c = new a.LaserEffect();
                    return c;
                }),
                (e.prototype.showLightningEffect = function (b) {
                    var c = this,
                        d = this.getLightningEffect();
                    if (this._grid instanceof a.CircleWorld) {
                        var e = b.x - this._grid.anchor.x,
                            f = b.y - this._grid.anchor.y,
                            g = Math.sqrt(e * e + f * f),
                            h = Math.atan2(f, e);
                        d.y = this._grid.anchor.y + Math.sin(h + this._grid.anchor.rotation) * g + this._grid.bubbleContainer.y;
                    } else d.y = b.y + this._grid.bubbleContainer.y;
                    (d.play('idle', !0),
                        this._bubbleContainer.addChild(d),
                        a.SoundsManager.lightningActivate(),
                        setTimeout(function () {
                            (d.stop(), c._bubbleContainer.removeChild(d));
                        }, 500));
                }),
                (e.prototype.showLaserEffect = function (b) {
                    var c = this,
                        d = this.getLaserEffect(),
                        e = b.getComponent(a.TypeBubbleComponent.LASER),
                        f = e.visual.getAngle();
                    if (this._grid instanceof a.CircleWorld) {
                        var g = b.x - this._grid.anchor.x,
                            h = b.y - this._grid.anchor.y,
                            i = Math.sqrt(g * g + h * h),
                            j = Math.atan2(h, g);
                        ((d.x = this._grid.anchor.x + Math.cos(j + this._grid.anchor.rotation) * i + this._grid.bubbleContainer.x), (d.y = this._grid.anchor.y + Math.sin(j + this._grid.anchor.rotation) * i + this._grid.bubbleContainer.y));
                    } else ((d.x = b.x + this._grid.bubbleContainer.x), (d.y = b.y + this._grid.bubbleContainer.y));
                    (this._bubbleContainer.addChild(d),
                        d.show(f),
                        a.SoundsManager.laserBall(),
                        setTimeout(function () {
                            ((d.isFree = !0), c._bubbleContainer.removeChild(d));
                        }, 500));
                }),
                (e.prototype.scrollMap = function (a, b, c) {
                    for (var d = 0; d < this._lightningEffect.length; d++) TweenLite.to(this._lightningEffect[d], c, { delay: 0.05, y: this._lightningEffect[d].y + b, ease: Sine.easeOut });
                    for (var d = 0; d < this._lasers.length; d++) TweenLite.to(this._lasers[d], c, { delay: 0.05, y: this._lasers[d].y + b, ease: Sine.easeOut });
                }),
                (e.prototype.afterCollision = function (b, c) {
                    var d = this._grid.effectiveShots;
                    (d ? (this._lastEffectiveShot < d && this._effectiveShotForFreeBomb++, (this._lastEffectiveShot = d)) : ((this._effectiveShotForFreeBomb = 0), (this._lastEffectiveShot = -1)), this._bombBoosterBtn.isFull || (this._bombBoosterBtn.setProgress(this._effectiveShotForFreeBomb / a.UserGameData.FREE_BOMB_SHOOT_COUNT), a.LoadManager.ATLAS_UI && this._bombBoosterBtn.isFull && ((this._cannonSgn.alpha = 0), this._cannonSgn.scale.set(0.3), TweenLite.to(this._cannonSgn, 0.4, { alpha: 1, overwrite: 'auto' }), TweenLite.to(this._cannonSgn, 0.6, { rotation: -0.3, delay: 0.1, ease: Back.easeOut }), TweenLite.to(this._cannonSgn.scale, 0.4, { x: 0.9, y: 0.9, ease: Back.easeOut }), TweenLite.to(this._cannonSgn, 0.4, { alpha: 0, delay: 1 }), a.SoundsManager.getFreeBomb())));
                }),
                (e.prototype.guidelineBegin = function () {
                    this._tmpSwapDown = !1;
                }),
                (e.prototype.guidelineNLMove = function (b, c, d, f) {
                    if (this._selectedBomb) (this._grid.unselectAllBubbles(), this.updateBombGuideline(b, c, d, f), this._bubbleContainer.addChild(e.BOMB_GUIDELINE));
                    else if (this._selectedFireball) (this._grid.unselectAllBubbles(), this._grid.selectFireGuideline());
                    else if (this._selectedRainbow) (this._grid.unselectAllBubbles(), this._grid.selectRainbowGuideline(d, f));
                    else if (this._selectedLightning) {
                        (this._grid.unselectAllBubbles(), this._grid.selectLightningGuideline(d, f));
                        var g = c;
                        if (this._grid instanceof a.CircleWorld) {
                            var h = b - this._grid.anchor.x,
                                i = g - this._grid.anchor.y,
                                j = Math.sqrt(h * h + i * i),
                                k = Math.atan2(i, h);
                            g = this._grid.anchor.y + Math.sin(k + this._grid.anchor.rotation) * j;
                        }
                        ((e.LINE_GUIDELINE.y = g + this._grid.bubbleContainer.y), (e.LINE_GUIDELINE.width = a.Options.MAP_WIDTH), (e.LINE_GUIDELINE.rotation = 0), (e.LINE_GUIDELINE.alpha = 0.35), this._bubbleContainer.addChild(e.LINE_GUIDELINE));
                    }
                }),
                (e.prototype.guidelineEnd = function () {
                    (this._bubbleContainer.removeChild(e.BOMB_GUIDELINE), this._bubbleContainer.removeChild(e.LINE_GUIDELINE), this._grid.unselectAllBubbles());
                }),
                (e.prototype.swapDown = function () {
                    this._swapIcon.visible && (this._tmpSwapDown = !0);
                }),
                (e.prototype.swap = function (b) {
                    (void 0 === b && (b = !1), this._grid.swap(), a.SoundsManager.swap(), a.UserGameData.checkTutor(a.UserGameData.TUTORIAL_LIST[a.AllPopups.CHANGE_BUBBLE_TUTORIAL], !0), (this._tmpSwapDown = !1));
                }),
                (e.prototype.showSwapIcon = function (a) {
                    (void 0 === a && (a = !1), a ? null != this._tmpSwapIconInteractive && (this._swapIcon.visible = this._tmpSwapIconInteractive) : (this._swapIcon.visible = !0));
                }),
                (e.prototype.hideSwapIcon = function () {
                    ((this._tmpSwapIconInteractive = this._swapIcon.visible), (this._swapIcon.visible = !1), (this._swapIcon.interactive = !1));
                }),
                (e.prototype.keyDown = function (b) {
                    if (a.MI.get().isMapEditor)
                        switch (b) {
                            case KY.Keys.ONE:
                                this._grid.debugTrace1();
                                break;
                            case KY.Keys.TWO:
                                this._grid.debugTrace2();
                                break;
                            case KY.Keys.THREE:
                                (console.log('---------- TRACE MOVES ---------------'), console.log(JSON.stringify(this._debugTouch)), console.log('--------------------------------------\n'));
                                break;
                            case KY.Keys.FOUR:
                                this._grid.debugTrace3();
                                break;
                            case KY.Keys.FIVE:
                                this._grid.debugTrace5();
                        }
                    0 == this.canTouch || a.MI.get().popupManager.isOverlay || 0 == this._swapIcon.visible || (b == KY.Keys.SPACE && (this.swap(!0), this._debugTouch && this._debugTouch.push([4, Date.now() - this._debugTouchTime, 0, 0])));
                }),
                (e.prototype.stageClear = function () {
                    this._needShowWinPopup = !0;
                }),
                (e.prototype.gameWin = function () {
                    (this._lvlCompleteSgn.scale.set(0.1), TweenLite.to(this._lvlCompleteSgn, 0.15, { alpha: 1, y: 0, delay: 1, overwrite: 'auto' }), TweenLite.to(this._lvlCompleteSgn.scale, 0.5, { x: 1, y: 1, delay: 1, ease: Back.easeOut }), TweenLite.to(this._lvlCompleteSgn.scale, 0.4, { x: 0.001, y: 0.001, delay: 2, ease: Back.easeIn }), TweenMax.to(this._lvlCompleteSgn, 0.15, { alpha: 0, delay: 2.5, overwrite: 'auto' }), (this._winPopupDelay = Date.now()), this._bombBoosterBtn.isFull && a.Statistics.event_dropFreeBomb());
                }),
                (e.prototype.gameOver = function () {
                    return 0 == this._bubbleCounter.value && this._bombBoosterBtn.isFull ? (this.addExtraBubble(1, !0), this.grid.continue(!1), this.staticToggleBombBooster(!0), (this._lastBombBooster = !0), void this._bubbleCounter.reset5Bubbles()) : (a.UserGameData.setGameState(!1), e.replayCount++, void (this._bombBoosterBtn.isFull && a.Statistics.event_dropFreeBomb()));
                }),
                (e.prototype.gameContinue = function (b) {
                    (void 0 === b && (b = !0), a.UserGameData.setGameState(!0), a.SoundsManager.gameMusicFadeBack(), b && this.showSwapIcon());
                }),
                (e.prototype.bubblePopScore = function (b, c, d, e, f, g, h) {
                    var i = f ? d : this._grid.lastShotInfo.color,
                        j = 0;
                    if (a.Bubble.BOOSTER_SCORE.indexOf(i) != -1 || a.Bubble.BOOSTER_SCORE.indexOf(e) != -1) {
                        var k = this._grid.effectiveShots + (i == a.BubbleColor.FIREBALL ? 1 : 0);
                        j = a.UserGameData.SCORE_MODIF_BOOST - a.UserGameData.SCORE_MODIF_DEFAULT + k * a.UserGameData.SCORE_MODIF_DEFAULT;
                    } else j = this._grid.effectiveShots * a.UserGameData.SCORE_MODIF_DEFAULT;
                    (f && (j = a.UserGameData.SCORE_MODIF_DROP), a.Bubble.NO_SCORE.indexOf(d) != -1 && (j = 0), g && (j = a.UserGameData.SCORE_MODIF_FOUNTAIN), d == a.BubbleColor.PENTAGON && (j = a.UserGameData.SCORE_MODIF_PENTAGON * Math.max(this._grid.effectiveShots - 5, 1)), 0 != j && (this._bubbleContainer.addChild(a.PopScore.getPopup('' + j, a.Bubble.colorValue(i), b, c)), h && !this._isShake && this.shake()));
                }),
                (e.prototype.bounceWall = function (a) {
                    if (a) {
                        var b = -510;
                        ((this._leftBorder.x = b - 10), TweenLite.to(this._leftBorder, 0.2, { x: b }));
                    } else {
                        var b = 510;
                        ((this._rightBorder.x = b + 10), TweenLite.to(this._rightBorder, 0.2, { x: b }));
                    }
                }),
                (e.prototype.startFountain = function () {
                    (this._bubbleCounter.value > 0 ? a.SoundsManager.levelWinStartBallsFountain(1.5) : a.SoundsManager.levelWinNoBallsFountain(1), (this._fountainStarted = !0), this._bubbleCounter.startFountain(), this.hideSwapIcon());
                }),
                (e.prototype.endFountain = function () {
                    this._fountainStarted = !1;
                }),
                (e.prototype.checkCanShoot = function (a) {
                    this._canTouch = a;
                }),
                (e.prototype.showBoostInfo = function (b, c) {
                    switch (((this._boostButtonLayer.interactiveChildren = !1), (this._boostButtonLayer.alpha = 0), (this._boostInfoLayer.interactiveChildren = !0), (this._boostInfoLayer.alpha = 1), this.hideSwapIcon(), this._bubbleCounter.countVisible(!1), c ? ((this._closeBoostInfo.visible = !1), (this._closeBoostInfo.enabled = !1), (this._boostInfoCloseBg.visible = !1)) : ((this._closeBoostInfo.visible = !0), (this._closeBoostInfo.enabled = !0), (this._boostInfoCloseBg.visible = !0)), b)) {
                        case 0:
                            ((this._boostInfoTxt.text = a.StringManager.get('RAINBOW_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0002'));
                            break;
                        case 1:
                            ((this._boostInfoTxt.text = a.StringManager.get('FIREBALL_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0003'));
                            break;
                        case 2:
                            ((this._boostInfoTxt.text = a.StringManager.get('LIGHTNING_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0001'));
                            break;
                        case 3:
                            ((this._boostInfoTxt.text = a.StringManager.get('BOMB_BOOST_INFO')), (this._boostInfoIcon.frameName = 'boostIco0004'));
                    }
                }),
                (e.prototype.hideBoostInfo = function () {
                    ((this._boostButtonLayer.interactiveChildren = !0), (this._boostButtonLayer.alpha = 1), (this._boostInfoLayer.interactiveChildren = !1), (this._boostInfoLayer.alpha = 0), this.showSwapIcon(!0), this._bubbleCounter.countVisible(!0));
                }),
                (e.prototype.updateBoostButtons = function (b) {
                    switch ((this._lightningBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT)), this._rainbowBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT)), this._fireballBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT)), this._bombBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT)), b)) {
                        case 0:
                            this.toggleLightningBooster();
                            break;
                        case 1:
                            this.toggleRainbowBooster();
                            break;
                        case 2:
                            this.toggleFireballBooster();
                            break;
                        case 3:
                            this.toggleBombBooster();
                    }
                }),
                (e.prototype.buyBoostCallback = function (a) {
                    this.updateBoostButtons(a);
                }),
                (e.prototype.toggleBooster = function () {
                    this._selectedRainbow ? this.toggleRainbowBooster() : this._selectedFireball ? this.toggleFireballBooster() : this._selectedBomb ? this.toggleBombBooster() : this._selectedLightning && this.toggleLightningBooster();
                }),
                (e.prototype.toggleLightningBooster = function () {
                    if (this.canTouch) {
                        if (a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT) <= 0 && !this._lightningBoosterBtn.isInfinity) return void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 0, this.buyBoostCallback, this);
                        ((this._selectedLightning = !this._selectedLightning), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 1, this._selectedLightning ? 1 : 0]), this._grid.setLightning(this._selectedLightning), a.SoundsManager.lightningSelected(this._selectedLightning), this._selectedLightning ? (this.showBoostInfo(2), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._lightningBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)));
                    }
                }),
                (e.prototype.toggleBombBooster = function () {
                    if (this.canTouch) return a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT) <= 0 && !this._bombBoosterBtn.isFull && !this._bombBoosterBtn.isInfinity ? void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 3, this.buyBoostCallback, this) : void this.staticToggleBombBooster();
                }),
                (e.prototype.staticToggleBombBooster = function (b) {
                    ((this._selectedBomb = !this._selectedBomb), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 4, this._selectedBomb ? 1 : 0]), this._grid.setBomb(this._selectedBomb), a.SoundsManager.bombSelected(this._selectedBomb), this._selectedBomb ? (this.showBoostInfo(3, b), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._bombBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)));
                }),
                (e.prototype.toggleRainbowBooster = function () {
                    if (this.canTouch) {
                        if (a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT) <= 0 && !this._rainbowBoosterBtn.isInfinity) return void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 1, this.buyBoostCallback, this);
                        ((this._selectedRainbow = !this._selectedRainbow), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 2, this._selectedRainbow ? 1 : 0]), this._grid.setRainbow(this._selectedRainbow), a.SoundsManager.rainbowSelected(this._selectedRainbow), this._selectedRainbow ? (this.showBoostInfo(0), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._rainbowBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)));
                    }
                }),
                (e.prototype.toggleFireballBooster = function () {
                    if (this.canTouch) {
                        if (a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT) <= 0 && !this._fireballBoosterBtn.isInfinity) return void a.MI.get().popupManager.add(a.AllPopups.BUY_BOOST, 2, this.buyBoostCallback, this);
                        ((this._selectedFireball = !this._selectedFireball), this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([5, Date.now() - this._debugTouchTime, 3, this._selectedFireball ? 1 : 0]), this._grid.setFireball(this._selectedFireball), a.SoundsManager.fireballSelected(this._selectedFireball), this._selectedFireball ? (this.showBoostInfo(1), (this._tmpGuidelineNoLimit = a.Options.GUIDELINE_NO_LIMIT), this._fireballBoosterBtn.isInfinity && (a.Options.GUIDELINE_NO_LIMIT = !0)) : (this.hideBoostInfo(), (a.Options.GUIDELINE_NO_LIMIT = this._tmpGuidelineNoLimit)));
                    }
                }),
                (e.prototype.fired = function () {
                    ((this._specialBubbleMark = null), (this._lastBombBooster = !1));
                    var b = !1;
                    (this._selectedRainbow
                        ? (this.toggleRainbowBooster(), 0 == this._rainbowBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.RAINBOW_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.RAINBOW, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._rainbowBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.RAINBOW_COUNT)))
                        : this._selectedFireball
                          ? ((b = !0), this.toggleFireballBooster(), 0 == this._fireballBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.FIREBALL_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.FIREBALL, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._fireballBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.FIREBALL_COUNT)))
                          : this._selectedBomb
                            ? (this.toggleBombBooster(), this._bombBoosterBtn.isFull ? (this._bombBoosterBtn.setProgress(0), (this._effectiveShotForFreeBomb = -1), a.Statistics.event_useFreeBomb()) : 0 == this._bombBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.BOMB_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.BOMB, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._bombBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.BOMB_COUNT)))
                            : this._selectedLightning && (this.toggleLightningBooster(), 0 == this._lightningBoosterBtn.isInfinity && (a.UserGameData.subProperty(a.USER_PROPERTY.LIGHTNING_COUNT, 1), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.SUB, a.STATS_GAME_CURRENCY.LIGHTNING, 1, a.STATS_GAME_RESOURCE_PLACEMENT.IN_GAME)), this._lightningBoosterBtn.setCount(a.UserGameData.getProperty(a.USER_PROPERTY.LIGHTNING_COUNT))),
                        a.SoundsManager.shoot(b));
                }),
                (e.prototype.lastBubble = function () {
                    this.hideSwapIcon();
                }),
                (e.prototype.onDown = function (b, c, d, f) {
                    if ((this._debugTouch && null != this._debugReplayTime && !f && this._debugTouch.push([1, Date.now() - this._debugTouchTime, b, c]), !a.MI.get().popupManager.isOverlay)) {
                        if (e.ONCE_BLOCK_DOWN) return void (e.ONCE_BLOCK_DOWN = !1);
                        if (IS_DESKTOP && f) return void this.keyDown(KY.Keys.SPACE);
                        if (!this.canDown) return (this._grid.skipDemo(), (this._postDownX = b), (this._postDownY = c), void (this._postDowned = !0));
                        ((this._isMouseDown = !0), (this._mouseDownTime = Date.now()), this._grid.touch(b - this._mainContainer.x, c - this._mainContainer.y, !0));
                    }
                }),
                (e.prototype.onUp = function (a, b) {
                    if ((this._debugTouch && null != this._debugReplayTime && this._debugTouch.push([2, Date.now() - this._debugTouchTime, a, b]), (this._postDowned = !1), this._swapIcon.visible && this._tmpSwapDown && this.swap(), this._grid && this.canTouch && this._isMouseDown)) {
                        this._isMouseDown = !1;
                        var c = Date.now(),
                            d = c - this._lastMoveTime,
                            e = c - this._mouseDownTime;
                        null != this._lastMoveX && d < this.MOVE_MIN_TIME_DELTA && e >= this.MOVE_MIN_TIME_DELTA + 1 && (this._grid.move(this._lastMoveX - this._mainContainer.x, this._lastMoveY - this._mainContainer.y), (this._lastMoveX = null), (this._lastMoveY = null));
                        var f = (this._selectedRainbow || this._selectedBomb || this._selectedFireball || this._selectedLightning) && 1 != this._lastBombBooster;
                        this._grid.fireBubble(0 == f);
                    }
                }),
                (e.prototype.onMove = function (b, c) {
                    if (this._grid && this.canTouch) {
                        if (this._grid.pcMode) {
                            if (a.MI.get().popupManager.isOverlay) return void e.instance.grid.clearGuidline();
                        } else if (!this._isMouseDown) return;
                        ((this._lastMoveTime = Date.now()), (this._lastMoveX = this._varMoveX), (this._lastMoveY = this._varMoveY), (this._varMoveX = b), (this._varMoveY = c), this._grid.move(b - this._mainContainer.x, c - this._mainContainer.y) && ((this._lastMoveX = null), (this._lastMoveY = null)));
                    }
                }),
                (e.prototype.debugUpdate = function (b) {
                    if (a.MI.get().isMapEditor && this._debugReplay && null != this._debugReplayTime) {
                        if (this._debugReplay.length) {
                            var c = this._debugReplay[0][0],
                                d = this._debugReplay[0][1],
                                e = this._debugReplay[0][2],
                                f = this._debugReplay[0][3];
                            if (d <= this._debugReplayTime - 4e3) {
                                switch (c) {
                                    case 1:
                                        (this.onMove(e, f), this.onDown(e, f));
                                        break;
                                    case 2:
                                        (this.onMove(e, f), this.onUp(e, f));
                                        break;
                                    case 4:
                                        this.swap(!0);
                                        break;
                                    case 5:
                                        switch (e) {
                                            case 1:
                                                this.toggleLightningBooster();
                                                break;
                                            case 2:
                                                this.toggleRainbowBooster();
                                                break;
                                            case 3:
                                                this.toggleFireballBooster();
                                                break;
                                            case 4:
                                                this.toggleBombBooster();
                                        }
                                }
                                this._debugReplay.shift();
                            }
                        }
                        this._debugReplayTime += 16 * b;
                    }
                }),
                (e.prototype.update = function (b) {
                    if (this._grid && this._isLoaded) {
                        (this.debugUpdate(b), this._postDowned && this.canDown && ((this._postDowned = !1), this.onDown(this._postDownX, this._postDownY), this.onMove(this._postDownX, this._postDownY)), this._needShowWinPopup && Date.now() - this._winPopupDelay > 2500 && ((this._needShowWinPopup = !1), a.UserGameData.setGameState(!1), a.MI.get().popupManager.clearQueue()), this.canTouch ? (a.Options.GUIDELINE_NO_LIMIT ? (this._bubblePlace.frameName = e.DOCK_GUIDELINE_NOLIMIT) : (this._bubblePlace.frameName = e.DOCK_ACTIVE)) : (this._bubblePlace.frameName = e.DOCK_INACTIVE), this._needShowModification && this._modificationVisual && this._modificationVisual.isReadyToShow && (this._modifications.length ? (this._modificationVisual.show(this._modifications.pop()), this._modifContainer.addChild(this._modificationVisual)) : (this._levelStart = !0)), this._bombBoosterBtn && this._bombBoosterBtn.update(b));
                        for (var c = 0; c < this._crownSgnActive.length; c++) this._crownSgnActive[c].update(b);
                        if (this._isShake) {
                            var d = this.game.width,
                                f = this.game.height;
                            ((!this._shakeX || (a.Utils.equal(this._grid.x, this._shakeX, 0.1) && a.Utils.equal(this._grid.y, this._shakeY, 0.1))) && ((this._shakeX = Math.random() * this._shakeIntensity * d * 2 - this._shakeIntensity * d), (this._shakeY = Math.random() * this._shakeIntensity * f * 2 - this._shakeIntensity * f)), (this._grid.x += 0.1 * (this._shakeX - this._grid.x)), (this._grid.y += 0.1 * (this._shakeY - this._grid.y)), (this._shakeDuration -= 16 * b), this._shakeDuration <= 0 && ((this._grid.x = 0), (this._grid.y = 0), (this._isShake = !1)));
                        }
                        (this._grid.update(b, this.mouseX - this._mainContainer.x, this.mouseY - this._mainContainer.y), this._bubbleCounter.update(b), (this._swapIcon.rotation += 0.05 * b));
                    }
                }),
                (e.prototype.shake = function () {
                    ((this._isShake = !0), (this._shakeDuration = 70), (this._shakeIntensity = 0.02), (this._shakeX = 0), (this._shakeX = 0));
                }),
                (e.prototype.createBombGuideline = function () {
                    if (!e.BOMB_GUIDELINE) {
                        ((e.BOMB_GUIDELINE = new PIXI.Container()), (e._bombGuidelineSprites = []));
                        for (var b = 0; b < a.World.BOMB_MASK.length; b++) {
                            var d = new c(0, 0, a.LoadManager.CURRENT_ATLAS_NAME, 'bubbles/ghostWhite'),
                                f = a.World.BOMB_MASK[b],
                                g = f[0] % 2 == 0;
                            ((d.x = a.Options.BUBBLE_GAP_X * (f[1] + 3) + (g ? 0 : a.Options.BUBBLE_RADIUS) - a.Options.GRID_OFFSET_X), (d.y = a.Options.BUBBLE_GAP_Y * f[0]), (d.bx = d.x), (d.by = d.y), (d.cx = f[1] - 1), (d.cy = f[0]), (d.odd = g), e._bombGuidelineSprites.push(d), e.BOMB_GUIDELINE.addChild(d));
                        }
                    }
                }),
                (e.prototype.updateBombGuideline = function (b, c, d, f) {
                    for (var g = 0; g < e._bombGuidelineSprites.length; g++) {
                        var h = e._bombGuidelineSprites[g],
                            i = (f + h.cy) % 2 == 0,
                            j = this._grid.getBubbleByCell(d + h.cx - (i ? 0 : 1) - (h.odd && i ? 1 : 0), f + h.cy),
                            k = null != j && !j.isAnchor;
                        k ? ((h.alpha = 0), j.setSelect(!0)) : (h.alpha = 0.5);
                        var l = h.bx + b,
                            m = h.by + c;
                        if (this._grid instanceof a.CircleWorld) {
                            var n = l - this._grid.anchor.x,
                                o = m - this._grid.anchor.y,
                                p = Math.sqrt(n * n + o * o),
                                q = Math.atan2(o, n);
                            ((l = this._grid.anchor.x + Math.cos(q + this._grid.anchor.rotation) * p), (m = this._grid.anchor.y + Math.sin(q + this._grid.anchor.rotation) * p));
                        }
                        ((h.x = l + this._grid.bubbleContainer.x), (h.y = m + this._grid.bubbleContainer.y));
                    }
                }),
                Object.defineProperty(e.prototype, 'canTouch', {
                    get: function () {
                        return this._canTouch && this._levelStart;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(e.prototype, 'grid', {
                    get: function () {
                        return this._grid;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(e.prototype, 'canDown', {
                    get: function () {
                        return this._grid && this.canTouch && !a.PXButton.checkClickedButton();
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (e.ONCE_BLOCK_DOWN = !1),
                (e.CANNON_BOTTOM_OFFSET_MOBILE = 400),
                (e.CANNON_BOTTOM_OFFSET_PC = 320),
                (e.DOCK_INACTIVE = 'dock0002'),
                (e.DOCK_ACTIVE = 'dock0001'),
                (e.DOCK_GUIDELINE_NOLIMIT = 'dock0003'),
                e
            );
        })(KY.State);
    a.WeekCompetition = d;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b() {}
        return (
            (b.init = function (b) {
                this._disable || ((this._eid = b), (this._inited = !0), this.event_referrer(a.MI.get().social.referrer));
            }),
            (b.postEvent = function (a, b) {}),
            (b.startSession = function () {
                if (!this._disable)
                    try {
                        this.postEvent('StartSession', { eid: this._eid });
                    } catch (a) {}
            }),
            (b.endSession = function () {
                if (!this._disable)
                    try {
                        this.postEvent('EndSession', { state: KY.Game.instance.states.current.name, level: a.UserGameData.getProperty(a.USER_PROPERTY.CURRENT_LEVEL) });
                    } catch (a) {}
            }),
            (b.changeSession = function (a) {
                this._disable;
            }),
            (b.event = function (a, b, c) {
                if ((void 0 === b && (b = '1'), void 0 === c && (c = !1), !this._disable)) {
                    if (1 != this._inited) return void console.log('STNOINIT:', a);
                    try {
                        var d = void 0;
                        if ('object' == typeof a) {
                            d = a[0];
                            for (var e = 1; e < a.length; e++) d = d + ':' + a[e];
                        } else d = a;
                        c && this.postEvent(d, { value: b });
                    } catch (a) {}
                }
            }),
            (b.progress = function (a, b, c, d, e, f) {
                this._disable;
            }),
            (b.resource = function (a, b, c, d, e) {
                (void 0 === e && (e = 'empty'), this._disable);
            }),
            (b.advertising = function (a, b, c) {
                if (!this._disable)
                    try {
                        this.postEvent('Advertising', { type: b, placement: c, action: a });
                    } catch (a) {}
            }),
            (b.iap = function (a, b, c) {
                if (!this._disable)
                    try {
                        this.postEvent('Purchase', { itemId: b, amount: a, placement: c });
                    } catch (a) {}
            }),
            (b.error = function (b, c, d) {
                if (!this._disable)
                    try {
                        this.postEvent('Error', { message: b, lineno: c, colno: d, mark: KY.Game.instance.detect.platform, level: a.Main.LEVEL, state: a.Main.CURSTATE });
                    } catch (a) {}
            }),
            (b.customError = function (a, b) {
                if (!this._disable)
                    try {
                        this.postEvent('CustomError', { code: a, msg: b });
                    } catch (a) {}
            }),
            (b.event_referrer = function (a) {
                this.event('Referrer', a);
            }),
            (b.event_shopOpen = function () {
                this.event('Shop:Open');
            }),
            (b.event_shopExpand = function () {
                this.event('Shop:Expand');
            }),
            (b.event_share = function () {
                this.event('Game:Share');
            }),
            (b.event_mnogoigrovka = function () {
                this.event('Game:Mnogoigrovka');
            }),
            (b.event_gotoGameGroup = function () {
                this.event('Game:GotoGameGroup');
            }),
            (b.event_addFriends = function () {
                this.event('Game:addFriends');
            }),
            (b.event_leave = function (a) {
                this.event('Game:Leave', String(a), !0);
            }),
            (b.event_useFreeBomb = function () {
                this.event('Game:UseFreeBomb');
            }),
            (b.event_dropFreeBomb = function () {
                this.event('Game:DropFreeBomb');
            }),
            (b.event_gardenEnter = function () {
                this.event('Garden:Enter');
            }),
            (b.event_gardenPlant = function () {
                this.event('Garden:Plant');
            }),
            (b.event_gardenWake = function () {
                this.event('Garden:Wake');
            }),
            (b.event_gardenHarvest = function () {
                this.event('Garden:Harvest');
            }),
            (b.event_gardenWater = function () {
                this.event('Garden:Water');
            }),
            (b.event_gardenFertilizer = function () {
                this.event('Garden:Fertilizer');
            }),
            (b.event_gardenPesticides = function () {
                this.event('Garden:Fertilizer');
            }),
            (b.event_gardenFreeFertilizer = function () {
                this.event('Garden:FreeFertilizer');
            }),
            (b.event_tutorial = function (a) {
                this.event('Tutorial', a);
            }),
            (b.event_showPigPopup = function () {
                this.event('PigPopup:Show');
            }),
            (b.event_breakPigPopup = function (a) {
                this.event('PigPopup:Break', String(a));
            }),
            (b.event_breakPigPopupWithKeys = function (a) {
                this.event('PigPopup:BreakWithKeys', String(a));
            }),
            (b.event_offerNoviceLoad = function () {
                this.event('Offer_Novice:Load');
            }),
            (b.event_offerNoviceShow = function () {
                this.event('Offer_Novice:Show');
            }),
            (b.event_offerNoviceAccept = function () {
                this.event('Offer_Novice:Accept');
            }),
            (b.event_addToHomeScreen = function () {
                this.event('AddToHomeScreen');
            }),
            (b.event_activateGarden = function (a) {
                this.event('ActivateGarden', String(a));
            }),
            (b.disable = function () {
                this._disable = !0;
            }),
            (b._disable = !1),
            (b._inited = !1),
            (b._onlyOurStatistics = !0),
            b
        );
    })();
    a.Statistics = b;
    var c;
    !(function (a) {
        ((a[(a.INTERNET_CONNECTION = 1)] = 'INTERNET_CONNECTION'), (a[(a.PURCHASE = 2)] = 'PURCHASE'), (a[(a.NO_COLORS = 3)] = 'NO_COLORS'), (a[(a.STALE_SESSION = 4)] = 'STALE_SESSION'));
    })((c = a.STATS_CUSTOM_ERROR_CODE || (a.STATS_CUSTOM_ERROR_CODE = {})));
    var d;
    !(function (a) {
        ((a.START = 'Start'), (a.FAIL = 'Fail'), (a.COMPLETE = 'Complete'));
    })((d = a.STATS_PROGRESSION_STATUS || (a.STATS_PROGRESSION_STATUS = {})));
    var e;
    !(function (a) {
        ((a.ADD = 'Source'), (a.SUB = 'Sink'));
    })((e = a.STATS_RESOURCE_FLOW_TYPE || (a.STATS_RESOURCE_FLOW_TYPE = {})));
    var f;
    !(function (a) {
        ((a.COIN = 'Coin'), (a.GOLD = 'Gold'), (a.KEYS = 'Keys'), (a.GUIDELINE = 'Guideline'), (a.THREENEXT = 'ThreeNext'), (a.PLUSFIVE = 'PlusFive'), (a.LIGHTNING = 'Lightning'), (a.RAINBOW = 'Rainbow'), (a.FIREBALL = 'Fireball'), (a.BOMB = 'Bomb'));
    })((f = a.STATS_GAME_CURRENCY || (a.STATS_GAME_CURRENCY = {})));
    var g;
    !(function (a) {
        ((a.BOOSTERS = 'boosters'), (a.NO_LIVE = 'no_Live'), (a.ADD_LIVE = 'add_Live'), (a.IAP = 'iap'), (a.GARDEN = 'garden'), (a.LEVEL_FAIL = 'level_fail'), (a.NO_ADS = 'no_ads'), (a.ADS_REWARD = 'ads_reward'), (a.DAILY = 'daily'), (a.RANK = 'rank'), (a.LEVEL_COMPLETE = 'lvl_complete'), (a.PIG_BANK = 'pig_bank'), (a.IN_GAME = 'in_game'), (a.SPECIAL_BUBBLE = 'special_bubble'), (a.MNOGOIGROVKA = 'mnogoigrovka'), (a.THREE_CHEST = 'three_chest'));
    })((g = a.STATS_GAME_RESOURCE_PLACEMENT || (a.STATS_GAME_RESOURCE_PLACEMENT = {})));
    var h;
    !(function (a) {
        ((a.SHOW = 'Show'), (a.FAIL = 'FailedShow'), (a.FREQ_BLOCK = 'FreqBlock'));
    })((h = a.STATS_AD_ACTION || (a.STATS_AD_ACTION = {})));
    var i;
    !(function (a) {
        ((a.INTERSTITIAL = 'Interstitial'), (a.REWARD = 'RewardedVideo'));
    })((i = a.STATS_AD_TYPE || (a.STATS_AD_TYPE = {})));
    var j;
    !(function (a) {
        ((a.START_GAME = 'start_game'), (a.LEVEL_BEGIN = 'level_begin'), (a.LEVEL_END = 'level_end'), (a.NO_LIVE = 'no_live'), (a.BUBBLE_ALERT = 'bubble_alert'), (a.SHOP = 'shop'), (a.SHOP_X3 = 'shop_x3'), (a.PIG_BANK = 'pig_bank'), (a.MINI_GAME = 'mini_game'), (a.SPECIAL_BUBBLE_CN = 'special bubble cn'), (a.SPECIAL_BUBBLE_GL = 'special bubble gl'), (a.SPECIAL_BUBBLE_MV = 'special bubble mv'), (a.NEXT_THREE_CHEST = 'next three chest'), (a.GARDEN = 'garden'));
    })((j = a.STATS_AD_PLACEMENT || (a.STATS_AD_PLACEMENT = {})));
    var k;
    !(function (a) {
        ((a.SHOP = 'Shop'), (a.PIG = 'Pig'), (a.OFFERS = 'offers'));
    })((k = a.STATS_IAP_PLACEMENT || (a.STATS_IAP_PLACEMENT = {})));
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b = (function () {
        function b() {}
        return (
            (b.get = function (b) {
                for (var c = [], d = 1; d < arguments.length; d++) c[d - 1] = arguments[d];
                if (!this._str[b]) return '<Текст не найден>';
                var e = a.Locales.isRus ? 0 : 1;
                if (c) {
                    for (var f = c.length, g = this._str[b][e], h = 0; h < f; h++) g = g.replace('%s' + (h + 1) + '%', String(c[h]));
                    return g;
                }
                return this._str[b][e];
            }),
            (b.array = function (b) {
                if (!this._array[b]) return ['', '', ''];
                var c = a.Locales.isRus ? 0 : 1;
                return this._array[b][c];
            }),
            (b.getQuest = function (b, c, d) {
                var e = a.Locales.isRus ? 0 : 1,
                    f = this._quests[b][e];
                return (3 == this._quests[b].length && (f = f.replace('%d%', a.Utils.declension(c, this.array(this._quests[b][2])))), c && (f = f.replace('%n%', c)), d && (f = f.replace('%s1%', d)), f);
            }),
            (b.getRank = function (b) {
                var c = a.Locales.isRus ? 0 : 1;
                return b >= this._ranks.length ? this._ranks[this._ranks.length - 1][c] + ' - ' + (this._ranks.length - b + 2) : this._ranks[b][c];
            }),
            (b._array = {
                NUMBER: [
                    ['тыc.', 'млн', 'млрд', 'трлн', 'квадрлн'],
                    ['k', 'm', 'b', 't', 'q'],
                ],
                HOUR: [
                    ['часов', 'час', 'часа'],
                    ['hours', 'hour', 'hours'],
                ],
                CROWN: [
                    ['корон', 'корона', 'короны'],
                    ['crowns', 'crown', 'crowns'],
                ],
                COIN: [
                    ['монет', 'монету', 'монеты'],
                    ['coins', 'coin', 'coins'],
                ],
                KEYS: [
                    ['ключей', 'ключ', 'ключа'],
                    ['keys', 'key', 'keys'],
                ],
                SB_MOVE: [
                    ['х выстрелов', 'й выстрел', 'х выстрела'],
                    ['turns', 'turn', 'turns'],
                ],
                YAN: [
                    ['Ян', 'Ян', 'Ян'],
                    ['Yan', 'Yan', 'Yan'],
                ],
                PETAL: [
                    ['Лепестков', 'Лепесток', 'Лепестка'],
                    ['Petals', 'Petal', 'Petals'],
                ],
            }),
            (b._str = {
                TXT_LOADING: ['Загрузка', 'Loading'],
                TXT_BOOSTER_LVL: ['Ур.', 'Lvl'],
                TXT_MAX: ['МАКС', 'MAX'],
                TXT_DAYS: ['д', 'd'],
                TXT_MINUTE: ['мин', 'min'],
                TXT_HOUR: ['ч', 'h'],
                TXT_YES: ['Да', 'Yes'],
                TXT_NO: ['Нет', 'No'],
                LIGHTNING_BOOST_NAME: ['Молния', 'Lightning'],
                RAINBOW_BOOST_NAME: ['Радужный Шар', 'Rainbow Ball'],
                FIREBALL_BOOST_NAME: ['Огненный Шар', 'Fireball'],
                BOMB_BOOST_NAME: ['Бомба', 'Bomb'],
                LIGHTNING_BOOST_INFO: ['Удаляет горизонтальную линию!', 'Removes the horizontal line!'],
                RAINBOW_BOOST_INFO: ['Подходит к любому цвету, с которым сталкивается!', 'Matches any color!'],
                FIREBALL_BOOST_INFO: ['Убирает почти всё на своем пути!', 'Burns almost everything on its way!'],
                BOMB_BOOST_INFO: ['Взрывает всё вокруг себя!', 'Explodes everything around it!'],
                LT_DEFAULT: ['Лопни все шарики!', 'Pop all the bubbles!'],
                LT_CROWN: ['Собери %s1% %s2%!', 'Collect %s1% %s2%!'],
                LT_CIRCLE: ['Очисти центр от шариков!', 'Clear the center from the bubbles!'],
                GUIDELINE_BOOST_CAP: ['Снайпер', 'Sniper'],
                THREE_NEXT_BOOST_CAP: ['Тройная замена', 'Triple replacement'],
                ADD_FIVE_BOOST_CAP: ['Плюс пять!', 'Plus five'],
                GUIDELINE_BOOST_INFO: ['Получи помощь при прицеливании', 'Get help during the aiming'],
                THREE_NEXT_BOOST_INFO: ['Выбирай из 3х пузырей вместо 2х!', 'Choose from 3 bubbles instead of 2!'],
                ADD_FIVE_BOOST_INFO: ['Получи 5 дополнительных шаров в начале игры', 'Get 5 extra bubbles at the start of the game'],
                SPECIAL_GUIDELINE_BOOST_INFO: ['Внутри усиление "Снайпер"', 'Contains the "Sniper" power-up'],
                SPECIAL_ADD_N_BOOST_INFO: ['Внутри %s1% дополнительны%s2%', 'Contains %s1% extra %s2%'],
                SPECIAL_ADD_N_COINS: ['Внутри %s1% %s2%', 'Contains %s1% %s2%'],
                MAX_HP: ['Макс', 'Max'],
                PIG_MONEYBOX_FEW_COINS: ['Собери минимум %s1% %s2%, чтобы разбить копилку!', 'Collect at least %s1% %s2% to break the piggy bank!'],
                PIG_BREAK_CAP: ['Разбить!', 'Break!'],
                PIG_MONEYBOX_INFO: ['Зарабатывай звёзды,\nчтобы пополнять копилку', 'Earn stars to replenish\nthe piggy bank'],
                PIG_KEY_OPEN_EMPTY: ['Соберите 4 ключа,\nчтобы разбить копилку.', 'Collect 4 keys to break\nthe piggy bank.'],
                PIG_KEY_OPEN: ['Соберите ещё %s1% %s2%,\nчтобы разбить копилку.', 'Collect %s1% more %s2% to break the piggy bank.'],
                PIG_KEY_OPEN_FULL: ['Используй ключи,\nчтобы разбить копилку!', 'Use the keys to break\nthe piggy bank!'],
                ERROR_FAIL_BUY: ['К сожалению, покупка не удалась.\n\nПопробуй позже!', 'Sorry, the purchase failed.\n\nPlease try again later!'],
                ERROR_FAIL_ADS: ['К сожалению, реклама сейчас недоступна.\n\nПопробуй позже!', 'Sorry, ads are not available now.\n\nPlease try again later!'],
                ERROR_FAIL_ADS_SKIP: ['Для получения награды досмотри рекламу до конца!', 'Watch the ad to the end to receive the reward!'],
                ERROR_FAIL_ADS_BLOCK: ['Обнаружен AdBlock!\n\nЕсли хочешь получить доступ ко всем функциям игры, AdBlock нужно отключить.', 'AdBlock detected!\n\nIf you want to get an access to all the features of the game, please disable AdBlock.'],
                ERROR_FAIL_ADS_SPECIAL: ['К сожалению, реклама сейчас недоступна.\n\nНо ты можешь забрать бонус за монеты!', 'Unfortunately, ads are not available right now.\n\nBut you can buy the bonus for coins!'],
                ERROR_INTERNET_CONNECT: ['Проблемы с подключением к Интернету...', 'Internet connection issues...'],
                ERROR_STALE_SESSION: ['Игра была запущена на другом устройстве!\n\nДля продолжения нужна перезагрузка.', 'The game was launched on another device!\n\nRestart is required to continue.'],
                CHOOSE_BOOSTER: ['Выбери бустер', 'Choose a booster'],
                INFINITY_MODE_CAPTION: ['Бесконечный\nРежим', 'Endless\nMode'],
                SHOP_LOT_LEGENDARY: ['Легендарный Набор', 'Legendary Set'],
                SHOP_LOT_ADS_BUTTON: ['Получить!', 'Get Reward!'],
                SHOP_LOT_ASSORTED: ['Набор "Ассорти"', 'Set "Assorted"'],
                SHOP_LOT_NOVICE: ['Набор Новичка', 'Starter Pack'],
                SHOP_LOT_STRATEGIST: ['Набор "Стратег"', 'Set "Strategist"'],
                POPIT_DAILY_DONE: ['Готово!', 'Ready!'],
                POPIT_SHOP_CAPTION: ['Магазин', 'Shop'],
                ADD_HOME_SCREEN_BTN_CAP_1: ['Вступить!', 'Join!'],
                ADD_HOME_SCREEN_BTN_CAP_2: ['Добавить!', 'Add!'],
                DAILY_POPUP_BUTTON_CAPTION: ['Забрать!', 'Take!'],
                DAILY_POPUP_DAY: ['День', 'Day'],
                EXIT_CONFIRMATION_CAPTION: ['Выйти?', 'Exit?'],
                EXIT_CONFIRMATION_ALERT: ['Ты потеряешь жизнь', 'You will lose a life'],
                EXIT_CONFIRMATION_ALERT_NY22: ['Ты окажешься в\nсамом низу горки!', 'You will lose progress!'],
                FAIL_DESCRIPTION: ['У тебя закончились шарики!', "You've run out of turns!"],
                FAIL_CAPTION: ['Продолжить?', 'Continue?'],
                FAIL_CAPTION_FISRT: ['Продолжить', 'Continue'],
                LEVEL_TARGET_CAPTION: ['+5 ходов', '+5 turns'],
                GET_REWARD_POPUP_CAPTION: ['Бонусные Монеты', 'Bonus Coins'],
                GET_REWARD_POPUP_GET_1: ['Забрать', 'Take'],
                GET_REWARD_POPUP_GET_2: ['Получить\nх3!', 'Get x3!'],
                START_PLAY: ['Играть', 'Start'],
                LOBBY_PLAY_BUTTON: ['УРОВЕНЬ', 'LEVEL'],
                GAME_OVER_CAPTION_1: ['Поражение', 'Defeat'],
                GAME_OVER_CAPTION_2: ['Жизни кончились', 'Lives are over'],
                GAME_OVER_REPLAY: ['Ёще раз?', 'Again?'],
                GAME_OVER_REPLAY_NY22: ['Продолжить', 'Next'],
                NEW_RANK_CAPTION: ['Новое Достижение!', 'New Achievement!'],
                NEW_RANK_BTN_CAPTION: ['Забрать', 'Take'],
                NO_LIVE_CAPTION: ['Нет Жизней', 'No Lives'],
                NO_LIVE_NEXT: ['Следующая жизнь через:', 'Next Life:'],
                NO_LIVE_GET_FREE: ['Получить 1 Жизнь\nБесплатно!', 'Get 1 Life\nFree!'],
                NO_LIVE_BUY: ['Купить Жизнь', 'Buy 1 Life'],
                OPTIONS_ADD_FRIEND: ['Пригласить\nДруга', 'Invite Friend'],
                OPTIONS_ADD_GROUP: ['Сообщество', 'Group'],
                OPTIONS_LEADERBOARD: ['Лидерборд', 'Leaderboard'],
                OPTIONS_SFX: ['Звук', 'SFX'],
                OPTIONS_MUSIC: ['Музыка', 'Music'],
                OPTIONS_GOTO_MENU: ['Выйти в Меню', 'Exit to Menu'],
                OPTIONS_BOOSTER_ANIMATION: ['Анимация получения\nБустеров', 'Booster getting\nanimation'],
                OPTIONS_GUIDELINE: ['Белая обводка\nлинии прицеливания', 'White stroke of\naim line'],
                SPECIAL_BUBBLE_CAPTION_1: ['Ты нашёл', "You've found"],
                SPECIAL_BUBBLE_CAPTION_2: ['Забрать!', 'Take!'],
                SPECIAL_BUBBLE_CAPTION_3: ['Нет, спасибо', 'No, thanks'],
                BOOSTER_INFO_CAPTION: ['Описание Бустеров', 'Description of Boosters'],
                WIN_POPUP_CAPTION_1: ['Продолжить', 'Next'],
                WIN_POPUP_CAPTION_2: ['Поделиться с друзьями', 'To share with friends'],
                HEART_BUY_CAPTION: ['Пополнить Жизни', 'Refill Life'],
                MNOGOIGROVKA_NEW_MEMBER: ['Вступи в нашу группу и получи %s1% монет в подарок!', 'Join our group and get %s1% coins for free!'],
                MNOGOIGROVKA_OLD_MEMBER: ['Спасибо, что играешь вместе с нами! Получай %s1% монет в подарок!', 'Thank you for playing with us! Get %s1% free coins!'],
                MNOGOIGROVKA_CAPTION_1: ['Вступить!', 'Join!'],
                MNOGOIGROVKA_CAPTION_2: ['Забрать!', 'Take!'],
                ADD_TO_HOME_SCREEN: ['Чтобы быстро и удобно запускать "Бабл Шарики", добавьте иконку игры на главный экран!', 'To launch the game quickly and conveniently, add the game icon to the main screen!'],
                THREE_CHESTS: ['Выберите сундук', 'Choose chest'],
                THREE_CHESTS_OPEN: ['<caption>Заберите награду</caption>\nили\nоткройте ещё один сундук!', '<caption>Claim your reward</caption>\nor\nopen another chest!'],
                THREE_CHESTS_OPEN_2: ['Заберите награду!', 'Claim the reward!'],
                THREE_CHESTS_BUTTON_CAPTION_1: ['Открыть\nсундук!', 'Open\nanother chest!'],
                THREE_CHESTS_BUTTON_CAPTION_2: ['Забрать', 'Take'],
                GRADEN_CAPTION: ['Сад', 'Garden'],
                GRADEN_FERTILIZER_CAPTION: ['Удобрения', 'Fertilizers'],
                GRADEN_PESTICIDES_CAPTION: ['Защитный Спрей', 'Protective Spray'],
                GRADEN_FERTILIZER_INFO: ['Ускоряет созревание\nна %s1%.', 'Increases maturation\nby %s1%.'],
                GRADEN_PESTICIDES_INFO: ['Избавляет от любых вредителей.', 'Gets rid of any pests.'],
                GARDEN_PLANT_MONEY_WAKEUP: ['К сожалению, у тебя недостаточно лепестков!\n\nХочешь разбудить Цветок за монеты?', "Unfortunately, you don't have enough petals!\n\nDo you want to wake the Flower for coins?"],
                GRADEN_WAKEUP_PLANT: ['Разбудить Цветок', 'Wake the Flower'],
                GRADEN_PLANT_STATE_BEGIN: ['Посадить Цветок', 'Plant the Flower'],
                GRADEN_PLANT_STATE_DONE: ['Собрать Урожай!', 'Harvest!'],
                GRADEN_PLANT_STATE_WAKE: ['Разбудить Цветок', 'Wake the Flower'],
                GRADEN_PLANT_FAKE: ['СКОРО', 'SOON'],
                GRADEN_PLANT_BACK: ['Назад', 'Back'],
                GRADEN_NO_PETALS: ['Не достаточно Лепестков!', 'Not enough petals!'],
                GRADEN_NO_PESTS: ['Вредителей нет!', 'There are no pests!'],
                GRADEN_NO_REQUIRED_WATERING: ['Поливка не требуется', 'No watering required'],
                BTN_SKIP_CAPTION: ['Пропустить', 'Skip'],
                TUT_BUTTON_CAPTION: ['Понятно', 'OK'],
                COMBO: ['Комбо', 'Combo'],
                NY_HEADER_TIME_CAP: ['Времени осталось', 'Time left'],
                NY_ALERT: ['Будь осторожен!\nГорка очень скользкая!\n\nЕсли ты проиграешь, то придется проходить всё сначала!', "Be careful!\nThe hill is very slippery!\n\nIf you lose, you'll have to start all over again!"],
                NY_END: ['Новогоднее событие подошло к концу!', "New Year's event has come to an end!"],
                NY_FIN: ['Ура! Ты на самом верху!\n\nНа этом событие "Снежная горка" завершено!', 'Hooray! You made it through the hill!\n\'nThis completes the "Christmas Pop" event!'],
                NY_TAKE: ['Забрать', 'Take'],
                NY_CAPTION: ['Снежная горка', 'Christmas Pop'],
                NY_DESC: ['До 8 января доступно\nсобытие "Снежная горка".\n\nУспей пройти и забрать\nподарки!', 'Until January 8,\nthe Christmas Pop event\nis available.\nHurry up\nand pick up the gifts!'],
                NY_GOTO_BTN: ['Начать!', "Let's go!"],
                TUT_CHANGE_BUBBLE: ['Нажми сюда,\nчтобы поменять шарик!', 'Tap here\nto change the bubble!'],
                TUT_CHANGE_BUBBLE_DESKTOP: ['Нажми сюда,\nчтобы поменять шарик!\n\n<minSpec>(или на правую кнопку мыши)</minSpec>', 'Press here\n<minSpec>(or the right mouse button)</minSpec>\nto change the bubble!'],
                TUT_BOMB: ['Нажми сюда,\nчтобы применить  <select>Бомбу</select> !\n', 'Press here\nto use  <select>Bomb</select> !\n'],
                TUT_FREE_BOMB: ['<caption>Лопай без промахов!</caption>\n\nЛопни шарики %s1% раз подряд,\nи получи Бомбу!', '<caption>Pop the bubbles without missing!</caption>\n\nPop the bubbles %s1% times in a row\nto get the Bomb!'],
                TUT_RAINBOW: ['Нажми сюда, чтобы\nприменить  <select>Радужный Шар</select> !\n', 'Press here\nto use  <select>Rainbow Ball</select> !\n'],
                TUT_FIREBALL: ['Нажми сюда, чтобы\nприменить  <select>Огненный Шар</select> !\n', 'Press here\nto use  <select>Fireball</select> !\n'],
                TUT_LIGHTNING: ['Нажми сюда,\nчтобы применить  <select>Молнию</select> !\n', 'Press here\nto use  <select>Lightning</select> !\n'],
                TUT_GUIDELINE: ['<caption>"Снайпер"</caption>\n\nСможешь лучше прицеливаться\nво время игры!', '<caption>"Sniper"</caption>\n\nIt improves your aiming\nduring the game!'],
                TUT_THREE_NEXT: ['<caption>"Тройная Замена"</caption>\n\nУвеличит количество шаров\nдля замены!', '<caption>"Triple Replacement"</caption>\n\nIt increases the amount\nof bubbles for exchange!'],
                TUT_PLUS_FIVE: ['<caption>"Плюс Пять"</caption>\n\nДобавит 5 дополнительных\nшаров для пушки!', '<caption>"Plus Five"</caption>\n\nIt adds 5 extra\nbubbles for the cannon!'],
                TUT_GOLD_BUTTON_1: ['<caption2>Проходи уровни с первой\nпопытки на 3 звезды,\nи получай Золотые Лепестки</caption2>', '<caption2>Complete the level with 3 stars\nfrom the first attempt,\nto get the Golden Petals!</caption2>'],
                TUT_GOLD_BUTTON_2: ['А собрав %s1%,\nты откроешь  <select>Волшебный Сад</select> !\n', 'After collecting %s1%,\nyou will open\n<select>the Magic Garden</select> !\n'],
                TUT_GOLD_BUTTON_3: ['Чтобы открыть Волшебный Сад, собери ещё %s1% %s2%.\n\nДля получения Лепестков проходи уровни на 3 звезды с первого раза!', 'Collect %s1% %s2% more to open the Magic Garden.\n\nComplete the level\nwith 3 stars from the first attempt,\nto get the Golden Petals!'],
                TUT_GARDEN_BEGIN: ['<caption>Заходи в Волшебный Сад!</caption>\n\nНажми на иконку Цветка.', '<caption>Enter the Magic Garden!</caption>\n\nPress the Flower icon.'],
                TUT_GARDEN_PLANT: ['Пришло время посадить\nсвой первый  <select>Цветок</select> !\n', "It's time to plant\nyour first  <select>Flower</select> !\n"],
                TUT_GARDEN_WATER: ['Не забывай поливать  <select>Цветок</select> !\nИначе его рост замедлится.', "Don't forget to water\n<select>the Flower</select> ,\nor its growth will slow down"],
                TUT_GARDEN_FERTILIZER_1: ['Чтобы ускорить рост\nприменяй  <select>Удобрение</select> !\n<minSpec>(-%s1%)</minSpec>', "Apply  <select>Fertilizer</select> \nto accelerate\nthe Flower's growth!\n<minSpec>(-%s1%)</minSpec>"],
                TUT_GARDEN_FERTILIZER_2: ['А чтобы получить больше\n<select>Удобрений</select>\nзарабатывай звезды в игре!', 'To get more\n<select>Fertilizers</select> ,\nearn stars in the game!'],
                TUT_GARDEN_BUG: ['О, нет! Вредители!\n<select>Они не дают расти Цветку!</select>\n\nПримени  <select>Защитный Спрей</select>\n', "Oh no! Pests!\n<select>They don't allow the Flower to grow!</select>\n\nUse  <select>Protection Spray</select>\n"],
                TUT_GARDEN_BACK: ['Теперь можно вернуться в игру!', 'Now you can return to the game!'],
                TUT_PIG_KEY: ['<caption>Собирай ключи,\nчтобы открыть копилку.</caption>\n\nНо будь осторожнее!\nКлючи появляются только 1 раз,\nне урони их!', "<caption>Collect the keys\nto open the piggy bank.</caption>\n\nBut be careful!\nThe keys appear only one time,\ndon't drop them!"],
                TUT_SPECIAL_1: ['<caption>Это шарики с сюрпризом!</caption>', "<caption>These're the Surprise Bubble!</caption>"],
                TUT_SPECIAL_2: ['Чтобы лопнуть такой шарик,\nхорошенько прицелься\nи пробей его насквозь!', 'To pop such a bubble,\nyou have to take a good aim\nand shoot it through!'],
            }),
            (b._quests = [
                ['Лопнуть %n% %s1% %d%', 'Pop %n% %s1% %d%', 'BUBBLES'],
                ['Собрать %n% %d%', 'Get %n% %d%', 'CROWN'],
                ['Пройти %n% %d%', 'Complete %n% %d%', 'LEVELS'],
                ['Получить %n% %d%', 'Get %n% %d%', 'STARS'],
                ['Использовать "%s1%" %n% %d%', 'Use "%s1%" %n% %d%', 'N_TIMES'],
                ['Собрать урожай в саду', 'Harvest in the garden'],
                ['Уничтожить %n% %d%', 'Kill %n% %d%', 'SPIDER'],
                ['Уничтожить %n% %d%', 'Kill %n% %d%', 'BATS'],
                ['Лопнуть %n% %d%', 'Pop %n% %d%', 'THORNS'],
                ['Взорвать %n% %d%', 'Blast %n% %d', 'DYNAMITE'],
                ['Полить %n% %d% Цветок в саду', 'Water %n% %d% the Flower in the garden', 'N_TIMES'],
                ['Использовать %n% %d% в саду', 'Use %n% %d% in the garden', 'FERTILIZER'],
                ['Получить %n% %d%', 'Get %n% %d%', 'PETAL_M'],
                ['Пройти круговой уровень', 'Complete the circular level'],
                ['Лопнуть %n% %d% с сюрпризом', 'Pop %n% Surprise %d%', 'BUBBLES'],
                ['Использовать "Снайпер" %n% %d%', 'Use "Sniper" %n% %d%', 'N_TIMES'],
                ['Использовать "Тройная замена" %n% %d%', 'Use "Triple replacement" %n% %d%', 'N_TIMES'],
                ['Использовать "Плюс пять" %n% %d%', 'Use "Plus five" %n% %d%', 'N_TIMES'],
                ['Выполнить все остальные задания!', 'Complete all other quests!'],
            ]),
            (b._ranks = [
                ['Новичок', 'Rookie'],
                ['Любознательный', 'Curious'],
                ['Собиратель Звёзд', 'Star Collector'],
                ['Любитель Шариков', 'Bubble Lover'],
                ['Деревянный Ранг', 'Wooden Rank'],
                ['Исследователь', 'Researcher'],
                ['Первооткрыватель', 'Discoverer'],
                ['Опытный', 'Experienced'],
                ['Каменный Ранг', 'Stone Rank'],
                ['Коллекционер', 'Collector'],
                ['Звездочёт', 'Astrologer'],
                ['Альфа Центавра', 'Alpha Centauri'],
                ['Янтарный Ранг', 'Amber Rank'],
                ['Звёздный Путь', 'Star Trek'],
                ['Мастер Шариков', 'Master Bubbles'],
                ['Избранный', 'The Chosen One'],
                ['Гранатовый Ранг', 'Pomegranate Rank'],
                ['Супер-Игрок', 'Super Player'],
                ['Высшая Лига', 'Major League'],
                ['Гроссмейстер', 'Grandmaster'],
                ['Звёздный Властелин', 'Star Lord'],
                ['Малахитовый Ранг', 'Malachite Rank'],
                ['Неудержимый', 'Unstoppable'],
                ['Звезда Шариков', 'Star Bubbles'],
                ['Арете', 'Arete'],
                ['Фантастический', 'Fantastic'],
                ['Медный Ранг', 'Copper Rank'],
                ['Только вперёд!', 'Only forward!'],
                ['Первый из первых', 'First of the First'],
                ['Укротитель Шариков', 'Bubbles Tamer'],
                ['Серебряный Ранг', 'Silver Rank'],
                ['Взрывной Бомбардир', 'Explosive Bombardier'],
                ['Искусный Стрелок', 'Skilled Shooter'],
                ['Блестящий', 'Brilliant'],
                ['Орлиный Глаз', 'Eagle Eye'],
                ['Большой Ас', 'Big Ace'],
                ['Эксперт', 'Expert'],
                ['Золотой Ранг', 'Gold Rank'],
                ['Молниеносный', 'Fulminant'],
                ['Фееричный', 'Enchanting'],
                ['Жгучий Шаробой', 'Burning Bubbles'],
                ['Смешарик', 'Smeshariki'],
                ['Альтаир', 'Altair'],
                ['Шар Андромеды', 'Andromeda Ball'],
                ['Сказочный', 'Fairy'],
                ['Платиновый Ранг', 'Platinum Rank'],
                ['Роковой Снайпер', 'Doom Sniper'],
                ['Шар Калипсо', 'Ball of Calypso'],
                ['Созвездие Дракона', 'Dragon Constellation'],
                ['Царственный', 'Regal'],
                ['Драгоценный Игрок', 'Precious Player'],
                ['Изумрудный Ранг', 'Emerald Rank'],
                ['Шар Кассиопеи', 'Ball of Cassiopeia'],
                ['Сверхзвёздный', 'Superstar'],
                ['Квазар', 'Quasar'],
                ['Межгалактический', 'Intergalactic'],
                ['Рубиновый Ранг', 'Ruby Rank'],
                ['Сапфировый Ранг', 'Sapphire Rank'],
                ['Титановый Ранг', 'Titanium Rank'],
                ['Вольфрамовый Ранг', 'Tungsten Rank'],
                ['Алмазный Ранг', 'Diamond Rank'],
                ['Обсидиановый Ранг', 'Obsidian Rank'],
                ['Адамантитовый Ранг', 'Adamantite Rank'],
                ['Радиантный Ранг', 'Radiant Rank'],
                ['Абсолютный Ранг', 'Absolute Rank'],
            ]),
            b
        );
    })();
    a.StringManager = b;
})(Game || (Game = {}));
var Game;
!(function (a) {
    var b;
    !(function (a) {
        ((a.MONEY = 'money'),
            (a.GOLD = 'gold'),
            (a.KEYS = 'keys'),
            (a.HP = 'hp'),
            (a.CURRENT_LEVEL = 'currentLevel'),
            (a.CURRENT_RANK = 'currentRank'),
            (a.CURRENT_RANK_STARS = 'currentRankStars'),
            (a.LIGHTNING_COUNT = 'lightningBoostCount'),
            (a.RAINBOW_COUNT = 'rainbowBoostCount'),
            (a.FIREBALL_COUNT = 'fireballBoostCount'),
            (a.BOMB_COUNT = 'bombBoostCount'),
            (a.GUIDELINE_COUNT = 'guidelineBoostCount'),
            (a.THREENEXT_COUNT = 'threeNextBoostCount'),
            (a.PLUSFIVE_COUNT = 'plusFiveBubblesBoostCount'),
            (a.GUIDELINE_SELECTED = 'guidelineBoostSelected'),
            (a.THREENEXT_SELECTED = 'threeNextBoostSelected'),
            (a.PLUSFIVE_SELECTED = 'plusFiveBubblesBoostSelected'),
            (a.PIG_BANK = 'currentPigBank'),
            (a.SHOW_FULL_PIG_BANK = 'showFullPigBank'),
            (a.LAST_KEY_LEVEL = 'lastKeyLevel'),
            (a.NO_ADS = 'noAds'),
            (a.SHOW_STARTLEVEL_ANIMATIONS = 'showStartLevelAnimation'),
            (a.WHITE_GUIDELINE = 'whiteGuideline'),
            (a.MUSIC = 'musicEnabled'),
            (a.SOUND = 'sfxEnabled'),
            (a.HP_TIMER = 'hpTimer'),
            (a.HP_TIMER_START = 'hpTimerStart'),
            (a.BOUGHT_NOVICE_LOT = 'boughtNoviceLot'),
            (a.SHOW_FULL_SHOP = 'showFullShop'),
            (a.DAILY_REWARD_WEEK = 'dailyRewardWeekCounter'),
            (a.DAILY_REWARD_DAY = 'dailyRewardDayCounter'),
            (a.DAILY_REWARD_TIME = 'dailyRewardTime'),
            (a.OFFER_NOVICE_TIME = 'offerNoviceTime'),
            (a.OFFER_NOVICE_SHOW_MODE = 'offerNoviceShowMode'),
            (a.MEMBER_GIFT_SHOWED = 'memberGiftShowed'),
            (a.GARDEN_NEED_SHOW = 'grndShowGarden'),
            (a.GARDEN_HAS_GROWN = 'grndHasGrown'),
            (a.GARDEN_ENTER_TIME = 'grndEnterTime'),
            (a.GARDEN_PLANT_COUNT = 'grndPlantCount'),
            (a.GARDEN_FERTILIZER_COUNT = 'grdnFertilizerCount'),
            (a.GARDEN_PESTICIDES_COUNT = 'grdnPesticidesCount'),
            (a.GARDEN_FERTILIZER_STARS = 'grdnFertilizerStars'),
            (a.GARDEN_PLANT_ACTIVATE_TIME = 'grdnPlantActivateTime'),
            (a.GARDEN_PLANT_WATERING_TIME = 'grdnPlantWateringTime'),
            (a.GARDEN_RIPENING_TIME = 'grdnRipeningTime'),
            (a.GARDEN_BUG_TIME = 'grndBugTime'),
            (a.SKIP_TIME = 'skipTimer'),
            (a.NY_OPENED = 'nyOpened'),
            (a.NY_LEVEL = 'nyLevel'),
            (a.NY_MAX_LEVEL = 'nyMaxLevel'),
            (a.QUEST_TIME = 'questTime'),
            (a.WC_STARTED = 'wcStarted'),
            (a.WC_CURRENT_SCALE = 'wcCurrentScale'),
            (a.WC_FREE_GAME = 'wcFreeGame'),
            (a.WC_FREE_GAME_TIMER = 'wcFreeGameTimer'),
            (a.YA_BANNER = 'yaBanner'),
            (a.YA_OLGA = 'yaOlga'),
            (a.YA_OLGA_COUNTER = 'yaOlgaCounter'),
            (a.RND_COUNT = 'rndCount'),
            (a.RND_INDEX = 'rndIndex'),
            (a.RND_GO = 'rndGo'),
            (a.USE_INF = 'useInf'));
    })((b = a.USER_PROPERTY || (a.USER_PROPERTY = {})));
    var c;
    !(function (a) {
        a.PIG_BANK = 'currentPigBank';
    })(c || (c = {}));
    var d = (function () {
        function d() {}
        return (
            (d.initData = function () {
                ((this._DATA = {
                    sessionID: 0,
                    money: 0,
                    gold: 0,
                    keys: 0,
                    hp: d.MAX_HP,
                    overloadHp: d.MAX_HP,
                    hpTimer: -1,
                    hpTimerStart: 0,
                    currentLevel: 0,
                    currentRank: 0,
                    currentRankStars: 0,
                    lightningBoostCount: 3,
                    rainbowBoostCount: 3,
                    fireballBoostCount: 3,
                    bombBoostCount: 3,
                    guidelineBoostCount: 3,
                    threeNextBoostCount: 3,
                    plusFiveBubblesBoostCount: 3,
                    guidelineBoostSelected: 0,
                    threeNextBoostSelected: 0,
                    plusFiveBubblesBoostSelected: 0,
                    currentPigBank: 0,
                    showFullPigBank: 0,
                    lastKeyLevel: 0,
                    noAds: 0,
                    adsLevelCounter: 0,
                    lastPurchase: 0,
                    showStartLevelAnimation: 1,
                    whiteGuideline: 1,
                    musicEnabled: 1,
                    sfxEnabled: 1,
                    boughtNoviceLot: 0,
                    showFullShop: 0,
                    dailyRewardWeekCounter: 0,
                    dailyRewardDayCounter: 0,
                    dailyRewardTime: 0,
                    offerNoviceTime: -1,
                    offerNoviceShowMode: 0,
                    memberGiftShowed: 0,
                    levels: {},
                    tutorials: {},
                    grndShowGarden: 0,
                    grndHasGrown: 0,
                    grndEnterTime: 0,
                    grndPlantCount: 0,
                    grdnFertilizerCount: 2,
                    grdnPesticidesCount: 2,
                    grdnFertilizerStars: 0,
                    grdnPlantActivateTime: -1,
                    grdnPlantWateringTime: 0,
                    grdnRipeningTime: 0,
                    grndBugTime: 0,
                    skipTimer: -1,
                    yaBanner: 0,
                    yaOlga: 0,
                    yaOlgaCounter: 0,
                    nyOpened: 0,
                    nyLevel: 0,
                    nyMaxLevel: 0,
                }),
                    (this.levelsPlayed = 0));
            }),
            (d.initTutorial = function () {
                this._DATA.tutorials[0] = !0;
                for (var a in d.TUTORIAL_LIST) {
                    var b = d.TUTORIAL_LIST[a];
                    this._DATA.tutorials[b] = !0;
                }
                ((this._DATA.tutorials[this.REQ_BOOST_LEVEL_GUIDELINE] = !0), (this._DATA.tutorials[this.REQ_BOOST_LEVEL_THREENEXT] = !0), (this._DATA.tutorials[this.REQ_BOOST_LEVEL_PLUSFIVE] = !0), (this._DATA.tutorials.GOLD_BUTTON = !0), (this._DATA.tutorials.GARDEN_BEGIN = !0), (this._DATA.tutorials.GARDEN_PLANT = !0), (this._DATA.tutorials.GARDEN_BUG = !0));
            }),
            (d.lelelStart = function (a) {
                (this._DATA.levels[a] ? this._DATA.levels[a].play++ : ((this._DATA.levels[a] = {}), (this._DATA.levels[a].play = 0)), this.save('lelelStart-' + a));
            }),
            (d.levelComplete = function (b, c, e, f, g, h) {
                var i = 0 == this._DATA.levels[b].play,
                    j = this._DATA.levels[b].stars || 0;
                if (((this._DATA.levels[b].score = this._DATA.levels[b].score ? Math.max(this._DATA.levels[b].score, c) : c), (this._DATA.levels[b].stars = this._DATA.levels[b].stars ? Math.max(this._DATA.levels[b].stars, e) : e), g >= -10 && (this._DATA.levels[b].lbscore = this._DATA.levels[b].lbscore ? Math.max(this._DATA.levels[b].lbscore, c) : c), f && ((this._DATA.levels[b].skip = !0), (this._DATA.skipTimer = a.MI.get().time)), i && (3 == e && ((this._DATA.levels[b].gold = !0), (this._DATA.gold += 1)), this._DATA.gold >= this.NEED_GOLD_TO_SHOW_GARDEN && 0 == this._DATA.grndShowGarden && ((this._DATA.grndShowGarden = 1), a.Statistics.event_activateGarden(b)), a.Statistics.resource(a.STATS_RESOURCE_FLOW_TYPE.ADD, a.STATS_GAME_CURRENCY.GOLD, 1, a.STATS_GAME_RESOURCE_PLACEMENT.LEVEL_COMPLETE)), this._DATA.grndShowGarden && this._DATA.grdnFertilizerCount < this.MAX_GARDEN_FERTILIZER_COUNT)) {
                    var k = this._DATA.levels[b].stars - j;
                    if (k) {
                        this._DATA.grdnFertilizerStars += k;
                        var l = this._DATA.grdnFertilizerStars - d.MAX_GARDEN_FERTILIZER_STARS;
                        l >= 0 && ((this._DATA.grdnFertilizerCount += 1), this._DATA.grdnFertilizerCount < this.MAX_GARDEN_FERTILIZER_COUNT ? (this._DATA.grdnFertilizerStars = l) : (this._DATA.grdnFertilizerStars = 0), a.Statistics.event_gardenFreeFertilizer());
                    }
                }
                var m = this._DATA.levels[b].stars - j;
                if (m) {
                    var n = d.getMaxStarForNextRank(this._DATA.currentRank);
                    (this._DATA.currentRankStars || (this._DATA.currentRankStars = 0), this._DATA.currentRank || (this._DATA.currentRank = 0), (this._DATA.currentRankStars += m), this._DATA.currentRankStars >= n && ((this._DATA.currentRankStars -= n), this._DATA.currentRank++, (this._DATA.rankFix = 0)));
                }
                (c > 0 && a.MI.get().social.setProgress({ value: b + 1, type: 1 }), this.save('levelComplete'));
            }),
            (d.getLevelStars = function (a) {
                return this._DATA.levels[a] && this._DATA.levels[a].stars ? this._DATA.levels[a].stars : 0;
            }),
            (d.getLevelPlays = function (a) {
                return this._DATA.levels[a] && this._DATA.levels[a].play ? this._DATA.levels[a].play : 0;
            }),
            (d.getLevelGold = function (a) {
                return !(!this._DATA.levels[a] || !this._DATA.levels[a].gold) && this._DATA.levels[a].gold;
            }),
            (d.getLevelScore = function (a) {
                return this._DATA.levels[a] && this._DATA.levels[a].score ? this._DATA.levels[a].score : 0;
            }),
            (d.isFirstTimeOnLevel = function (a) {
                return !(!this._DATA.levels[a] || null == this._DATA.levels[a].play) && 0 == this._DATA.levels[a].play;
            }),
            (d.haveNewStars = function (a, b) {
                return !this._DATA.levels[a] || !this._DATA.levels[a].stars || this._DATA.levels[a].stars < b;
            }),
            (d.newScoreRecord = function (a, b) {
                return !this._DATA.levels[a] || !this._DATA.levels[a].score || this._DATA.levels[a].score < b;
            }),
            (d.setLastPurchase = function () {
                this._DATA.lastPurchase = a.MI.get().time;
            }),
            (d.applyUpdate = function (a) {
                var b = this._DATA['update_' + a];
                return ((this._DATA['update_' + a] = !0), Boolean(b));
            }),
            (d.startEvent = function (a, b) {
                this._DATA[a] = b;
            }),
            (d.stopEvent = function (a) {
                this._DATA[a] = -2;
            }),
            (d.getEventTime = function (a) {
                return this._DATA[a] ? this._DATA[a] : -1;
            }),
            (d.adsCounterFinishedLevel = function (c) {
                0 != d.getProperty(b.NO_ADS) || this._DATA.currentLevel < a.EconomyOptions.SHOW_NO_ADS_MIN_LEVEL || ((this._DATA.adsLevelCounter -= 1), c && this._DATA.adsLevelCounter < 0 && (this._DATA.currentLevel >= a.EconomyOptions.ADS_LEVEL_BEGIN_COUNT ? (this._DATA.adsLevelCounter = a.EconomyOptions.ADS_LEVEL_INTERVAL_DEFAULT) : (this._DATA.adsLevelCounter = a.EconomyOptions.ADS_LEVEL_INTERVAL_BEGIN), (this._adsPurchaseDelayBlock = !1)));
            }),
            (d.adsCounterGetReward = function () {
                0 != d.getProperty(b.NO_ADS) || this._DATA.currentLevel < a.EconomyOptions.SHOW_NO_ADS_MIN_LEVEL || ((this._DATA.adsLevelCounter += 1), this._DATA.adsLevelCounter > a.EconomyOptions.ADS_LEVEL_MAX_INTERVAL && (this._DATA.adsLevelCounter = a.EconomyOptions.ADS_LEVEL_MAX_INTERVAL));
            }),
            (d.setAdsPurchaseDelayBlock = function () {
                this._adsPurchaseDelayBlock = !0;
            }),
            (d.needShowLevelAds = function () {
                if (0 != d.getProperty(b.NO_ADS) || this._DATA.currentLevel < a.EconomyOptions.SHOW_NO_ADS_MIN_LEVEL) return !1;
                if (0 == d.levelsPlayed) return !1;
                var c = a.MI.get().time - this._DATA.lastPurchase;
                return !(1 != this._adsPurchaseDelayBlock && c < d.HOUR * a.EconomyOptions.ADS_LEVEL_DELAY_AFTER_PURCHASE) && this._DATA.adsLevelCounter - 1 < 0;
            }),
            (d.addToPigBank = function (a) {
                ((this._DATA.currentPigBank += a * d.STAR_TO_COIN), this._DATA.currentPigBank > d.MAX_PIG_BANK && (this._DATA.currentPigBank = d.MAX_PIG_BANK), this.save('addToPigBank'));
            }),
            (d.isFullPigBank = function () {
                return this._DATA.currentPigBank >= d.MAX_PIG_BANK;
            }),
            (d.setupDailyReward = function (b) {
                0 == this._DATA.dailyRewardTime && ((this._DATA.dailyRewardTime = a.MI.get().time - 23 * d.HOUR), (this._DATA.dailyRewardDayCounter = 1), (this._DATA.dailyRewardWeekCounter = b.actual[0]));
            }),
            (d.getDailyReward = function (b) {
                if (this.haveDailyReward()) {
                    for (var c = b.weeks[this._DATA.dailyRewardWeekCounter][this._DATA.dailyRewardDayCounter], d = 0; d < c.length; d++) a.Shop.addItemToUser(c[d].id, c[d].count, a.STATS_GAME_RESOURCE_PLACEMENT.DAILY);
                    return ((this._DATA.dailyRewardTime = a.MI.get().time), this._DATA.dailyRewardDayCounter++, this._DATA.dailyRewardDayCounter > 7 && ((this._DATA.dailyRewardDayCounter = 1), this._DATA.dailyRewardWeekCounter < b.actual[0] ? (this._DATA.dailyRewardWeekCounter = b.actual[0]) : (this._DATA.dailyRewardWeekCounter++, this._DATA.dailyRewardWeekCounter > b.actual[1] && (this._DATA.dailyRewardWeekCounter = b.actual[0]))), this.save('getDailyReward'), !0);
                }
                return !1;
            }),
            (d.setQuestData = function (a) {
                this._DATA.questData ||
                    (this._DATA.questData = [
                        [-1, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0],
                        [0, 0, 0, 0, 0],
                    ]);
                for (var b = 0; b < 4; b++) for (var c = 0; c < 5; c++) this._DATA.questData[b][c] = a[b][c];
            }),
            (d.getQuestData = function () {
                return this._DATA.questData;
            }),
            (d.currentTimeDailyReward = function () {
                return a.MI.get().time - this._DATA.dailyRewardTime;
            }),
            (d.haveDailyReward = function () {
                if (0 == this._DATA.dailyRewardTime) return !1;
                var a = this.currentTimeDailyReward();
                return a >= this.HOUR_24;
            }),
            (d.needSaleForNovaceSet = function () {
                var a = d.getProperty(b.CURRENT_LEVEL);
                if (a < d.OFFER_NOVICE_LEVEL) return !1;
                var c = d.getProperty(b.BOUGHT_NOVICE_LOT);
                if (!c) {
                    var e = d.getProperty(b.OFFER_NOVICE_SHOW_MODE);
                    return 1 == e;
                }
                return !1;
            }),
            (d.saveOverdueNoviceSet = function () {
                (d.setProperty(b.OFFER_NOVICE_SHOW_MODE, 2), d.setProperty(b.OFFER_NOVICE_TIME, d.HOUR_24 * d.OFFER_NOVICE_DAY_REPEAT + a.MI.get().time), d.save('saveOverdueNoviceSet'));
            }),
            (d.applyNewSave = function (a) {
                for (var b = this._saveKeys.length, c = 0; c < this._saveKeys.length; c++) this._DATA[this._saveKeys[c]] = a[c];
                var d = a[b];
                b++;
                for (var c = 0; c < d; c++) ((this._DATA.levels[c] = { gold: a[b], play: a[b + 1], score: a[b + 2], stars: a[b + 3] }), (b += 4));
                ((this._DATA.tutorials[0] = a[b]), (this._DATA.tutorials[1] = a[b + 1]), (this._DATA.tutorials[2] = a[b + 2]), (this._DATA.tutorials[3] = a[b + 3]), (this._DATA.tutorials[4] = a[b + 4]), (this._DATA.tutorials[5] = a[b + 5]), (this._DATA.tutorials[6] = a[b + 6]), (this._DATA.tutorials[17] = a[b + 7]), (this._DATA.tutorials[25] = a[b + 8]), (this._DATA.tutorials[26] = a[b + 9]), (this._DATA.tutorials[30] = a[b + 10]), (this._DATA.tutorials[32] = a[b + 11]), (this._DATA.tutorials.GOLD_BUTTON = a[b + 12]), (this._DATA.tutorials.GARDEN_BEGIN = a[b + 13]), (this._DATA.tutorials.GARDEN_PLANT = a[b + 14]), (this._DATA.tutorials.GARDEN_BUG = a[b + 15]));
            }),
            (d.sund = function (a) {
                return null == a ? null : a;
            }),
            (d.convertSave = function () {
                for (var a = [], b = 0; b < this._saveKeys.length; b++) a.push(this.sund(this._DATA[this._saveKeys[b]]));
                var c = Object.keys(this._DATA.levels).length;
                a.push(c);
                for (var b = 0; b < c; b++) a.push(this.sund(this._DATA.levels[b].gold), this.sund(this._DATA.levels[b].play), this.sund(this._DATA.levels[b].score), this.sund(this._DATA.levels[b].stars));
                return (a.push(this.sund(this._DATA.tutorials[0]), this.sund(this._DATA.tutorials[1]), this.sund(this._DATA.tutorials[2]), this.sund(this._DATA.tutorials[3]), this.sund(this._DATA.tutorials[4]), this.sund(this._DATA.tutorials[5]), this.sund(this._DATA.tutorials[6]), this.sund(this._DATA.tutorials[17]), this.sund(this._DATA.tutorials[25]), this.sund(this._DATA.tutorials[26]), this.sund(this._DATA.tutorials[30]), this.sund(this._DATA.tutorials[32]), this.sund(this._DATA.tutorials.GOLD_BUTTON), this.sund(this._DATA.tutorials.GARDEN_BEGIN), this.sund(this._DATA.tutorials.GARDEN_PLANT), this.sund(this._DATA.tutorials.GARDEN_BUG)), JSON.stringify(a));
            }),
            (d.load = function () {
                var b = this;
                return (
                    (this._loaded = !1),
                    this.initData(),
                    new Promise(function (c, e) {
                        var f = a.MI.get().social.load(d.SDK_SAVE_NAME);
                        (f ? (console.log('sdk v3'), b.applyNewSave(JSON.parse(f))) : (console.log('sdk v1'), (f = localStorage.getItem(d.TEST_SAVE_NAME)), f && ((b._DATA = JSON.parse(f)), b.immediatelySave())), f || ((b._DATA.money = a.MI.get().social.startMoney), b.initTutorial()), (b._loaded = !0), c());
                    })
                );
            }),
            (d.save = function (b) {
                if (null == this._lastSaveCall) {
                    var c = 0.001 * (a.MI.get().time - this._lastSaveTime);
                    ((this._lastSaveCall = a.MI.get().time), c > 5 && (this._lastSaveCall -= 1e3 * d.MIN_TIME_FOR_SAVING));
                }
                ((this._tickSave = 5), this._saveCounter++);
            }),
            (d.immediatelySave = function (b) {
                var c = this;
                if ((void 0 === b && (b = !1), this._loaded && (!b || 0 != this._saveCounter)))
                    return (
                        (this._lastSaveCall = null),
                        (this._tickSave = 0),
                        (this._saveCounter = 0),
                        new Promise(function (b, e) {
                            (a.MI.get().social.save(d.SDK_SAVE_NAME, c.convertSave()), (c._lastSaveTime = a.MI.get().time), b());
                        })
                    );
            }),
            (d.setGameState = function (b) {
                ((this._gamePlayState = b), (this._lastSaveTime = a.MI.get().time));
            }),
            (d.update = function (c) {
                if (this._loaded) {
                    if (null != this._lastSaveCall && 1 != this._gamePlayState) {
                        var e = a.MI.get().time - this._lastSaveCall;
                        e >= 1e3 * d.MIN_TIME_FOR_SAVING && (this._tickSave <= 0 ? this.immediatelySave() : this._tickSave--);
                    }
                    if (1 == this._DATA.hpTimerStart) {
                        var f = this._DATA.hpTimer - a.MI.get().time;
                        if (f <= 0) {
                            var g = this.ONE_HP_TIME * d.MINUTE,
                                h = Math.floor(Math.abs(f / g)) + 1;
                            if (this.isInfinityHP) (this.setProperty(b.HP_TIMER_START, 0), this.setProperty(b.HP_TIMER, -1), this.setProperty(b.HP, Math.max(this.MAX_HP, this._DATA.overloadHp)));
                            else if (((this._DATA.overloadHp = this.MAX_HP), this.addProperty(b.HP, h), this._DATA.hp >= this.MAX_HP)) (this.setProperty(b.HP_TIMER_START, 0), this.setProperty(b.HP_TIMER, -1), this.setProperty(b.HP, this.MAX_HP));
                            else {
                                f += (h - 1) * g;
                                var i = g + f;
                                this.setProperty(b.HP_TIMER, a.MI.get().time + i);
                            }
                            this.save('update hp');
                        }
                    }
                }
            }),
            (d.additionalPropertyCheck = function (c, e) {
                switch (c) {
                    case b.HP:
                        if (this.isInfinityHP) break;
                        if ((e <= this.MAX_HP ? ((this._DATA.overloadHp = this.MAX_HP), this.save('additionalPropertyCheck-overloadHp')) : (this._DATA.overloadHp = e), e < this.MAX_HP && 0 == this._DATA.hpTimerStart)) {
                            var f = this.ONE_HP_TIME * d.MINUTE;
                            (this.setProperty(b.HP_TIMER, a.MI.get().time + f), this.setProperty(b.HP_TIMER_START, 1));
                        }
                        break;
                    case b.LIGHTNING_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_LIGHTNING && (this._DATA.lightningBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.RAINBOW_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_RAINBOW && (this._DATA.rainbowBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.FIREBALL_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_FIREBALL && (this._DATA.fireballBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.BOMB_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_BOMB && (this._DATA.bombBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.THREENEXT_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_THREENEXT && (this._DATA.threeNextBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.GUIDELINE_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_GUIDELINE && (this._DATA.guidelineBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.PLUSFIVE_COUNT:
                        this._DATA.currentLevel + 1 < d.REQ_BOOST_LEVEL_PLUSFIVE && (this._DATA.plusFiveBubblesBoostCount = this.MAX_COUNT_CLOSE_BOOSTER);
                        break;
                    case b.KEYS:
                        this._DATA.keys > 4 && (this._DATA.keys = 4);
                }
            }),
            (d.getProperty = function (a) {
                return 0 == d.isLoaded ? 0 : this._DATA[a] || 0;
            }),
            (d.setProperty = function (a, d) {
                if (a in c) throw 'Нельзя устанавливать свойство ' + a;
                (a == b.RND_INDEX && console.log('SET RND INDEX:', d), this._DATA[a] != d && ((this._DATA[a] = d), null == this._DATA[a] && (this._DATA[a] = 0), this.additionalPropertyCheck(a, this._DATA[a]), this.save('setProperty-' + a)));
            }),
            (d.addProperty = function (a, b) {
                (void 0 === b && (b = 1), this._DATA[a] != this.INFINITY && 0 != b && (null == this._DATA[a] && (this._DATA[a] = 0), (this._DATA[a] += b), (this._DATA[a] < 0 || null == this._DATA[a]) && (this._DATA[a] = 0), this.additionalPropertyCheck(a, this._DATA[a]), this.save('addProperty-' + a)));
            }),
            (d.subProperty = function (a, b) {
                if ((void 0 === b && (b = 1), b < 0)) throw 'subProperty: value не может принимать отрицательне значение!';
                (this.addProperty(a, -1 * b), this.additionalPropertyCheck(a, this._DATA[a]));
            }),
            (d.addInfinityHP = function (c) {
                var e = c * d.MINUTE + (Math.abs(this._DATA.hp) < this.MAX_HP ? -1 : this.getProperty(b.HP_TIMER));
                (this.setProperty(b.HP_TIMER, (this.isInfinityHP ? 0 : a.MI.get().time) + e), this.setProperty(b.HP_TIMER_START, 1), (this._DATA.hp = this.INFINITY));
            }),
            (d.addHP = function (a) {
                return this.isInfinityHP ? ((this._DATA.overloadHp += a), void this.save('addHP')) : void this.addProperty(b.HP, a);
            }),
            (d.checkTutor = function (a, b) {
                return !(0 == this.SHOW_TUTORIAL || ('number' == typeof a && a < 0)) && (0 == b ? this._DATA.tutorials[a] : !!this._DATA.tutorials[a] && ((this._DATA.tutorials[a] = !1), this.save('checkTutor'), !0));
            }),
            (d.getMaxStarForNextRank = function (a) {
                return this._DATA.rankFix ? this.getMaxStarForNextRankLegacy(a) : a < 4 ? 7 + 5 * a : 4 == a ? 45 : Math.max(50, 3 * (15 + 5 * Math.ceil(a / 5)));
            }),
            (d.getMaxStarForNextRankLegacy = function (a) {
                return a < 4 ? 7 + 5 * a : 4 == a ? 45 : Math.min(50, 3 * (15 + 5 * Math.floor(a / 5)));
            }),
            Object.defineProperty(d, 'needTutorial', {
                get: function () {
                    var a = 0;
                    for (var b in this.TUTORIAL_LIST) a = Math.max(a, this.TUTORIAL_LIST[b]);
                    return a >= this._DATA.currentLevel;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d, 'isInfinityHP', {
                get: function () {
                    return this._DATA.hp == this.INFINITY;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d, 'currentHPTimeString', {
                get: function () {
                    if (this._DATA.hp >= this.MAX_HP && 0 == this.isInfinityHP) return a.StringManager.get('MAX_HP');
                    var b = this._DATA.hpTimer - a.MI.get().time;
                    return (b < 0 && (b = 0), a.Utils.formatTime(b));
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d, 'currentHPTime', {
                get: function () {
                    if (this._DATA.hp >= this.MAX_HP && 0 == this.isInfinityHP) return 0;
                    var b = this._DATA.hpTimer - a.MI.get().time;
                    return (b < 0 && (b = 0), b);
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d, 'sessionID', {
                get: function () {
                    return this._DATA.sessionID;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d, 'isLoaded', {
                get: function () {
                    return this._loaded;
                },
                enumerable: !1,
                configurable: !0,
            }),
            Object.defineProperty(d, 'useServer', {
                get: function () {
                    return !a.MI.get().isDebug;
                },
                enumerable: !1,
                configurable: !0,
            }),
            (d.INFINITY = -2147483648),
            (d.MINUTE = 6e4),
            (d.HOUR = 60 * d.MINUTE),
            (d.HOUR_24 = 24 * d.HOUR),
            (d.SKIP_TIME_INTERVAL = 6 * d.HOUR),
            (d.FREE_BOMB_SHOOT_COUNT = 7),
            (d.SUPER_COMPLIMENT = 3),
            (d.FANTASTIC_COMPLIMENT = 7),
            (d.EXCELLENT_COMPLIMENT = 12),
            (d.SCORE_MODIF_DEFAULT = 10),
            (d.SCORE_MODIF_PENTAGON = 50),
            (d.SCORE_MODIF_BOOST = 150),
            (d.SCORE_MODIF_DROP = 200),
            (d.SCORE_MODIF_FOUNTAIN = 500),
            (d.REQ_BOOST_LEVEL_LIGHTNING = 30),
            (d.REQ_BOOST_LEVEL_RAINBOW = 26),
            (d.REQ_BOOST_LEVEL_FIREBALL = 5),
            (d.REQ_BOOST_LEVEL_BOMB = 2),
            (d.REQ_BOOST_LEVEL_GUIDELINE = 4),
            (d.REQ_BOOST_LEVEL_THREENEXT = 17),
            (d.REQ_BOOST_LEVEL_PLUSFIVE = 25),
            (d.MAX_COUNT_CLOSE_BOOSTER = 10),
            (d.LEADERBOARD_START_LEVEL = 25),
            (d.MAX_GARDEN_FERTILIZER_STARS = 15),
            (d.MAX_GARDEN_FERTILIZER_COUNT = 5),
            (d.MAX_GARDEN_PESTICIDES_COUNT = 5),
            (d.NEED_GOLD_TO_SHOW_GARDEN = 20),
            (d.GARDEN_BUY_PLANT_GOLD = 20),
            (d.GARDEN_WAKE_PLANT_GOLD = 5),
            (d.GARDEN_WATERING_TIME = 2 * d.HOUR),
            (d.GADEN_PLANT_TIME = 24 * d.HOUR),
            (d.GADEN_WAKE_TIME = 12 * d.HOUR),
            (d.GADEN_FERTILIZER_BOOST = 2 * d.HOUR),
            (d.GARDEN_BUG_PROBABILITY = 0.03),
            (d.MAX_PIG_BANK = 800),
            (d.MIN_PIG_BANK = 500),
            (d.STAR_TO_COIN = 5),
            (d.PIG_KEY_MIN_LEVEL = 37),
            (d.PIG_KEY_MIN_BANK = 250),
            (d.PIG_KEY_FREQUENCY = 5),
            (d.PIG_KEY_LEVEL_GAP_MAX = 15),
            (d.PIG_KEY_OPTIONS = [0.08, 0.045, 0.03, 0.02, 0.25, 0.08]),
            (d.MAX_HP = 5),
            (d.ONE_HP_TIME = 30),
            (d.MIN_TIME_FOR_SAVING = 3),
            (d.WC_LOST_FOCUS_GO = 10),
            (d.WC_MAX_FREE_GAME = 2),
            (d.WC_START_SCALE = 1.25),
            (d.WC_MIN_SCALE = 1),
            (d.WC_MAX_SCALE = 4),
            (d.TUTORIAL_LIST = { CHANGE_BUBBLE_TUTORIAL: 1, BOMB_TUTORIAL: 2, FREE_BOMB_TUTORIAL: 3, RAINBOW_TUTORIAL: 26, FIREBALL_TUTORIAL: 5, SPECIAL_TUTORIAL: 6, LIGHTNING_TUTORIAL: 30, PIG_KEY_TUTORIAL: 32 }),
            (d.OFFER_NOVICE_LEVEL = 7),
            (d.OFFER_NOVICE_DAY_REPEAT = 7),
            (d.OFFER_FINISH_GAP = 60),
            (d.MNOGOIGROVKA_INVITE_LEVEL = 6),
            (d.ADD_HOME_SCREEN_LEVEL = 15),
            (d.SHOW_SHOP_POPIT_LEVEL = 7),
            (d.CHEST_LEVEL_INTERVAL = 15),
            (d.IS_FIRST_LAUNCH_LEVEL = 2),
            (d.SHARE_BEGIN_LEVEL = 4),
            (d.SHOW_TUTORIAL = !0),
            (d.TEST_SAVE_NAME = 'Test_Save_10003'),
            (d.SDK_SAVE_NAME = 'S_00017'),
            (d._lastSaveCall = null),
            (d._lastSaveTime = null),
            (d._saveCounter = 0),
            (d._tickSave = 0),
            (d._welcome = !1),
            (d._firstSave = !0),
            (d._loaded = !1),
            (d.levelsPlayed = 0),
            (d.st_welcome = !1),
            (d.USE_INFINITY = !0),
            (d._saveKeys = [
                'money',
                'gold',
                'keys',
                'hp',
                'overloadHp',
                'hpTimer',
                'hpTimerStart',
                'currentLevel',
                'currentRank',
                'currentRankStars',
                'lightningBoostCount',
                'rainbowBoostCount',
                'fireballBoostCount',
                'bombBoostCount',
                'guidelineBoostCount',
                'threeNextBoostCount',
                'plusFiveBubblesBoostCount',
                'guidelineBoostSelected',
                'threeNextBoostSelected',
                'plusFiveBubblesBoostSelected',
                'currentPigBank',
                'showFullPigBank',
                'lastKeyLevel',
                'adsLevelCounter',
                'lastPurchase',
                'showStartLevelAnimation',
                'whiteGuideline',
                'musicEnabled',
                'sfxEnabled',
                'boughtNoviceLot',
                'showFullShop',
                'dailyRewardWeekCounter',
                'dailyRewardDayCounter',
                'dailyRewardTime',
                'offerNoviceTime',
                'offerNoviceShowMode',
                'memberGiftShowed',
                'grndShowGarden',
                'grndHasGrown',
                'grndEnterTime',
                'grndPlantCount',
                'grdnFertilizerCount',
                'grdnPesticidesCount',
                'grdnFertilizerStars',
                'grdnPlantActivateTime',
                'grdnPlantWateringTime',
                'grdnRipeningTime',
                'grndBugTime',
                'skipTimer',
                'rndCount',
                'rndIndex',
                'rndGo',
                'useInf',
            ]),
            d
        );
    })();
    a.UserGameData = d;
})(Game || (Game = {}));
